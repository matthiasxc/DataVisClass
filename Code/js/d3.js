


<!DOCTYPE html>
<html lang="en" class=" is-copy-enabled">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>d3/d3.js at master Â· mbostock/d3</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="mbostock/d3" name="twitter:title" /><meta content="d3 - A JavaScript visualization library for HTML and SVG." name="twitter:description" /><meta content="https://avatars0.githubusercontent.com/u/230541?v=3&amp;s=400" name="twitter:image:src" />
      <meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars0.githubusercontent.com/u/230541?v=3&amp;s=400" property="og:image" /><meta content="mbostock/d3" property="og:title" /><meta content="https://github.com/mbostock/d3" property="og:url" /><meta content="d3 - A JavaScript visualization library for HTML and SVG." property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="web-socket" href="wss://live.github.com/_sockets/MjM1MzY1OjY4ZTlhMGI0NzdhYjMyZjJiMmUxMTU3NzE1YWI3MDAzOjY0NDYwYmYyOGU0MDc0Njk2MTlmNTY4YjE0NmUzYmVmZjQyYmNiYTJjNjRlZDdhMWMxM2I2NGIzMTMxYjIyM2Q=--c2750631c8c3397ae96865e7f3e09a0401a596f9">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="322E670A:7B03:2942608:556A38CA" name="octolytics-dimension-request_id" /><meta content="235365" name="octolytics-actor-id" /><meta content="matthiasxc" name="octolytics-actor-login" /><meta content="cb8e4e40185256e33478b4501b1db5259f5aa9c7b1d67ba55099c31aae49bf2f" name="octolytics-actor-hash" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />
    <meta class="js-ga-set" name="dimension1" content="Logged In">
    <meta class="js-ga-set" name="dimension2" content="Header v3">
    <meta name="is-dotcom" content="true">
      <meta name="hostname" content="github.com">
    <meta name="user-login" content="matthiasxc">

    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="hb/ocC4eiOsVL6pN/Pm/q3sEsrHfMSKGt1A4IUlTmWz3NdNWiecsP52SxMUA1z2nqeoF0KKj9ACT/zClHOzMVw==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github/index-7e77e66f8436e66d6a9791d7a09cec15828e9e04a0ad97cf73e83223f8b9cb3a.css" media="all" rel="stylesheet" />
    <link href="https://assets-cdn.github.com/assets/github2/index-5df271cf586eee5e48a88e30cdb6b5c32413ce1d7337835a905fc8c16294237e.css" media="all" rel="stylesheet" />
    
    


    <meta http-equiv="x-pjax-version" content="840467a6cd0c672c678f4fd42f529999">

      
  <meta name="description" content="d3 - A JavaScript visualization library for HTML and SVG.">
  <meta name="go-import" content="github.com/mbostock/d3 git https://github.com/mbostock/d3.git">

  <meta content="230541" name="octolytics-dimension-user_id" /><meta content="mbostock" name="octolytics-dimension-user_login" /><meta content="943149" name="octolytics-dimension-repository_id" /><meta content="mbostock/d3" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="943149" name="octolytics-dimension-repository_network_root_id" /><meta content="mbostock/d3" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/mbostock/d3/commits/master.atom" rel="alternate" title="Recent Commits to d3:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      


        <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/mbostock/d3/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/mbostock/d3/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <label class="js-chromeless-input-container form-control">
    <div class="scope-badge">This repository</div>
    <input type="text"
      class="js-site-search-focus js-site-search-field is-clearable chromeless-input"
      data-hotkey="s"
      name="q"
      placeholder="Search"
      data-global-scope-placeholder="Search GitHub"
      data-repo-scope-placeholder="Search"
      tabindex="1"
      autocapitalize="off">
  </label>
</form>
      </div>

      <ul class="header-nav left" role="navigation">
          <li class="header-nav-item explore">
            <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
          </li>
            <li class="header-nav-item">
              <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
            </li>
            <li class="header-nav-item">
              <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
            </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
          </li>
      </ul>

      
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/matthiasxc" data-ga-click="Header, go to profile, text:username">
      <img alt="@matthiasxc" class="avatar" data-user="235365" height="20" src="https://avatars2.githubusercontent.com/u/235365?v=3&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">matthiasxc</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="/new" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu">
        
<li>
  <a href="/new" data-ga-click="Header, create new repository, icon:repo"><span class="octicon octicon-repo"></span> New repository</a>
</li>
<li>
  <a href="/organizations/new" data-ga-click="Header, create new organization, icon:organization"><span class="octicon octicon-organization"></span> New organization</a>
</li>


  <li class="dropdown-divider"></li>
  <li class="dropdown-header">
    <span title="mbostock/d3">This repository</span>
  </li>
    <li>
      <a href="/mbostock/d3/issues/new" data-ga-click="Header, create new issue, icon:issue"><span class="octicon octicon-issue-opened"></span> New issue</a>
    </li>

      </ul>
    </div>
  </li>

  <li class="header-nav-item">
      <span class="js-socket-channel js-updatable-content"
        data-channel="notification-changed:matthiasxc"
        data-url="/notifications/header">
      <a href="/notifications" aria-label="You have unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:unread" data-hotkey="g n">
          <span class="mail-status unread"></span>
          <span class="octicon octicon-inbox"></span>
</a>  </span>

  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="aeMSe4bGcqBN7xXHEKm/JFskdB/yfslh27SpqjAAz4MoVYK6Gg5QYzSzPXYgoEL5M5b/JYLqCd4bOCj8WFmMiA==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>



    
  </div>
</div>

        

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

  <li>
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="V4BqC1VdpZ9ESWBRa2kJSgOebWrIosdLzP728/jcdiB43TmbhjT+hqz17MUrRcE9F4tXJO81DJrL47yWFQrMtQ==" /></div>    <input id="repository_id" name="repository_id" type="hidden" value="943149" />

      <div class="select-menu js-menu-container js-select-menu">
        <a href="/mbostock/d3/subscription"
          class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
          data-ga-click="Repository, click Watch settings, action:blob#show">
          <span class="js-select-button">
            <span class="octicon octicon-eye"></span>
            Watch
          </span>
        </a>
        <a class="social-count js-social-count" href="/mbostock/d3/watchers">
          1,458
        </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header">
              <span class="select-menu-title">Notifications</span>
              <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
            </div>

            <div class="select-menu-list js-navigation-container" role="menu">

              <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                  <span class="select-menu-item-heading">Not watching</span>
                  <span class="description">Be notified when participating or @mentioned.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-eye"></span>
                    Watch
                  </span>
                </div>
              </div>

              <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                  <span class="select-menu-item-heading">Watching</span>
                  <span class="description">Be notified of all conversations.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-eye"></span>
                    Unwatch
                  </span>
                </div>
              </div>

              <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input id="do_ignore" name="do" type="radio" value="ignore" />
                  <span class="select-menu-item-heading">Ignoring</span>
                  <span class="description">Never be notified.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-mute"></span>
                    Stop ignoring
                  </span>
                </div>
              </div>

            </div>

          </div>
        </div>
      </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/mbostock/d3/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="IGyUleYuuwXSw1gRD+uZybikeLceobdaDK+K5AVFNLPYmBhF5IyRAGZj1dCXj4LVtvXuJT1svMaEHeX99ZWFuQ==" /></div>
      <button
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar mbostock/d3"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/mbostock/d3/stargazers">
          38,250
        </a>
</form>
    <form accept-charset="UTF-8" action="/mbostock/d3/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="rdrWHG+hUx+1XtOLfrMEKjHfDD2oevZdTFk9aDK/oHVrmrfkCKk9asmtXk7b6LsnwqXRAqaUMFPTL3TzPW6r8A==" /></div>
      <button
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star mbostock/d3"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/mbostock/d3/stargazers">
          38,250
        </a>
</form>  </div>

  </li>

        <li>
          <a href="#fork-destination-box" class="btn btn-sm btn-with-count"
              title="Fork your own copy of mbostock/d3 to your account"
              aria-label="Fork your own copy of mbostock/d3 to your account"
              rel="facebox"
              data-ga-click="Repository, show fork modal, action:blob#show; text:Fork">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/mbostock/d3/network" class="social-count">9,787</a>

          <div id="fork-destination-box" style="display: none;">
            <h2 class="facebox-header">Where should we fork this repository?</h2>
            <include-fragment src=""
                class="js-fork-select-fragment fork-select-fragment"
                data-url="/mbostock/d3/fork?fragment=1">
              <img alt="Loading" height="64" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-128-338974454bb5c32803e82f601beb051d373744b024fe8742a76009700fd7e033.gif" width="64" />
            </include-fragment>
          </div>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/mbostock" class="url fn" itemprop="url" rel="author"><span itemprop="title">mbostock</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/mbostock/d3" data-pjax="#js-repo-pjax-container">d3</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/mbostock/d3/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/mbostock/d3" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /mbostock/d3">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/mbostock/d3/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /mbostock/d3/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull requests">
      <a href="/mbostock/d3/pulls" aria-label="Pull requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /mbostock/d3/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Wiki">
        <a href="/mbostock/d3/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g w" data-selected-links="repo_wiki /mbostock/d3/wiki">
          <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>      </li>
  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/mbostock/d3/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /mbostock/d3/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/mbostock/d3/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /mbostock/d3/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                  
<div class="js-clone-url clone-url open"
  data-protocol-type="http">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/mbostock/d3.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="js-clone-url clone-url "
  data-protocol-type="ssh">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="git@github.com:mbostock/d3.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="js-clone-url clone-url "
  data-protocol-type="subversion">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/mbostock/d3" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<div class="clone-options">You can clone with
  <form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone" class="inline-form js-clone-selector-form is-enabled" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="jft/tqweL52XUKPwXp0QWc3G1lzt7wEaSmzBz/p4kOwc7Dux5Hph/3u5wmOZGXzD2zAP70UH+oF0LI21lLxYLg==" /></div><button class="btn-link js-clone-selector" data-protocol="http" type="submit">HTTPS</button></form>, <form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone" class="inline-form js-clone-selector-form is-enabled" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="t8NbFEN+zvjlfyKThwIPdThyXUHarx++sPt65gTwWJlb51yZCOnw9VKoCg/NHPwq90crREST2rAI5BrVMgEHZA==" /></div><button class="btn-link js-clone-selector" data-protocol="ssh" type="submit">SSH</button></form>, or <form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone" class="inline-form js-clone-selector-form is-enabled" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="s/JaV8IbK0sruqxbkWOvKqjBw70MFoYSF4ScABaEuvmB0Tv0jvLsYJu8QtFeCFsyArqKKwYbnf/nsd5qwQi39w==" /></div><button class="btn-link js-clone-selector" data-protocol="subversion" type="submit">Subversion</button></form>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</div>


  <a href="github-windows://openRepo/https://github.com/mbostock/d3" class="btn btn-sm sidebar-button" title="Save mbostock/d3 to your computer and use it in GitHub Desktop." aria-label="Save mbostock/d3 to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/mbostock/d3/archive/master.zip"
                   class="btn btn-sm sidebar-button"
                   aria-label="Download the contents of mbostock/d3 as a zip file"
                   title="Download the contents of mbostock/d3 as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>

          

<a href="/mbostock/d3/blob/78e0a4bb81a6565bf61e3ef1b898ef8377478766/d3.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:b2146e8075132df713a3288ab7aa5426 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/adopt/d3.js"
               data-name="adopt"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="adopt">
                adopt
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/better-subsecond-ticks/d3.js"
               data-name="better-subsecond-ticks"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="better-subsecond-ticks">
                better-subsecond-ticks
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/bower-metadata/d3.js"
               data-name="bower-metadata"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="bower-metadata">
                bower-metadata
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/clip-polygon/d3.js"
               data-name="clip-polygon"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="clip-polygon">
                clip-polygon
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/clip-polygon-semantics/d3.js"
               data-name="clip-polygon-semantics"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="clip-polygon-semantics">
                clip-polygon-semantics
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/conic-conformal/d3.js"
               data-name="conic-conformal"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="conic-conformal">
                conic-conformal
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/decouple-clip-rotate/d3.js"
               data-name="decouple-clip-rotate"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="decouple-clip-rotate">
                decouple-clip-rotate
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/dsv-parse-type/d3.js"
               data-name="dsv-parse-type"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="dsv-parse-type">
                dsv-parse-type
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/environment/d3.js"
               data-name="environment"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="environment">
                environment
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/extensible-interpolate/d3.js"
               data-name="extensible-interpolate"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="extensible-interpolate">
                extensible-interpolate
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/fix-drag-touchend/d3.js"
               data-name="fix-drag-touchend"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="fix-drag-touchend">
                fix-drag-touchend
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/fix-geo-area/d3.js"
               data-name="fix-geo-area"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="fix-geo-area">
                fix-geo-area
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/fix-ie9-string-coercion/d3.js"
               data-name="fix-ie9-string-coercion"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="fix-ie9-string-coercion">
                fix-ie9-string-coercion
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/fix-interpolate-color/d3.js"
               data-name="fix-interpolate-color"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="fix-interpolate-color">
                fix-interpolate-color
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/fix-resample-caching/d3.js"
               data-name="fix-resample-caching"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="fix-resample-caching">
                fix-resample-caching
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/fix-zoom/d3.js"
               data-name="fix-zoom"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="fix-zoom">
                fix-zoom
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/geo-path-length/d3.js"
               data-name="geo-path-length"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="geo-path-length">
                geo-path-length
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/geo-voronoi/d3.js"
               data-name="geo-voronoi"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="geo-voronoi">
                geo-voronoi
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/get-or-remove-tween/d3.js"
               data-name="get-or-remove-tween"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="get-or-remove-tween">
                get-or-remove-tween
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/gh-pages/d3.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="gh-pages">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/graphics-pipeline/d3.js"
               data-name="graphics-pipeline"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="graphics-pipeline">
                graphics-pipeline
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/line-copy/d3.js"
               data-name="line-copy"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="line-copy">
                line-copy
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/mbostock/d3/blob/master/d3.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="master">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/native-map/d3.js"
               data-name="native-map"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="native-map">
                native-map
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/on-remove-all/d3.js"
               data-name="on-remove-all"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="on-remove-all">
                on-remove-all
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/property/d3.js"
               data-name="property"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="property">
                property
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/rotate-as-stream/d3.js"
               data-name="rotate-as-stream"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="rotate-as-stream">
                rotate-as-stream
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/simpler-global/d3.js"
               data-name="simpler-global"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="simpler-global">
                simpler-global
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/slice/d3.js"
               data-name="slice"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="slice">
                slice
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/strict-function/d3.js"
               data-name="strict-function"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="strict-function">
                strict-function
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/time-bst/d3.js"
               data-name="time-bst"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="time-bst">
                time-bst
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/transition-getters/d3.js"
               data-name="transition-getters"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="transition-getters">
                transition-getters
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/undefined/d3.js"
               data-name="undefined"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="undefined">
                undefined
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/voronoi-topology/d3.js"
               data-name="voronoi-topology"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="voronoi-topology">
                voronoi-topology
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mbostock/d3/blob/zoom-translate-extent/d3.js"
               data-name="zoom-translate-extent"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="zoom-translate-extent">
                zoom-translate-extent
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.5.5/d3.js"
                 data-name="v3.5.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.5.5">v3.5.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.5.4/d3.js"
                 data-name="v3.5.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.5.4">v3.5.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.5.3/d3.js"
                 data-name="v3.5.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.5.3">v3.5.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.5.2/d3.js"
                 data-name="v3.5.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.5.2">v3.5.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.5.1/d3.js"
                 data-name="v3.5.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.5.1">v3.5.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.5.0/d3.js"
                 data-name="v3.5.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.5.0">v3.5.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.13/d3.js"
                 data-name="v3.4.13"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.13">v3.4.13</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.12/d3.js"
                 data-name="v3.4.12"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.12">v3.4.12</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.11/d3.js"
                 data-name="v3.4.11"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.11">v3.4.11</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.10/d3.js"
                 data-name="v3.4.10"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.10">v3.4.10</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.9/d3.js"
                 data-name="v3.4.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.9">v3.4.9</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.8/d3.js"
                 data-name="v3.4.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.8">v3.4.8</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.6/d3.js"
                 data-name="v3.4.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.6">v3.4.6</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.5/d3.js"
                 data-name="v3.4.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.5">v3.4.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.4/d3.js"
                 data-name="v3.4.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.4">v3.4.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.3/d3.js"
                 data-name="v3.4.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.3">v3.4.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.2/d3.js"
                 data-name="v3.4.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.2">v3.4.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.1/d3.js"
                 data-name="v3.4.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.1">v3.4.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.4.0/d3.js"
                 data-name="v3.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.0">v3.4.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.13/d3.js"
                 data-name="v3.3.13"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.13">v3.3.13</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.12/d3.js"
                 data-name="v3.3.12"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.12">v3.3.12</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.11/d3.js"
                 data-name="v3.3.11"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.11">v3.3.11</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.10/d3.js"
                 data-name="v3.3.10"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.10">v3.3.10</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.9/d3.js"
                 data-name="v3.3.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.9">v3.3.9</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.8/d3.js"
                 data-name="v3.3.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.8">v3.3.8</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.7/d3.js"
                 data-name="v3.3.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.7">v3.3.7</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.6/d3.js"
                 data-name="v3.3.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.6">v3.3.6</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.5/d3.js"
                 data-name="v3.3.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.5">v3.3.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.4/d3.js"
                 data-name="v3.3.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.4">v3.3.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.3/d3.js"
                 data-name="v3.3.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.3">v3.3.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.2/d3.js"
                 data-name="v3.3.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.2">v3.3.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.1/d3.js"
                 data-name="v3.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.1">v3.3.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.3.0/d3.js"
                 data-name="v3.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.0">v3.3.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.8/d3.js"
                 data-name="v3.2.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.8">v3.2.8</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.7/d3.js"
                 data-name="v3.2.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.7">v3.2.7</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.6/d3.js"
                 data-name="v3.2.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.6">v3.2.6</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.5/d3.js"
                 data-name="v3.2.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.5">v3.2.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.4/d3.js"
                 data-name="v3.2.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.4">v3.2.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.3/d3.js"
                 data-name="v3.2.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.3">v3.2.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.2/d3.js"
                 data-name="v3.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.2">v3.2.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.1/d3.js"
                 data-name="v3.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.1">v3.2.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.2.0/d3.js"
                 data-name="v3.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.0">v3.2.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.10/d3.js"
                 data-name="v3.1.10"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.10">v3.1.10</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.9/d3.js"
                 data-name="v3.1.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.9">v3.1.9</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.8/d3.js"
                 data-name="v3.1.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.8">v3.1.8</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.7/d3.js"
                 data-name="v3.1.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.7">v3.1.7</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.6/d3.js"
                 data-name="v3.1.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.6">v3.1.6</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.5/d3.js"
                 data-name="v3.1.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.5">v3.1.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.4/d3.js"
                 data-name="v3.1.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.4">v3.1.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.3/d3.js"
                 data-name="v3.1.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.3">v3.1.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.2/d3.js"
                 data-name="v3.1.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.2">v3.1.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.1/d3.js"
                 data-name="v3.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.1">v3.1.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.1.0/d3.js"
                 data-name="v3.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.0">v3.1.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.8/d3.js"
                 data-name="v3.0.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.8">v3.0.8</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.7/d3.js"
                 data-name="v3.0.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.7">v3.0.7</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.6/d3.js"
                 data-name="v3.0.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.6">v3.0.6</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.5/d3.js"
                 data-name="v3.0.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.5">v3.0.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.4/d3.js"
                 data-name="v3.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.4">v3.0.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.3/d3.js"
                 data-name="v3.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.3">v3.0.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.2/d3.js"
                 data-name="v3.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.2">v3.0.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.1/d3.js"
                 data-name="v3.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.1">v3.0.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v3.0.0/d3.js"
                 data-name="v3.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.0">v3.0.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.10.3/d3.js"
                 data-name="v2.10.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.10.3">v2.10.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.10.2/d3.js"
                 data-name="v2.10.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.10.2">v2.10.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.10.1/d3.js"
                 data-name="v2.10.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.10.1">v2.10.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.10.0/d3.js"
                 data-name="v2.10.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.10.0">v2.10.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.9.7/d3.js"
                 data-name="v2.9.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.9.7">v2.9.7</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.9.6/d3.js"
                 data-name="v2.9.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.9.6">v2.9.6</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.9.5/d3.js"
                 data-name="v2.9.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.9.5">v2.9.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.9.4/d3.js"
                 data-name="v2.9.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.9.4">v2.9.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.9.3/d3.js"
                 data-name="v2.9.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.9.3">v2.9.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.9.2/d3.js"
                 data-name="v2.9.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.9.2">v2.9.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.9.1/d3.js"
                 data-name="v2.9.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.9.1">v2.9.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.9.0/d3.js"
                 data-name="v2.9.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.9.0">v2.9.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.8.1/d3.js"
                 data-name="v2.8.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.8.1">v2.8.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.8.0/d3.js"
                 data-name="v2.8.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.8.0">v2.8.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.7.5/d3.js"
                 data-name="v2.7.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.7.5">v2.7.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.7.4/d3.js"
                 data-name="v2.7.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.7.4">v2.7.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.7.3/d3.js"
                 data-name="v2.7.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.7.3">v2.7.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.7.2/d3.js"
                 data-name="v2.7.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.7.2">v2.7.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.7.1/d3.js"
                 data-name="v2.7.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.7.1">v2.7.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.7.0/d3.js"
                 data-name="v2.7.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.7.0">v2.7.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.6.1/d3.js"
                 data-name="v2.6.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.6.1">v2.6.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.6.0/d3.js"
                 data-name="v2.6.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.6.0">v2.6.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.5.2/d3.js"
                 data-name="v2.5.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.5.2">v2.5.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.5.1/d3.js"
                 data-name="v2.5.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.5.1">v2.5.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.5.0/d3.js"
                 data-name="v2.5.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.5.0">v2.5.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.4.6/d3.js"
                 data-name="v2.4.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.4.6">v2.4.6</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.4.5/d3.js"
                 data-name="v2.4.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.4.5">v2.4.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.4.4/d3.js"
                 data-name="v2.4.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.4.4">v2.4.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.4.3/d3.js"
                 data-name="v2.4.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.4.3">v2.4.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.4.2/d3.js"
                 data-name="v2.4.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.4.2">v2.4.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.4.1/d3.js"
                 data-name="v2.4.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.4.1">v2.4.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.4.0/d3.js"
                 data-name="v2.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.4.0">v2.4.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.3.4/d3.js"
                 data-name="v2.3.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.4">v2.3.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.3.3/d3.js"
                 data-name="v2.3.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.3">v2.3.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.3.2/d3.js"
                 data-name="v2.3.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.2">v2.3.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.3.1/d3.js"
                 data-name="v2.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.1">v2.3.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.3.0/d3.js"
                 data-name="v2.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.0">v2.3.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/mbostock/d3/tree/v2.2.1/d3.js"
                 data-name="v2.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.2.1">v2.2.1</a>
            </div>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="btn-group right">
    <a href="/mbostock/d3/find/master"
          class="js-show-file-finder btn btn-sm empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>

  <div class="breadcrumb js-zeroclipboard-target">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/mbostock/d3" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">d3</span></a></span></span><span class="separator">/</span><strong class="final-path">d3.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="@mbostock" class="avatar" data-user="230541" height="24" src="https://avatars0.githubusercontent.com/u/230541?v=3&amp;s=48" width="24" />
        <span class="author"><a href="/mbostock" rel="author">mbostock</a></span>
        <time datetime="2015-02-10T16:33:30Z" is="relative-time">Feb 10, 2015</time>
        <div class="commit-title">
            <a href="/mbostock/d3/commit/a40a611d6b9fc4ff3815ca830d86b6c00d130995" class="message" data-pjax="true" title="Fix d3.select(document) and d3.select(object).

Also add tests for d3_documentElement and d3_window so that they work for the
three cases we care about: a node, a document and a window. For anything else
they return undefined.">Fix d3.select(document) and d3.select(object).</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>28</strong>
           contributors
        </a>
      </p>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="mbostock" href="/mbostock/d3/commits/master/d3.js?author=mbostock"><img alt="@mbostock" class="avatar" data-user="230541" height="20" src="https://avatars2.githubusercontent.com/u/230541?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="jasondavies" href="/mbostock/d3/commits/master/d3.js?author=jasondavies"><img alt="@jasondavies" class="avatar" data-user="31223" height="20" src="https://avatars1.githubusercontent.com/u/31223?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="southdesign" href="/mbostock/d3/commits/master/d3.js?author=southdesign"><img alt="@southdesign" class="avatar" data-user="189038" height="20" src="https://avatars3.githubusercontent.com/u/189038?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="NelsonMinar" href="/mbostock/d3/commits/master/d3.js?author=NelsonMinar"><img alt="@NelsonMinar" class="avatar" data-user="382136" height="20" src="https://avatars1.githubusercontent.com/u/382136?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="trevnorris" href="/mbostock/d3/commits/master/d3.js?author=trevnorris"><img alt="@trevnorris" class="avatar" data-user="289174" height="20" src="https://avatars1.githubusercontent.com/u/289174?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="jfirebaugh" href="/mbostock/d3/commits/master/d3.js?author=jfirebaugh"><img alt="@jfirebaugh" class="avatar" data-user="98601" height="20" src="https://avatars1.githubusercontent.com/u/98601?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="DanGoldbach" href="/mbostock/d3/commits/master/d3.js?author=DanGoldbach"><img alt="@DanGoldbach" class="avatar" data-user="536984" height="20" src="https://avatars3.githubusercontent.com/u/536984?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="jisaacks" href="/mbostock/d3/commits/master/d3.js?author=jisaacks"><img alt="@jisaacks" class="avatar" data-user="1355481" height="20" src="https://avatars1.githubusercontent.com/u/1355481?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="timmywil" href="/mbostock/d3/commits/master/d3.js?author=timmywil"><img alt="@timmywil" class="avatar" data-user="192451" height="20" src="https://avatars0.githubusercontent.com/u/192451?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="jheer" href="/mbostock/d3/commits/master/d3.js?author=jheer"><img alt="@jheer" class="avatar" data-user="202799" height="20" src="https://avatars2.githubusercontent.com/u/202799?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="square-build-bot" href="/mbostock/d3/commits/master/d3.js?author=square-build-bot"><img alt="@square-build-bot" class="avatar" data-user="2523305" height="20" src="https://avatars0.githubusercontent.com/u/2523305?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="adnan-wahab" href="/mbostock/d3/commits/master/d3.js?author=adnan-wahab"><img alt="@adnan-wahab" class="avatar" data-user="2786457" height="20" src="https://avatars1.githubusercontent.com/u/2786457?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="biovisualize" href="/mbostock/d3/commits/master/d3.js?author=biovisualize"><img alt="@biovisualize" class="avatar" data-user="824534" height="20" src="https://avatars3.githubusercontent.com/u/824534?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="natevw" href="/mbostock/d3/commits/master/d3.js?author=natevw"><img alt="@natevw" class="avatar" data-user="265902" height="20" src="https://avatars0.githubusercontent.com/u/265902?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="asuth" href="/mbostock/d3/commits/master/d3.js?author=asuth"><img alt="@asuth" class="avatar" data-user="46909" height="20" src="https://avatars3.githubusercontent.com/u/46909?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="pelson" href="/mbostock/d3/commits/master/d3.js?author=pelson"><img alt="@pelson" class="avatar" data-user="810663" height="20" src="https://avatars1.githubusercontent.com/u/810663?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="pjjw" href="/mbostock/d3/commits/master/d3.js?author=pjjw"><img alt="@pjjw" class="avatar" data-user="638" height="20" src="https://avatars2.githubusercontent.com/u/638?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="foolip" href="/mbostock/d3/commits/master/d3.js?author=foolip"><img alt="@foolip" class="avatar" data-user="498917" height="20" src="https://avatars2.githubusercontent.com/u/498917?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Caged" href="/mbostock/d3/commits/master/d3.js?author=Caged"><img alt="@Caged" class="avatar" data-user="25" height="20" src="https://avatars1.githubusercontent.com/u/25?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="radford" href="/mbostock/d3/commits/master/d3.js?author=radford"><img alt="@radford" class="avatar" data-user="55631" height="20" src="https://avatars3.githubusercontent.com/u/55631?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="PrajitR" href="/mbostock/d3/commits/master/d3.js?author=PrajitR"><img alt="@PrajitR" class="avatar" data-user="4674442" height="20" src="https://avatars0.githubusercontent.com/u/4674442?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Freeyorp" href="/mbostock/d3/commits/master/d3.js?author=Freeyorp"><img alt="@Freeyorp" class="avatar" data-user="4001219" height="20" src="https://avatars0.githubusercontent.com/u/4001219?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="tmont" href="/mbostock/d3/commits/master/d3.js?author=tmont"><img alt="@tmont" class="avatar" data-user="188562" height="20" src="https://avatars1.githubusercontent.com/u/188562?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="ilyabo" href="/mbostock/d3/commits/master/d3.js?author=ilyabo"><img alt="@ilyabo" class="avatar" data-user="351828" height="20" src="https://avatars2.githubusercontent.com/u/351828?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="tpreusse" href="/mbostock/d3/commits/master/d3.js?author=tpreusse"><img alt="@tpreusse" class="avatar" data-user="410211" height="20" src="https://avatars0.githubusercontent.com/u/410211?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="vladh" href="/mbostock/d3/commits/master/d3.js?author=vladh"><img alt="@vladh" class="avatar" data-user="291640" height="20" src="https://avatars2.githubusercontent.com/u/291640?v=3&amp;s=40" width="20" /> </a>

    <a href="#blob_contributors_box" rel="facebox" class="others-text">and others</a>

    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="@mbostock" data-user="230541" height="24" src="https://avatars0.githubusercontent.com/u/230541?v=3&amp;s=48" width="24" />
            <a href="/mbostock">mbostock</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@jasondavies" data-user="31223" height="24" src="https://avatars3.githubusercontent.com/u/31223?v=3&amp;s=48" width="24" />
            <a href="/jasondavies">jasondavies</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@southdesign" data-user="189038" height="24" src="https://avatars1.githubusercontent.com/u/189038?v=3&amp;s=48" width="24" />
            <a href="/southdesign">southdesign</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@NelsonMinar" data-user="382136" height="24" src="https://avatars3.githubusercontent.com/u/382136?v=3&amp;s=48" width="24" />
            <a href="/NelsonMinar">NelsonMinar</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@trevnorris" data-user="289174" height="24" src="https://avatars3.githubusercontent.com/u/289174?v=3&amp;s=48" width="24" />
            <a href="/trevnorris">trevnorris</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@jfirebaugh" data-user="98601" height="24" src="https://avatars3.githubusercontent.com/u/98601?v=3&amp;s=48" width="24" />
            <a href="/jfirebaugh">jfirebaugh</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@DanGoldbach" data-user="536984" height="24" src="https://avatars1.githubusercontent.com/u/536984?v=3&amp;s=48" width="24" />
            <a href="/DanGoldbach">DanGoldbach</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@jisaacks" data-user="1355481" height="24" src="https://avatars3.githubusercontent.com/u/1355481?v=3&amp;s=48" width="24" />
            <a href="/jisaacks">jisaacks</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@timmywil" data-user="192451" height="24" src="https://avatars2.githubusercontent.com/u/192451?v=3&amp;s=48" width="24" />
            <a href="/timmywil">timmywil</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@jheer" data-user="202799" height="24" src="https://avatars0.githubusercontent.com/u/202799?v=3&amp;s=48" width="24" />
            <a href="/jheer">jheer</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@square-build-bot" data-user="2523305" height="24" src="https://avatars2.githubusercontent.com/u/2523305?v=3&amp;s=48" width="24" />
            <a href="/square-build-bot">square-build-bot</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@adnan-wahab" data-user="2786457" height="24" src="https://avatars3.githubusercontent.com/u/2786457?v=3&amp;s=48" width="24" />
            <a href="/adnan-wahab">adnan-wahab</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@biovisualize" data-user="824534" height="24" src="https://avatars1.githubusercontent.com/u/824534?v=3&amp;s=48" width="24" />
            <a href="/biovisualize">biovisualize</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@natevw" data-user="265902" height="24" src="https://avatars2.githubusercontent.com/u/265902?v=3&amp;s=48" width="24" />
            <a href="/natevw">natevw</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@asuth" data-user="46909" height="24" src="https://avatars1.githubusercontent.com/u/46909?v=3&amp;s=48" width="24" />
            <a href="/asuth">asuth</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@pelson" data-user="810663" height="24" src="https://avatars3.githubusercontent.com/u/810663?v=3&amp;s=48" width="24" />
            <a href="/pelson">pelson</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@pjjw" data-user="638" height="24" src="https://avatars0.githubusercontent.com/u/638?v=3&amp;s=48" width="24" />
            <a href="/pjjw">pjjw</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@foolip" data-user="498917" height="24" src="https://avatars0.githubusercontent.com/u/498917?v=3&amp;s=48" width="24" />
            <a href="/foolip">foolip</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@Caged" data-user="25" height="24" src="https://avatars3.githubusercontent.com/u/25?v=3&amp;s=48" width="24" />
            <a href="/Caged">Caged</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@radford" data-user="55631" height="24" src="https://avatars1.githubusercontent.com/u/55631?v=3&amp;s=48" width="24" />
            <a href="/radford">radford</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@PrajitR" data-user="4674442" height="24" src="https://avatars2.githubusercontent.com/u/4674442?v=3&amp;s=48" width="24" />
            <a href="/PrajitR">PrajitR</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@Freeyorp" data-user="4001219" height="24" src="https://avatars2.githubusercontent.com/u/4001219?v=3&amp;s=48" width="24" />
            <a href="/Freeyorp">Freeyorp</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@tmont" data-user="188562" height="24" src="https://avatars3.githubusercontent.com/u/188562?v=3&amp;s=48" width="24" />
            <a href="/tmont">tmont</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@ilyabo" data-user="351828" height="24" src="https://avatars0.githubusercontent.com/u/351828?v=3&amp;s=48" width="24" />
            <a href="/ilyabo">ilyabo</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@tpreusse" data-user="410211" height="24" src="https://avatars2.githubusercontent.com/u/410211?v=3&amp;s=48" width="24" />
            <a href="/tpreusse">tpreusse</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@vladh" data-user="291640" height="24" src="https://avatars0.githubusercontent.com/u/291640?v=3&amp;s=48" width="24" />
            <a href="/vladh">vladh</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@vtstarin" data-user="215318" height="24" src="https://avatars2.githubusercontent.com/u/215318?v=3&amp;s=48" width="24" />
            <a href="/vtstarin">vtstarin</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@wilg" data-user="54353" height="24" src="https://avatars2.githubusercontent.com/u/54353?v=3&amp;s=48" width="24" />
            <a href="/wilg">wilg</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file">
  <div class="file-header">
    <div class="file-actions">

      <div class="btn-group">
        <a href="/mbostock/d3/raw/master/d3.js" class="btn btn-sm " id="raw-url">Raw</a>
          <a href="/mbostock/d3/blame/master/d3.js" class="btn btn-sm js-update-url-with-hash">Blame</a>
        <a href="/mbostock/d3/commits/master/d3.js" class="btn btn-sm " rel="nofollow">History</a>
      </div>

        <a class="octicon-btn tooltipped tooltipped-nw"
           href="github-windows://openRepo/https://github.com/mbostock/d3?branch=master&amp;filepath=d3.js"
           aria-label="Open this file in GitHub for Windows"
           data-ga-click="Repository, open with desktop, type:windows">
            <span class="octicon octicon-device-desktop"></span>
        </a>

            <form accept-charset="UTF-8" action="/mbostock/d3/edit/master/d3.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="iBzIn5h1C+5eaazzYROU1QIRYqxhvtqNpfLbmr4MDeTcSKEEv6OED6nidmhhiIDni7QF8ONC5gtBsDzcKFHq7A==" /></div>
              <button class="octicon-btn tooltipped tooltipped-n" type="submit" aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
                <span class="octicon octicon-pencil"></span>
              </button>
</form>
          <form accept-charset="UTF-8" action="/mbostock/d3/delete/master/d3.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="2o6ExFqISbtwUI5KofH5bGYfdEqiEvWKsIUX4a9EKzsMRue4VEmPqCCjDd1hxzXdlJdN4GyVSaDh9rDHJUzUsg==" /></div>
            <button class="octicon-btn octicon-btn-danger tooltipped tooltipped-n" type="submit" aria-label="Fork this project and delete this file" data-disable-with>
              <span class="octicon octicon-trashcan"></span>
            </button>
</form>    </div>

    <div class="file-info">
        9504 lines (9494 sloc)
        <span class="file-info-divider"></span>
      336.396 kb
    </div>
  </div>
  
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">    version<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>3.5.5<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_arraySlice <span class="pl-k">=</span> [].slice, <span class="pl-en">d3_array</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">list</span>) {</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_arraySlice.<span class="pl-c1">call</span>(list);</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_document <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">document</span>;</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_documentElement</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> node <span class="pl-k">&amp;&amp;</span> (node.<span class="pl-c1">ownerDocument</span> <span class="pl-k">||</span> node.<span class="pl-c1">document</span> <span class="pl-k">||</span> node).<span class="pl-c1">documentElement</span>;</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_window</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> node <span class="pl-k">&amp;&amp;</span> (node.<span class="pl-c1">ownerDocument</span> <span class="pl-k">&amp;&amp;</span> node.<span class="pl-c1">ownerDocument</span>.<span class="pl-c1">defaultView</span> <span class="pl-k">||</span> node.<span class="pl-c1">document</span> <span class="pl-k">&amp;&amp;</span> node <span class="pl-k">||</span> node.<span class="pl-c1">defaultView</span>);</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (d3_document) {</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line">      d3_array(d3_document.<span class="pl-c1">documentElement</span>.<span class="pl-c1">childNodes</span>)[<span class="pl-c1">0</span>].<span class="pl-c1">nodeType</span>;</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">d3_array</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">list</span>) {</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> i <span class="pl-k">=</span> list.<span class="pl-c1">length</span>, array <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(i);</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (i<span class="pl-k">--</span>) array[i] <span class="pl-k">=</span> list[i];</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">Date</span>.now) <span class="pl-c1">Date</span>.<span class="pl-en">now</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">+</span><span class="pl-k">new</span> <span class="pl-en">Date</span>();</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (d3_document) {</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">      d3_document.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>.setProperty(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">catch</span> (error) {</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> d3_element_prototype <span class="pl-k">=</span> <span class="pl-v">this</span>.Element.<span class="pl-c1">prototype</span>, d3_element_setAttribute <span class="pl-k">=</span> d3_element_prototype.setAttribute, d3_element_setAttributeNS <span class="pl-k">=</span> d3_element_prototype.setAttributeNS, d3_style_prototype <span class="pl-k">=</span> <span class="pl-v">this</span>.CSSStyleDeclaration.<span class="pl-c1">prototype</span>, d3_style_setProperty <span class="pl-k">=</span> d3_style_prototype.setProperty;</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">d3_element_prototype</span>.<span class="pl-en">setAttribute</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">        d3_element_setAttribute.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, name, value <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">d3_element_prototype</span>.<span class="pl-en">setAttributeNS</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">space</span>, <span class="pl-smi">local</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">        d3_element_setAttributeNS.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, space, local, value <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">d3_style_prototype</span>.<span class="pl-en">setProperty</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>, <span class="pl-smi">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">        d3_style_setProperty.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, name, value <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, priority);</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">  d3.ascending <span class="pl-k">=</span> d3_ascending;</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ascending</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a <span class="pl-k">&lt;</span> b <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> a <span class="pl-k">&gt;</span> b <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> a <span class="pl-k">&gt;=</span> b <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">descending</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> b <span class="pl-k">&lt;</span> a <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> b <span class="pl-k">&gt;</span> a <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> b <span class="pl-k">&gt;=</span> a <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">min</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>, a, b;</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;=</span> b) {</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">        a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> a <span class="pl-k">&gt;</span> b) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-c1">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;=</span> b) {</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">        a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-c1">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> a <span class="pl-k">&gt;</span> b) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">max</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>, a, b;</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;=</span> b) {</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">        a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;</span> a) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-c1">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;=</span> b) {</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line">        a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-c1">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;</span> a) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">extent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>, a, b, c;</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;=</span> b) {</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line">        a <span class="pl-k">=</span> c <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> array[i]) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (a <span class="pl-k">&gt;</span> b) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (c <span class="pl-k">&lt;</span> b) c <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-c1">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&gt;=</span> b) {</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line">        a <span class="pl-k">=</span> c <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> ((b <span class="pl-k">=</span> f.<span class="pl-c1">call</span>(array, array[i], i)) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (a <span class="pl-k">&gt;</span> b) a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (c <span class="pl-k">&lt;</span> b) c <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ a, c ];</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_number</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> x <span class="pl-k">===</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-c1">NaN</span> <span class="pl-k">:</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_numeric</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-c1">isNaN</span>(x);</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">sum</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>, a, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (d3_numeric(a <span class="pl-k">=</span> <span class="pl-k">+</span>array[i])) s <span class="pl-k">+=</span> a;</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (d3_numeric(a <span class="pl-k">=</span> <span class="pl-k">+</span>f.<span class="pl-c1">call</span>(array, array[i], i))) s <span class="pl-k">+=</span> a;</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> s;</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">mean</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>, a, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, j <span class="pl-k">=</span> n;</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (d3_numeric(a <span class="pl-k">=</span> d3_number(array[i]))) s <span class="pl-k">+=</span> a; <span class="pl-k">else</span> <span class="pl-k">--</span>j;</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (d3_numeric(a <span class="pl-k">=</span> d3_number(f.<span class="pl-c1">call</span>(array, array[i], i)))) s <span class="pl-k">+=</span> a; <span class="pl-k">else</span> <span class="pl-k">--</span>j;</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (j) <span class="pl-k">return</span> s / j;</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">quantile</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">values</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> H <span class="pl-k">=</span> (values.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> p <span class="pl-k">+</span> <span class="pl-c1">1</span>, h <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(H), v <span class="pl-k">=</span> <span class="pl-k">+</span>values[h <span class="pl-k">-</span> <span class="pl-c1">1</span>], e <span class="pl-k">=</span> H <span class="pl-k">-</span> h;</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> e <span class="pl-k">?</span> v <span class="pl-k">+</span> e <span class="pl-k">*</span> (values[h] <span class="pl-k">-</span> v) <span class="pl-k">:</span> v;</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">median</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> numbers <span class="pl-k">=</span> [], n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>, a, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (d3_numeric(a <span class="pl-k">=</span> d3_number(array[i]))) numbers.<span class="pl-c1">push</span>(a);</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (d3_numeric(a <span class="pl-k">=</span> d3_number(f.<span class="pl-c1">call</span>(array, array[i], i)))) numbers.<span class="pl-c1">push</span>(a);</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (numbers.<span class="pl-c1">length</span>) <span class="pl-k">return</span> d3.quantile(numbers.<span class="pl-c1">sort</span>(d3_ascending), .<span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">variance</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> <span class="pl-c1">0</span>, a, d, s <span class="pl-k">=</span> <span class="pl-c1">0</span>, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, j <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3_numeric(a <span class="pl-k">=</span> d3_number(array[i]))) {</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line">          d <span class="pl-k">=</span> a <span class="pl-k">-</span> m;</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line">          m <span class="pl-k">+=</span> d / <span class="pl-k">++</span>j;</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line">          s <span class="pl-k">+=</span> d <span class="pl-k">*</span> (a <span class="pl-k">-</span> m);</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3_numeric(a <span class="pl-k">=</span> d3_number(f.<span class="pl-c1">call</span>(array, array[i], i)))) {</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line">          d <span class="pl-k">=</span> a <span class="pl-k">-</span> m;</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line">          m <span class="pl-k">+=</span> d / <span class="pl-k">++</span>j;</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line">          s <span class="pl-k">+=</span> d <span class="pl-k">*</span> (a <span class="pl-k">-</span> m);</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (j <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> s / (j <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">deviation</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> v <span class="pl-k">=</span> d3.variance.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> v <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(v) <span class="pl-k">:</span> v;</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_bisector</span>(<span class="pl-smi">compare</span>) {</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">left</span>: <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">x</span>, <span class="pl-smi">lo</span>, <span class="pl-smi">hi</span>) {</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) lo <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>) hi <span class="pl-k">=</span> a.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (lo <span class="pl-k">&lt;</span> hi) {</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> mid <span class="pl-k">=</span> lo <span class="pl-k">+</span> hi <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (compare(a[mid], x) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) lo <span class="pl-k">=</span> mid <span class="pl-k">+</span> <span class="pl-c1">1</span>; <span class="pl-k">else</span> hi <span class="pl-k">=</span> mid;</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> lo;</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">right</span>: <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">x</span>, <span class="pl-smi">lo</span>, <span class="pl-smi">hi</span>) {</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) lo <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>) hi <span class="pl-k">=</span> a.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (lo <span class="pl-k">&lt;</span> hi) {</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> mid <span class="pl-k">=</span> lo <span class="pl-k">+</span> hi <span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (compare(a[mid], x) <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) hi <span class="pl-k">=</span> mid; <span class="pl-k">else</span> lo <span class="pl-k">=</span> mid <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> lo;</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_bisect <span class="pl-k">=</span> d3_bisector(d3_ascending);</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line">  d3.bisectLeft <span class="pl-k">=</span> d3_bisect.<span class="pl-c1">left</span>;</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line">  d3.bisect <span class="pl-k">=</span> d3.bisectRight <span class="pl-k">=</span> d3_bisect.<span class="pl-c1">right</span>;</td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">bisector</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_bisector(f.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_ascending(f(d), x);</td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> f);</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">shuffle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">i0</span>, <span class="pl-smi">i1</span>) {</td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ((m <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line">      i1 <span class="pl-k">=</span> array.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (m <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) i0 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> m <span class="pl-k">=</span> i1 <span class="pl-k">-</span> i0, t, i;</td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (m) {</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">random</span>() <span class="pl-k">*</span> m<span class="pl-k">--</span> | <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line">      t <span class="pl-k">=</span> array[m <span class="pl-k">+</span> i0], array[m <span class="pl-k">+</span> i0] <span class="pl-k">=</span> array[i <span class="pl-k">+</span> i0], array[i <span class="pl-k">+</span> i0] <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">permute</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">indexes</span>) {</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> indexes.<span class="pl-c1">length</span>, permutes <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(i);</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (i<span class="pl-k">--</span>) permutes[i] <span class="pl-k">=</span> array[indexes[i]];</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> permutes;</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">pairs</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>) {</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>, p0, p1 <span class="pl-k">=</span> array[<span class="pl-c1">0</span>], pairs <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(n <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> n);</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (i <span class="pl-k">&lt;</span> n) pairs[i] <span class="pl-k">=</span> [ p0 <span class="pl-k">=</span> p1, p1 <span class="pl-k">=</span> array[<span class="pl-k">++</span>i] ];</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> pairs;</td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">zip</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>(n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>)) <span class="pl-k">return</span> [];</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> d3.<span class="pl-c1">min</span>(arguments, d3_zipLength), zips <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(m); <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n, zip <span class="pl-k">=</span> zips[i] <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(n); <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line">        zip[j] <span class="pl-k">=</span> arguments[j][i];</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> zips;</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_zipLength</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">transpose</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">matrix</span>) {</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.zip.<span class="pl-c1">apply</span>(d3, matrix);</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">keys</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">map</span>) {</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> keys <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> map) keys.<span class="pl-c1">push</span>(key);</td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> keys;</td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">values</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">map</span>) {</td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> values <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> map) values.<span class="pl-c1">push</span>(map[key]);</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> values;</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">entries</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">map</span>) {</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> entries <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> map) entries.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line">      key<span class="pl-k">:</span> key,</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line">      value<span class="pl-k">:</span> map[key]</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> entries;</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">merge</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">arrays</span>) {</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> arrays.<span class="pl-c1">length</span>, m, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, j <span class="pl-k">=</span> <span class="pl-c1">0</span>, merged, array;</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) j <span class="pl-k">+=</span> arrays[i].<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line">    merged <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(j);</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">--</span>n <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line">      array <span class="pl-k">=</span> arrays[n];</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line">      m <span class="pl-k">=</span> array.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">--</span>m <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line">        merged[<span class="pl-k">--</span>j] <span class="pl-k">=</span> array[m];</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> merged;</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> abs <span class="pl-k">=</span> <span class="pl-c1">Math</span>.abs;</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">start</span>, <span class="pl-smi">stop</span>, <span class="pl-smi">step</span>) {</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line">      step <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line">        stop <span class="pl-k">=</span> start;</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line">        start <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ((stop <span class="pl-k">-</span> start) / step <span class="pl-k">===</span> <span class="pl-c1">Infinity</span>) <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>infinite range<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> range <span class="pl-k">=</span> [], k <span class="pl-k">=</span> d3_range_integerScale(<span class="pl-c1">abs</span>(step)), i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, j;</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line">    start <span class="pl-k">*=</span> k, stop <span class="pl-k">*=</span> k, step <span class="pl-k">*=</span> k;</td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (step <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">while</span> ((j <span class="pl-k">=</span> start <span class="pl-k">+</span> step <span class="pl-k">*</span> <span class="pl-k">++</span>i) <span class="pl-k">&gt;</span> stop) range.<span class="pl-c1">push</span>(j / k); <span class="pl-k">else</span> <span class="pl-k">while</span> ((j <span class="pl-k">=</span> start <span class="pl-k">+</span> step <span class="pl-k">*</span> <span class="pl-k">++</span>i) <span class="pl-k">&lt;</span> stop) range.<span class="pl-c1">push</span>(j / k);</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_range_integerScale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> k <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (x <span class="pl-k">*</span> k <span class="pl-k">%</span> <span class="pl-c1">1</span>) k <span class="pl-k">*=</span> <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> k;</td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_class</span>(<span class="pl-smi">ctor</span>, <span class="pl-smi">properties</span>) {</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> properties) {</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">Object</span>.defineProperty(ctor.<span class="pl-c1">prototype</span>, key, {</td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line">        value<span class="pl-k">:</span> properties[key],</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line">        enumerable<span class="pl-k">:</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">map</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> map <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_Map</span>();</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (object <span class="pl-k">instanceof</span> d3_Map) {</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line">      object.forEach(<span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line">        map.set(key, value);</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">Array</span>.isArray(object)) {</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> object.<span class="pl-c1">length</span>, o;</td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) map.set(i, object[i]); <span class="pl-k">else</span> <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) map.set(f.<span class="pl-c1">call</span>(object, o <span class="pl-k">=</span> object[i], i), o);</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> object) map.set(key, object[key]);</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> map;</td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_Map</span>() {</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>._ <span class="pl-k">=</span> <span class="pl-c1">Object</span>.create(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_map_proto <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>__proto__<span class="pl-pds">&quot;</span></span>, d3_map_zero <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x</span>00<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line">  d3_class(d3_Map, {</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line">    has<span class="pl-k">:</span> d3_map_has,</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">get</span>: <span class="pl-k">function</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._[d3_map_escape(key)];</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">set</span>: <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._[d3_map_escape(key)] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line">    remove<span class="pl-k">:</span> d3_map_remove,</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line">    keys<span class="pl-k">:</span> d3_map_keys,</td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">values</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> values <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> <span class="pl-v">this</span>._) values.<span class="pl-c1">push</span>(<span class="pl-v">this</span>._[key]);</td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> values;</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">entries</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> entries <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> <span class="pl-v">this</span>._) entries.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line">        key<span class="pl-k">:</span> d3_map_unescape(key),</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line">        value<span class="pl-k">:</span> <span class="pl-v">this</span>._[key]</td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> entries;</td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line">    size<span class="pl-k">:</span> d3_map_size,</td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line">    empty<span class="pl-k">:</span> d3_map_empty,</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">forEach</span>: <span class="pl-k">function</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> <span class="pl-v">this</span>._) f.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d3_map_unescape(key), <span class="pl-v">this</span>._[key]);</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_map_escape</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (key <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">===</span> d3_map_proto <span class="pl-k">||</span> key[<span class="pl-c1">0</span>] <span class="pl-k">===</span> d3_map_zero <span class="pl-k">?</span> d3_map_zero <span class="pl-k">+</span> key <span class="pl-k">:</span> key;</td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_map_unescape</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (key <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>] <span class="pl-k">===</span> d3_map_zero <span class="pl-k">?</span> key.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>) <span class="pl-k">:</span> key;</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_map_has</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_map_escape(key) <span class="pl-k">in</span> <span class="pl-v">this</span>._;</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_map_remove</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (key <span class="pl-k">=</span> d3_map_escape(key)) <span class="pl-k">in</span> <span class="pl-v">this</span>._ <span class="pl-k">&amp;&amp;</span> <span class="pl-k">delete</span> <span class="pl-v">this</span>._[key];</td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_map_keys</span>() {</td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> keys <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> <span class="pl-v">this</span>._) keys.<span class="pl-c1">push</span>(d3_map_unescape(key));</td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> keys;</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_map_size</span>() {</td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> size <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> <span class="pl-v">this</span>._) <span class="pl-k">++</span>size;</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_map_empty</span>() {</td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> <span class="pl-v">this</span>._) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">nest</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> nest <span class="pl-k">=</span> {}, keys <span class="pl-k">=</span> [], sortKeys <span class="pl-k">=</span> [], sortValues, rollup;</td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">map</span>(<span class="pl-smi">mapType</span>, <span class="pl-smi">array</span>, <span class="pl-smi">depth</span>) {</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (depth <span class="pl-k">&gt;=</span> keys.<span class="pl-c1">length</span>) <span class="pl-k">return</span> rollup <span class="pl-k">?</span> rollup.<span class="pl-c1">call</span>(nest, array) <span class="pl-k">:</span> sortValues <span class="pl-k">?</span> array.<span class="pl-c1">sort</span>(sortValues) <span class="pl-k">:</span> array;</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>, key <span class="pl-k">=</span> keys[depth<span class="pl-k">++</span>], keyValue, object, setter, valuesByKey <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_Map</span>(), values;</td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (values <span class="pl-k">=</span> valuesByKey.get(keyValue <span class="pl-k">=</span> key(object <span class="pl-k">=</span> array[i]))) {</td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code blob-code-inner js-file-line">          values.<span class="pl-c1">push</span>(object);</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code blob-code-inner js-file-line">          valuesByKey.set(keyValue, [ object ]);</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (mapType) {</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code blob-code-inner js-file-line">        object <span class="pl-k">=</span> mapType();</td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">setter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">keyValue</span>, <span class="pl-smi">values</span>) {</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code blob-code-inner js-file-line">          object.set(keyValue, map(mapType, values, depth));</td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code blob-code-inner js-file-line">        object <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">setter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">keyValue</span>, <span class="pl-smi">values</span>) {</td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code blob-code-inner js-file-line">          object[keyValue] <span class="pl-k">=</span> map(mapType, values, depth);</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code blob-code-inner js-file-line">      valuesByKey.forEach(setter);</td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> object;</td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">entries</span>(<span class="pl-smi">map</span>, <span class="pl-smi">depth</span>) {</td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (depth <span class="pl-k">&gt;=</span> keys.<span class="pl-c1">length</span>) <span class="pl-k">return</span> map;</td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> array <span class="pl-k">=</span> [], sortKey <span class="pl-k">=</span> sortKeys[depth<span class="pl-k">++</span>];</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code blob-code-inner js-file-line">      map.forEach(<span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">keyMap</span>) {</td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code blob-code-inner js-file-line">        array.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code blob-code-inner js-file-line">          key<span class="pl-k">:</span> key,</td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code blob-code-inner js-file-line">          values<span class="pl-k">:</span> entries(keyMap, depth)</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> sortKey <span class="pl-k">?</span> array.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> sortKey(a.key, b.key);</td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code blob-code-inner js-file-line">      }) <span class="pl-k">:</span> array;</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">nest</span>.<span class="pl-en">map</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">mapType</span>) {</td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> map(mapType, array, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">nest</span>.<span class="pl-en">entries</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>) {</td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> entries(map(d3.map, array, <span class="pl-c1">0</span>), <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">nest</span>.<span class="pl-en">key</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code blob-code-inner js-file-line">      keys.<span class="pl-c1">push</span>(d);</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">nest</span>.<span class="pl-en">sortKeys</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">order</span>) {</td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code blob-code-inner js-file-line">      sortKeys[keys.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> order;</td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">nest</span>.<span class="pl-en">sortValues</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">order</span>) {</td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code blob-code-inner js-file-line">      sortValues <span class="pl-k">=</span> order;</td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">nest</span>.<span class="pl-en">rollup</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code blob-code-inner js-file-line">      rollup <span class="pl-k">=</span> f;</td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> nest;</td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">set</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>) {</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> set <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_Set</span>();</td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (array) <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) set.<span class="pl-c1">add</span>(array[i]);</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> set;</td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_Set</span>() {</td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>._ <span class="pl-k">=</span> <span class="pl-c1">Object</span>.create(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code blob-code-inner js-file-line">  d3_class(d3_Set, {</td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code blob-code-inner js-file-line">    has<span class="pl-k">:</span> d3_map_has,</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">add</span>: <span class="pl-k">function</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>._[d3_map_escape(key <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> key;</td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code blob-code-inner js-file-line">    remove<span class="pl-k">:</span> d3_map_remove,</td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code blob-code-inner js-file-line">    values<span class="pl-k">:</span> d3_map_keys,</td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code blob-code-inner js-file-line">    size<span class="pl-k">:</span> d3_map_size,</td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code blob-code-inner js-file-line">    empty<span class="pl-k">:</span> d3_map_empty,</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">forEach</span>: <span class="pl-k">function</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> <span class="pl-v">this</span>._) f.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d3_map_unescape(key));</td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code blob-code-inner js-file-line">  d3.behavior <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_identity</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d;</td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">rebind</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">target</span>, <span class="pl-smi">source</span>) {</td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span>, n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>, method;</td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) target[method <span class="pl-k">=</span> arguments[i]] <span class="pl-k">=</span> d3_rebind(target, source, source[method]);</td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> target;</td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rebind</span>(<span class="pl-smi">target</span>, <span class="pl-smi">source</span>, <span class="pl-smi">method</span>) {</td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> value <span class="pl-k">=</span> method.<span class="pl-c1">apply</span>(source, arguments);</td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> value <span class="pl-k">===</span> source <span class="pl-k">?</span> target <span class="pl-k">:</span> value;</td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_vendorSymbol</span>(<span class="pl-smi">object</span>, <span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (name <span class="pl-k">in</span> object) <span class="pl-k">return</span> name;</td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code blob-code-inner js-file-line">    name <span class="pl-k">=</span> name.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>).<span class="pl-c1">toUpperCase</span>() <span class="pl-k">+</span> name.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> d3_vendorPrefixes.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> prefixName <span class="pl-k">=</span> d3_vendorPrefixes[i] <span class="pl-k">+</span> name;</td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (prefixName <span class="pl-k">in</span> object) <span class="pl-k">return</span> prefixName;</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_vendorPrefixes <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>webkit<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>ms<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>moz<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Moz<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>o<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>O<span class="pl-pds">&quot;</span></span> ];</td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_noop</span>() {}</td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">dispatch</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> dispatch <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_dispatch</span>(), i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) dispatch[arguments[i]] <span class="pl-k">=</span> d3_dispatch_event(dispatch);</td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> dispatch;</td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_dispatch</span>() {}</td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_dispatch</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">on</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">type</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> type.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>), name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code blob-code-inner js-file-line">      name <span class="pl-k">=</span> type.<span class="pl-c1">slice</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code blob-code-inner js-file-line">      type <span class="pl-k">=</span> type.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, i);</td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (type) <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> <span class="pl-v">this</span>[type].on(name) <span class="pl-k">:</span> <span class="pl-v">this</span>[type].on(name, listener);</td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (listener <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-k">for</span> (type <span class="pl-k">in</span> <span class="pl-v">this</span>) {</td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.hasOwnProperty(type)) <span class="pl-v">this</span>[type].on(name, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_dispatch_event</span>(<span class="pl-smi">dispatch</span>) {</td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> listeners <span class="pl-k">=</span> [], listenerByName <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_Map</span>();</td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">event</span>() {</td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> z <span class="pl-k">=</span> listeners, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> z.<span class="pl-c1">length</span>, l;</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (l <span class="pl-k">=</span> z[i].on) l.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> dispatch;</td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">event</span>.<span class="pl-en">on</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> l <span class="pl-k">=</span> listenerByName.get(name), i;</td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> l <span class="pl-k">&amp;&amp;</span> l.on;</td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (l) {</td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code blob-code-inner js-file-line">        l.on <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code blob-code-inner js-file-line">        listeners <span class="pl-k">=</span> listeners.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, i <span class="pl-k">=</span> listeners.<span class="pl-c1">indexOf</span>(l)).<span class="pl-c1">concat</span>(listeners.<span class="pl-c1">slice</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code blob-code-inner js-file-line">        listenerByName.<span class="pl-c1">remove</span>(name);</td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (listener) listeners.<span class="pl-c1">push</span>(listenerByName.set(name, {</td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code blob-code-inner js-file-line">        on<span class="pl-k">:</span> listener</td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code blob-code-inner js-file-line">      }));</td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> dispatch;</td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">event</span>;</td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code blob-code-inner js-file-line">  d3.<span class="pl-c1">event</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_eventPreventDefault</span>() {</td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code blob-code-inner js-file-line">    d3.<span class="pl-c1">event</span>.preventDefault();</td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_eventSource</span>() {</td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> e <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>, s;</td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (s <span class="pl-k">=</span> e.sourceEvent) e <span class="pl-k">=</span> s;</td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> e;</td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_eventDispatch</span>(<span class="pl-smi">target</span>) {</td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> dispatch <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_dispatch</span>(), i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) dispatch[arguments[i]] <span class="pl-k">=</span> d3_dispatch_event(dispatch);</td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">dispatch</span>.<span class="pl-en">of</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">thiz</span>, <span class="pl-smi">argumentz</span>) {</td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e1</span>) {</td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> e0 <span class="pl-k">=</span> e1.sourceEvent <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>;</td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code blob-code-inner js-file-line">          e1.<span class="pl-c1">target</span> <span class="pl-k">=</span> target;</td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code blob-code-inner js-file-line">          d3.<span class="pl-c1">event</span> <span class="pl-k">=</span> e1;</td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code blob-code-inner js-file-line">          dispatch[e1.<span class="pl-c1">type</span>].<span class="pl-c1">apply</span>(thiz, argumentz);</td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code blob-code-inner js-file-line">          d3.<span class="pl-c1">event</span> <span class="pl-k">=</span> e0;</td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> dispatch;</td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">requote</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> s.<span class="pl-c1">replace</span>(d3_requote_re, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$&amp;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_requote_re <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\\\^\$\*\+\?\|\[\]\(\)\.\{\}</span>]</span><span class="pl-pds">/</span>g</span>;</td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_subclass <span class="pl-k">=</span> {}.__proto__ <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">prototype</span>) {</td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code blob-code-inner js-file-line">    object.__proto__ <span class="pl-k">=</span> prototype;</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">prototype</span>) {</td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> property <span class="pl-k">in</span> prototype) object[property] <span class="pl-k">=</span> prototype[property];</td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection</span>(<span class="pl-smi">groups</span>) {</td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code blob-code-inner js-file-line">    d3_subclass(groups, d3_selectionPrototype);</td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">d3_select</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">s</span>, <span class="pl-smi">n</span>) {</td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n.querySelector(s);</td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-en">d3_selectAll</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">s</span>, <span class="pl-smi">n</span>) {</td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n.querySelectorAll(s);</td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-en">d3_selectMatches</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">n</span>, <span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> d3_selectMatcher <span class="pl-k">=</span> n.matches <span class="pl-k">||</span> n[d3_vendorSymbol(n, <span class="pl-s"><span class="pl-pds">&quot;</span>matchesSelector<span class="pl-pds">&quot;</span></span>)];</td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">d3_selectMatches</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">n</span>, <span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_selectMatcher.<span class="pl-c1">call</span>(n, s);</td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selectMatches(n, s);</td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> Sizzle <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">d3_select</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">s</span>, <span class="pl-smi">n</span>) {</td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> Sizzle(s, n)[<span class="pl-c1">0</span>] <span class="pl-k">||</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code blob-code-inner js-file-line">    d3_selectAll <span class="pl-k">=</span> Sizzle;</td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code blob-code-inner js-file-line">    d3_selectMatches <span class="pl-k">=</span> Sizzle.matchesSelector;</td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">selection</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.<span class="pl-c1">select</span>(d3_document.<span class="pl-c1">documentElement</span>);</td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_selectionPrototype <span class="pl-k">=</span> <span class="pl-c1">d3.selection</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">select</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> subgroups <span class="pl-k">=</span> [], subgroup, subnode, group, node;</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code blob-code-inner js-file-line">    selector <span class="pl-k">=</span> d3_selection_selector(selector);</td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code blob-code-inner js-file-line">      subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code blob-code-inner js-file-line">      subgroup.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> (group <span class="pl-k">=</span> <span class="pl-v">this</span>[j]).<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">push</span>(subnode <span class="pl-k">=</span> selector.<span class="pl-c1">call</span>(node, node.__data__, i, j));</td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (subnode <span class="pl-k">&amp;&amp;</span> <span class="pl-s"><span class="pl-pds">&quot;</span>__data__<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> node) subnode.__data__ <span class="pl-k">=</span> node.__data__;</td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">push</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection(subgroups);</td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_selector</span>(<span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">typeof</span> selector <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-en">selector</span> : <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_select(selector, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">selectAll</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> subgroups <span class="pl-k">=</span> [], subgroup, node;</td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code blob-code-inner js-file-line">    selector <span class="pl-k">=</span> d3_selection_selectorAll(selector);</td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code blob-code-inner js-file-line">          subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> d3_array(selector.<span class="pl-c1">call</span>(node, node.__data__, i, j)));</td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection(subgroups);</td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_selectorAll</span>(<span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">typeof</span> selector <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-en">selector</span> : <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_selectAll(selector, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_nsPrefix <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code blob-code-inner js-file-line">    svg<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/svg<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code blob-code-inner js-file-line">    xhtml<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code blob-code-inner js-file-line">    xlink<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xlink<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code blob-code-inner js-file-line">    xml<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/XML/1998/namespace<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code blob-code-inner js-file-line">    xmlns<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/xmlns/<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code blob-code-inner js-file-line">  d3.ns <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code blob-code-inner js-file-line">    prefix<span class="pl-k">:</span> d3_nsPrefix,</td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">qualify</span>: <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> name.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>), prefix <span class="pl-k">=</span> name;</td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code blob-code-inner js-file-line">        prefix <span class="pl-k">=</span> name.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, i);</td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code blob-code-inner js-file-line">        name <span class="pl-k">=</span> name.<span class="pl-c1">slice</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_nsPrefix.hasOwnProperty(prefix) <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code blob-code-inner js-file-line">        space<span class="pl-k">:</span> d3_nsPrefix[prefix],</td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code blob-code-inner js-file-line">        local<span class="pl-k">:</span> name</td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">:</span> name;</td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">attr</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> name <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> node <span class="pl-k">=</span> <span class="pl-v">this</span>.node();</td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code blob-code-inner js-file-line">        name <span class="pl-k">=</span> d3.ns.qualify(name);</td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> name.local <span class="pl-k">?</span> node.getAttributeNS(name.space, name.local) <span class="pl-k">:</span> node.<span class="pl-c1">getAttribute</span>(name);</td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (value <span class="pl-k">in</span> name) <span class="pl-v">this</span>.each(d3_selection_attr(value, name[value]));</td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.each(d3_selection_attr(name, value));</td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_attr</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code blob-code-inner js-file-line">    name <span class="pl-k">=</span> d3.ns.qualify(name);</td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrNull</span>() {</td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.<span class="pl-c1">removeAttribute</span>(name);</td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrNullNS</span>() {</td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.removeAttributeNS(name.space, name.local);</td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrConstant</span>() {</td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.<span class="pl-c1">setAttribute</span>(name, value);</td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrConstantNS</span>() {</td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.setAttributeNS(name.space, name.local, value);</td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrFunction</span>() {</td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x <span class="pl-k">=</span> value.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-v">this</span>.<span class="pl-c1">removeAttribute</span>(name); <span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-c1">setAttribute</span>(name, x);</td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrFunctionNS</span>() {</td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x <span class="pl-k">=</span> value.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-v">this</span>.removeAttributeNS(name.space, name.local); <span class="pl-k">else</span> <span class="pl-v">this</span>.setAttributeNS(name.space, name.local, x);</td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> value <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> name.local <span class="pl-k">?</span> attrNullNS <span class="pl-k">:</span> attrNull <span class="pl-k">:</span> <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> name.local <span class="pl-k">?</span> attrFunctionNS <span class="pl-k">:</span> attrFunction <span class="pl-k">:</span> name.local <span class="pl-k">?</span> attrConstantNS <span class="pl-k">:</span> attrConstant;</td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_collapse</span>(<span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> s.trim().<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">classed</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> name <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> node <span class="pl-k">=</span> <span class="pl-v">this</span>.node(), n <span class="pl-k">=</span> (name <span class="pl-k">=</span> d3_selection_classes(name)).<span class="pl-c1">length</span>, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (value <span class="pl-k">=</span> node.classList) {</td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (<span class="pl-k">!</span>value.contains(name[i])) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code blob-code-inner js-file-line">          value <span class="pl-k">=</span> node.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_selection_classedRe(name[i]).<span class="pl-c1">test</span>(value)) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (value <span class="pl-k">in</span> name) <span class="pl-v">this</span>.each(d3_selection_classed(value, name[value]));</td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.each(d3_selection_classed(name, value));</td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_classedRe</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(?:^|<span class="pl-cce">\\</span>s+)<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3.requote(name) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>(?:<span class="pl-cce">\\</span>s+|$)<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_classes</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (name <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).trim().<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-k">|</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>);</td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_classed</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code blob-code-inner js-file-line">    name <span class="pl-k">=</span> d3_selection_classes(name).map(d3_selection_classedName);</td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> name.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">classedConstant</span>() {</td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) name[i](<span class="pl-v">this</span>, value);</td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">classedFunction</span>() {</td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, x <span class="pl-k">=</span> value.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) name[i](<span class="pl-v">this</span>, x);</td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> classedFunction <span class="pl-k">:</span> classedConstant;</td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_classedName</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> re <span class="pl-k">=</span> d3_selection_classedRe(name);</td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (c <span class="pl-k">=</span> node.classList) <span class="pl-k">return</span> value <span class="pl-k">?</span> c.<span class="pl-c1">add</span>(name) <span class="pl-k">:</span> c.<span class="pl-c1">remove</span>(name);</td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> c <span class="pl-k">=</span> node.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>) <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (value) {</td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code blob-code-inner js-file-line">        re.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>re.<span class="pl-c1">test</span>(c)) node.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, d3_collapse(c <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name));</td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code blob-code-inner js-file-line">        node.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, d3_collapse(c.<span class="pl-c1">replace</span>(re, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)));</td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">style</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>, <span class="pl-smi">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> name <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) value <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (priority <span class="pl-k">in</span> name) <span class="pl-v">this</span>.each(d3_selection_style(priority, name[priority], value));</td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> node <span class="pl-k">=</span> <span class="pl-v">this</span>.node();</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_window(node).getComputedStyle(node, <span class="pl-c1">null</span>).getPropertyValue(name);</td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code blob-code-inner js-file-line">      priority <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.each(d3_selection_style(name, value, priority));</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_style</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>, <span class="pl-smi">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">styleNull</span>() {</td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.<span class="pl-c1">style</span>.removeProperty(name);</td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">styleConstant</span>() {</td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.<span class="pl-c1">style</span>.setProperty(name, value, priority);</td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">styleFunction</span>() {</td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x <span class="pl-k">=</span> value.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-v">this</span>.<span class="pl-c1">style</span>.removeProperty(name); <span class="pl-k">else</span> <span class="pl-v">this</span>.<span class="pl-c1">style</span>.setProperty(name, x, priority);</td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> value <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> styleNull <span class="pl-k">:</span> <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> styleFunction <span class="pl-k">:</span> styleConstant;</td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">property</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> name <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) <span class="pl-k">return</span> <span class="pl-v">this</span>.node()[name];</td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (value <span class="pl-k">in</span> name) <span class="pl-v">this</span>.each(d3_selection_property(value, name[value]));</td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.each(d3_selection_property(name, value));</td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_property</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">propertyNull</span>() {</td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">delete</span> <span class="pl-v">this</span>[name];</td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">propertyConstant</span>() {</td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>[name] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">propertyFunction</span>() {</td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x <span class="pl-k">=</span> value.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-k">delete</span> <span class="pl-v">this</span>[name]; <span class="pl-k">else</span> <span class="pl-v">this</span>[name] <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> value <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> propertyNull <span class="pl-k">:</span> <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> propertyFunction <span class="pl-k">:</span> propertyConstant;</td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">text</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> <span class="pl-v">this</span>.each(<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> v <span class="pl-k">=</span> value.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.textContent <span class="pl-k">=</span> v <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> v;</td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> value <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.textContent <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.textContent <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code blob-code-inner js-file-line">    }) <span class="pl-k">:</span> <span class="pl-v">this</span>.node().textContent;</td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">html</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> <span class="pl-v">this</span>.each(<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> v <span class="pl-k">=</span> value.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.innerHTML <span class="pl-k">=</span> v <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> v;</td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> value <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.innerHTML <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.innerHTML <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code blob-code-inner js-file-line">    }) <span class="pl-k">:</span> <span class="pl-v">this</span>.node().innerHTML;</td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">append</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code blob-code-inner js-file-line">    name <span class="pl-k">=</span> d3_selection_creator(name);</td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">select</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">appendChild</span>(name.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments));</td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_creator</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">create</span>() {</td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> <span class="pl-c1">document</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">ownerDocument</span>, namespace <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">namespaceURI</span>;</td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> namespace <span class="pl-k">?</span> <span class="pl-c1">document</span>.createElementNS(namespace, name) <span class="pl-k">:</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(name);</td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createNS</span>() {</td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">ownerDocument</span>.createElementNS(name.space, name.local);</td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">typeof</span> name <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> name <span class="pl-k">:</span> (name <span class="pl-k">=</span> d3.ns.qualify(name)).local <span class="pl-k">?</span> createNS <span class="pl-k">:</span> create;</td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">insert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">before</span>) {</td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code blob-code-inner js-file-line">    name <span class="pl-k">=</span> d3_selection_creator(name);</td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code blob-code-inner js-file-line">    before <span class="pl-k">=</span> d3_selection_selector(before);</td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">select</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">insertBefore</span>(name.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments), before.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">||</span> <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">remove</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.each(d3_selectionRemove);</td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selectionRemove</span>() {</td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> parent <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (parent) parent.<span class="pl-c1">removeChild</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">data</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>, group, node;</td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code blob-code-inner js-file-line">      value <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(n <span class="pl-k">=</span> (group <span class="pl-k">=</span> <span class="pl-v">this</span>[<span class="pl-c1">0</span>]).<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code blob-code-inner js-file-line">          value[i] <span class="pl-k">=</span> node.__data__;</td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">bind</span>(<span class="pl-smi">group</span>, <span class="pl-smi">groupData</span>) {</td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> groupData.<span class="pl-c1">length</span>, n0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(n, m), updateNodes <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(m), enterNodes <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(m), exitNodes <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(n), node, nodeData;</td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (key) {</td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> nodeByKeyValue <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_Map</span>(), keyValues <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(n), keyValue;</td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (nodeByKeyValue.has(keyValue <span class="pl-k">=</span> key.<span class="pl-c1">call</span>(node <span class="pl-k">=</span> group[i], node.__data__, i))) {</td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code blob-code-inner js-file-line">            exitNodes[i] <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code blob-code-inner js-file-line">            nodeByKeyValue.set(keyValue, node);</td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code blob-code-inner js-file-line">          keyValues[i] <span class="pl-k">=</span> keyValue;</td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>(node <span class="pl-k">=</span> nodeByKeyValue.get(keyValue <span class="pl-k">=</span> key.<span class="pl-c1">call</span>(groupData, nodeData <span class="pl-k">=</span> groupData[i], i)))) {</td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code blob-code-inner js-file-line">            enterNodes[i] <span class="pl-k">=</span> d3_selection_dataNode(nodeData);</td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (node <span class="pl-k">!==</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code blob-code-inner js-file-line">            updateNodes[i] <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code blob-code-inner js-file-line">            node.__data__ <span class="pl-k">=</span> nodeData;</td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code blob-code-inner js-file-line">          nodeByKeyValue.set(keyValue, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (nodeByKeyValue.get(keyValues[i]) <span class="pl-k">!==</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code blob-code-inner js-file-line">            exitNodes[i] <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n0; ) {</td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code blob-code-inner js-file-line">          node <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code blob-code-inner js-file-line">          nodeData <span class="pl-k">=</span> groupData[i];</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (node) {</td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code blob-code-inner js-file-line">            node.__data__ <span class="pl-k">=</span> nodeData;</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code blob-code-inner js-file-line">            updateNodes[i] <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code blob-code-inner js-file-line">            enterNodes[i] <span class="pl-k">=</span> d3_selection_dataNode(nodeData);</td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (;i <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code blob-code-inner js-file-line">          enterNodes[i] <span class="pl-k">=</span> d3_selection_dataNode(groupData[i]);</td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (;i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code blob-code-inner js-file-line">          exitNodes[i] <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code blob-code-inner js-file-line">      enterNodes.update <span class="pl-k">=</span> updateNodes;</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code blob-code-inner js-file-line">      enterNodes.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> updateNodes.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> exitNodes.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> group.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code blob-code-inner js-file-line">      enter.<span class="pl-c1">push</span>(enterNodes);</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code blob-code-inner js-file-line">      update.<span class="pl-c1">push</span>(updateNodes);</td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code blob-code-inner js-file-line">      exit.<span class="pl-c1">push</span>(exitNodes);</td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> enter <span class="pl-k">=</span> d3_selection_enter([]), update <span class="pl-k">=</span> d3_selection([]), exit <span class="pl-k">=</span> d3_selection([]);</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code blob-code-inner js-file-line">        bind(group <span class="pl-k">=</span> <span class="pl-v">this</span>[i], value.<span class="pl-c1">call</span>(group, group.<span class="pl-c1">parentNode</span>.__data__, i));</td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code blob-code-inner js-file-line">        bind(group <span class="pl-k">=</span> <span class="pl-v">this</span>[i], value);</td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">update</span>.<span class="pl-en">enter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> enter;</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">update</span>.<span class="pl-en">exit</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> exit;</td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> update;</td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_dataNode</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code blob-code-inner js-file-line">      __data__<span class="pl-k">:</span> data</td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">datum</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> <span class="pl-v">this</span>.property(<span class="pl-s"><span class="pl-pds">&quot;</span>__data__<span class="pl-pds">&quot;</span></span>, value) <span class="pl-k">:</span> <span class="pl-v">this</span>.property(<span class="pl-s"><span class="pl-pds">&quot;</span>__data__<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">filter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">filter</span>) {</td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> subgroups <span class="pl-k">=</span> [], subgroup, group, node;</td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> filter <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) filter <span class="pl-k">=</span> d3_selection_filter(filter);</td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code blob-code-inner js-file-line">      subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code blob-code-inner js-file-line">      subgroup.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> (group <span class="pl-k">=</span> <span class="pl-v">this</span>[j]).<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((node <span class="pl-k">=</span> group[i]) <span class="pl-k">&amp;&amp;</span> filter.<span class="pl-c1">call</span>(node, node.__data__, i, j)) {</td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection(subgroups);</td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_filter</span>(<span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_selectMatches(<span class="pl-v">this</span>, selector);</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">order</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> group.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>, next <span class="pl-k">=</span> group[i], node; <span class="pl-k">--</span>i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; ) {</td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (next <span class="pl-k">&amp;&amp;</span> next <span class="pl-k">!==</span> node.<span class="pl-c1">nextSibling</span>) next.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(node, next);</td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code blob-code-inner js-file-line">          next <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">sort</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">comparator</span>) {</td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code blob-code-inner js-file-line">    comparator <span class="pl-k">=</span> d3_selection_sortComparator.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m; ) <span class="pl-v">this</span>[j].<span class="pl-c1">sort</span>(comparator);</td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.order();</td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_sortComparator</span>(<span class="pl-smi">comparator</span>) {</td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) comparator <span class="pl-k">=</span> d3_ascending;</td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> a <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">?</span> comparator(a.__data__, b.__data__) <span class="pl-k">:</span> <span class="pl-k">!</span>a <span class="pl-k">-</span> <span class="pl-k">!</span>b;</td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">each</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection_each(<span class="pl-v">this</span>, <span class="pl-k">function</span>(<span class="pl-smi">node</span>, <span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code blob-code-inner js-file-line">      callback.<span class="pl-c1">call</span>(node, node.__data__, i, j);</td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_each</span>(<span class="pl-smi">groups</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>, m <span class="pl-k">=</span> groups.<span class="pl-c1">length</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> groups[j], i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>, node; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) callback(node, i, j);</td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">call</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> args <span class="pl-k">=</span> d3_array(arguments);</td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code blob-code-inner js-file-line">    callback.<span class="pl-c1">apply</span>(args[<span class="pl-c1">0</span>] <span class="pl-k">=</span> <span class="pl-v">this</span>, args);</td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">empty</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-v">this</span>.node();</td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">node</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> node <span class="pl-k">=</span> group[i];</td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node) <span class="pl-k">return</span> node;</td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code blob-code-inner js-file-line">    d3_selection_each(<span class="pl-v">this</span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">++</span>n;</td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n;</td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_enter</span>(<span class="pl-smi">selection</span>) {</td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code blob-code-inner js-file-line">    d3_subclass(selection, d3_selection_enterPrototype);</td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> selection;</td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_selection_enterPrototype <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code blob-code-inner js-file-line">  d3.<span class="pl-c1">selection</span>.enter <span class="pl-k">=</span> d3_selection_enter;</td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.selection.enter</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> d3_selection_enterPrototype;</td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code blob-code-inner js-file-line">  d3_selection_enterPrototype.append <span class="pl-k">=</span> d3_selectionPrototype.append;</td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code blob-code-inner js-file-line">  d3_selection_enterPrototype.empty <span class="pl-k">=</span> d3_selectionPrototype.empty;</td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code blob-code-inner js-file-line">  d3_selection_enterPrototype.node <span class="pl-k">=</span> d3_selectionPrototype.node;</td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code blob-code-inner js-file-line">  d3_selection_enterPrototype.call <span class="pl-k">=</span> d3_selectionPrototype.call;</td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code blob-code-inner js-file-line">  d3_selection_enterPrototype.<span class="pl-c1">size</span> <span class="pl-k">=</span> d3_selectionPrototype.<span class="pl-c1">size</span>;</td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selection_enterPrototype</span>.<span class="pl-en">select</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> subgroups <span class="pl-k">=</span> [], subgroup, subnode, upgroup, group, node;</td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code blob-code-inner js-file-line">      upgroup <span class="pl-k">=</span> (group <span class="pl-k">=</span> <span class="pl-v">this</span>[j]).update;</td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code blob-code-inner js-file-line">      subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code blob-code-inner js-file-line">      subgroup.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> group.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">push</span>(upgroup[i] <span class="pl-k">=</span> subnode <span class="pl-k">=</span> selector.<span class="pl-c1">call</span>(group.<span class="pl-c1">parentNode</span>, node.__data__, i, j));</td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code blob-code-inner js-file-line">          subnode.__data__ <span class="pl-k">=</span> node.__data__;</td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">push</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection(subgroups);</td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selection_enterPrototype</span>.<span class="pl-en">insert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">before</span>) {</td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) before <span class="pl-k">=</span> d3_selection_enterInsertBefore(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selectionPrototype.insert.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, name, before);</td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_enterInsertBefore</span>(<span class="pl-smi">enter</span>) {</td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i0, j0;</td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> group <span class="pl-k">=</span> enter[j].update, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>, node;</td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (j <span class="pl-k">!=</span> j0) j0 <span class="pl-k">=</span> j, i0 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (i <span class="pl-k">&gt;=</span> i0) i0 <span class="pl-k">=</span> i <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">!</span>(node <span class="pl-k">=</span> group[i0]) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">++</span>i0 <span class="pl-k">&lt;</span> n) ;</td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> node;</td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">select</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> group;</td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> node <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code blob-code-inner js-file-line">      group <span class="pl-k">=</span> [ d3_select(node, d3_document) ];</td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code blob-code-inner js-file-line">      group.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> d3_document.<span class="pl-c1">documentElement</span>;</td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code blob-code-inner js-file-line">      group <span class="pl-k">=</span> [ node ];</td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code blob-code-inner js-file-line">      group.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> d3_documentElement(node);</td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection([ group ]);</td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">selectAll</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">nodes</span>) {</td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> group;</td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> nodes <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code blob-code-inner js-file-line">      group <span class="pl-k">=</span> d3_array(d3_selectAll(nodes, d3_document));</td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code blob-code-inner js-file-line">      group.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> d3_document.<span class="pl-c1">documentElement</span>;</td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code blob-code-inner js-file-line">      group <span class="pl-k">=</span> nodes;</td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code blob-code-inner js-file-line">      group.<span class="pl-c1">parentNode</span> <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection([ group ]);</td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">on</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">type</span>, <span class="pl-smi">listener</span>, <span class="pl-smi">capture</span>) {</td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> type <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) listener <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (capture <span class="pl-k">in</span> type) <span class="pl-v">this</span>.each(d3_selection_on(capture, type[capture], listener));</td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> (n <span class="pl-k">=</span> <span class="pl-v">this</span>.node()[<span class="pl-s"><span class="pl-pds">&quot;</span>__on<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> type]) <span class="pl-k">&amp;&amp;</span> n._;</td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code blob-code-inner js-file-line">      capture <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.each(d3_selection_on(type, listener, capture));</td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_on</span>(<span class="pl-smi">type</span>, <span class="pl-smi">listener</span>, <span class="pl-smi">capture</span>) {</td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>__on<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> type, i <span class="pl-k">=</span> type.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>), wrap <span class="pl-k">=</span> d3_selection_onListener;</td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (i <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) type <span class="pl-k">=</span> type.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, i);</td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> filter <span class="pl-k">=</span> d3_selection_onFilters.get(type);</td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (filter) type <span class="pl-k">=</span> filter, wrap <span class="pl-k">=</span> d3_selection_onFilter;</td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">onRemove</span>() {</td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> l <span class="pl-k">=</span> <span class="pl-v">this</span>[name];</td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (l) {</td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.removeEventListener(type, l, l.$);</td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">delete</span> <span class="pl-v">this</span>[name];</td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">onAdd</span>() {</td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> l <span class="pl-k">=</span> wrap(listener, d3_array(arguments));</td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code blob-code-inner js-file-line">      onRemove.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.addEventListener(type, <span class="pl-v">this</span>[name] <span class="pl-k">=</span> l, l.$ <span class="pl-k">=</span> capture);</td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code blob-code-inner js-file-line">      l._ <span class="pl-k">=</span> listener;</td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">removeAll</span>() {</td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> re <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>^__on([^.]+)<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3.requote(type) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>), match;</td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> name <span class="pl-k">in</span> <span class="pl-v">this</span>) {</td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (match <span class="pl-k">=</span> name.<span class="pl-c1">match</span>(re)) {</td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> l <span class="pl-k">=</span> <span class="pl-v">this</span>[name];</td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.removeEventListener(match[<span class="pl-c1">1</span>], l, l.$);</td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">delete</span> <span class="pl-v">this</span>[name];</td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> i <span class="pl-k">?</span> listener <span class="pl-k">?</span> onAdd <span class="pl-k">:</span> onRemove <span class="pl-k">:</span> listener <span class="pl-k">?</span> d3_noop <span class="pl-k">:</span> removeAll;</td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_selection_onFilters <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code blob-code-inner js-file-line">    mouseenter<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code blob-code-inner js-file-line">    mouseleave<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (d3_document) {</td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code blob-code-inner js-file-line">    d3_selection_onFilters.forEach(<span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> k <span class="pl-k">in</span> d3_document) d3_selection_onFilters.<span class="pl-c1">remove</span>(k);</td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_onListener</span>(<span class="pl-smi">listener</span>, <span class="pl-smi">argumentz</span>) {</td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> o <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>;</td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code blob-code-inner js-file-line">      d3.<span class="pl-c1">event</span> <span class="pl-k">=</span> e;</td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code blob-code-inner js-file-line">      argumentz[<span class="pl-c1">0</span>] <span class="pl-k">=</span> <span class="pl-v">this</span>.__data__;</td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code blob-code-inner js-file-line">        listener.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, argumentz);</td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code blob-code-inner js-file-line">        d3.<span class="pl-c1">event</span> <span class="pl-k">=</span> o;</td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_onFilter</span>(<span class="pl-smi">listener</span>, <span class="pl-smi">argumentz</span>) {</td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> l <span class="pl-k">=</span> d3_selection_onListener(listener, argumentz);</td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> target <span class="pl-k">=</span> <span class="pl-v">this</span>, related <span class="pl-k">=</span> e.relatedTarget;</td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>related <span class="pl-k">||</span> related <span class="pl-k">!==</span> target <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(related.compareDocumentPosition(target) <span class="pl-k">&amp;</span> <span class="pl-c1">8</span>)) {</td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code blob-code-inner js-file-line">        l.<span class="pl-c1">call</span>(target, e);</td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_event_dragSelect, d3_event_dragId <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_event_dragSuppress</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.dragsuppress-<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">++</span>d3_event_dragId, click <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name, w <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(d3_window(node)).on(<span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name, d3_eventPreventDefault).on(<span class="pl-s"><span class="pl-pds">&quot;</span>dragstart<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name, d3_eventPreventDefault).on(<span class="pl-s"><span class="pl-pds">&quot;</span>selectstart<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name, d3_eventPreventDefault);</td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (d3_event_dragSelect <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code blob-code-inner js-file-line">      d3_event_dragSelect <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>onselectstart<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> node <span class="pl-k">?</span> false <span class="pl-k">:</span> d3_vendorSymbol(node.<span class="pl-c1">style</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>userSelect<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (d3_event_dragSelect) {</td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> style <span class="pl-k">=</span> d3_documentElement(node).<span class="pl-c1">style</span>, select <span class="pl-k">=</span> style[d3_event_dragSelect];</td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code blob-code-inner js-file-line">      style[d3_event_dragSelect] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">suppressClick</span>) {</td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code blob-code-inner js-file-line">      w.on(name, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (d3_event_dragSelect) style[d3_event_dragSelect] <span class="pl-k">=</span> select;</td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (suppressClick) {</td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">off</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code blob-code-inner js-file-line">          w.on(click, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code blob-code-inner js-file-line">        w.on(click, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code blob-code-inner js-file-line">          d3_eventPreventDefault();</td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code blob-code-inner js-file-line">          off();</td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code blob-code-inner js-file-line">        }, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">setTimeout</span>(off, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">mouse</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">container</span>) {</td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_mousePoint(container, d3_eventSource());</td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_mouse_bug44083 <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">navigator</span> <span class="pl-k">&amp;&amp;</span><span class="pl-sr"> <span class="pl-pds">/</span>WebKit<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-v">this</span>.<span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>) <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_mousePoint</span>(<span class="pl-smi">container</span>, <span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (e.changedTouches) e <span class="pl-k">=</span> e.changedTouches[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> svg <span class="pl-k">=</span> container.ownerSVGElement <span class="pl-k">||</span> container;</td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (svg.createSVGPoint) {</td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> point <span class="pl-k">=</span> svg.createSVGPoint();</td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (d3_mouse_bug44083 <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-c1">window</span> <span class="pl-k">=</span> d3_window(container);</td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">window</span>.scrollX <span class="pl-k">||</span> <span class="pl-c1">window</span>.scrollY) {</td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code blob-code-inner js-file-line">          svg <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>).append(<span class="pl-s"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>({</td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code blob-code-inner js-file-line">            position<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code blob-code-inner js-file-line">            top<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code blob-code-inner js-file-line">            left<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code blob-code-inner js-file-line">            margin<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code blob-code-inner js-file-line">            padding<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code blob-code-inner js-file-line">            border<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code blob-code-inner js-file-line">          }, <span class="pl-s"><span class="pl-pds">&quot;</span>important<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> ctm <span class="pl-k">=</span> svg[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>].getScreenCTM();</td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code blob-code-inner js-file-line">          d3_mouse_bug44083 <span class="pl-k">=</span> <span class="pl-k">!</span>(ctm.f <span class="pl-k">||</span> ctm.e);</td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code blob-code-inner js-file-line">          svg.<span class="pl-c1">remove</span>();</td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (d3_mouse_bug44083) point.<span class="pl-c1">x</span> <span class="pl-k">=</span> e.<span class="pl-c1">pageX</span>, point.<span class="pl-c1">y</span> <span class="pl-k">=</span> e.<span class="pl-c1">pageY</span>; <span class="pl-k">else</span> point.<span class="pl-c1">x</span> <span class="pl-k">=</span> e.clientX, </td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code blob-code-inner js-file-line">      point.<span class="pl-c1">y</span> <span class="pl-k">=</span> e.clientY;</td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code blob-code-inner js-file-line">      point <span class="pl-k">=</span> point.matrixTransform(container.getScreenCTM().inverse());</td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ point.<span class="pl-c1">x</span>, point.<span class="pl-c1">y</span> ];</td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> rect <span class="pl-k">=</span> container.getBoundingClientRect();</td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ e.clientX <span class="pl-k">-</span> rect.<span class="pl-c1">left</span> <span class="pl-k">-</span> container.clientLeft, e.clientY <span class="pl-k">-</span> rect.<span class="pl-c1">top</span> <span class="pl-k">-</span> container.clientTop ];</td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">touch</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">container</span>, <span class="pl-smi">touches</span>, <span class="pl-smi">identifier</span>) {</td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) identifier <span class="pl-k">=</span> touches, touches <span class="pl-k">=</span> d3_eventSource().changedTouches;</td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (touches) <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> touches.<span class="pl-c1">length</span>, touch; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((touch <span class="pl-k">=</span> touches[i]).identifier <span class="pl-k">===</span> identifier) {</td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_mousePoint(container, touch);</td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.behavior</span>.<span class="pl-en">drag</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">event</span> <span class="pl-k">=</span> d3_eventDispatch(drag, <span class="pl-s"><span class="pl-pds">&quot;</span>drag<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>dragstart<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>dragend<span class="pl-pds">&quot;</span></span>), origin <span class="pl-k">=</span> <span class="pl-c1">null</span>, mousedown <span class="pl-k">=</span> dragstart(d3_noop, d3.mouse, d3_window, <span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>), touchstart <span class="pl-k">=</span> dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, <span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">drag</span>() {</td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.on(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown.drag<span class="pl-pds">&quot;</span></span>, mousedown).on(<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart.drag<span class="pl-pds">&quot;</span></span>, touchstart);</td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">dragstart</span>(<span class="pl-smi">id</span>, <span class="pl-smi">position</span>, <span class="pl-smi">subject</span>, <span class="pl-smi">move</span>, <span class="pl-smi">end</span>) {</td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> that <span class="pl-k">=</span> <span class="pl-v">this</span>, target <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>.<span class="pl-c1">target</span>, parent <span class="pl-k">=</span> that.<span class="pl-c1">parentNode</span>, dispatch <span class="pl-k">=</span> <span class="pl-c1">event</span>.of(that, arguments), dragged <span class="pl-k">=</span> <span class="pl-c1">0</span>, dragId <span class="pl-k">=</span> id(), dragName <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.drag<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (dragId <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> dragId), dragOffset, dragSubject <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(subject(target)).on(move <span class="pl-k">+</span> dragName, moved).on(end <span class="pl-k">+</span> dragName, ended), dragRestore <span class="pl-k">=</span> d3_event_dragSuppress(target), position0 <span class="pl-k">=</span> position(parent, dragId);</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (origin) {</td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code blob-code-inner js-file-line">          dragOffset <span class="pl-k">=</span> origin.<span class="pl-c1">apply</span>(that, arguments);</td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code blob-code-inner js-file-line">          dragOffset <span class="pl-k">=</span> [ dragOffset.<span class="pl-c1">x</span> <span class="pl-k">-</span> position0[<span class="pl-c1">0</span>], dragOffset.<span class="pl-c1">y</span> <span class="pl-k">-</span> position0[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code blob-code-inner js-file-line">          dragOffset <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ];</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code blob-code-inner js-file-line">        dispatch({</td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code blob-code-inner js-file-line">          type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>dragstart<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">moved</span>() {</td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> position1 <span class="pl-k">=</span> position(parent, dragId), dx, dy;</td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>position1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code blob-code-inner js-file-line">          dx <span class="pl-k">=</span> position1[<span class="pl-c1">0</span>] <span class="pl-k">-</span> position0[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code blob-code-inner js-file-line">          dy <span class="pl-k">=</span> position1[<span class="pl-c1">1</span>] <span class="pl-k">-</span> position0[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code blob-code-inner js-file-line">          dragged |<span class="pl-k">=</span> dx | dy;</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code blob-code-inner js-file-line">          position0 <span class="pl-k">=</span> position1;</td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code blob-code-inner js-file-line">          dispatch({</td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code blob-code-inner js-file-line">            type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>drag<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> position1[<span class="pl-c1">0</span>] <span class="pl-k">+</span> dragOffset[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> position1[<span class="pl-c1">1</span>] <span class="pl-k">+</span> dragOffset[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code blob-code-inner js-file-line">            dx<span class="pl-k">:</span> dx,</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code blob-code-inner js-file-line">            dy<span class="pl-k">:</span> dy</td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">ended</span>() {</td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>position(parent, dragId)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code blob-code-inner js-file-line">          dragSubject.on(move <span class="pl-k">+</span> dragName, <span class="pl-c1">null</span>).on(end <span class="pl-k">+</span> dragName, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code blob-code-inner js-file-line">          dragRestore(dragged <span class="pl-k">&amp;&amp;</span> d3.<span class="pl-c1">event</span>.<span class="pl-c1">target</span> <span class="pl-k">===</span> target);</td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code blob-code-inner js-file-line">          dispatch({</td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code blob-code-inner js-file-line">            type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>dragend<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">drag</span>.<span class="pl-en">origin</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> origin;</td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code blob-code-inner js-file-line">      origin <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> drag;</td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.rebind(drag, <span class="pl-c1">event</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_behavior_dragTouchId</span>() {</td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.<span class="pl-c1">event</span>.changedTouches[<span class="pl-c1">0</span>].identifier;</td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">touches</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">container</span>, <span class="pl-smi">touches</span>) {</td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) touches <span class="pl-k">=</span> d3_eventSource().touches;</td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> touches <span class="pl-k">?</span> d3_array(touches).map(<span class="pl-k">function</span>(<span class="pl-smi">touch</span>) {</td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> point <span class="pl-k">=</span> d3_mousePoint(container, touch);</td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code blob-code-inner js-file-line">      point.identifier <span class="pl-k">=</span> touch.identifier;</td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> point;</td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code blob-code-inner js-file-line">    }) <span class="pl-k">:</span> [];</td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> Îµ <span class="pl-k">=</span> <span class="pl-c1">1e-6</span>, Îµ<span class="pl-c1">2</span> <span class="pl-k">=</span> Îµ <span class="pl-k">*</span> Îµ, Ï <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>, Ï <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> Ï, ÏÎµ <span class="pl-k">=</span> Ï <span class="pl-k">-</span> Îµ, halfÏ <span class="pl-k">=</span> Ï / <span class="pl-c1">2</span>, d3_radians <span class="pl-k">=</span> Ï / <span class="pl-c1">180</span>, d3_degrees <span class="pl-k">=</span> <span class="pl-c1">180</span> / Ï;</td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_sgn</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> x <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> x <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_cross2d</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">c</span>) {</td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (b[<span class="pl-c1">0</span>] <span class="pl-k">-</span> a[<span class="pl-c1">0</span>]) <span class="pl-k">*</span> (c[<span class="pl-c1">1</span>] <span class="pl-k">-</span> a[<span class="pl-c1">1</span>]) <span class="pl-k">-</span> (b[<span class="pl-c1">1</span>] <span class="pl-k">-</span> a[<span class="pl-c1">1</span>]) <span class="pl-k">*</span> (c[<span class="pl-c1">0</span>] <span class="pl-k">-</span> a[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_acos</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> x <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> x <span class="pl-k">&lt;</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">?</span> Ï <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(x);</td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_asin</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> x <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> halfÏ <span class="pl-k">:</span> x <span class="pl-k">&lt;</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-k">-</span>halfÏ <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(x);</td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_sinh</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ((x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(x)) <span class="pl-k">-</span> <span class="pl-c1">1</span> / x) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_cosh</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ((x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(x)) <span class="pl-k">+</span> <span class="pl-c1">1</span> / x) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_tanh</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ((x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(<span class="pl-c1">2</span> <span class="pl-k">*</span> x)) <span class="pl-k">-</span> <span class="pl-c1">1</span>) / (x <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_haversin</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(x / <span class="pl-c1">2</span>)) <span class="pl-k">*</span> x;</td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> Ï <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">SQRT2</span>, Ï<span class="pl-c1">2</span> <span class="pl-k">=</span> <span class="pl-c1">2</span>, Ï<span class="pl-c1">4</span> <span class="pl-k">=</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">interpolateZoom</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">p0</span>, <span class="pl-smi">p1</span>) {</td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ux0 <span class="pl-k">=</span> p0[<span class="pl-c1">0</span>], uy0 <span class="pl-k">=</span> p0[<span class="pl-c1">1</span>], w0 <span class="pl-k">=</span> p0[<span class="pl-c1">2</span>], ux1 <span class="pl-k">=</span> p1[<span class="pl-c1">0</span>], uy1 <span class="pl-k">=</span> p1[<span class="pl-c1">1</span>], w1 <span class="pl-k">=</span> p1[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> dx <span class="pl-k">=</span> ux1 <span class="pl-k">-</span> ux0, dy <span class="pl-k">=</span> uy1 <span class="pl-k">-</span> uy0, d2 <span class="pl-k">=</span> dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy, d1 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(d2), b0 <span class="pl-k">=</span> (w1 <span class="pl-k">*</span> w1 <span class="pl-k">-</span> w0 <span class="pl-k">*</span> w0 <span class="pl-k">+</span> Ï<span class="pl-c1">4</span> <span class="pl-k">*</span> d2) / (<span class="pl-c1">2</span> <span class="pl-k">*</span> w0 <span class="pl-k">*</span> Ï<span class="pl-c1">2</span> <span class="pl-k">*</span> d1), b1 <span class="pl-k">=</span> (w1 <span class="pl-k">*</span> w1 <span class="pl-k">-</span> w0 <span class="pl-k">*</span> w0 <span class="pl-k">-</span> Ï<span class="pl-c1">4</span> <span class="pl-k">*</span> d2) / (<span class="pl-c1">2</span> <span class="pl-k">*</span> w1 <span class="pl-k">*</span> Ï<span class="pl-c1">2</span> <span class="pl-k">*</span> d1), r0 <span class="pl-k">=</span> <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(b0 <span class="pl-k">*</span> b0 <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">-</span> b0), r1 <span class="pl-k">=</span> <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(b1 <span class="pl-k">*</span> b1 <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">-</span> b1), dr <span class="pl-k">=</span> r1 <span class="pl-k">-</span> r0, S <span class="pl-k">=</span> (dr <span class="pl-k">||</span> <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(w1 / w0)) / Ï;</td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">interpolate</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> s <span class="pl-k">=</span> t <span class="pl-k">*</span> S;</td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dr) {</td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> coshr0 <span class="pl-k">=</span> d3_cosh(r0), u <span class="pl-k">=</span> w0 / (Ï<span class="pl-c1">2</span> <span class="pl-k">*</span> d1) <span class="pl-k">*</span> (coshr0 <span class="pl-k">*</span> d3_tanh(Ï <span class="pl-k">*</span> s <span class="pl-k">+</span> r0) <span class="pl-k">-</span> d3_sinh(r0));</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> [ ux0 <span class="pl-k">+</span> u <span class="pl-k">*</span> dx, uy0 <span class="pl-k">+</span> u <span class="pl-k">*</span> dy, w0 <span class="pl-k">*</span> coshr0 / d3_cosh(Ï <span class="pl-k">*</span> s <span class="pl-k">+</span> r0) ];</td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ ux0 <span class="pl-k">+</span> t <span class="pl-k">*</span> dx, uy0 <span class="pl-k">+</span> t <span class="pl-k">*</span> dy, w0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(Ï <span class="pl-k">*</span> s) ];</td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code blob-code-inner js-file-line">    interpolate.duration <span class="pl-k">=</span> S <span class="pl-k">*</span> <span class="pl-c1">1e3</span>;</td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> interpolate;</td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.behavior</span>.<span class="pl-en">zoom</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> view <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code blob-code-inner js-file-line">      x<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code blob-code-inner js-file-line">      y<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code blob-code-inner js-file-line">      k<span class="pl-k">:</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code blob-code-inner js-file-line">    }, translate0, center0, center, size <span class="pl-k">=</span> [ <span class="pl-c1">960</span>, <span class="pl-c1">500</span> ], scaleExtent <span class="pl-k">=</span> d3_behavior_zoomInfinity, duration <span class="pl-k">=</span> <span class="pl-c1">250</span>, zooming <span class="pl-k">=</span> <span class="pl-c1">0</span>, mousedown <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mousedown.zoom<span class="pl-pds">&quot;</span></span>, mousemove <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mousemove.zoom<span class="pl-pds">&quot;</span></span>, mouseup <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mouseup.zoom<span class="pl-pds">&quot;</span></span>, mousewheelTimer, touchstart <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>touchstart.zoom<span class="pl-pds">&quot;</span></span>, touchtime, <span class="pl-c1">event</span> <span class="pl-k">=</span> d3_eventDispatch(zoom, <span class="pl-s"><span class="pl-pds">&quot;</span>zoomstart<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>zoom<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>zoomend<span class="pl-pds">&quot;</span></span>), x0, x1, y0, y1;</td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_behavior_zoomWheel) {</td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code blob-code-inner js-file-line">      d3_behavior_zoomWheel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>onwheel<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> d3_document <span class="pl-k">?</span> (<span class="pl-en">d3_behavior_zoomDelta</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">-</span>d3.<span class="pl-c1">event</span>.deltaY <span class="pl-k">*</span> (d3.<span class="pl-c1">event</span>.deltaMode <span class="pl-k">?</span> <span class="pl-c1">120</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code blob-code-inner js-file-line">      }, <span class="pl-s"><span class="pl-pds">&quot;</span>wheel<span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>onmousewheel<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> d3_document <span class="pl-k">?</span> (<span class="pl-en">d3_behavior_zoomDelta</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3.<span class="pl-c1">event</span>.wheelDelta;</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code blob-code-inner js-file-line">      }, <span class="pl-s"><span class="pl-pds">&quot;</span>mousewheel<span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> (<span class="pl-en">d3_behavior_zoomDelta</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">-</span>d3.<span class="pl-c1">event</span>.detail;</td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code blob-code-inner js-file-line">      }, <span class="pl-s"><span class="pl-pds">&quot;</span>MozMousePixelScroll<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">zoom</span>(<span class="pl-smi">g</span>) {</td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code blob-code-inner js-file-line">      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.zoom<span class="pl-pds">&quot;</span></span>, mousewheeled).on(<span class="pl-s"><span class="pl-pds">&quot;</span>dblclick.zoom<span class="pl-pds">&quot;</span></span>, dblclicked).on(touchstart, touchstarted);</td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">event</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">g</span>) {</td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code blob-code-inner js-file-line">      g.each(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dispatch <span class="pl-k">=</span> <span class="pl-c1">event</span>.of(<span class="pl-v">this</span>, arguments), view1 <span class="pl-k">=</span> view;</td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3_transitionInheritId) {</td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code blob-code-inner js-file-line">          d3.<span class="pl-c1">select</span>(<span class="pl-v">this</span>).transition().each(<span class="pl-s"><span class="pl-pds">&quot;</span>start.zoom<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code blob-code-inner js-file-line">            view <span class="pl-k">=</span> <span class="pl-v">this</span>.__chart__ <span class="pl-k">||</span> {</td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code blob-code-inner js-file-line">              x<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code blob-code-inner js-file-line">              y<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code blob-code-inner js-file-line">              k<span class="pl-k">:</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code blob-code-inner js-file-line">            zoomstarted(dispatch);</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code blob-code-inner js-file-line">          }).tween(<span class="pl-s"><span class="pl-pds">&quot;</span>zoom:zoom<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> dx <span class="pl-k">=</span> size[<span class="pl-c1">0</span>], dy <span class="pl-k">=</span> size[<span class="pl-c1">1</span>], cx <span class="pl-k">=</span> center0 <span class="pl-k">?</span> center0[<span class="pl-c1">0</span>] <span class="pl-k">:</span> dx / <span class="pl-c1">2</span>, cy <span class="pl-k">=</span> center0 <span class="pl-k">?</span> center0[<span class="pl-c1">1</span>] <span class="pl-k">:</span> dy / <span class="pl-c1">2</span>, i <span class="pl-k">=</span> d3.interpolateZoom([ (cx <span class="pl-k">-</span> view.<span class="pl-c1">x</span>) / view.k, (cy <span class="pl-k">-</span> view.<span class="pl-c1">y</span>) / view.k, dx / view.k ], [ (cx <span class="pl-k">-</span> view1.<span class="pl-c1">x</span>) / view1.k, (cy <span class="pl-k">-</span> view1.<span class="pl-c1">y</span>) / view1.k, dx / view1.k ]);</td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> l <span class="pl-k">=</span> i(t), k <span class="pl-k">=</span> dx / l[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code blob-code-inner js-file-line">              <span class="pl-v">this</span>.__chart__ <span class="pl-k">=</span> view <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code blob-code-inner js-file-line">                x<span class="pl-k">:</span> cx <span class="pl-k">-</span> l[<span class="pl-c1">0</span>] <span class="pl-k">*</span> k,</td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code blob-code-inner js-file-line">                y<span class="pl-k">:</span> cy <span class="pl-k">-</span> l[<span class="pl-c1">1</span>] <span class="pl-k">*</span> k,</td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code blob-code-inner js-file-line">                k<span class="pl-k">:</span> k</td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code blob-code-inner js-file-line">              };</td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code blob-code-inner js-file-line">              zoomed(dispatch);</td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code blob-code-inner js-file-line">          }).each(<span class="pl-s"><span class="pl-pds">&quot;</span>interrupt.zoom<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code blob-code-inner js-file-line">            zoomended(dispatch);</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code blob-code-inner js-file-line">          }).each(<span class="pl-s"><span class="pl-pds">&quot;</span>end.zoom<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code blob-code-inner js-file-line">            zoomended(dispatch);</td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.__chart__ <span class="pl-k">=</span> view;</td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code blob-code-inner js-file-line">          zoomstarted(dispatch);</td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code blob-code-inner js-file-line">          zoomed(dispatch);</td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code blob-code-inner js-file-line">          zoomended(dispatch);</td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">translate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ view.<span class="pl-c1">x</span>, view.<span class="pl-c1">y</span> ];</td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code blob-code-inner js-file-line">      view <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code blob-code-inner js-file-line">        k<span class="pl-k">:</span> view.k</td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code blob-code-inner js-file-line">      rescale();</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">scale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> view.k;</td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code blob-code-inner js-file-line">      view <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> view.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> view.<span class="pl-c1">y</span>,</td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code blob-code-inner js-file-line">        k<span class="pl-k">:</span> <span class="pl-k">+</span>_</td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code blob-code-inner js-file-line">      rescale();</td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">scaleExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> scaleExtent;</td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code blob-code-inner js-file-line">      scaleExtent <span class="pl-k">=</span> _ <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> d3_behavior_zoomInfinity <span class="pl-k">:</span> [ <span class="pl-k">+</span>_[<span class="pl-c1">0</span>], <span class="pl-k">+</span>_[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">center</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> center;</td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code blob-code-inner js-file-line">      center <span class="pl-k">=</span> _ <span class="pl-k">&amp;&amp;</span> [ <span class="pl-k">+</span>_[<span class="pl-c1">0</span>], <span class="pl-k">+</span>_[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
        <td id="LC1382" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
        <td id="LC1383" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
        <td id="LC1384" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
        <td id="LC1385" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
        <td id="LC1386" class="blob-code blob-code-inner js-file-line">      size <span class="pl-k">=</span> _ <span class="pl-k">&amp;&amp;</span> [ <span class="pl-k">+</span>_[<span class="pl-c1">0</span>], <span class="pl-k">+</span>_[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
        <td id="LC1387" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
        <td id="LC1389" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">duration</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
        <td id="LC1390" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> duration;</td>
      </tr>
      <tr>
        <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
        <td id="LC1391" class="blob-code blob-code-inner js-file-line">      duration <span class="pl-k">=</span> <span class="pl-k">+</span>_;</td>
      </tr>
      <tr>
        <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
        <td id="LC1392" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
        <td id="LC1393" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
        <td id="LC1394" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
        <td id="LC1395" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x1;</td>
      </tr>
      <tr>
        <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
        <td id="LC1396" class="blob-code blob-code-inner js-file-line">      x1 <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
        <td id="LC1397" class="blob-code blob-code-inner js-file-line">      x0 <span class="pl-k">=</span> z.copy();</td>
      </tr>
      <tr>
        <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
        <td id="LC1398" class="blob-code blob-code-inner js-file-line">      view <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
        <td id="LC1399" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
        <td id="LC1400" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
        <td id="LC1401" class="blob-code blob-code-inner js-file-line">        k<span class="pl-k">:</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
        <td id="LC1402" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
        <td id="LC1403" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
        <td id="LC1404" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
        <td id="LC1405" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">zoom</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
        <td id="LC1406" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> y1;</td>
      </tr>
      <tr>
        <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
        <td id="LC1407" class="blob-code blob-code-inner js-file-line">      y1 <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
        <td id="LC1408" class="blob-code blob-code-inner js-file-line">      y0 <span class="pl-k">=</span> z.copy();</td>
      </tr>
      <tr>
        <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
        <td id="LC1409" class="blob-code blob-code-inner js-file-line">      view <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
        <td id="LC1410" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
        <td id="LC1411" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
        <td id="LC1412" class="blob-code blob-code-inner js-file-line">        k<span class="pl-k">:</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
        <td id="LC1413" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
        <td id="LC1414" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> zoom;</td>
      </tr>
      <tr>
        <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
        <td id="LC1415" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">location</span>(<span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
        <td id="LC1417" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ (p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> view.<span class="pl-c1">x</span>) / view.k, (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> view.<span class="pl-c1">y</span>) / view.k ];</td>
      </tr>
      <tr>
        <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
        <td id="LC1418" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
        <td id="LC1419" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">point</span>(<span class="pl-smi">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
        <td id="LC1420" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ l[<span class="pl-c1">0</span>] <span class="pl-k">*</span> view.k <span class="pl-k">+</span> view.<span class="pl-c1">x</span>, l[<span class="pl-c1">1</span>] <span class="pl-k">*</span> view.k <span class="pl-k">+</span> view.<span class="pl-c1">y</span> ];</td>
      </tr>
      <tr>
        <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
        <td id="LC1421" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
        <td id="LC1422" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scaleTo</span>(<span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
        <td id="LC1423" class="blob-code blob-code-inner js-file-line">      view.k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(scaleExtent[<span class="pl-c1">0</span>], <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(scaleExtent[<span class="pl-c1">1</span>], s));</td>
      </tr>
      <tr>
        <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
        <td id="LC1424" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
        <td id="LC1425" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">translateTo</span>(<span class="pl-smi">p</span>, <span class="pl-smi">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
        <td id="LC1426" class="blob-code blob-code-inner js-file-line">      l <span class="pl-k">=</span> point(l);</td>
      </tr>
      <tr>
        <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
        <td id="LC1427" class="blob-code blob-code-inner js-file-line">      view.<span class="pl-c1">x</span> <span class="pl-k">+=</span> p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> l[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
        <td id="LC1428" class="blob-code blob-code-inner js-file-line">      view.<span class="pl-c1">y</span> <span class="pl-k">+=</span> p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> l[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
        <td id="LC1429" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
        <td id="LC1430" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">zoomTo</span>(<span class="pl-smi">that</span>, <span class="pl-smi">p</span>, <span class="pl-smi">l</span>, <span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
        <td id="LC1431" class="blob-code blob-code-inner js-file-line">      that.__chart__ <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
        <td id="LC1432" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> view.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
        <td id="LC1433" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> view.<span class="pl-c1">y</span>,</td>
      </tr>
      <tr>
        <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
        <td id="LC1434" class="blob-code blob-code-inner js-file-line">        k<span class="pl-k">:</span> view.k</td>
      </tr>
      <tr>
        <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
        <td id="LC1435" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
        <td id="LC1436" class="blob-code blob-code-inner js-file-line">      scaleTo(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, k));</td>
      </tr>
      <tr>
        <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
        <td id="LC1437" class="blob-code blob-code-inner js-file-line">      translateTo(center0 <span class="pl-k">=</span> p, l);</td>
      </tr>
      <tr>
        <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
        <td id="LC1438" class="blob-code blob-code-inner js-file-line">      that <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(that);</td>
      </tr>
      <tr>
        <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
        <td id="LC1439" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (duration <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) that <span class="pl-k">=</span> that.transition().duration(duration);</td>
      </tr>
      <tr>
        <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
        <td id="LC1440" class="blob-code blob-code-inner js-file-line">      that.<span class="pl-c1">call</span>(zoom.<span class="pl-c1">event</span>);</td>
      </tr>
      <tr>
        <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
        <td id="LC1441" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
        <td id="LC1442" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">rescale</span>() {</td>
      </tr>
      <tr>
        <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
        <td id="LC1443" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x1) x1.<span class="pl-c1">domain</span>(x0.range().map(<span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
        <td id="LC1444" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (x <span class="pl-k">-</span> view.<span class="pl-c1">x</span>) / view.k;</td>
      </tr>
      <tr>
        <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
        <td id="LC1445" class="blob-code blob-code-inner js-file-line">      }).map(x0.invert));</td>
      </tr>
      <tr>
        <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
        <td id="LC1446" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (y1) y1.<span class="pl-c1">domain</span>(y0.range().map(<span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
        <td id="LC1447" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (y <span class="pl-k">-</span> view.<span class="pl-c1">y</span>) / view.k;</td>
      </tr>
      <tr>
        <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
        <td id="LC1448" class="blob-code blob-code-inner js-file-line">      }).map(y0.invert));</td>
      </tr>
      <tr>
        <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
        <td id="LC1449" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
        <td id="LC1450" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">zoomstarted</span>(<span class="pl-smi">dispatch</span>) {</td>
      </tr>
      <tr>
        <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
        <td id="LC1451" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>zooming<span class="pl-k">++</span>) dispatch({</td>
      </tr>
      <tr>
        <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
        <td id="LC1452" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>zoomstart<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
        <td id="LC1453" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
        <td id="LC1454" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
        <td id="LC1455" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">zoomed</span>(<span class="pl-smi">dispatch</span>) {</td>
      </tr>
      <tr>
        <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
        <td id="LC1456" class="blob-code blob-code-inner js-file-line">      rescale();</td>
      </tr>
      <tr>
        <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
        <td id="LC1457" class="blob-code blob-code-inner js-file-line">      dispatch({</td>
      </tr>
      <tr>
        <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
        <td id="LC1458" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>zoom<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
        <td id="LC1459" class="blob-code blob-code-inner js-file-line">        scale<span class="pl-k">:</span> view.k,</td>
      </tr>
      <tr>
        <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
        <td id="LC1460" class="blob-code blob-code-inner js-file-line">        translate<span class="pl-k">:</span> [ view.<span class="pl-c1">x</span>, view.<span class="pl-c1">y</span> ]</td>
      </tr>
      <tr>
        <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
        <td id="LC1461" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
        <td id="LC1462" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
        <td id="LC1463" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">zoomended</span>(<span class="pl-smi">dispatch</span>) {</td>
      </tr>
      <tr>
        <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
        <td id="LC1464" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!--</span>zooming) dispatch({</td>
      </tr>
      <tr>
        <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
        <td id="LC1465" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>zoomend<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
        <td id="LC1466" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
        <td id="LC1467" class="blob-code blob-code-inner js-file-line">      center0 <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
        <td id="LC1468" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
        <td id="LC1469" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">mousedowned</span>() {</td>
      </tr>
      <tr>
        <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
        <td id="LC1470" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> that <span class="pl-k">=</span> <span class="pl-v">this</span>, target <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>.<span class="pl-c1">target</span>, dispatch <span class="pl-k">=</span> <span class="pl-c1">event</span>.of(that, arguments), dragged <span class="pl-k">=</span> <span class="pl-c1">0</span>, subject <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 <span class="pl-k">=</span> location(d3.mouse(that)), dragRestore <span class="pl-k">=</span> d3_event_dragSuppress(that);</td>
      </tr>
      <tr>
        <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
        <td id="LC1471" class="blob-code blob-code-inner js-file-line">      d3_selection_interrupt.<span class="pl-c1">call</span>(that);</td>
      </tr>
      <tr>
        <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
        <td id="LC1472" class="blob-code blob-code-inner js-file-line">      zoomstarted(dispatch);</td>
      </tr>
      <tr>
        <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
        <td id="LC1473" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">moved</span>() {</td>
      </tr>
      <tr>
        <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
        <td id="LC1474" class="blob-code blob-code-inner js-file-line">        dragged <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
        <td id="LC1475" class="blob-code blob-code-inner js-file-line">        translateTo(d3.mouse(that), location0);</td>
      </tr>
      <tr>
        <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
        <td id="LC1476" class="blob-code blob-code-inner js-file-line">        zoomed(dispatch);</td>
      </tr>
      <tr>
        <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
        <td id="LC1477" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
        <td id="LC1478" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">ended</span>() {</td>
      </tr>
      <tr>
        <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
        <td id="LC1479" class="blob-code blob-code-inner js-file-line">        subject.on(mousemove, <span class="pl-c1">null</span>).on(mouseup, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
        <td id="LC1480" class="blob-code blob-code-inner js-file-line">        dragRestore(dragged <span class="pl-k">&amp;&amp;</span> d3.<span class="pl-c1">event</span>.<span class="pl-c1">target</span> <span class="pl-k">===</span> target);</td>
      </tr>
      <tr>
        <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
        <td id="LC1481" class="blob-code blob-code-inner js-file-line">        zoomended(dispatch);</td>
      </tr>
      <tr>
        <td id="L1482" class="blob-num js-line-number" data-line-number="1482"></td>
        <td id="LC1482" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1483" class="blob-num js-line-number" data-line-number="1483"></td>
        <td id="LC1483" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1484" class="blob-num js-line-number" data-line-number="1484"></td>
        <td id="LC1484" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">touchstarted</span>() {</td>
      </tr>
      <tr>
        <td id="L1485" class="blob-num js-line-number" data-line-number="1485"></td>
        <td id="LC1485" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> that <span class="pl-k">=</span> <span class="pl-v">this</span>, dispatch <span class="pl-k">=</span> <span class="pl-c1">event</span>.of(that, arguments), locations0 <span class="pl-k">=</span> {}, distance0 <span class="pl-k">=</span> <span class="pl-c1">0</span>, scale0, zoomName <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.zoom-<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3.<span class="pl-c1">event</span>.changedTouches[<span class="pl-c1">0</span>].identifier, touchmove <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> zoomName, touchend <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> zoomName, targets <span class="pl-k">=</span> [], subject <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(that), dragRestore <span class="pl-k">=</span> d3_event_dragSuppress(that);</td>
      </tr>
      <tr>
        <td id="L1486" class="blob-num js-line-number" data-line-number="1486"></td>
        <td id="LC1486" class="blob-code blob-code-inner js-file-line">      started();</td>
      </tr>
      <tr>
        <td id="L1487" class="blob-num js-line-number" data-line-number="1487"></td>
        <td id="LC1487" class="blob-code blob-code-inner js-file-line">      zoomstarted(dispatch);</td>
      </tr>
      <tr>
        <td id="L1488" class="blob-num js-line-number" data-line-number="1488"></td>
        <td id="LC1488" class="blob-code blob-code-inner js-file-line">      subject.on(mousedown, <span class="pl-c1">null</span>).on(touchstart, started);</td>
      </tr>
      <tr>
        <td id="L1489" class="blob-num js-line-number" data-line-number="1489"></td>
        <td id="LC1489" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">relocate</span>() {</td>
      </tr>
      <tr>
        <td id="L1490" class="blob-num js-line-number" data-line-number="1490"></td>
        <td id="LC1490" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> touches <span class="pl-k">=</span> d3.touches(that);</td>
      </tr>
      <tr>
        <td id="L1491" class="blob-num js-line-number" data-line-number="1491"></td>
        <td id="LC1491" class="blob-code blob-code-inner js-file-line">        scale0 <span class="pl-k">=</span> view.k;</td>
      </tr>
      <tr>
        <td id="L1492" class="blob-num js-line-number" data-line-number="1492"></td>
        <td id="LC1492" class="blob-code blob-code-inner js-file-line">        touches.forEach(<span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L1493" class="blob-num js-line-number" data-line-number="1493"></td>
        <td id="LC1493" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (t.identifier <span class="pl-k">in</span> locations0) locations0[t.identifier] <span class="pl-k">=</span> location(t);</td>
      </tr>
      <tr>
        <td id="L1494" class="blob-num js-line-number" data-line-number="1494"></td>
        <td id="LC1494" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L1495" class="blob-num js-line-number" data-line-number="1495"></td>
        <td id="LC1495" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> touches;</td>
      </tr>
      <tr>
        <td id="L1496" class="blob-num js-line-number" data-line-number="1496"></td>
        <td id="LC1496" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1497" class="blob-num js-line-number" data-line-number="1497"></td>
        <td id="LC1497" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">started</span>() {</td>
      </tr>
      <tr>
        <td id="L1498" class="blob-num js-line-number" data-line-number="1498"></td>
        <td id="LC1498" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> target <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>.<span class="pl-c1">target</span>;</td>
      </tr>
      <tr>
        <td id="L1499" class="blob-num js-line-number" data-line-number="1499"></td>
        <td id="LC1499" class="blob-code blob-code-inner js-file-line">        d3.<span class="pl-c1">select</span>(target).on(touchmove, moved).on(touchend, ended);</td>
      </tr>
      <tr>
        <td id="L1500" class="blob-num js-line-number" data-line-number="1500"></td>
        <td id="LC1500" class="blob-code blob-code-inner js-file-line">        targets.<span class="pl-c1">push</span>(target);</td>
      </tr>
      <tr>
        <td id="L1501" class="blob-num js-line-number" data-line-number="1501"></td>
        <td id="LC1501" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> changed <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>.changedTouches;</td>
      </tr>
      <tr>
        <td id="L1502" class="blob-num js-line-number" data-line-number="1502"></td>
        <td id="LC1502" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> changed.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L1503" class="blob-num js-line-number" data-line-number="1503"></td>
        <td id="LC1503" class="blob-code blob-code-inner js-file-line">          locations0[changed[i].identifier] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1504" class="blob-num js-line-number" data-line-number="1504"></td>
        <td id="LC1504" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1505" class="blob-num js-line-number" data-line-number="1505"></td>
        <td id="LC1505" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> touches <span class="pl-k">=</span> relocate(), now <span class="pl-k">=</span> <span class="pl-c1">Date</span>.now();</td>
      </tr>
      <tr>
        <td id="L1506" class="blob-num js-line-number" data-line-number="1506"></td>
        <td id="LC1506" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (touches.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1507" class="blob-num js-line-number" data-line-number="1507"></td>
        <td id="LC1507" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (now <span class="pl-k">-</span> touchtime <span class="pl-k">&lt;</span> <span class="pl-c1">500</span>) {</td>
      </tr>
      <tr>
        <td id="L1508" class="blob-num js-line-number" data-line-number="1508"></td>
        <td id="LC1508" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> p <span class="pl-k">=</span> touches[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1509" class="blob-num js-line-number" data-line-number="1509"></td>
        <td id="LC1509" class="blob-code blob-code-inner js-file-line">            zoomTo(that, p, locations0[p.identifier], <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span><span class="pl-c1">.log</span>(view.k) / <span class="pl-c1">Math</span>.<span class="pl-c1">LN2</span>) <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1510" class="blob-num js-line-number" data-line-number="1510"></td>
        <td id="LC1510" class="blob-code blob-code-inner js-file-line">            d3_eventPreventDefault();</td>
      </tr>
      <tr>
        <td id="L1511" class="blob-num js-line-number" data-line-number="1511"></td>
        <td id="LC1511" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L1512" class="blob-num js-line-number" data-line-number="1512"></td>
        <td id="LC1512" class="blob-code blob-code-inner js-file-line">          touchtime <span class="pl-k">=</span> now;</td>
      </tr>
      <tr>
        <td id="L1513" class="blob-num js-line-number" data-line-number="1513"></td>
        <td id="LC1513" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (touches.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1514" class="blob-num js-line-number" data-line-number="1514"></td>
        <td id="LC1514" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> p <span class="pl-k">=</span> touches[<span class="pl-c1">0</span>], q <span class="pl-k">=</span> touches[<span class="pl-c1">1</span>], dx <span class="pl-k">=</span> p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> q[<span class="pl-c1">0</span>], dy <span class="pl-k">=</span> p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> q[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1515" class="blob-num js-line-number" data-line-number="1515"></td>
        <td id="LC1515" class="blob-code blob-code-inner js-file-line">          distance0 <span class="pl-k">=</span> dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy;</td>
      </tr>
      <tr>
        <td id="L1516" class="blob-num js-line-number" data-line-number="1516"></td>
        <td id="LC1516" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1517" class="blob-num js-line-number" data-line-number="1517"></td>
        <td id="LC1517" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1518" class="blob-num js-line-number" data-line-number="1518"></td>
        <td id="LC1518" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">moved</span>() {</td>
      </tr>
      <tr>
        <td id="L1519" class="blob-num js-line-number" data-line-number="1519"></td>
        <td id="LC1519" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> touches <span class="pl-k">=</span> d3.touches(that), p0, l0, p1, l1;</td>
      </tr>
      <tr>
        <td id="L1520" class="blob-num js-line-number" data-line-number="1520"></td>
        <td id="LC1520" class="blob-code blob-code-inner js-file-line">        d3_selection_interrupt.<span class="pl-c1">call</span>(that);</td>
      </tr>
      <tr>
        <td id="L1521" class="blob-num js-line-number" data-line-number="1521"></td>
        <td id="LC1521" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> touches.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i, l1 <span class="pl-k">=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L1522" class="blob-num js-line-number" data-line-number="1522"></td>
        <td id="LC1522" class="blob-code blob-code-inner js-file-line">          p1 <span class="pl-k">=</span> touches[i];</td>
      </tr>
      <tr>
        <td id="L1523" class="blob-num js-line-number" data-line-number="1523"></td>
        <td id="LC1523" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (l1 <span class="pl-k">=</span> locations0[p1.identifier]) {</td>
      </tr>
      <tr>
        <td id="L1524" class="blob-num js-line-number" data-line-number="1524"></td>
        <td id="LC1524" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (l0) <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1525" class="blob-num js-line-number" data-line-number="1525"></td>
        <td id="LC1525" class="blob-code blob-code-inner js-file-line">            p0 <span class="pl-k">=</span> p1, l0 <span class="pl-k">=</span> l1;</td>
      </tr>
      <tr>
        <td id="L1526" class="blob-num js-line-number" data-line-number="1526"></td>
        <td id="LC1526" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L1527" class="blob-num js-line-number" data-line-number="1527"></td>
        <td id="LC1527" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1528" class="blob-num js-line-number" data-line-number="1528"></td>
        <td id="LC1528" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (l1) {</td>
      </tr>
      <tr>
        <td id="L1529" class="blob-num js-line-number" data-line-number="1529"></td>
        <td id="LC1529" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> distance1 <span class="pl-k">=</span> (distance1 <span class="pl-k">=</span> p1[<span class="pl-c1">0</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">0</span>]) <span class="pl-k">*</span> distance1 <span class="pl-k">+</span> (distance1 <span class="pl-k">=</span> p1[<span class="pl-c1">1</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">1</span>]) <span class="pl-k">*</span> distance1, scale1 <span class="pl-k">=</span> distance0 <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(distance1 / distance0);</td>
      </tr>
      <tr>
        <td id="L1530" class="blob-num js-line-number" data-line-number="1530"></td>
        <td id="LC1530" class="blob-code blob-code-inner js-file-line">          p0 <span class="pl-k">=</span> [ (p0[<span class="pl-c1">0</span>] <span class="pl-k">+</span> p1[<span class="pl-c1">0</span>]) / <span class="pl-c1">2</span>, (p0[<span class="pl-c1">1</span>] <span class="pl-k">+</span> p1[<span class="pl-c1">1</span>]) / <span class="pl-c1">2</span> ];</td>
      </tr>
      <tr>
        <td id="L1531" class="blob-num js-line-number" data-line-number="1531"></td>
        <td id="LC1531" class="blob-code blob-code-inner js-file-line">          l0 <span class="pl-k">=</span> [ (l0[<span class="pl-c1">0</span>] <span class="pl-k">+</span> l1[<span class="pl-c1">0</span>]) / <span class="pl-c1">2</span>, (l0[<span class="pl-c1">1</span>] <span class="pl-k">+</span> l1[<span class="pl-c1">1</span>]) / <span class="pl-c1">2</span> ];</td>
      </tr>
      <tr>
        <td id="L1532" class="blob-num js-line-number" data-line-number="1532"></td>
        <td id="LC1532" class="blob-code blob-code-inner js-file-line">          scaleTo(scale1 <span class="pl-k">*</span> scale0);</td>
      </tr>
      <tr>
        <td id="L1533" class="blob-num js-line-number" data-line-number="1533"></td>
        <td id="LC1533" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1534" class="blob-num js-line-number" data-line-number="1534"></td>
        <td id="LC1534" class="blob-code blob-code-inner js-file-line">        touchtime <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1535" class="blob-num js-line-number" data-line-number="1535"></td>
        <td id="LC1535" class="blob-code blob-code-inner js-file-line">        translateTo(p0, l0);</td>
      </tr>
      <tr>
        <td id="L1536" class="blob-num js-line-number" data-line-number="1536"></td>
        <td id="LC1536" class="blob-code blob-code-inner js-file-line">        zoomed(dispatch);</td>
      </tr>
      <tr>
        <td id="L1537" class="blob-num js-line-number" data-line-number="1537"></td>
        <td id="LC1537" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1538" class="blob-num js-line-number" data-line-number="1538"></td>
        <td id="LC1538" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">ended</span>() {</td>
      </tr>
      <tr>
        <td id="L1539" class="blob-num js-line-number" data-line-number="1539"></td>
        <td id="LC1539" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3.<span class="pl-c1">event</span>.touches.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L1540" class="blob-num js-line-number" data-line-number="1540"></td>
        <td id="LC1540" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> changed <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>.changedTouches;</td>
      </tr>
      <tr>
        <td id="L1541" class="blob-num js-line-number" data-line-number="1541"></td>
        <td id="LC1541" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> changed.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L1542" class="blob-num js-line-number" data-line-number="1542"></td>
        <td id="LC1542" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">delete</span> locations0[changed[i].identifier];</td>
      </tr>
      <tr>
        <td id="L1543" class="blob-num js-line-number" data-line-number="1543"></td>
        <td id="LC1543" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L1544" class="blob-num js-line-number" data-line-number="1544"></td>
        <td id="LC1544" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (<span class="pl-k">var</span> identifier <span class="pl-k">in</span> locations0) {</td>
      </tr>
      <tr>
        <td id="L1545" class="blob-num js-line-number" data-line-number="1545"></td>
        <td id="LC1545" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">void</span> relocate();</td>
      </tr>
      <tr>
        <td id="L1546" class="blob-num js-line-number" data-line-number="1546"></td>
        <td id="LC1546" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L1547" class="blob-num js-line-number" data-line-number="1547"></td>
        <td id="LC1547" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1548" class="blob-num js-line-number" data-line-number="1548"></td>
        <td id="LC1548" class="blob-code blob-code-inner js-file-line">        d3.selectAll(targets).on(zoomName, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L1549" class="blob-num js-line-number" data-line-number="1549"></td>
        <td id="LC1549" class="blob-code blob-code-inner js-file-line">        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);</td>
      </tr>
      <tr>
        <td id="L1550" class="blob-num js-line-number" data-line-number="1550"></td>
        <td id="LC1550" class="blob-code blob-code-inner js-file-line">        dragRestore();</td>
      </tr>
      <tr>
        <td id="L1551" class="blob-num js-line-number" data-line-number="1551"></td>
        <td id="LC1551" class="blob-code blob-code-inner js-file-line">        zoomended(dispatch);</td>
      </tr>
      <tr>
        <td id="L1552" class="blob-num js-line-number" data-line-number="1552"></td>
        <td id="LC1552" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1553" class="blob-num js-line-number" data-line-number="1553"></td>
        <td id="LC1553" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1554" class="blob-num js-line-number" data-line-number="1554"></td>
        <td id="LC1554" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">mousewheeled</span>() {</td>
      </tr>
      <tr>
        <td id="L1555" class="blob-num js-line-number" data-line-number="1555"></td>
        <td id="LC1555" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> dispatch <span class="pl-k">=</span> <span class="pl-c1">event</span>.of(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L1556" class="blob-num js-line-number" data-line-number="1556"></td>
        <td id="LC1556" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (mousewheelTimer) <span class="pl-c1">clearTimeout</span>(mousewheelTimer); <span class="pl-k">else</span> translate0 <span class="pl-k">=</span> location(center0 <span class="pl-k">=</span> center <span class="pl-k">||</span> d3.mouse(<span class="pl-v">this</span>)), </td>
      </tr>
      <tr>
        <td id="L1557" class="blob-num js-line-number" data-line-number="1557"></td>
        <td id="LC1557" class="blob-code blob-code-inner js-file-line">      d3_selection_interrupt.<span class="pl-c1">call</span>(<span class="pl-v">this</span>), zoomstarted(dispatch);</td>
      </tr>
      <tr>
        <td id="L1558" class="blob-num js-line-number" data-line-number="1558"></td>
        <td id="LC1558" class="blob-code blob-code-inner js-file-line">      mousewheelTimer <span class="pl-k">=</span> <span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1559" class="blob-num js-line-number" data-line-number="1559"></td>
        <td id="LC1559" class="blob-code blob-code-inner js-file-line">        mousewheelTimer <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1560" class="blob-num js-line-number" data-line-number="1560"></td>
        <td id="LC1560" class="blob-code blob-code-inner js-file-line">        zoomended(dispatch);</td>
      </tr>
      <tr>
        <td id="L1561" class="blob-num js-line-number" data-line-number="1561"></td>
        <td id="LC1561" class="blob-code blob-code-inner js-file-line">      }, <span class="pl-c1">50</span>);</td>
      </tr>
      <tr>
        <td id="L1562" class="blob-num js-line-number" data-line-number="1562"></td>
        <td id="LC1562" class="blob-code blob-code-inner js-file-line">      d3_eventPreventDefault();</td>
      </tr>
      <tr>
        <td id="L1563" class="blob-num js-line-number" data-line-number="1563"></td>
        <td id="LC1563" class="blob-code blob-code-inner js-file-line">      scaleTo(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, d3_behavior_zoomDelta() <span class="pl-k">*</span> .<span class="pl-c1">002</span>) <span class="pl-k">*</span> view.k);</td>
      </tr>
      <tr>
        <td id="L1564" class="blob-num js-line-number" data-line-number="1564"></td>
        <td id="LC1564" class="blob-code blob-code-inner js-file-line">      translateTo(center0, translate0);</td>
      </tr>
      <tr>
        <td id="L1565" class="blob-num js-line-number" data-line-number="1565"></td>
        <td id="LC1565" class="blob-code blob-code-inner js-file-line">      zoomed(dispatch);</td>
      </tr>
      <tr>
        <td id="L1566" class="blob-num js-line-number" data-line-number="1566"></td>
        <td id="LC1566" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1567" class="blob-num js-line-number" data-line-number="1567"></td>
        <td id="LC1567" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">dblclicked</span>() {</td>
      </tr>
      <tr>
        <td id="L1568" class="blob-num js-line-number" data-line-number="1568"></td>
        <td id="LC1568" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> p <span class="pl-k">=</span> d3.mouse(<span class="pl-v">this</span>), k <span class="pl-k">=</span> <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(view.k) / <span class="pl-c1">Math</span>.<span class="pl-c1">LN2</span>;</td>
      </tr>
      <tr>
        <td id="L1569" class="blob-num js-line-number" data-line-number="1569"></td>
        <td id="LC1569" class="blob-code blob-code-inner js-file-line">      zoomTo(<span class="pl-v">this</span>, p, location(p), d3.<span class="pl-c1">event</span>.shiftKey <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(k) <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(k) <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1570" class="blob-num js-line-number" data-line-number="1570"></td>
        <td id="LC1570" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1571" class="blob-num js-line-number" data-line-number="1571"></td>
        <td id="LC1571" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.rebind(zoom, <span class="pl-c1">event</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1572" class="blob-num js-line-number" data-line-number="1572"></td>
        <td id="LC1572" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1573" class="blob-num js-line-number" data-line-number="1573"></td>
        <td id="LC1573" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_behavior_zoomInfinity <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">Infinity</span> ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;</td>
      </tr>
      <tr>
        <td id="L1574" class="blob-num js-line-number" data-line-number="1574"></td>
        <td id="LC1574" class="blob-code blob-code-inner js-file-line">  d3.<span class="pl-c1">color</span> <span class="pl-k">=</span> d3_color;</td>
      </tr>
      <tr>
        <td id="L1575" class="blob-num js-line-number" data-line-number="1575"></td>
        <td id="LC1575" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_color</span>() {}</td>
      </tr>
      <tr>
        <td id="L1576" class="blob-num js-line-number" data-line-number="1576"></td>
        <td id="LC1576" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_color</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1577" class="blob-num js-line-number" data-line-number="1577"></td>
        <td id="LC1577" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.rgb() <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1578" class="blob-num js-line-number" data-line-number="1578"></td>
        <td id="LC1578" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1579" class="blob-num js-line-number" data-line-number="1579"></td>
        <td id="LC1579" class="blob-code blob-code-inner js-file-line">  d3.hsl <span class="pl-k">=</span> d3_hsl;</td>
      </tr>
      <tr>
        <td id="L1580" class="blob-num js-line-number" data-line-number="1580"></td>
        <td id="LC1580" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_hsl</span>(<span class="pl-smi">h</span>, <span class="pl-smi">s</span>, <span class="pl-smi">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1581" class="blob-num js-line-number" data-line-number="1581"></td>
        <td id="LC1581" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span> <span class="pl-k">instanceof</span> d3_hsl <span class="pl-k">?</span> <span class="pl-k">void</span> (<span class="pl-v">this</span>.h <span class="pl-k">=</span> <span class="pl-k">+</span>h, <span class="pl-v">this</span>.s <span class="pl-k">=</span> <span class="pl-k">+</span>s, <span class="pl-v">this</span>.l <span class="pl-k">=</span> <span class="pl-k">+</span>l) <span class="pl-k">:</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> h <span class="pl-k">instanceof</span> d3_hsl <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">d3_hsl</span>(h.h, h.s, h.l) <span class="pl-k">:</span> d3_rgb_parse(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> h, d3_rgb_hsl, d3_hsl) <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">d3_hsl</span>(h, s, l);</td>
      </tr>
      <tr>
        <td id="L1582" class="blob-num js-line-number" data-line-number="1582"></td>
        <td id="LC1582" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1583" class="blob-num js-line-number" data-line-number="1583"></td>
        <td id="LC1583" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_hslPrototype <span class="pl-k">=</span> <span class="pl-c1">d3_hsl</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_color</span>();</td>
      </tr>
      <tr>
        <td id="L1584" class="blob-num js-line-number" data-line-number="1584"></td>
        <td id="LC1584" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_hslPrototype</span>.<span class="pl-en">brighter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1585" class="blob-num js-line-number" data-line-number="1585"></td>
        <td id="LC1585" class="blob-code blob-code-inner js-file-line">    k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(.<span class="pl-c1">7</span>, arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1586" class="blob-num js-line-number" data-line-number="1586"></td>
        <td id="LC1586" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_hsl</span>(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.s, <span class="pl-v">this</span>.l / k);</td>
      </tr>
      <tr>
        <td id="L1587" class="blob-num js-line-number" data-line-number="1587"></td>
        <td id="LC1587" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1588" class="blob-num js-line-number" data-line-number="1588"></td>
        <td id="LC1588" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_hslPrototype</span>.<span class="pl-en">darker</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1589" class="blob-num js-line-number" data-line-number="1589"></td>
        <td id="LC1589" class="blob-code blob-code-inner js-file-line">    k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(.<span class="pl-c1">7</span>, arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
        <td id="LC1590" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_hsl</span>(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.s, k <span class="pl-k">*</span> <span class="pl-v">this</span>.l);</td>
      </tr>
      <tr>
        <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
        <td id="LC1591" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
        <td id="LC1592" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_hslPrototype</span>.<span class="pl-en">rgb</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1593" class="blob-num js-line-number" data-line-number="1593"></td>
        <td id="LC1593" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_hsl_rgb(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.s, <span class="pl-v">this</span>.l);</td>
      </tr>
      <tr>
        <td id="L1594" class="blob-num js-line-number" data-line-number="1594"></td>
        <td id="LC1594" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1595" class="blob-num js-line-number" data-line-number="1595"></td>
        <td id="LC1595" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_hsl_rgb</span>(<span class="pl-smi">h</span>, <span class="pl-smi">s</span>, <span class="pl-smi">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1596" class="blob-num js-line-number" data-line-number="1596"></td>
        <td id="LC1596" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> m1, m2;</td>
      </tr>
      <tr>
        <td id="L1597" class="blob-num js-line-number" data-line-number="1597"></td>
        <td id="LC1597" class="blob-code blob-code-inner js-file-line">    h <span class="pl-k">=</span> <span class="pl-c1">isNaN</span>(h) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> (h <span class="pl-k">%=</span> <span class="pl-c1">360</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> h <span class="pl-k">+</span> <span class="pl-c1">360</span> <span class="pl-k">:</span> h;</td>
      </tr>
      <tr>
        <td id="L1598" class="blob-num js-line-number" data-line-number="1598"></td>
        <td id="LC1598" class="blob-code blob-code-inner js-file-line">    s <span class="pl-k">=</span> <span class="pl-c1">isNaN</span>(s) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> s <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> s <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> s;</td>
      </tr>
      <tr>
        <td id="L1599" class="blob-num js-line-number" data-line-number="1599"></td>
        <td id="LC1599" class="blob-code blob-code-inner js-file-line">    l <span class="pl-k">=</span> l <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> l <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> l;</td>
      </tr>
      <tr>
        <td id="L1600" class="blob-num js-line-number" data-line-number="1600"></td>
        <td id="LC1600" class="blob-code blob-code-inner js-file-line">    m2 <span class="pl-k">=</span> l <span class="pl-k">&lt;=</span> .<span class="pl-c1">5</span> <span class="pl-k">?</span> l <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">+</span> s) <span class="pl-k">:</span> l <span class="pl-k">+</span> s <span class="pl-k">-</span> l <span class="pl-k">*</span> s;</td>
      </tr>
      <tr>
        <td id="L1601" class="blob-num js-line-number" data-line-number="1601"></td>
        <td id="LC1601" class="blob-code blob-code-inner js-file-line">    m1 <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> l <span class="pl-k">-</span> m2;</td>
      </tr>
      <tr>
        <td id="L1602" class="blob-num js-line-number" data-line-number="1602"></td>
        <td id="LC1602" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">v</span>(<span class="pl-smi">h</span>) {</td>
      </tr>
      <tr>
        <td id="L1603" class="blob-num js-line-number" data-line-number="1603"></td>
        <td id="LC1603" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (h <span class="pl-k">&gt;</span> <span class="pl-c1">360</span>) h <span class="pl-k">-=</span> <span class="pl-c1">360</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) h <span class="pl-k">+=</span> <span class="pl-c1">360</span>;</td>
      </tr>
      <tr>
        <td id="L1604" class="blob-num js-line-number" data-line-number="1604"></td>
        <td id="LC1604" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">60</span>) <span class="pl-k">return</span> m1 <span class="pl-k">+</span> (m2 <span class="pl-k">-</span> m1) <span class="pl-k">*</span> h / <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L1605" class="blob-num js-line-number" data-line-number="1605"></td>
        <td id="LC1605" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">180</span>) <span class="pl-k">return</span> m2;</td>
      </tr>
      <tr>
        <td id="L1606" class="blob-num js-line-number" data-line-number="1606"></td>
        <td id="LC1606" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (h <span class="pl-k">&lt;</span> <span class="pl-c1">240</span>) <span class="pl-k">return</span> m1 <span class="pl-k">+</span> (m2 <span class="pl-k">-</span> m1) <span class="pl-k">*</span> (<span class="pl-c1">240</span> <span class="pl-k">-</span> h) / <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L1607" class="blob-num js-line-number" data-line-number="1607"></td>
        <td id="LC1607" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> m1;</td>
      </tr>
      <tr>
        <td id="L1608" class="blob-num js-line-number" data-line-number="1608"></td>
        <td id="LC1608" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1609" class="blob-num js-line-number" data-line-number="1609"></td>
        <td id="LC1609" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">vv</span>(<span class="pl-smi">h</span>) {</td>
      </tr>
      <tr>
        <td id="L1610" class="blob-num js-line-number" data-line-number="1610"></td>
        <td id="LC1610" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(v(h) <span class="pl-k">*</span> <span class="pl-c1">255</span>);</td>
      </tr>
      <tr>
        <td id="L1611" class="blob-num js-line-number" data-line-number="1611"></td>
        <td id="LC1611" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1612" class="blob-num js-line-number" data-line-number="1612"></td>
        <td id="LC1612" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_rgb</span>(vv(h <span class="pl-k">+</span> <span class="pl-c1">120</span>), vv(h), vv(h <span class="pl-k">-</span> <span class="pl-c1">120</span>));</td>
      </tr>
      <tr>
        <td id="L1613" class="blob-num js-line-number" data-line-number="1613"></td>
        <td id="LC1613" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1614" class="blob-num js-line-number" data-line-number="1614"></td>
        <td id="LC1614" class="blob-code blob-code-inner js-file-line">  d3.hcl <span class="pl-k">=</span> d3_hcl;</td>
      </tr>
      <tr>
        <td id="L1615" class="blob-num js-line-number" data-line-number="1615"></td>
        <td id="LC1615" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_hcl</span>(<span class="pl-smi">h</span>, <span class="pl-smi">c</span>, <span class="pl-smi">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1616" class="blob-num js-line-number" data-line-number="1616"></td>
        <td id="LC1616" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span> <span class="pl-k">instanceof</span> d3_hcl <span class="pl-k">?</span> <span class="pl-k">void</span> (<span class="pl-v">this</span>.h <span class="pl-k">=</span> <span class="pl-k">+</span>h, <span class="pl-v">this</span>.c <span class="pl-k">=</span> <span class="pl-k">+</span>c, <span class="pl-v">this</span>.l <span class="pl-k">=</span> <span class="pl-k">+</span>l) <span class="pl-k">:</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> h <span class="pl-k">instanceof</span> d3_hcl <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">d3_hcl</span>(h.h, h.c, h.l) <span class="pl-k">:</span> h <span class="pl-k">instanceof</span> d3_lab <span class="pl-k">?</span> d3_lab_hcl(h.l, h.a, h.b) <span class="pl-k">:</span> d3_lab_hcl((h <span class="pl-k">=</span> d3_rgb_lab((h <span class="pl-k">=</span> d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">d3_hcl</span>(h, c, l);</td>
      </tr>
      <tr>
        <td id="L1617" class="blob-num js-line-number" data-line-number="1617"></td>
        <td id="LC1617" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1618" class="blob-num js-line-number" data-line-number="1618"></td>
        <td id="LC1618" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_hclPrototype <span class="pl-k">=</span> <span class="pl-c1">d3_hcl</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_color</span>();</td>
      </tr>
      <tr>
        <td id="L1619" class="blob-num js-line-number" data-line-number="1619"></td>
        <td id="LC1619" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_hclPrototype</span>.<span class="pl-en">brighter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1620" class="blob-num js-line-number" data-line-number="1620"></td>
        <td id="LC1620" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_hcl</span>(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.c, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">100</span>, <span class="pl-v">this</span>.l <span class="pl-k">+</span> d3_lab_K <span class="pl-k">*</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>)));</td>
      </tr>
      <tr>
        <td id="L1621" class="blob-num js-line-number" data-line-number="1621"></td>
        <td id="LC1621" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1622" class="blob-num js-line-number" data-line-number="1622"></td>
        <td id="LC1622" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_hclPrototype</span>.<span class="pl-en">darker</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
        <td id="LC1623" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_hcl</span>(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.c, <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-v">this</span>.l <span class="pl-k">-</span> d3_lab_K <span class="pl-k">*</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>)));</td>
      </tr>
      <tr>
        <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
        <td id="LC1624" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
        <td id="LC1625" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_hclPrototype</span>.<span class="pl-en">rgb</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1626" class="blob-num js-line-number" data-line-number="1626"></td>
        <td id="LC1626" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_hcl_lab(<span class="pl-v">this</span>.h, <span class="pl-v">this</span>.c, <span class="pl-v">this</span>.l).rgb();</td>
      </tr>
      <tr>
        <td id="L1627" class="blob-num js-line-number" data-line-number="1627"></td>
        <td id="LC1627" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1628" class="blob-num js-line-number" data-line-number="1628"></td>
        <td id="LC1628" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_hcl_lab</span>(<span class="pl-smi">h</span>, <span class="pl-smi">c</span>, <span class="pl-smi">l</span>) {</td>
      </tr>
      <tr>
        <td id="L1629" class="blob-num js-line-number" data-line-number="1629"></td>
        <td id="LC1629" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(h)) h <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1630" class="blob-num js-line-number" data-line-number="1630"></td>
        <td id="LC1630" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(c)) c <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1631" class="blob-num js-line-number" data-line-number="1631"></td>
        <td id="LC1631" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_lab</span>(l, <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(h <span class="pl-k">*=</span> d3_radians) <span class="pl-k">*</span> c, <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(h) <span class="pl-k">*</span> c);</td>
      </tr>
      <tr>
        <td id="L1632" class="blob-num js-line-number" data-line-number="1632"></td>
        <td id="LC1632" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1633" class="blob-num js-line-number" data-line-number="1633"></td>
        <td id="LC1633" class="blob-code blob-code-inner js-file-line">  d3.lab <span class="pl-k">=</span> d3_lab;</td>
      </tr>
      <tr>
        <td id="L1634" class="blob-num js-line-number" data-line-number="1634"></td>
        <td id="LC1634" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_lab</span>(<span class="pl-smi">l</span>, <span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1635" class="blob-num js-line-number" data-line-number="1635"></td>
        <td id="LC1635" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span> <span class="pl-k">instanceof</span> d3_lab <span class="pl-k">?</span> <span class="pl-k">void</span> (<span class="pl-v">this</span>.l <span class="pl-k">=</span> <span class="pl-k">+</span>l, <span class="pl-v">this</span>.a <span class="pl-k">=</span> <span class="pl-k">+</span>a, <span class="pl-v">this</span>.b <span class="pl-k">=</span> <span class="pl-k">+</span>b) <span class="pl-k">:</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> l <span class="pl-k">instanceof</span> d3_lab <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">d3_lab</span>(l.l, l.a, l.b) <span class="pl-k">:</span> l <span class="pl-k">instanceof</span> d3_hcl <span class="pl-k">?</span> d3_hcl_lab(l.h, l.c, l.l) <span class="pl-k">:</span> d3_rgb_lab((l <span class="pl-k">=</span> d3_rgb(l)).r, l.g, l.b) <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">d3_lab</span>(l, a, b);</td>
      </tr>
      <tr>
        <td id="L1636" class="blob-num js-line-number" data-line-number="1636"></td>
        <td id="LC1636" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1637" class="blob-num js-line-number" data-line-number="1637"></td>
        <td id="LC1637" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_lab_K <span class="pl-k">=</span> <span class="pl-c1">18</span>;</td>
      </tr>
      <tr>
        <td id="L1638" class="blob-num js-line-number" data-line-number="1638"></td>
        <td id="LC1638" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_lab_X <span class="pl-k">=</span> .<span class="pl-c1">95047</span>, d3_lab_Y <span class="pl-k">=</span> <span class="pl-c1">1</span>, d3_lab_Z <span class="pl-k">=</span> <span class="pl-c1">1.08883</span>;</td>
      </tr>
      <tr>
        <td id="L1639" class="blob-num js-line-number" data-line-number="1639"></td>
        <td id="LC1639" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_labPrototype <span class="pl-k">=</span> <span class="pl-c1">d3_lab</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_color</span>();</td>
      </tr>
      <tr>
        <td id="L1640" class="blob-num js-line-number" data-line-number="1640"></td>
        <td id="LC1640" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_labPrototype</span>.<span class="pl-en">brighter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1641" class="blob-num js-line-number" data-line-number="1641"></td>
        <td id="LC1641" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_lab</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">100</span>, <span class="pl-v">this</span>.l <span class="pl-k">+</span> d3_lab_K <span class="pl-k">*</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>)), <span class="pl-v">this</span>.a, <span class="pl-v">this</span>.b);</td>
      </tr>
      <tr>
        <td id="L1642" class="blob-num js-line-number" data-line-number="1642"></td>
        <td id="LC1642" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1643" class="blob-num js-line-number" data-line-number="1643"></td>
        <td id="LC1643" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_labPrototype</span>.<span class="pl-en">darker</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1644" class="blob-num js-line-number" data-line-number="1644"></td>
        <td id="LC1644" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_lab</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-v">this</span>.l <span class="pl-k">-</span> d3_lab_K <span class="pl-k">*</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>)), <span class="pl-v">this</span>.a, <span class="pl-v">this</span>.b);</td>
      </tr>
      <tr>
        <td id="L1645" class="blob-num js-line-number" data-line-number="1645"></td>
        <td id="LC1645" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1646" class="blob-num js-line-number" data-line-number="1646"></td>
        <td id="LC1646" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_labPrototype</span>.<span class="pl-en">rgb</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1647" class="blob-num js-line-number" data-line-number="1647"></td>
        <td id="LC1647" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_lab_rgb(<span class="pl-v">this</span>.l, <span class="pl-v">this</span>.a, <span class="pl-v">this</span>.b);</td>
      </tr>
      <tr>
        <td id="L1648" class="blob-num js-line-number" data-line-number="1648"></td>
        <td id="LC1648" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1649" class="blob-num js-line-number" data-line-number="1649"></td>
        <td id="LC1649" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_lab_rgb</span>(<span class="pl-smi">l</span>, <span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1650" class="blob-num js-line-number" data-line-number="1650"></td>
        <td id="LC1650" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> y <span class="pl-k">=</span> (l <span class="pl-k">+</span> <span class="pl-c1">16</span>) / <span class="pl-c1">116</span>, x <span class="pl-k">=</span> y <span class="pl-k">+</span> a / <span class="pl-c1">500</span>, z <span class="pl-k">=</span> y <span class="pl-k">-</span> b / <span class="pl-c1">200</span>;</td>
      </tr>
      <tr>
        <td id="L1651" class="blob-num js-line-number" data-line-number="1651"></td>
        <td id="LC1651" class="blob-code blob-code-inner js-file-line">    x <span class="pl-k">=</span> d3_lab_xyz(x) <span class="pl-k">*</span> d3_lab_X;</td>
      </tr>
      <tr>
        <td id="L1652" class="blob-num js-line-number" data-line-number="1652"></td>
        <td id="LC1652" class="blob-code blob-code-inner js-file-line">    y <span class="pl-k">=</span> d3_lab_xyz(y) <span class="pl-k">*</span> d3_lab_Y;</td>
      </tr>
      <tr>
        <td id="L1653" class="blob-num js-line-number" data-line-number="1653"></td>
        <td id="LC1653" class="blob-code blob-code-inner js-file-line">    z <span class="pl-k">=</span> d3_lab_xyz(z) <span class="pl-k">*</span> d3_lab_Z;</td>
      </tr>
      <tr>
        <td id="L1654" class="blob-num js-line-number" data-line-number="1654"></td>
        <td id="LC1654" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_rgb</span>(d3_xyz_rgb(<span class="pl-c1">3.2404542</span> <span class="pl-k">*</span> x <span class="pl-k">-</span> <span class="pl-c1">1.5371385</span> <span class="pl-k">*</span> y <span class="pl-k">-</span> .<span class="pl-c1">4985314</span> <span class="pl-k">*</span> z), d3_xyz_rgb(<span class="pl-k">-</span>.<span class="pl-c1">969266</span> <span class="pl-k">*</span> x <span class="pl-k">+</span> <span class="pl-c1">1.8760108</span> <span class="pl-k">*</span> y <span class="pl-k">+</span> .<span class="pl-c1">041556</span> <span class="pl-k">*</span> z), d3_xyz_rgb(.<span class="pl-c1">0556434</span> <span class="pl-k">*</span> x <span class="pl-k">-</span> .<span class="pl-c1">2040259</span> <span class="pl-k">*</span> y <span class="pl-k">+</span> <span class="pl-c1">1.0572252</span> <span class="pl-k">*</span> z));</td>
      </tr>
      <tr>
        <td id="L1655" class="blob-num js-line-number" data-line-number="1655"></td>
        <td id="LC1655" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1656" class="blob-num js-line-number" data-line-number="1656"></td>
        <td id="LC1656" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_lab_hcl</span>(<span class="pl-smi">l</span>, <span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1657" class="blob-num js-line-number" data-line-number="1657"></td>
        <td id="LC1657" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> l <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">d3_hcl</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(b, a) <span class="pl-k">*</span> d3_degrees, <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(a <span class="pl-k">*</span> a <span class="pl-k">+</span> b <span class="pl-k">*</span> b), l) <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">d3_hcl</span>(<span class="pl-c1">NaN</span>, <span class="pl-c1">NaN</span>, l);</td>
      </tr>
      <tr>
        <td id="L1658" class="blob-num js-line-number" data-line-number="1658"></td>
        <td id="LC1658" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1659" class="blob-num js-line-number" data-line-number="1659"></td>
        <td id="LC1659" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_lab_xyz</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1660" class="blob-num js-line-number" data-line-number="1660"></td>
        <td id="LC1660" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> x <span class="pl-k">&gt;</span> .<span class="pl-c1">206893034</span> <span class="pl-k">?</span> x <span class="pl-k">*</span> x <span class="pl-k">*</span> x <span class="pl-k">:</span> (x <span class="pl-k">-</span> <span class="pl-c1">4</span> / <span class="pl-c1">29</span>) / <span class="pl-c1">7.787037</span>;</td>
      </tr>
      <tr>
        <td id="L1661" class="blob-num js-line-number" data-line-number="1661"></td>
        <td id="LC1661" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1662" class="blob-num js-line-number" data-line-number="1662"></td>
        <td id="LC1662" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_xyz_lab</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L1663" class="blob-num js-line-number" data-line-number="1663"></td>
        <td id="LC1663" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> x <span class="pl-k">&gt;</span> .<span class="pl-c1">008856</span> <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(x, <span class="pl-c1">1</span> / <span class="pl-c1">3</span>) <span class="pl-k">:</span> <span class="pl-c1">7.787037</span> <span class="pl-k">*</span> x <span class="pl-k">+</span> <span class="pl-c1">4</span> / <span class="pl-c1">29</span>;</td>
      </tr>
      <tr>
        <td id="L1664" class="blob-num js-line-number" data-line-number="1664"></td>
        <td id="LC1664" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1665" class="blob-num js-line-number" data-line-number="1665"></td>
        <td id="LC1665" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_xyz_rgb</span>(<span class="pl-smi">r</span>) {</td>
      </tr>
      <tr>
        <td id="L1666" class="blob-num js-line-number" data-line-number="1666"></td>
        <td id="LC1666" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span> <span class="pl-k">*</span> (r <span class="pl-k">&lt;=</span> .<span class="pl-c1">00304</span> <span class="pl-k">?</span> <span class="pl-c1">12.92</span> <span class="pl-k">*</span> r <span class="pl-k">:</span> <span class="pl-c1">1.055</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(r, <span class="pl-c1">1</span> / <span class="pl-c1">2.4</span>) <span class="pl-k">-</span> .<span class="pl-c1">055</span>));</td>
      </tr>
      <tr>
        <td id="L1667" class="blob-num js-line-number" data-line-number="1667"></td>
        <td id="LC1667" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1668" class="blob-num js-line-number" data-line-number="1668"></td>
        <td id="LC1668" class="blob-code blob-code-inner js-file-line">  d3.rgb <span class="pl-k">=</span> d3_rgb;</td>
      </tr>
      <tr>
        <td id="L1669" class="blob-num js-line-number" data-line-number="1669"></td>
        <td id="LC1669" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgb</span>(<span class="pl-smi">r</span>, <span class="pl-smi">g</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1670" class="blob-num js-line-number" data-line-number="1670"></td>
        <td id="LC1670" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span> <span class="pl-k">instanceof</span> d3_rgb <span class="pl-k">?</span> <span class="pl-k">void</span> (<span class="pl-v">this</span>.r <span class="pl-k">=</span> <span class="pl-k">~~</span>r, <span class="pl-v">this</span>.g <span class="pl-k">=</span> <span class="pl-k">~~</span>g, <span class="pl-v">this</span>.b <span class="pl-k">=</span> <span class="pl-k">~~</span>b) <span class="pl-k">:</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> r <span class="pl-k">instanceof</span> d3_rgb <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">d3_rgb</span>(r.r, r.g, r.b) <span class="pl-k">:</span> d3_rgb_parse(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r, d3_rgb, d3_hsl_rgb) <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">d3_rgb</span>(r, g, b);</td>
      </tr>
      <tr>
        <td id="L1671" class="blob-num js-line-number" data-line-number="1671"></td>
        <td id="LC1671" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1672" class="blob-num js-line-number" data-line-number="1672"></td>
        <td id="LC1672" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgbNumber</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1673" class="blob-num js-line-number" data-line-number="1673"></td>
        <td id="LC1673" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_rgb</span>(value <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">16</span>, value <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">8</span> <span class="pl-k">&amp;</span> <span class="pl-c1">255</span>, value <span class="pl-k">&amp;</span> <span class="pl-c1">255</span>);</td>
      </tr>
      <tr>
        <td id="L1674" class="blob-num js-line-number" data-line-number="1674"></td>
        <td id="LC1674" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1675" class="blob-num js-line-number" data-line-number="1675"></td>
        <td id="LC1675" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgbString</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1676" class="blob-num js-line-number" data-line-number="1676"></td>
        <td id="LC1676" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_rgbNumber(value) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1677" class="blob-num js-line-number" data-line-number="1677"></td>
        <td id="LC1677" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1678" class="blob-num js-line-number" data-line-number="1678"></td>
        <td id="LC1678" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_rgbPrototype <span class="pl-k">=</span> <span class="pl-c1">d3_rgb</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_color</span>();</td>
      </tr>
      <tr>
        <td id="L1679" class="blob-num js-line-number" data-line-number="1679"></td>
        <td id="LC1679" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_rgbPrototype</span>.<span class="pl-en">brighter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1680" class="blob-num js-line-number" data-line-number="1680"></td>
        <td id="LC1680" class="blob-code blob-code-inner js-file-line">    k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(.<span class="pl-c1">7</span>, arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1681" class="blob-num js-line-number" data-line-number="1681"></td>
        <td id="LC1681" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> r <span class="pl-k">=</span> <span class="pl-v">this</span>.r, g <span class="pl-k">=</span> <span class="pl-v">this</span>.g, b <span class="pl-k">=</span> <span class="pl-v">this</span>.b, i <span class="pl-k">=</span> <span class="pl-c1">30</span>;</td>
      </tr>
      <tr>
        <td id="L1682" class="blob-num js-line-number" data-line-number="1682"></td>
        <td id="LC1682" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>r <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>g <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>b) <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_rgb</span>(i, i, i);</td>
      </tr>
      <tr>
        <td id="L1683" class="blob-num js-line-number" data-line-number="1683"></td>
        <td id="LC1683" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (r <span class="pl-k">&amp;&amp;</span> r <span class="pl-k">&lt;</span> i) r <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L1684" class="blob-num js-line-number" data-line-number="1684"></td>
        <td id="LC1684" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (g <span class="pl-k">&amp;&amp;</span> g <span class="pl-k">&lt;</span> i) g <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L1685" class="blob-num js-line-number" data-line-number="1685"></td>
        <td id="LC1685" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (b <span class="pl-k">&amp;&amp;</span> b <span class="pl-k">&lt;</span> i) b <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L1686" class="blob-num js-line-number" data-line-number="1686"></td>
        <td id="LC1686" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_rgb</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">255</span>, r / k), <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">255</span>, g / k), <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">255</span>, b / k));</td>
      </tr>
      <tr>
        <td id="L1687" class="blob-num js-line-number" data-line-number="1687"></td>
        <td id="LC1687" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1688" class="blob-num js-line-number" data-line-number="1688"></td>
        <td id="LC1688" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_rgbPrototype</span>.<span class="pl-en">darker</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L1689" class="blob-num js-line-number" data-line-number="1689"></td>
        <td id="LC1689" class="blob-code blob-code-inner js-file-line">    k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(.<span class="pl-c1">7</span>, arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> k <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1690" class="blob-num js-line-number" data-line-number="1690"></td>
        <td id="LC1690" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_rgb</span>(k <span class="pl-k">*</span> <span class="pl-v">this</span>.r, k <span class="pl-k">*</span> <span class="pl-v">this</span>.g, k <span class="pl-k">*</span> <span class="pl-v">this</span>.b);</td>
      </tr>
      <tr>
        <td id="L1691" class="blob-num js-line-number" data-line-number="1691"></td>
        <td id="LC1691" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1692" class="blob-num js-line-number" data-line-number="1692"></td>
        <td id="LC1692" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_rgbPrototype</span>.<span class="pl-en">hsl</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
        <td id="LC1693" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_rgb_hsl(<span class="pl-v">this</span>.r, <span class="pl-v">this</span>.g, <span class="pl-v">this</span>.b);</td>
      </tr>
      <tr>
        <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
        <td id="LC1694" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
        <td id="LC1695" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_rgbPrototype</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
        <td id="LC1696" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-v">this</span>.r) <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-v">this</span>.g) <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-v">this</span>.b);</td>
      </tr>
      <tr>
        <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
        <td id="LC1697" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
        <td id="LC1698" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgb_hex</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
        <td id="LC1699" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> v <span class="pl-k">&lt;</span> <span class="pl-c1">16</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, v).<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>) <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">255</span>, v).<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>);</td>
      </tr>
      <tr>
        <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
        <td id="LC1700" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
        <td id="LC1701" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgb_parse</span>(<span class="pl-smi">format</span>, <span class="pl-smi">rgb</span>, <span class="pl-smi">hsl</span>) {</td>
      </tr>
      <tr>
        <td id="L1702" class="blob-num js-line-number" data-line-number="1702"></td>
        <td id="LC1702" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> r <span class="pl-k">=</span> <span class="pl-c1">0</span>, g <span class="pl-k">=</span> <span class="pl-c1">0</span>, b <span class="pl-k">=</span> <span class="pl-c1">0</span>, m1, m2, color;</td>
      </tr>
      <tr>
        <td id="L1703" class="blob-num js-line-number" data-line-number="1703"></td>
        <td id="LC1703" class="blob-code blob-code-inner js-file-line">    m1 <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\(</span>(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">exec</span>(format);</td>
      </tr>
      <tr>
        <td id="L1704" class="blob-num js-line-number" data-line-number="1704"></td>
        <td id="LC1704" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (m1) {</td>
      </tr>
      <tr>
        <td id="L1705" class="blob-num js-line-number" data-line-number="1705"></td>
        <td id="LC1705" class="blob-code blob-code-inner js-file-line">      m2 <span class="pl-k">=</span> m1[<span class="pl-c1">2</span>].<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1706" class="blob-num js-line-number" data-line-number="1706"></td>
        <td id="LC1706" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span> (m1[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L1707" class="blob-num js-line-number" data-line-number="1707"></td>
        <td id="LC1707" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>hsl<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1708" class="blob-num js-line-number" data-line-number="1708"></td>
        <td id="LC1708" class="blob-code blob-code-inner js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L1709" class="blob-num js-line-number" data-line-number="1709"></td>
        <td id="LC1709" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> hsl(<span class="pl-c1">parseFloat</span>(m2[<span class="pl-c1">0</span>]), <span class="pl-c1">parseFloat</span>(m2[<span class="pl-c1">1</span>]) / <span class="pl-c1">100</span>, <span class="pl-c1">parseFloat</span>(m2[<span class="pl-c1">2</span>]) / <span class="pl-c1">100</span>);</td>
      </tr>
      <tr>
        <td id="L1710" class="blob-num js-line-number" data-line-number="1710"></td>
        <td id="LC1710" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1711" class="blob-num js-line-number" data-line-number="1711"></td>
        <td id="LC1711" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1712" class="blob-num js-line-number" data-line-number="1712"></td>
        <td id="LC1712" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1713" class="blob-num js-line-number" data-line-number="1713"></td>
        <td id="LC1713" class="blob-code blob-code-inner js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L1714" class="blob-num js-line-number" data-line-number="1714"></td>
        <td id="LC1714" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> rgb(d3_rgb_parseNumber(m2[<span class="pl-c1">0</span>]), d3_rgb_parseNumber(m2[<span class="pl-c1">1</span>]), d3_rgb_parseNumber(m2[<span class="pl-c1">2</span>]));</td>
      </tr>
      <tr>
        <td id="L1715" class="blob-num js-line-number" data-line-number="1715"></td>
        <td id="LC1715" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1716" class="blob-num js-line-number" data-line-number="1716"></td>
        <td id="LC1716" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1717" class="blob-num js-line-number" data-line-number="1717"></td>
        <td id="LC1717" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1718" class="blob-num js-line-number" data-line-number="1718"></td>
        <td id="LC1718" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (color <span class="pl-k">=</span> d3_rgb_names.get(format.<span class="pl-c1">toLowerCase</span>())) {</td>
      </tr>
      <tr>
        <td id="L1719" class="blob-num js-line-number" data-line-number="1719"></td>
        <td id="LC1719" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rgb(color.r, color.g, color.b);</td>
      </tr>
      <tr>
        <td id="L1720" class="blob-num js-line-number" data-line-number="1720"></td>
        <td id="LC1720" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1721" class="blob-num js-line-number" data-line-number="1721"></td>
        <td id="LC1721" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (format <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> format.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span><span class="pl-c1">isNaN</span>(color <span class="pl-k">=</span> <span class="pl-c1">parseInt</span>(format.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>), <span class="pl-c1">16</span>))) {</td>
      </tr>
      <tr>
        <td id="L1722" class="blob-num js-line-number" data-line-number="1722"></td>
        <td id="LC1722" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (format.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L1723" class="blob-num js-line-number" data-line-number="1723"></td>
        <td id="LC1723" class="blob-code blob-code-inner js-file-line">        r <span class="pl-k">=</span> (color <span class="pl-k">&amp;</span> <span class="pl-c1">3840</span>) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L1724" class="blob-num js-line-number" data-line-number="1724"></td>
        <td id="LC1724" class="blob-code blob-code-inner js-file-line">        r <span class="pl-k">=</span> r <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">4</span> | r;</td>
      </tr>
      <tr>
        <td id="L1725" class="blob-num js-line-number" data-line-number="1725"></td>
        <td id="LC1725" class="blob-code blob-code-inner js-file-line">        g <span class="pl-k">=</span> color <span class="pl-k">&amp;</span> <span class="pl-c1">240</span>;</td>
      </tr>
      <tr>
        <td id="L1726" class="blob-num js-line-number" data-line-number="1726"></td>
        <td id="LC1726" class="blob-code blob-code-inner js-file-line">        g <span class="pl-k">=</span> g <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">4</span> | g;</td>
      </tr>
      <tr>
        <td id="L1727" class="blob-num js-line-number" data-line-number="1727"></td>
        <td id="LC1727" class="blob-code blob-code-inner js-file-line">        b <span class="pl-k">=</span> color <span class="pl-k">&amp;</span> <span class="pl-c1">15</span>;</td>
      </tr>
      <tr>
        <td id="L1728" class="blob-num js-line-number" data-line-number="1728"></td>
        <td id="LC1728" class="blob-code blob-code-inner js-file-line">        b <span class="pl-k">=</span> b <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">4</span> | b;</td>
      </tr>
      <tr>
        <td id="L1729" class="blob-num js-line-number" data-line-number="1729"></td>
        <td id="LC1729" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (format.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">7</span>) {</td>
      </tr>
      <tr>
        <td id="L1730" class="blob-num js-line-number" data-line-number="1730"></td>
        <td id="LC1730" class="blob-code blob-code-inner js-file-line">        r <span class="pl-k">=</span> (color <span class="pl-k">&amp;</span> <span class="pl-c1">16711680</span>) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">16</span>;</td>
      </tr>
      <tr>
        <td id="L1731" class="blob-num js-line-number" data-line-number="1731"></td>
        <td id="LC1731" class="blob-code blob-code-inner js-file-line">        g <span class="pl-k">=</span> (color <span class="pl-k">&amp;</span> <span class="pl-c1">65280</span>) <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">8</span>;</td>
      </tr>
      <tr>
        <td id="L1732" class="blob-num js-line-number" data-line-number="1732"></td>
        <td id="LC1732" class="blob-code blob-code-inner js-file-line">        b <span class="pl-k">=</span> color <span class="pl-k">&amp;</span> <span class="pl-c1">255</span>;</td>
      </tr>
      <tr>
        <td id="L1733" class="blob-num js-line-number" data-line-number="1733"></td>
        <td id="LC1733" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1734" class="blob-num js-line-number" data-line-number="1734"></td>
        <td id="LC1734" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1735" class="blob-num js-line-number" data-line-number="1735"></td>
        <td id="LC1735" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> rgb(r, g, b);</td>
      </tr>
      <tr>
        <td id="L1736" class="blob-num js-line-number" data-line-number="1736"></td>
        <td id="LC1736" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1737" class="blob-num js-line-number" data-line-number="1737"></td>
        <td id="LC1737" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgb_hsl</span>(<span class="pl-smi">r</span>, <span class="pl-smi">g</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1738" class="blob-num js-line-number" data-line-number="1738"></td>
        <td id="LC1738" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> min <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(r <span class="pl-k">/=</span> <span class="pl-c1">255</span>, g <span class="pl-k">/=</span> <span class="pl-c1">255</span>, b <span class="pl-k">/=</span> <span class="pl-c1">255</span>), max <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(r, g, b), d <span class="pl-k">=</span> max <span class="pl-k">-</span> min, h, s, l <span class="pl-k">=</span> (max <span class="pl-k">+</span> min) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1739" class="blob-num js-line-number" data-line-number="1739"></td>
        <td id="LC1739" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (d) {</td>
      </tr>
      <tr>
        <td id="L1740" class="blob-num js-line-number" data-line-number="1740"></td>
        <td id="LC1740" class="blob-code blob-code-inner js-file-line">      s <span class="pl-k">=</span> l <span class="pl-k">&lt;</span> .<span class="pl-c1">5</span> <span class="pl-k">?</span> d / (max <span class="pl-k">+</span> min) <span class="pl-k">:</span> d / (<span class="pl-c1">2</span> <span class="pl-k">-</span> max <span class="pl-k">-</span> min);</td>
      </tr>
      <tr>
        <td id="L1741" class="blob-num js-line-number" data-line-number="1741"></td>
        <td id="LC1741" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (r <span class="pl-k">==</span> max) h <span class="pl-k">=</span> (g <span class="pl-k">-</span> b) / d <span class="pl-k">+</span> (g <span class="pl-k">&lt;</span> b <span class="pl-k">?</span> <span class="pl-c1">6</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>); <span class="pl-k">else</span> <span class="pl-k">if</span> (g <span class="pl-k">==</span> max) h <span class="pl-k">=</span> (b <span class="pl-k">-</span> r) / d <span class="pl-k">+</span> <span class="pl-c1">2</span>; <span class="pl-k">else</span> h <span class="pl-k">=</span> (r <span class="pl-k">-</span> g) / d <span class="pl-k">+</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L1742" class="blob-num js-line-number" data-line-number="1742"></td>
        <td id="LC1742" class="blob-code blob-code-inner js-file-line">      h <span class="pl-k">*=</span> <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L1743" class="blob-num js-line-number" data-line-number="1743"></td>
        <td id="LC1743" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1744" class="blob-num js-line-number" data-line-number="1744"></td>
        <td id="LC1744" class="blob-code blob-code-inner js-file-line">      h <span class="pl-k">=</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L1745" class="blob-num js-line-number" data-line-number="1745"></td>
        <td id="LC1745" class="blob-code blob-code-inner js-file-line">      s <span class="pl-k">=</span> l <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> l <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> h;</td>
      </tr>
      <tr>
        <td id="L1746" class="blob-num js-line-number" data-line-number="1746"></td>
        <td id="LC1746" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1747" class="blob-num js-line-number" data-line-number="1747"></td>
        <td id="LC1747" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_hsl</span>(h, s, l);</td>
      </tr>
      <tr>
        <td id="L1748" class="blob-num js-line-number" data-line-number="1748"></td>
        <td id="LC1748" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1749" class="blob-num js-line-number" data-line-number="1749"></td>
        <td id="LC1749" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgb_lab</span>(<span class="pl-smi">r</span>, <span class="pl-smi">g</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L1750" class="blob-num js-line-number" data-line-number="1750"></td>
        <td id="LC1750" class="blob-code blob-code-inner js-file-line">    r <span class="pl-k">=</span> d3_rgb_xyz(r);</td>
      </tr>
      <tr>
        <td id="L1751" class="blob-num js-line-number" data-line-number="1751"></td>
        <td id="LC1751" class="blob-code blob-code-inner js-file-line">    g <span class="pl-k">=</span> d3_rgb_xyz(g);</td>
      </tr>
      <tr>
        <td id="L1752" class="blob-num js-line-number" data-line-number="1752"></td>
        <td id="LC1752" class="blob-code blob-code-inner js-file-line">    b <span class="pl-k">=</span> d3_rgb_xyz(b);</td>
      </tr>
      <tr>
        <td id="L1753" class="blob-num js-line-number" data-line-number="1753"></td>
        <td id="LC1753" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> d3_xyz_lab((.<span class="pl-c1">4124564</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> .<span class="pl-c1">3575761</span> <span class="pl-k">*</span> g <span class="pl-k">+</span> .<span class="pl-c1">1804375</span> <span class="pl-k">*</span> b) / d3_lab_X), y <span class="pl-k">=</span> d3_xyz_lab((.<span class="pl-c1">2126729</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> .<span class="pl-c1">7151522</span> <span class="pl-k">*</span> g <span class="pl-k">+</span> .<span class="pl-c1">072175</span> <span class="pl-k">*</span> b) / d3_lab_Y), z <span class="pl-k">=</span> d3_xyz_lab((.<span class="pl-c1">0193339</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> .<span class="pl-c1">119192</span> <span class="pl-k">*</span> g <span class="pl-k">+</span> .<span class="pl-c1">9503041</span> <span class="pl-k">*</span> b) / d3_lab_Z);</td>
      </tr>
      <tr>
        <td id="L1754" class="blob-num js-line-number" data-line-number="1754"></td>
        <td id="LC1754" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_lab(<span class="pl-c1">116</span> <span class="pl-k">*</span> y <span class="pl-k">-</span> <span class="pl-c1">16</span>, <span class="pl-c1">500</span> <span class="pl-k">*</span> (x <span class="pl-k">-</span> y), <span class="pl-c1">200</span> <span class="pl-k">*</span> (y <span class="pl-k">-</span> z));</td>
      </tr>
      <tr>
        <td id="L1755" class="blob-num js-line-number" data-line-number="1755"></td>
        <td id="LC1755" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1756" class="blob-num js-line-number" data-line-number="1756"></td>
        <td id="LC1756" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgb_xyz</span>(<span class="pl-smi">r</span>) {</td>
      </tr>
      <tr>
        <td id="L1757" class="blob-num js-line-number" data-line-number="1757"></td>
        <td id="LC1757" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (r <span class="pl-k">/=</span> <span class="pl-c1">255</span>) <span class="pl-k">&lt;=</span> .<span class="pl-c1">04045</span> <span class="pl-k">?</span> r / <span class="pl-c1">12.92</span> <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>((r <span class="pl-k">+</span> .<span class="pl-c1">055</span>) / <span class="pl-c1">1.055</span>, <span class="pl-c1">2.4</span>);</td>
      </tr>
      <tr>
        <td id="L1758" class="blob-num js-line-number" data-line-number="1758"></td>
        <td id="LC1758" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1759" class="blob-num js-line-number" data-line-number="1759"></td>
        <td id="LC1759" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_rgb_parseNumber</span>(<span class="pl-smi">c</span>) {</td>
      </tr>
      <tr>
        <td id="L1760" class="blob-num js-line-number" data-line-number="1760"></td>
        <td id="LC1760" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> f <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(c);</td>
      </tr>
      <tr>
        <td id="L1761" class="blob-num js-line-number" data-line-number="1761"></td>
        <td id="LC1761" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> c.<span class="pl-c1">charAt</span>(c.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(f <span class="pl-k">*</span> <span class="pl-c1">2.55</span>) <span class="pl-k">:</span> f;</td>
      </tr>
      <tr>
        <td id="L1762" class="blob-num js-line-number" data-line-number="1762"></td>
        <td id="LC1762" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1763" class="blob-num js-line-number" data-line-number="1763"></td>
        <td id="LC1763" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_rgb_names <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L1764" class="blob-num js-line-number" data-line-number="1764"></td>
        <td id="LC1764" class="blob-code blob-code-inner js-file-line">    aliceblue<span class="pl-k">:</span> <span class="pl-c1">15792383</span>,</td>
      </tr>
      <tr>
        <td id="L1765" class="blob-num js-line-number" data-line-number="1765"></td>
        <td id="LC1765" class="blob-code blob-code-inner js-file-line">    antiquewhite<span class="pl-k">:</span> <span class="pl-c1">16444375</span>,</td>
      </tr>
      <tr>
        <td id="L1766" class="blob-num js-line-number" data-line-number="1766"></td>
        <td id="LC1766" class="blob-code blob-code-inner js-file-line">    aqua<span class="pl-k">:</span> <span class="pl-c1">65535</span>,</td>
      </tr>
      <tr>
        <td id="L1767" class="blob-num js-line-number" data-line-number="1767"></td>
        <td id="LC1767" class="blob-code blob-code-inner js-file-line">    aquamarine<span class="pl-k">:</span> <span class="pl-c1">8388564</span>,</td>
      </tr>
      <tr>
        <td id="L1768" class="blob-num js-line-number" data-line-number="1768"></td>
        <td id="LC1768" class="blob-code blob-code-inner js-file-line">    azure<span class="pl-k">:</span> <span class="pl-c1">15794175</span>,</td>
      </tr>
      <tr>
        <td id="L1769" class="blob-num js-line-number" data-line-number="1769"></td>
        <td id="LC1769" class="blob-code blob-code-inner js-file-line">    beige<span class="pl-k">:</span> <span class="pl-c1">16119260</span>,</td>
      </tr>
      <tr>
        <td id="L1770" class="blob-num js-line-number" data-line-number="1770"></td>
        <td id="LC1770" class="blob-code blob-code-inner js-file-line">    bisque<span class="pl-k">:</span> <span class="pl-c1">16770244</span>,</td>
      </tr>
      <tr>
        <td id="L1771" class="blob-num js-line-number" data-line-number="1771"></td>
        <td id="LC1771" class="blob-code blob-code-inner js-file-line">    black<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1772" class="blob-num js-line-number" data-line-number="1772"></td>
        <td id="LC1772" class="blob-code blob-code-inner js-file-line">    blanchedalmond<span class="pl-k">:</span> <span class="pl-c1">16772045</span>,</td>
      </tr>
      <tr>
        <td id="L1773" class="blob-num js-line-number" data-line-number="1773"></td>
        <td id="LC1773" class="blob-code blob-code-inner js-file-line">    blue<span class="pl-k">:</span> <span class="pl-c1">255</span>,</td>
      </tr>
      <tr>
        <td id="L1774" class="blob-num js-line-number" data-line-number="1774"></td>
        <td id="LC1774" class="blob-code blob-code-inner js-file-line">    blueviolet<span class="pl-k">:</span> <span class="pl-c1">9055202</span>,</td>
      </tr>
      <tr>
        <td id="L1775" class="blob-num js-line-number" data-line-number="1775"></td>
        <td id="LC1775" class="blob-code blob-code-inner js-file-line">    brown<span class="pl-k">:</span> <span class="pl-c1">10824234</span>,</td>
      </tr>
      <tr>
        <td id="L1776" class="blob-num js-line-number" data-line-number="1776"></td>
        <td id="LC1776" class="blob-code blob-code-inner js-file-line">    burlywood<span class="pl-k">:</span> <span class="pl-c1">14596231</span>,</td>
      </tr>
      <tr>
        <td id="L1777" class="blob-num js-line-number" data-line-number="1777"></td>
        <td id="LC1777" class="blob-code blob-code-inner js-file-line">    cadetblue<span class="pl-k">:</span> <span class="pl-c1">6266528</span>,</td>
      </tr>
      <tr>
        <td id="L1778" class="blob-num js-line-number" data-line-number="1778"></td>
        <td id="LC1778" class="blob-code blob-code-inner js-file-line">    chartreuse<span class="pl-k">:</span> <span class="pl-c1">8388352</span>,</td>
      </tr>
      <tr>
        <td id="L1779" class="blob-num js-line-number" data-line-number="1779"></td>
        <td id="LC1779" class="blob-code blob-code-inner js-file-line">    chocolate<span class="pl-k">:</span> <span class="pl-c1">13789470</span>,</td>
      </tr>
      <tr>
        <td id="L1780" class="blob-num js-line-number" data-line-number="1780"></td>
        <td id="LC1780" class="blob-code blob-code-inner js-file-line">    coral<span class="pl-k">:</span> <span class="pl-c1">16744272</span>,</td>
      </tr>
      <tr>
        <td id="L1781" class="blob-num js-line-number" data-line-number="1781"></td>
        <td id="LC1781" class="blob-code blob-code-inner js-file-line">    cornflowerblue<span class="pl-k">:</span> <span class="pl-c1">6591981</span>,</td>
      </tr>
      <tr>
        <td id="L1782" class="blob-num js-line-number" data-line-number="1782"></td>
        <td id="LC1782" class="blob-code blob-code-inner js-file-line">    cornsilk<span class="pl-k">:</span> <span class="pl-c1">16775388</span>,</td>
      </tr>
      <tr>
        <td id="L1783" class="blob-num js-line-number" data-line-number="1783"></td>
        <td id="LC1783" class="blob-code blob-code-inner js-file-line">    crimson<span class="pl-k">:</span> <span class="pl-c1">14423100</span>,</td>
      </tr>
      <tr>
        <td id="L1784" class="blob-num js-line-number" data-line-number="1784"></td>
        <td id="LC1784" class="blob-code blob-code-inner js-file-line">    cyan<span class="pl-k">:</span> <span class="pl-c1">65535</span>,</td>
      </tr>
      <tr>
        <td id="L1785" class="blob-num js-line-number" data-line-number="1785"></td>
        <td id="LC1785" class="blob-code blob-code-inner js-file-line">    darkblue<span class="pl-k">:</span> <span class="pl-c1">139</span>,</td>
      </tr>
      <tr>
        <td id="L1786" class="blob-num js-line-number" data-line-number="1786"></td>
        <td id="LC1786" class="blob-code blob-code-inner js-file-line">    darkcyan<span class="pl-k">:</span> <span class="pl-c1">35723</span>,</td>
      </tr>
      <tr>
        <td id="L1787" class="blob-num js-line-number" data-line-number="1787"></td>
        <td id="LC1787" class="blob-code blob-code-inner js-file-line">    darkgoldenrod<span class="pl-k">:</span> <span class="pl-c1">12092939</span>,</td>
      </tr>
      <tr>
        <td id="L1788" class="blob-num js-line-number" data-line-number="1788"></td>
        <td id="LC1788" class="blob-code blob-code-inner js-file-line">    darkgray<span class="pl-k">:</span> <span class="pl-c1">11119017</span>,</td>
      </tr>
      <tr>
        <td id="L1789" class="blob-num js-line-number" data-line-number="1789"></td>
        <td id="LC1789" class="blob-code blob-code-inner js-file-line">    darkgreen<span class="pl-k">:</span> <span class="pl-c1">25600</span>,</td>
      </tr>
      <tr>
        <td id="L1790" class="blob-num js-line-number" data-line-number="1790"></td>
        <td id="LC1790" class="blob-code blob-code-inner js-file-line">    darkgrey<span class="pl-k">:</span> <span class="pl-c1">11119017</span>,</td>
      </tr>
      <tr>
        <td id="L1791" class="blob-num js-line-number" data-line-number="1791"></td>
        <td id="LC1791" class="blob-code blob-code-inner js-file-line">    darkkhaki<span class="pl-k">:</span> <span class="pl-c1">12433259</span>,</td>
      </tr>
      <tr>
        <td id="L1792" class="blob-num js-line-number" data-line-number="1792"></td>
        <td id="LC1792" class="blob-code blob-code-inner js-file-line">    darkmagenta<span class="pl-k">:</span> <span class="pl-c1">9109643</span>,</td>
      </tr>
      <tr>
        <td id="L1793" class="blob-num js-line-number" data-line-number="1793"></td>
        <td id="LC1793" class="blob-code blob-code-inner js-file-line">    darkolivegreen<span class="pl-k">:</span> <span class="pl-c1">5597999</span>,</td>
      </tr>
      <tr>
        <td id="L1794" class="blob-num js-line-number" data-line-number="1794"></td>
        <td id="LC1794" class="blob-code blob-code-inner js-file-line">    darkorange<span class="pl-k">:</span> <span class="pl-c1">16747520</span>,</td>
      </tr>
      <tr>
        <td id="L1795" class="blob-num js-line-number" data-line-number="1795"></td>
        <td id="LC1795" class="blob-code blob-code-inner js-file-line">    darkorchid<span class="pl-k">:</span> <span class="pl-c1">10040012</span>,</td>
      </tr>
      <tr>
        <td id="L1796" class="blob-num js-line-number" data-line-number="1796"></td>
        <td id="LC1796" class="blob-code blob-code-inner js-file-line">    darkred<span class="pl-k">:</span> <span class="pl-c1">9109504</span>,</td>
      </tr>
      <tr>
        <td id="L1797" class="blob-num js-line-number" data-line-number="1797"></td>
        <td id="LC1797" class="blob-code blob-code-inner js-file-line">    darksalmon<span class="pl-k">:</span> <span class="pl-c1">15308410</span>,</td>
      </tr>
      <tr>
        <td id="L1798" class="blob-num js-line-number" data-line-number="1798"></td>
        <td id="LC1798" class="blob-code blob-code-inner js-file-line">    darkseagreen<span class="pl-k">:</span> <span class="pl-c1">9419919</span>,</td>
      </tr>
      <tr>
        <td id="L1799" class="blob-num js-line-number" data-line-number="1799"></td>
        <td id="LC1799" class="blob-code blob-code-inner js-file-line">    darkslateblue<span class="pl-k">:</span> <span class="pl-c1">4734347</span>,</td>
      </tr>
      <tr>
        <td id="L1800" class="blob-num js-line-number" data-line-number="1800"></td>
        <td id="LC1800" class="blob-code blob-code-inner js-file-line">    darkslategray<span class="pl-k">:</span> <span class="pl-c1">3100495</span>,</td>
      </tr>
      <tr>
        <td id="L1801" class="blob-num js-line-number" data-line-number="1801"></td>
        <td id="LC1801" class="blob-code blob-code-inner js-file-line">    darkslategrey<span class="pl-k">:</span> <span class="pl-c1">3100495</span>,</td>
      </tr>
      <tr>
        <td id="L1802" class="blob-num js-line-number" data-line-number="1802"></td>
        <td id="LC1802" class="blob-code blob-code-inner js-file-line">    darkturquoise<span class="pl-k">:</span> <span class="pl-c1">52945</span>,</td>
      </tr>
      <tr>
        <td id="L1803" class="blob-num js-line-number" data-line-number="1803"></td>
        <td id="LC1803" class="blob-code blob-code-inner js-file-line">    darkviolet<span class="pl-k">:</span> <span class="pl-c1">9699539</span>,</td>
      </tr>
      <tr>
        <td id="L1804" class="blob-num js-line-number" data-line-number="1804"></td>
        <td id="LC1804" class="blob-code blob-code-inner js-file-line">    deeppink<span class="pl-k">:</span> <span class="pl-c1">16716947</span>,</td>
      </tr>
      <tr>
        <td id="L1805" class="blob-num js-line-number" data-line-number="1805"></td>
        <td id="LC1805" class="blob-code blob-code-inner js-file-line">    deepskyblue<span class="pl-k">:</span> <span class="pl-c1">49151</span>,</td>
      </tr>
      <tr>
        <td id="L1806" class="blob-num js-line-number" data-line-number="1806"></td>
        <td id="LC1806" class="blob-code blob-code-inner js-file-line">    dimgray<span class="pl-k">:</span> <span class="pl-c1">6908265</span>,</td>
      </tr>
      <tr>
        <td id="L1807" class="blob-num js-line-number" data-line-number="1807"></td>
        <td id="LC1807" class="blob-code blob-code-inner js-file-line">    dimgrey<span class="pl-k">:</span> <span class="pl-c1">6908265</span>,</td>
      </tr>
      <tr>
        <td id="L1808" class="blob-num js-line-number" data-line-number="1808"></td>
        <td id="LC1808" class="blob-code blob-code-inner js-file-line">    dodgerblue<span class="pl-k">:</span> <span class="pl-c1">2003199</span>,</td>
      </tr>
      <tr>
        <td id="L1809" class="blob-num js-line-number" data-line-number="1809"></td>
        <td id="LC1809" class="blob-code blob-code-inner js-file-line">    firebrick<span class="pl-k">:</span> <span class="pl-c1">11674146</span>,</td>
      </tr>
      <tr>
        <td id="L1810" class="blob-num js-line-number" data-line-number="1810"></td>
        <td id="LC1810" class="blob-code blob-code-inner js-file-line">    floralwhite<span class="pl-k">:</span> <span class="pl-c1">16775920</span>,</td>
      </tr>
      <tr>
        <td id="L1811" class="blob-num js-line-number" data-line-number="1811"></td>
        <td id="LC1811" class="blob-code blob-code-inner js-file-line">    forestgreen<span class="pl-k">:</span> <span class="pl-c1">2263842</span>,</td>
      </tr>
      <tr>
        <td id="L1812" class="blob-num js-line-number" data-line-number="1812"></td>
        <td id="LC1812" class="blob-code blob-code-inner js-file-line">    fuchsia<span class="pl-k">:</span> <span class="pl-c1">16711935</span>,</td>
      </tr>
      <tr>
        <td id="L1813" class="blob-num js-line-number" data-line-number="1813"></td>
        <td id="LC1813" class="blob-code blob-code-inner js-file-line">    gainsboro<span class="pl-k">:</span> <span class="pl-c1">14474460</span>,</td>
      </tr>
      <tr>
        <td id="L1814" class="blob-num js-line-number" data-line-number="1814"></td>
        <td id="LC1814" class="blob-code blob-code-inner js-file-line">    ghostwhite<span class="pl-k">:</span> <span class="pl-c1">16316671</span>,</td>
      </tr>
      <tr>
        <td id="L1815" class="blob-num js-line-number" data-line-number="1815"></td>
        <td id="LC1815" class="blob-code blob-code-inner js-file-line">    gold<span class="pl-k">:</span> <span class="pl-c1">16766720</span>,</td>
      </tr>
      <tr>
        <td id="L1816" class="blob-num js-line-number" data-line-number="1816"></td>
        <td id="LC1816" class="blob-code blob-code-inner js-file-line">    goldenrod<span class="pl-k">:</span> <span class="pl-c1">14329120</span>,</td>
      </tr>
      <tr>
        <td id="L1817" class="blob-num js-line-number" data-line-number="1817"></td>
        <td id="LC1817" class="blob-code blob-code-inner js-file-line">    gray<span class="pl-k">:</span> <span class="pl-c1">8421504</span>,</td>
      </tr>
      <tr>
        <td id="L1818" class="blob-num js-line-number" data-line-number="1818"></td>
        <td id="LC1818" class="blob-code blob-code-inner js-file-line">    green<span class="pl-k">:</span> <span class="pl-c1">32768</span>,</td>
      </tr>
      <tr>
        <td id="L1819" class="blob-num js-line-number" data-line-number="1819"></td>
        <td id="LC1819" class="blob-code blob-code-inner js-file-line">    greenyellow<span class="pl-k">:</span> <span class="pl-c1">11403055</span>,</td>
      </tr>
      <tr>
        <td id="L1820" class="blob-num js-line-number" data-line-number="1820"></td>
        <td id="LC1820" class="blob-code blob-code-inner js-file-line">    grey<span class="pl-k">:</span> <span class="pl-c1">8421504</span>,</td>
      </tr>
      <tr>
        <td id="L1821" class="blob-num js-line-number" data-line-number="1821"></td>
        <td id="LC1821" class="blob-code blob-code-inner js-file-line">    honeydew<span class="pl-k">:</span> <span class="pl-c1">15794160</span>,</td>
      </tr>
      <tr>
        <td id="L1822" class="blob-num js-line-number" data-line-number="1822"></td>
        <td id="LC1822" class="blob-code blob-code-inner js-file-line">    hotpink<span class="pl-k">:</span> <span class="pl-c1">16738740</span>,</td>
      </tr>
      <tr>
        <td id="L1823" class="blob-num js-line-number" data-line-number="1823"></td>
        <td id="LC1823" class="blob-code blob-code-inner js-file-line">    indianred<span class="pl-k">:</span> <span class="pl-c1">13458524</span>,</td>
      </tr>
      <tr>
        <td id="L1824" class="blob-num js-line-number" data-line-number="1824"></td>
        <td id="LC1824" class="blob-code blob-code-inner js-file-line">    indigo<span class="pl-k">:</span> <span class="pl-c1">4915330</span>,</td>
      </tr>
      <tr>
        <td id="L1825" class="blob-num js-line-number" data-line-number="1825"></td>
        <td id="LC1825" class="blob-code blob-code-inner js-file-line">    ivory<span class="pl-k">:</span> <span class="pl-c1">16777200</span>,</td>
      </tr>
      <tr>
        <td id="L1826" class="blob-num js-line-number" data-line-number="1826"></td>
        <td id="LC1826" class="blob-code blob-code-inner js-file-line">    khaki<span class="pl-k">:</span> <span class="pl-c1">15787660</span>,</td>
      </tr>
      <tr>
        <td id="L1827" class="blob-num js-line-number" data-line-number="1827"></td>
        <td id="LC1827" class="blob-code blob-code-inner js-file-line">    lavender<span class="pl-k">:</span> <span class="pl-c1">15132410</span>,</td>
      </tr>
      <tr>
        <td id="L1828" class="blob-num js-line-number" data-line-number="1828"></td>
        <td id="LC1828" class="blob-code blob-code-inner js-file-line">    lavenderblush<span class="pl-k">:</span> <span class="pl-c1">16773365</span>,</td>
      </tr>
      <tr>
        <td id="L1829" class="blob-num js-line-number" data-line-number="1829"></td>
        <td id="LC1829" class="blob-code blob-code-inner js-file-line">    lawngreen<span class="pl-k">:</span> <span class="pl-c1">8190976</span>,</td>
      </tr>
      <tr>
        <td id="L1830" class="blob-num js-line-number" data-line-number="1830"></td>
        <td id="LC1830" class="blob-code blob-code-inner js-file-line">    lemonchiffon<span class="pl-k">:</span> <span class="pl-c1">16775885</span>,</td>
      </tr>
      <tr>
        <td id="L1831" class="blob-num js-line-number" data-line-number="1831"></td>
        <td id="LC1831" class="blob-code blob-code-inner js-file-line">    lightblue<span class="pl-k">:</span> <span class="pl-c1">11393254</span>,</td>
      </tr>
      <tr>
        <td id="L1832" class="blob-num js-line-number" data-line-number="1832"></td>
        <td id="LC1832" class="blob-code blob-code-inner js-file-line">    lightcoral<span class="pl-k">:</span> <span class="pl-c1">15761536</span>,</td>
      </tr>
      <tr>
        <td id="L1833" class="blob-num js-line-number" data-line-number="1833"></td>
        <td id="LC1833" class="blob-code blob-code-inner js-file-line">    lightcyan<span class="pl-k">:</span> <span class="pl-c1">14745599</span>,</td>
      </tr>
      <tr>
        <td id="L1834" class="blob-num js-line-number" data-line-number="1834"></td>
        <td id="LC1834" class="blob-code blob-code-inner js-file-line">    lightgoldenrodyellow<span class="pl-k">:</span> <span class="pl-c1">16448210</span>,</td>
      </tr>
      <tr>
        <td id="L1835" class="blob-num js-line-number" data-line-number="1835"></td>
        <td id="LC1835" class="blob-code blob-code-inner js-file-line">    lightgray<span class="pl-k">:</span> <span class="pl-c1">13882323</span>,</td>
      </tr>
      <tr>
        <td id="L1836" class="blob-num js-line-number" data-line-number="1836"></td>
        <td id="LC1836" class="blob-code blob-code-inner js-file-line">    lightgreen<span class="pl-k">:</span> <span class="pl-c1">9498256</span>,</td>
      </tr>
      <tr>
        <td id="L1837" class="blob-num js-line-number" data-line-number="1837"></td>
        <td id="LC1837" class="blob-code blob-code-inner js-file-line">    lightgrey<span class="pl-k">:</span> <span class="pl-c1">13882323</span>,</td>
      </tr>
      <tr>
        <td id="L1838" class="blob-num js-line-number" data-line-number="1838"></td>
        <td id="LC1838" class="blob-code blob-code-inner js-file-line">    lightpink<span class="pl-k">:</span> <span class="pl-c1">16758465</span>,</td>
      </tr>
      <tr>
        <td id="L1839" class="blob-num js-line-number" data-line-number="1839"></td>
        <td id="LC1839" class="blob-code blob-code-inner js-file-line">    lightsalmon<span class="pl-k">:</span> <span class="pl-c1">16752762</span>,</td>
      </tr>
      <tr>
        <td id="L1840" class="blob-num js-line-number" data-line-number="1840"></td>
        <td id="LC1840" class="blob-code blob-code-inner js-file-line">    lightseagreen<span class="pl-k">:</span> <span class="pl-c1">2142890</span>,</td>
      </tr>
      <tr>
        <td id="L1841" class="blob-num js-line-number" data-line-number="1841"></td>
        <td id="LC1841" class="blob-code blob-code-inner js-file-line">    lightskyblue<span class="pl-k">:</span> <span class="pl-c1">8900346</span>,</td>
      </tr>
      <tr>
        <td id="L1842" class="blob-num js-line-number" data-line-number="1842"></td>
        <td id="LC1842" class="blob-code blob-code-inner js-file-line">    lightslategray<span class="pl-k">:</span> <span class="pl-c1">7833753</span>,</td>
      </tr>
      <tr>
        <td id="L1843" class="blob-num js-line-number" data-line-number="1843"></td>
        <td id="LC1843" class="blob-code blob-code-inner js-file-line">    lightslategrey<span class="pl-k">:</span> <span class="pl-c1">7833753</span>,</td>
      </tr>
      <tr>
        <td id="L1844" class="blob-num js-line-number" data-line-number="1844"></td>
        <td id="LC1844" class="blob-code blob-code-inner js-file-line">    lightsteelblue<span class="pl-k">:</span> <span class="pl-c1">11584734</span>,</td>
      </tr>
      <tr>
        <td id="L1845" class="blob-num js-line-number" data-line-number="1845"></td>
        <td id="LC1845" class="blob-code blob-code-inner js-file-line">    lightyellow<span class="pl-k">:</span> <span class="pl-c1">16777184</span>,</td>
      </tr>
      <tr>
        <td id="L1846" class="blob-num js-line-number" data-line-number="1846"></td>
        <td id="LC1846" class="blob-code blob-code-inner js-file-line">    lime<span class="pl-k">:</span> <span class="pl-c1">65280</span>,</td>
      </tr>
      <tr>
        <td id="L1847" class="blob-num js-line-number" data-line-number="1847"></td>
        <td id="LC1847" class="blob-code blob-code-inner js-file-line">    limegreen<span class="pl-k">:</span> <span class="pl-c1">3329330</span>,</td>
      </tr>
      <tr>
        <td id="L1848" class="blob-num js-line-number" data-line-number="1848"></td>
        <td id="LC1848" class="blob-code blob-code-inner js-file-line">    linen<span class="pl-k">:</span> <span class="pl-c1">16445670</span>,</td>
      </tr>
      <tr>
        <td id="L1849" class="blob-num js-line-number" data-line-number="1849"></td>
        <td id="LC1849" class="blob-code blob-code-inner js-file-line">    magenta<span class="pl-k">:</span> <span class="pl-c1">16711935</span>,</td>
      </tr>
      <tr>
        <td id="L1850" class="blob-num js-line-number" data-line-number="1850"></td>
        <td id="LC1850" class="blob-code blob-code-inner js-file-line">    maroon<span class="pl-k">:</span> <span class="pl-c1">8388608</span>,</td>
      </tr>
      <tr>
        <td id="L1851" class="blob-num js-line-number" data-line-number="1851"></td>
        <td id="LC1851" class="blob-code blob-code-inner js-file-line">    mediumaquamarine<span class="pl-k">:</span> <span class="pl-c1">6737322</span>,</td>
      </tr>
      <tr>
        <td id="L1852" class="blob-num js-line-number" data-line-number="1852"></td>
        <td id="LC1852" class="blob-code blob-code-inner js-file-line">    mediumblue<span class="pl-k">:</span> <span class="pl-c1">205</span>,</td>
      </tr>
      <tr>
        <td id="L1853" class="blob-num js-line-number" data-line-number="1853"></td>
        <td id="LC1853" class="blob-code blob-code-inner js-file-line">    mediumorchid<span class="pl-k">:</span> <span class="pl-c1">12211667</span>,</td>
      </tr>
      <tr>
        <td id="L1854" class="blob-num js-line-number" data-line-number="1854"></td>
        <td id="LC1854" class="blob-code blob-code-inner js-file-line">    mediumpurple<span class="pl-k">:</span> <span class="pl-c1">9662683</span>,</td>
      </tr>
      <tr>
        <td id="L1855" class="blob-num js-line-number" data-line-number="1855"></td>
        <td id="LC1855" class="blob-code blob-code-inner js-file-line">    mediumseagreen<span class="pl-k">:</span> <span class="pl-c1">3978097</span>,</td>
      </tr>
      <tr>
        <td id="L1856" class="blob-num js-line-number" data-line-number="1856"></td>
        <td id="LC1856" class="blob-code blob-code-inner js-file-line">    mediumslateblue<span class="pl-k">:</span> <span class="pl-c1">8087790</span>,</td>
      </tr>
      <tr>
        <td id="L1857" class="blob-num js-line-number" data-line-number="1857"></td>
        <td id="LC1857" class="blob-code blob-code-inner js-file-line">    mediumspringgreen<span class="pl-k">:</span> <span class="pl-c1">64154</span>,</td>
      </tr>
      <tr>
        <td id="L1858" class="blob-num js-line-number" data-line-number="1858"></td>
        <td id="LC1858" class="blob-code blob-code-inner js-file-line">    mediumturquoise<span class="pl-k">:</span> <span class="pl-c1">4772300</span>,</td>
      </tr>
      <tr>
        <td id="L1859" class="blob-num js-line-number" data-line-number="1859"></td>
        <td id="LC1859" class="blob-code blob-code-inner js-file-line">    mediumvioletred<span class="pl-k">:</span> <span class="pl-c1">13047173</span>,</td>
      </tr>
      <tr>
        <td id="L1860" class="blob-num js-line-number" data-line-number="1860"></td>
        <td id="LC1860" class="blob-code blob-code-inner js-file-line">    midnightblue<span class="pl-k">:</span> <span class="pl-c1">1644912</span>,</td>
      </tr>
      <tr>
        <td id="L1861" class="blob-num js-line-number" data-line-number="1861"></td>
        <td id="LC1861" class="blob-code blob-code-inner js-file-line">    mintcream<span class="pl-k">:</span> <span class="pl-c1">16121850</span>,</td>
      </tr>
      <tr>
        <td id="L1862" class="blob-num js-line-number" data-line-number="1862"></td>
        <td id="LC1862" class="blob-code blob-code-inner js-file-line">    mistyrose<span class="pl-k">:</span> <span class="pl-c1">16770273</span>,</td>
      </tr>
      <tr>
        <td id="L1863" class="blob-num js-line-number" data-line-number="1863"></td>
        <td id="LC1863" class="blob-code blob-code-inner js-file-line">    moccasin<span class="pl-k">:</span> <span class="pl-c1">16770229</span>,</td>
      </tr>
      <tr>
        <td id="L1864" class="blob-num js-line-number" data-line-number="1864"></td>
        <td id="LC1864" class="blob-code blob-code-inner js-file-line">    navajowhite<span class="pl-k">:</span> <span class="pl-c1">16768685</span>,</td>
      </tr>
      <tr>
        <td id="L1865" class="blob-num js-line-number" data-line-number="1865"></td>
        <td id="LC1865" class="blob-code blob-code-inner js-file-line">    navy<span class="pl-k">:</span> <span class="pl-c1">128</span>,</td>
      </tr>
      <tr>
        <td id="L1866" class="blob-num js-line-number" data-line-number="1866"></td>
        <td id="LC1866" class="blob-code blob-code-inner js-file-line">    oldlace<span class="pl-k">:</span> <span class="pl-c1">16643558</span>,</td>
      </tr>
      <tr>
        <td id="L1867" class="blob-num js-line-number" data-line-number="1867"></td>
        <td id="LC1867" class="blob-code blob-code-inner js-file-line">    olive<span class="pl-k">:</span> <span class="pl-c1">8421376</span>,</td>
      </tr>
      <tr>
        <td id="L1868" class="blob-num js-line-number" data-line-number="1868"></td>
        <td id="LC1868" class="blob-code blob-code-inner js-file-line">    olivedrab<span class="pl-k">:</span> <span class="pl-c1">7048739</span>,</td>
      </tr>
      <tr>
        <td id="L1869" class="blob-num js-line-number" data-line-number="1869"></td>
        <td id="LC1869" class="blob-code blob-code-inner js-file-line">    orange<span class="pl-k">:</span> <span class="pl-c1">16753920</span>,</td>
      </tr>
      <tr>
        <td id="L1870" class="blob-num js-line-number" data-line-number="1870"></td>
        <td id="LC1870" class="blob-code blob-code-inner js-file-line">    orangered<span class="pl-k">:</span> <span class="pl-c1">16729344</span>,</td>
      </tr>
      <tr>
        <td id="L1871" class="blob-num js-line-number" data-line-number="1871"></td>
        <td id="LC1871" class="blob-code blob-code-inner js-file-line">    orchid<span class="pl-k">:</span> <span class="pl-c1">14315734</span>,</td>
      </tr>
      <tr>
        <td id="L1872" class="blob-num js-line-number" data-line-number="1872"></td>
        <td id="LC1872" class="blob-code blob-code-inner js-file-line">    palegoldenrod<span class="pl-k">:</span> <span class="pl-c1">15657130</span>,</td>
      </tr>
      <tr>
        <td id="L1873" class="blob-num js-line-number" data-line-number="1873"></td>
        <td id="LC1873" class="blob-code blob-code-inner js-file-line">    palegreen<span class="pl-k">:</span> <span class="pl-c1">10025880</span>,</td>
      </tr>
      <tr>
        <td id="L1874" class="blob-num js-line-number" data-line-number="1874"></td>
        <td id="LC1874" class="blob-code blob-code-inner js-file-line">    paleturquoise<span class="pl-k">:</span> <span class="pl-c1">11529966</span>,</td>
      </tr>
      <tr>
        <td id="L1875" class="blob-num js-line-number" data-line-number="1875"></td>
        <td id="LC1875" class="blob-code blob-code-inner js-file-line">    palevioletred<span class="pl-k">:</span> <span class="pl-c1">14381203</span>,</td>
      </tr>
      <tr>
        <td id="L1876" class="blob-num js-line-number" data-line-number="1876"></td>
        <td id="LC1876" class="blob-code blob-code-inner js-file-line">    papayawhip<span class="pl-k">:</span> <span class="pl-c1">16773077</span>,</td>
      </tr>
      <tr>
        <td id="L1877" class="blob-num js-line-number" data-line-number="1877"></td>
        <td id="LC1877" class="blob-code blob-code-inner js-file-line">    peachpuff<span class="pl-k">:</span> <span class="pl-c1">16767673</span>,</td>
      </tr>
      <tr>
        <td id="L1878" class="blob-num js-line-number" data-line-number="1878"></td>
        <td id="LC1878" class="blob-code blob-code-inner js-file-line">    peru<span class="pl-k">:</span> <span class="pl-c1">13468991</span>,</td>
      </tr>
      <tr>
        <td id="L1879" class="blob-num js-line-number" data-line-number="1879"></td>
        <td id="LC1879" class="blob-code blob-code-inner js-file-line">    pink<span class="pl-k">:</span> <span class="pl-c1">16761035</span>,</td>
      </tr>
      <tr>
        <td id="L1880" class="blob-num js-line-number" data-line-number="1880"></td>
        <td id="LC1880" class="blob-code blob-code-inner js-file-line">    plum<span class="pl-k">:</span> <span class="pl-c1">14524637</span>,</td>
      </tr>
      <tr>
        <td id="L1881" class="blob-num js-line-number" data-line-number="1881"></td>
        <td id="LC1881" class="blob-code blob-code-inner js-file-line">    powderblue<span class="pl-k">:</span> <span class="pl-c1">11591910</span>,</td>
      </tr>
      <tr>
        <td id="L1882" class="blob-num js-line-number" data-line-number="1882"></td>
        <td id="LC1882" class="blob-code blob-code-inner js-file-line">    purple<span class="pl-k">:</span> <span class="pl-c1">8388736</span>,</td>
      </tr>
      <tr>
        <td id="L1883" class="blob-num js-line-number" data-line-number="1883"></td>
        <td id="LC1883" class="blob-code blob-code-inner js-file-line">    rebeccapurple<span class="pl-k">:</span> <span class="pl-c1">6697881</span>,</td>
      </tr>
      <tr>
        <td id="L1884" class="blob-num js-line-number" data-line-number="1884"></td>
        <td id="LC1884" class="blob-code blob-code-inner js-file-line">    red<span class="pl-k">:</span> <span class="pl-c1">16711680</span>,</td>
      </tr>
      <tr>
        <td id="L1885" class="blob-num js-line-number" data-line-number="1885"></td>
        <td id="LC1885" class="blob-code blob-code-inner js-file-line">    rosybrown<span class="pl-k">:</span> <span class="pl-c1">12357519</span>,</td>
      </tr>
      <tr>
        <td id="L1886" class="blob-num js-line-number" data-line-number="1886"></td>
        <td id="LC1886" class="blob-code blob-code-inner js-file-line">    royalblue<span class="pl-k">:</span> <span class="pl-c1">4286945</span>,</td>
      </tr>
      <tr>
        <td id="L1887" class="blob-num js-line-number" data-line-number="1887"></td>
        <td id="LC1887" class="blob-code blob-code-inner js-file-line">    saddlebrown<span class="pl-k">:</span> <span class="pl-c1">9127187</span>,</td>
      </tr>
      <tr>
        <td id="L1888" class="blob-num js-line-number" data-line-number="1888"></td>
        <td id="LC1888" class="blob-code blob-code-inner js-file-line">    salmon<span class="pl-k">:</span> <span class="pl-c1">16416882</span>,</td>
      </tr>
      <tr>
        <td id="L1889" class="blob-num js-line-number" data-line-number="1889"></td>
        <td id="LC1889" class="blob-code blob-code-inner js-file-line">    sandybrown<span class="pl-k">:</span> <span class="pl-c1">16032864</span>,</td>
      </tr>
      <tr>
        <td id="L1890" class="blob-num js-line-number" data-line-number="1890"></td>
        <td id="LC1890" class="blob-code blob-code-inner js-file-line">    seagreen<span class="pl-k">:</span> <span class="pl-c1">3050327</span>,</td>
      </tr>
      <tr>
        <td id="L1891" class="blob-num js-line-number" data-line-number="1891"></td>
        <td id="LC1891" class="blob-code blob-code-inner js-file-line">    seashell<span class="pl-k">:</span> <span class="pl-c1">16774638</span>,</td>
      </tr>
      <tr>
        <td id="L1892" class="blob-num js-line-number" data-line-number="1892"></td>
        <td id="LC1892" class="blob-code blob-code-inner js-file-line">    sienna<span class="pl-k">:</span> <span class="pl-c1">10506797</span>,</td>
      </tr>
      <tr>
        <td id="L1893" class="blob-num js-line-number" data-line-number="1893"></td>
        <td id="LC1893" class="blob-code blob-code-inner js-file-line">    silver<span class="pl-k">:</span> <span class="pl-c1">12632256</span>,</td>
      </tr>
      <tr>
        <td id="L1894" class="blob-num js-line-number" data-line-number="1894"></td>
        <td id="LC1894" class="blob-code blob-code-inner js-file-line">    skyblue<span class="pl-k">:</span> <span class="pl-c1">8900331</span>,</td>
      </tr>
      <tr>
        <td id="L1895" class="blob-num js-line-number" data-line-number="1895"></td>
        <td id="LC1895" class="blob-code blob-code-inner js-file-line">    slateblue<span class="pl-k">:</span> <span class="pl-c1">6970061</span>,</td>
      </tr>
      <tr>
        <td id="L1896" class="blob-num js-line-number" data-line-number="1896"></td>
        <td id="LC1896" class="blob-code blob-code-inner js-file-line">    slategray<span class="pl-k">:</span> <span class="pl-c1">7372944</span>,</td>
      </tr>
      <tr>
        <td id="L1897" class="blob-num js-line-number" data-line-number="1897"></td>
        <td id="LC1897" class="blob-code blob-code-inner js-file-line">    slategrey<span class="pl-k">:</span> <span class="pl-c1">7372944</span>,</td>
      </tr>
      <tr>
        <td id="L1898" class="blob-num js-line-number" data-line-number="1898"></td>
        <td id="LC1898" class="blob-code blob-code-inner js-file-line">    snow<span class="pl-k">:</span> <span class="pl-c1">16775930</span>,</td>
      </tr>
      <tr>
        <td id="L1899" class="blob-num js-line-number" data-line-number="1899"></td>
        <td id="LC1899" class="blob-code blob-code-inner js-file-line">    springgreen<span class="pl-k">:</span> <span class="pl-c1">65407</span>,</td>
      </tr>
      <tr>
        <td id="L1900" class="blob-num js-line-number" data-line-number="1900"></td>
        <td id="LC1900" class="blob-code blob-code-inner js-file-line">    steelblue<span class="pl-k">:</span> <span class="pl-c1">4620980</span>,</td>
      </tr>
      <tr>
        <td id="L1901" class="blob-num js-line-number" data-line-number="1901"></td>
        <td id="LC1901" class="blob-code blob-code-inner js-file-line">    tan<span class="pl-k">:</span> <span class="pl-c1">13808780</span>,</td>
      </tr>
      <tr>
        <td id="L1902" class="blob-num js-line-number" data-line-number="1902"></td>
        <td id="LC1902" class="blob-code blob-code-inner js-file-line">    teal<span class="pl-k">:</span> <span class="pl-c1">32896</span>,</td>
      </tr>
      <tr>
        <td id="L1903" class="blob-num js-line-number" data-line-number="1903"></td>
        <td id="LC1903" class="blob-code blob-code-inner js-file-line">    thistle<span class="pl-k">:</span> <span class="pl-c1">14204888</span>,</td>
      </tr>
      <tr>
        <td id="L1904" class="blob-num js-line-number" data-line-number="1904"></td>
        <td id="LC1904" class="blob-code blob-code-inner js-file-line">    tomato<span class="pl-k">:</span> <span class="pl-c1">16737095</span>,</td>
      </tr>
      <tr>
        <td id="L1905" class="blob-num js-line-number" data-line-number="1905"></td>
        <td id="LC1905" class="blob-code blob-code-inner js-file-line">    turquoise<span class="pl-k">:</span> <span class="pl-c1">4251856</span>,</td>
      </tr>
      <tr>
        <td id="L1906" class="blob-num js-line-number" data-line-number="1906"></td>
        <td id="LC1906" class="blob-code blob-code-inner js-file-line">    violet<span class="pl-k">:</span> <span class="pl-c1">15631086</span>,</td>
      </tr>
      <tr>
        <td id="L1907" class="blob-num js-line-number" data-line-number="1907"></td>
        <td id="LC1907" class="blob-code blob-code-inner js-file-line">    wheat<span class="pl-k">:</span> <span class="pl-c1">16113331</span>,</td>
      </tr>
      <tr>
        <td id="L1908" class="blob-num js-line-number" data-line-number="1908"></td>
        <td id="LC1908" class="blob-code blob-code-inner js-file-line">    white<span class="pl-k">:</span> <span class="pl-c1">16777215</span>,</td>
      </tr>
      <tr>
        <td id="L1909" class="blob-num js-line-number" data-line-number="1909"></td>
        <td id="LC1909" class="blob-code blob-code-inner js-file-line">    whitesmoke<span class="pl-k">:</span> <span class="pl-c1">16119285</span>,</td>
      </tr>
      <tr>
        <td id="L1910" class="blob-num js-line-number" data-line-number="1910"></td>
        <td id="LC1910" class="blob-code blob-code-inner js-file-line">    yellow<span class="pl-k">:</span> <span class="pl-c1">16776960</span>,</td>
      </tr>
      <tr>
        <td id="L1911" class="blob-num js-line-number" data-line-number="1911"></td>
        <td id="LC1911" class="blob-code blob-code-inner js-file-line">    yellowgreen<span class="pl-k">:</span> <span class="pl-c1">10145074</span></td>
      </tr>
      <tr>
        <td id="L1912" class="blob-num js-line-number" data-line-number="1912"></td>
        <td id="LC1912" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L1913" class="blob-num js-line-number" data-line-number="1913"></td>
        <td id="LC1913" class="blob-code blob-code-inner js-file-line">  d3_rgb_names.forEach(<span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1914" class="blob-num js-line-number" data-line-number="1914"></td>
        <td id="LC1914" class="blob-code blob-code-inner js-file-line">    d3_rgb_names.set(key, d3_rgbNumber(value));</td>
      </tr>
      <tr>
        <td id="L1915" class="blob-num js-line-number" data-line-number="1915"></td>
        <td id="LC1915" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L1916" class="blob-num js-line-number" data-line-number="1916"></td>
        <td id="LC1916" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_functor</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L1917" class="blob-num js-line-number" data-line-number="1917"></td>
        <td id="LC1917" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">typeof</span> v <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-en">v</span> : <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1918" class="blob-num js-line-number" data-line-number="1918"></td>
        <td id="LC1918" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> v;</td>
      </tr>
      <tr>
        <td id="L1919" class="blob-num js-line-number" data-line-number="1919"></td>
        <td id="LC1919" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1920" class="blob-num js-line-number" data-line-number="1920"></td>
        <td id="LC1920" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1921" class="blob-num js-line-number" data-line-number="1921"></td>
        <td id="LC1921" class="blob-code blob-code-inner js-file-line">  d3.functor <span class="pl-k">=</span> d3_functor;</td>
      </tr>
      <tr>
        <td id="L1922" class="blob-num js-line-number" data-line-number="1922"></td>
        <td id="LC1922" class="blob-code blob-code-inner js-file-line">  d3.xhr <span class="pl-k">=</span> d3_xhrType(d3_identity);</td>
      </tr>
      <tr>
        <td id="L1923" class="blob-num js-line-number" data-line-number="1923"></td>
        <td id="LC1923" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_xhrType</span>(<span class="pl-smi">response</span>) {</td>
      </tr>
      <tr>
        <td id="L1924" class="blob-num js-line-number" data-line-number="1924"></td>
        <td id="LC1924" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>, <span class="pl-smi">mimeType</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L1925" class="blob-num js-line-number" data-line-number="1925"></td>
        <td id="LC1925" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> mimeType <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) callback <span class="pl-k">=</span> mimeType, </td>
      </tr>
      <tr>
        <td id="L1926" class="blob-num js-line-number" data-line-number="1926"></td>
        <td id="LC1926" class="blob-code blob-code-inner js-file-line">      mimeType <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1927" class="blob-num js-line-number" data-line-number="1927"></td>
        <td id="LC1927" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_xhr(url, mimeType, response, callback);</td>
      </tr>
      <tr>
        <td id="L1928" class="blob-num js-line-number" data-line-number="1928"></td>
        <td id="LC1928" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1929" class="blob-num js-line-number" data-line-number="1929"></td>
        <td id="LC1929" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1930" class="blob-num js-line-number" data-line-number="1930"></td>
        <td id="LC1930" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_xhr</span>(<span class="pl-smi">url</span>, <span class="pl-smi">mimeType</span>, <span class="pl-smi">response</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L1931" class="blob-num js-line-number" data-line-number="1931"></td>
        <td id="LC1931" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> xhr <span class="pl-k">=</span> {}, dispatch <span class="pl-k">=</span> d3.dispatch(<span class="pl-s"><span class="pl-pds">&quot;</span>beforesend<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>progress<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span>), headers <span class="pl-k">=</span> {}, request <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>(), responseType <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1932" class="blob-num js-line-number" data-line-number="1932"></td>
        <td id="LC1932" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.XDomainRequest <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>withCredentials<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> request) <span class="pl-k">&amp;&amp;</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(http(s)<span class="pl-k">?</span>:)<span class="pl-k">?</span><span class="pl-cce">\/\/</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(url)) request <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">XDomainRequest</span>();</td>
      </tr>
      <tr>
        <td id="L1933" class="blob-num js-line-number" data-line-number="1933"></td>
        <td id="LC1933" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>onload<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> request <span class="pl-k">?</span> request.onload <span class="pl-k">=</span> request.onerror <span class="pl-k">=</span> respond <span class="pl-k">:</span> <span class="pl-c1">request</span>.<span class="pl-en">onreadystatechange</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1934" class="blob-num js-line-number" data-line-number="1934"></td>
        <td id="LC1934" class="blob-code blob-code-inner js-file-line">      request.<span class="pl-c1">readyState</span> <span class="pl-k">&gt;</span> <span class="pl-c1">3</span> <span class="pl-k">&amp;&amp;</span> respond();</td>
      </tr>
      <tr>
        <td id="L1935" class="blob-num js-line-number" data-line-number="1935"></td>
        <td id="LC1935" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1936" class="blob-num js-line-number" data-line-number="1936"></td>
        <td id="LC1936" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">respond</span>() {</td>
      </tr>
      <tr>
        <td id="L1937" class="blob-num js-line-number" data-line-number="1937"></td>
        <td id="LC1937" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> status <span class="pl-k">=</span> request.<span class="pl-c1">status</span>, result;</td>
      </tr>
      <tr>
        <td id="L1938" class="blob-num js-line-number" data-line-number="1938"></td>
        <td id="LC1938" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>status <span class="pl-k">&amp;&amp;</span> d3_xhrHasResponse(request) <span class="pl-k">||</span> status <span class="pl-k">&gt;=</span> <span class="pl-c1">200</span> <span class="pl-k">&amp;&amp;</span> status <span class="pl-k">&lt;</span> <span class="pl-c1">300</span> <span class="pl-k">||</span> status <span class="pl-k">===</span> <span class="pl-c1">304</span>) {</td>
      </tr>
      <tr>
        <td id="L1939" class="blob-num js-line-number" data-line-number="1939"></td>
        <td id="LC1939" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L1940" class="blob-num js-line-number" data-line-number="1940"></td>
        <td id="LC1940" class="blob-code blob-code-inner js-file-line">          result <span class="pl-k">=</span> response.<span class="pl-c1">call</span>(xhr, request);</td>
      </tr>
      <tr>
        <td id="L1941" class="blob-num js-line-number" data-line-number="1941"></td>
        <td id="LC1941" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L1942" class="blob-num js-line-number" data-line-number="1942"></td>
        <td id="LC1942" class="blob-code blob-code-inner js-file-line">          dispatch<span class="pl-c1">.error</span>.<span class="pl-c1">call</span>(xhr, e);</td>
      </tr>
      <tr>
        <td id="L1943" class="blob-num js-line-number" data-line-number="1943"></td>
        <td id="LC1943" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1944" class="blob-num js-line-number" data-line-number="1944"></td>
        <td id="LC1944" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1945" class="blob-num js-line-number" data-line-number="1945"></td>
        <td id="LC1945" class="blob-code blob-code-inner js-file-line">        dispatch.load.<span class="pl-c1">call</span>(xhr, result);</td>
      </tr>
      <tr>
        <td id="L1946" class="blob-num js-line-number" data-line-number="1946"></td>
        <td id="LC1946" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1947" class="blob-num js-line-number" data-line-number="1947"></td>
        <td id="LC1947" class="blob-code blob-code-inner js-file-line">        dispatch<span class="pl-c1">.error</span>.<span class="pl-c1">call</span>(xhr, request);</td>
      </tr>
      <tr>
        <td id="L1948" class="blob-num js-line-number" data-line-number="1948"></td>
        <td id="LC1948" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1949" class="blob-num js-line-number" data-line-number="1949"></td>
        <td id="LC1949" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1950" class="blob-num js-line-number" data-line-number="1950"></td>
        <td id="LC1950" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">request</span>.<span class="pl-en">onprogress</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L1951" class="blob-num js-line-number" data-line-number="1951"></td>
        <td id="LC1951" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> o <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>;</td>
      </tr>
      <tr>
        <td id="L1952" class="blob-num js-line-number" data-line-number="1952"></td>
        <td id="LC1952" class="blob-code blob-code-inner js-file-line">      d3.<span class="pl-c1">event</span> <span class="pl-k">=</span> <span class="pl-c1">event</span>;</td>
      </tr>
      <tr>
        <td id="L1953" class="blob-num js-line-number" data-line-number="1953"></td>
        <td id="LC1953" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L1954" class="blob-num js-line-number" data-line-number="1954"></td>
        <td id="LC1954" class="blob-code blob-code-inner js-file-line">        dispatch.progress.<span class="pl-c1">call</span>(xhr, request);</td>
      </tr>
      <tr>
        <td id="L1955" class="blob-num js-line-number" data-line-number="1955"></td>
        <td id="LC1955" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L1956" class="blob-num js-line-number" data-line-number="1956"></td>
        <td id="LC1956" class="blob-code blob-code-inner js-file-line">        d3.<span class="pl-c1">event</span> <span class="pl-k">=</span> o;</td>
      </tr>
      <tr>
        <td id="L1957" class="blob-num js-line-number" data-line-number="1957"></td>
        <td id="LC1957" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1958" class="blob-num js-line-number" data-line-number="1958"></td>
        <td id="LC1958" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1959" class="blob-num js-line-number" data-line-number="1959"></td>
        <td id="LC1959" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">xhr</span>.<span class="pl-en">header</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1960" class="blob-num js-line-number" data-line-number="1960"></td>
        <td id="LC1960" class="blob-code blob-code-inner js-file-line">      name <span class="pl-k">=</span> (name <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L1961" class="blob-num js-line-number" data-line-number="1961"></td>
        <td id="LC1961" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> headers[name];</td>
      </tr>
      <tr>
        <td id="L1962" class="blob-num js-line-number" data-line-number="1962"></td>
        <td id="LC1962" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (value <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-k">delete</span> headers[name]; <span class="pl-k">else</span> headers[name] <span class="pl-k">=</span> value <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1963" class="blob-num js-line-number" data-line-number="1963"></td>
        <td id="LC1963" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> xhr;</td>
      </tr>
      <tr>
        <td id="L1964" class="blob-num js-line-number" data-line-number="1964"></td>
        <td id="LC1964" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1965" class="blob-num js-line-number" data-line-number="1965"></td>
        <td id="LC1965" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">xhr</span>.<span class="pl-en">mimeType</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1966" class="blob-num js-line-number" data-line-number="1966"></td>
        <td id="LC1966" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> mimeType;</td>
      </tr>
      <tr>
        <td id="L1967" class="blob-num js-line-number" data-line-number="1967"></td>
        <td id="LC1967" class="blob-code blob-code-inner js-file-line">      mimeType <span class="pl-k">=</span> value <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> null <span class="pl-k">:</span> value <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1968" class="blob-num js-line-number" data-line-number="1968"></td>
        <td id="LC1968" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> xhr;</td>
      </tr>
      <tr>
        <td id="L1969" class="blob-num js-line-number" data-line-number="1969"></td>
        <td id="LC1969" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1970" class="blob-num js-line-number" data-line-number="1970"></td>
        <td id="LC1970" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">xhr</span>.<span class="pl-en">responseType</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1971" class="blob-num js-line-number" data-line-number="1971"></td>
        <td id="LC1971" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> responseType;</td>
      </tr>
      <tr>
        <td id="L1972" class="blob-num js-line-number" data-line-number="1972"></td>
        <td id="LC1972" class="blob-code blob-code-inner js-file-line">      responseType <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1973" class="blob-num js-line-number" data-line-number="1973"></td>
        <td id="LC1973" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> xhr;</td>
      </tr>
      <tr>
        <td id="L1974" class="blob-num js-line-number" data-line-number="1974"></td>
        <td id="LC1974" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1975" class="blob-num js-line-number" data-line-number="1975"></td>
        <td id="LC1975" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">xhr</span>.<span class="pl-en">response</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1976" class="blob-num js-line-number" data-line-number="1976"></td>
        <td id="LC1976" class="blob-code blob-code-inner js-file-line">      response <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1977" class="blob-num js-line-number" data-line-number="1977"></td>
        <td id="LC1977" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> xhr;</td>
      </tr>
      <tr>
        <td id="L1978" class="blob-num js-line-number" data-line-number="1978"></td>
        <td id="LC1978" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1979" class="blob-num js-line-number" data-line-number="1979"></td>
        <td id="LC1979" class="blob-code blob-code-inner js-file-line">    [ <span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>post<span class="pl-pds">&quot;</span></span> ].forEach(<span class="pl-k">function</span>(<span class="pl-smi">method</span>) {</td>
      </tr>
      <tr>
        <td id="L1980" class="blob-num js-line-number" data-line-number="1980"></td>
        <td id="LC1980" class="blob-code blob-code-inner js-file-line">      xhr[method] <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1981" class="blob-num js-line-number" data-line-number="1981"></td>
        <td id="LC1981" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> xhr.send.<span class="pl-c1">apply</span>(xhr, [ method ].<span class="pl-c1">concat</span>(d3_array(arguments)));</td>
      </tr>
      <tr>
        <td id="L1982" class="blob-num js-line-number" data-line-number="1982"></td>
        <td id="LC1982" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1983" class="blob-num js-line-number" data-line-number="1983"></td>
        <td id="LC1983" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1984" class="blob-num js-line-number" data-line-number="1984"></td>
        <td id="LC1984" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">xhr</span>.<span class="pl-en">send</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">method</span>, <span class="pl-smi">data</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L1985" class="blob-num js-line-number" data-line-number="1985"></td>
        <td id="LC1985" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> data <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) callback <span class="pl-k">=</span> data, data <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1986" class="blob-num js-line-number" data-line-number="1986"></td>
        <td id="LC1986" class="blob-code blob-code-inner js-file-line">      request.<span class="pl-c1">open</span>(method, url, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L1987" class="blob-num js-line-number" data-line-number="1987"></td>
        <td id="LC1987" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (mimeType <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>accept<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> headers)) headers[<span class="pl-s"><span class="pl-pds">&quot;</span>accept<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> mimeType <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,*/*<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1988" class="blob-num js-line-number" data-line-number="1988"></td>
        <td id="LC1988" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (request.setRequestHeader) <span class="pl-k">for</span> (<span class="pl-k">var</span> name <span class="pl-k">in</span> headers) request.<span class="pl-c1">setRequestHeader</span>(name, headers[name]);</td>
      </tr>
      <tr>
        <td id="L1989" class="blob-num js-line-number" data-line-number="1989"></td>
        <td id="LC1989" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (mimeType <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> request.overrideMimeType) request.overrideMimeType(mimeType);</td>
      </tr>
      <tr>
        <td id="L1990" class="blob-num js-line-number" data-line-number="1990"></td>
        <td id="LC1990" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (responseType <span class="pl-k">!=</span> <span class="pl-c1">null</span>) request.responseType <span class="pl-k">=</span> responseType;</td>
      </tr>
      <tr>
        <td id="L1991" class="blob-num js-line-number" data-line-number="1991"></td>
        <td id="LC1991" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (callback <span class="pl-k">!=</span> <span class="pl-c1">null</span>) xhr.on(<span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span>, callback).on(<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L1992" class="blob-num js-line-number" data-line-number="1992"></td>
        <td id="LC1992" class="blob-code blob-code-inner js-file-line">        callback(<span class="pl-c1">null</span>, request);</td>
      </tr>
      <tr>
        <td id="L1993" class="blob-num js-line-number" data-line-number="1993"></td>
        <td id="LC1993" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1994" class="blob-num js-line-number" data-line-number="1994"></td>
        <td id="LC1994" class="blob-code blob-code-inner js-file-line">      dispatch.beforesend.<span class="pl-c1">call</span>(xhr, request);</td>
      </tr>
      <tr>
        <td id="L1995" class="blob-num js-line-number" data-line-number="1995"></td>
        <td id="LC1995" class="blob-code blob-code-inner js-file-line">      request.<span class="pl-c1">send</span>(data <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> null <span class="pl-k">:</span> data);</td>
      </tr>
      <tr>
        <td id="L1996" class="blob-num js-line-number" data-line-number="1996"></td>
        <td id="LC1996" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> xhr;</td>
      </tr>
      <tr>
        <td id="L1997" class="blob-num js-line-number" data-line-number="1997"></td>
        <td id="LC1997" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1998" class="blob-num js-line-number" data-line-number="1998"></td>
        <td id="LC1998" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">xhr</span>.<span class="pl-en">abort</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1999" class="blob-num js-line-number" data-line-number="1999"></td>
        <td id="LC1999" class="blob-code blob-code-inner js-file-line">      request.<span class="pl-c1">abort</span>();</td>
      </tr>
      <tr>
        <td id="L2000" class="blob-num js-line-number" data-line-number="2000"></td>
        <td id="LC2000" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> xhr;</td>
      </tr>
      <tr>
        <td id="L2001" class="blob-num js-line-number" data-line-number="2001"></td>
        <td id="LC2001" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2002" class="blob-num js-line-number" data-line-number="2002"></td>
        <td id="LC2002" class="blob-code blob-code-inner js-file-line">    d3.rebind(xhr, dispatch, <span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2003" class="blob-num js-line-number" data-line-number="2003"></td>
        <td id="LC2003" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> callback <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> xhr <span class="pl-k">:</span> xhr.get(d3_xhr_fixCallback(callback));</td>
      </tr>
      <tr>
        <td id="L2004" class="blob-num js-line-number" data-line-number="2004"></td>
        <td id="LC2004" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2005" class="blob-num js-line-number" data-line-number="2005"></td>
        <td id="LC2005" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_xhr_fixCallback</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L2006" class="blob-num js-line-number" data-line-number="2006"></td>
        <td id="LC2006" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> callback.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">error</span>, <span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L2007" class="blob-num js-line-number" data-line-number="2007"></td>
        <td id="LC2007" class="blob-code blob-code-inner js-file-line">      callback(error <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> request <span class="pl-k">:</span> <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L2008" class="blob-num js-line-number" data-line-number="2008"></td>
        <td id="LC2008" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> callback;</td>
      </tr>
      <tr>
        <td id="L2009" class="blob-num js-line-number" data-line-number="2009"></td>
        <td id="LC2009" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2010" class="blob-num js-line-number" data-line-number="2010"></td>
        <td id="LC2010" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_xhrHasResponse</span>(<span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L2011" class="blob-num js-line-number" data-line-number="2011"></td>
        <td id="LC2011" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> type <span class="pl-k">=</span> request.responseType;</td>
      </tr>
      <tr>
        <td id="L2012" class="blob-num js-line-number" data-line-number="2012"></td>
        <td id="LC2012" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> type <span class="pl-k">&amp;&amp;</span> type <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> request.response <span class="pl-k">:</span> request.<span class="pl-c1">responseText</span>;</td>
      </tr>
      <tr>
        <td id="L2013" class="blob-num js-line-number" data-line-number="2013"></td>
        <td id="LC2013" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2014" class="blob-num js-line-number" data-line-number="2014"></td>
        <td id="LC2014" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">dsv</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">delimiter</span>, <span class="pl-smi">mimeType</span>) {</td>
      </tr>
      <tr>
        <td id="L2015" class="blob-num js-line-number" data-line-number="2015"></td>
        <td id="LC2015" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> reFormat <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>[&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> delimiter <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>]<span class="pl-pds">&quot;</span></span>), delimiterCode <span class="pl-k">=</span> delimiter.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2016" class="blob-num js-line-number" data-line-number="2016"></td>
        <td id="LC2016" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">dsv</span>(<span class="pl-smi">url</span>, <span class="pl-smi">row</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L2017" class="blob-num js-line-number" data-line-number="2017"></td>
        <td id="LC2017" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) callback <span class="pl-k">=</span> row, row <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2018" class="blob-num js-line-number" data-line-number="2018"></td>
        <td id="LC2018" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> xhr <span class="pl-k">=</span> d3_xhr(url, mimeType, row <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> response <span class="pl-k">:</span> typedResponse(row), callback);</td>
      </tr>
      <tr>
        <td id="L2019" class="blob-num js-line-number" data-line-number="2019"></td>
        <td id="LC2019" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">xhr</span>.<span class="pl-en">row</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L2020" class="blob-num js-line-number" data-line-number="2020"></td>
        <td id="LC2020" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> xhr.response((row <span class="pl-k">=</span> _) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> response <span class="pl-k">:</span> typedResponse(_)) <span class="pl-k">:</span> row;</td>
      </tr>
      <tr>
        <td id="L2021" class="blob-num js-line-number" data-line-number="2021"></td>
        <td id="LC2021" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L2022" class="blob-num js-line-number" data-line-number="2022"></td>
        <td id="LC2022" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> xhr;</td>
      </tr>
      <tr>
        <td id="L2023" class="blob-num js-line-number" data-line-number="2023"></td>
        <td id="LC2023" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2024" class="blob-num js-line-number" data-line-number="2024"></td>
        <td id="LC2024" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">response</span>(<span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L2025" class="blob-num js-line-number" data-line-number="2025"></td>
        <td id="LC2025" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> dsv.<span class="pl-c1">parse</span>(request.<span class="pl-c1">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L2026" class="blob-num js-line-number" data-line-number="2026"></td>
        <td id="LC2026" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2027" class="blob-num js-line-number" data-line-number="2027"></td>
        <td id="LC2027" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">typedResponse</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L2028" class="blob-num js-line-number" data-line-number="2028"></td>
        <td id="LC2028" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L2029" class="blob-num js-line-number" data-line-number="2029"></td>
        <td id="LC2029" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> dsv.<span class="pl-c1">parse</span>(request.<span class="pl-c1">responseText</span>, f);</td>
      </tr>
      <tr>
        <td id="L2030" class="blob-num js-line-number" data-line-number="2030"></td>
        <td id="LC2030" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L2031" class="blob-num js-line-number" data-line-number="2031"></td>
        <td id="LC2031" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2032" class="blob-num js-line-number" data-line-number="2032"></td>
        <td id="LC2032" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">dsv</span>.<span class="pl-en">parse</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">text</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L2033" class="blob-num js-line-number" data-line-number="2033"></td>
        <td id="LC2033" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> o;</td>
      </tr>
      <tr>
        <td id="L2034" class="blob-num js-line-number" data-line-number="2034"></td>
        <td id="LC2034" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> dsv.parseRows(text, <span class="pl-k">function</span>(<span class="pl-smi">row</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2035" class="blob-num js-line-number" data-line-number="2035"></td>
        <td id="LC2035" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (o) <span class="pl-k">return</span> o(row, i <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2036" class="blob-num js-line-number" data-line-number="2036"></td>
        <td id="LC2036" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> a <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>return {<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> row.map(<span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2037" class="blob-num js-line-number" data-line-number="2037"></td>
        <td id="LC2037" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">JSON</span>.stringify(name) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>: d[<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> i <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2038" class="blob-num js-line-number" data-line-number="2038"></td>
        <td id="LC2038" class="blob-code blob-code-inner js-file-line">        }).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2039" class="blob-num js-line-number" data-line-number="2039"></td>
        <td id="LC2039" class="blob-code blob-code-inner js-file-line">        o <span class="pl-k">=</span> f <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">row</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2040" class="blob-num js-line-number" data-line-number="2040"></td>
        <td id="LC2040" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> f(a(row), i);</td>
      </tr>
      <tr>
        <td id="L2041" class="blob-num js-line-number" data-line-number="2041"></td>
        <td id="LC2041" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">:</span> a;</td>
      </tr>
      <tr>
        <td id="L2042" class="blob-num js-line-number" data-line-number="2042"></td>
        <td id="LC2042" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L2043" class="blob-num js-line-number" data-line-number="2043"></td>
        <td id="LC2043" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2044" class="blob-num js-line-number" data-line-number="2044"></td>
        <td id="LC2044" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">dsv</span>.<span class="pl-en">parseRows</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">text</span>, <span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L2045" class="blob-num js-line-number" data-line-number="2045"></td>
        <td id="LC2045" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> <span class="pl-c1">EOL</span> <span class="pl-k">=</span> {}, <span class="pl-c1">EOF</span> <span class="pl-k">=</span> {}, rows <span class="pl-k">=</span> [], N <span class="pl-k">=</span> text.<span class="pl-c1">length</span>, I <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> <span class="pl-c1">0</span>, t, eol;</td>
      </tr>
      <tr>
        <td id="L2046" class="blob-num js-line-number" data-line-number="2046"></td>
        <td id="LC2046" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">token</span>() {</td>
      </tr>
      <tr>
        <td id="L2047" class="blob-num js-line-number" data-line-number="2047"></td>
        <td id="LC2047" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (I <span class="pl-k">&gt;=</span> N) <span class="pl-k">return</span> <span class="pl-c1">EOF</span>;</td>
      </tr>
      <tr>
        <td id="L2048" class="blob-num js-line-number" data-line-number="2048"></td>
        <td id="LC2048" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (eol) <span class="pl-k">return</span> eol <span class="pl-k">=</span> <span class="pl-c1">false</span>, <span class="pl-c1">EOL</span>;</td>
      </tr>
      <tr>
        <td id="L2049" class="blob-num js-line-number" data-line-number="2049"></td>
        <td id="LC2049" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> j <span class="pl-k">=</span> I;</td>
      </tr>
      <tr>
        <td id="L2050" class="blob-num js-line-number" data-line-number="2050"></td>
        <td id="LC2050" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (text.<span class="pl-c1">charCodeAt</span>(j) <span class="pl-k">===</span> <span class="pl-c1">34</span>) {</td>
      </tr>
      <tr>
        <td id="L2051" class="blob-num js-line-number" data-line-number="2051"></td>
        <td id="LC2051" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> i <span class="pl-k">=</span> j;</td>
      </tr>
      <tr>
        <td id="L2052" class="blob-num js-line-number" data-line-number="2052"></td>
        <td id="LC2052" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span> (i<span class="pl-k">++</span> <span class="pl-k">&lt;</span> N) {</td>
      </tr>
      <tr>
        <td id="L2053" class="blob-num js-line-number" data-line-number="2053"></td>
        <td id="LC2053" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (text.<span class="pl-c1">charCodeAt</span>(i) <span class="pl-k">===</span> <span class="pl-c1">34</span>) {</td>
      </tr>
      <tr>
        <td id="L2054" class="blob-num js-line-number" data-line-number="2054"></td>
        <td id="LC2054" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (text.<span class="pl-c1">charCodeAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">!==</span> <span class="pl-c1">34</span>) <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2055" class="blob-num js-line-number" data-line-number="2055"></td>
        <td id="LC2055" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">++</span>i;</td>
      </tr>
      <tr>
        <td id="L2056" class="blob-num js-line-number" data-line-number="2056"></td>
        <td id="LC2056" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2057" class="blob-num js-line-number" data-line-number="2057"></td>
        <td id="LC2057" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2058" class="blob-num js-line-number" data-line-number="2058"></td>
        <td id="LC2058" class="blob-code blob-code-inner js-file-line">          I <span class="pl-k">=</span> i <span class="pl-k">+</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L2059" class="blob-num js-line-number" data-line-number="2059"></td>
        <td id="LC2059" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> c <span class="pl-k">=</span> text.<span class="pl-c1">charCodeAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2060" class="blob-num js-line-number" data-line-number="2060"></td>
        <td id="LC2060" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (c <span class="pl-k">===</span> <span class="pl-c1">13</span>) {</td>
      </tr>
      <tr>
        <td id="L2061" class="blob-num js-line-number" data-line-number="2061"></td>
        <td id="LC2061" class="blob-code blob-code-inner js-file-line">            eol <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2062" class="blob-num js-line-number" data-line-number="2062"></td>
        <td id="LC2062" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (text.<span class="pl-c1">charCodeAt</span>(i <span class="pl-k">+</span> <span class="pl-c1">2</span>) <span class="pl-k">===</span> <span class="pl-c1">10</span>) <span class="pl-k">++</span>I;</td>
      </tr>
      <tr>
        <td id="L2063" class="blob-num js-line-number" data-line-number="2063"></td>
        <td id="LC2063" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (c <span class="pl-k">===</span> <span class="pl-c1">10</span>) {</td>
      </tr>
      <tr>
        <td id="L2064" class="blob-num js-line-number" data-line-number="2064"></td>
        <td id="LC2064" class="blob-code blob-code-inner js-file-line">            eol <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2065" class="blob-num js-line-number" data-line-number="2065"></td>
        <td id="LC2065" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2066" class="blob-num js-line-number" data-line-number="2066"></td>
        <td id="LC2066" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> text.<span class="pl-c1">slice</span>(j <span class="pl-k">+</span> <span class="pl-c1">1</span>, i).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&quot;&quot;<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2067" class="blob-num js-line-number" data-line-number="2067"></td>
        <td id="LC2067" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2068" class="blob-num js-line-number" data-line-number="2068"></td>
        <td id="LC2068" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (I <span class="pl-k">&lt;</span> N) {</td>
      </tr>
      <tr>
        <td id="L2069" class="blob-num js-line-number" data-line-number="2069"></td>
        <td id="LC2069" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> c <span class="pl-k">=</span> text.<span class="pl-c1">charCodeAt</span>(I<span class="pl-k">++</span>), k <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2070" class="blob-num js-line-number" data-line-number="2070"></td>
        <td id="LC2070" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (c <span class="pl-k">===</span> <span class="pl-c1">10</span>) eol <span class="pl-k">=</span> <span class="pl-c1">true</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (c <span class="pl-k">===</span> <span class="pl-c1">13</span>) {</td>
      </tr>
      <tr>
        <td id="L2071" class="blob-num js-line-number" data-line-number="2071"></td>
        <td id="LC2071" class="blob-code blob-code-inner js-file-line">            eol <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2072" class="blob-num js-line-number" data-line-number="2072"></td>
        <td id="LC2072" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (text.<span class="pl-c1">charCodeAt</span>(I) <span class="pl-k">===</span> <span class="pl-c1">10</span>) <span class="pl-k">++</span>I, <span class="pl-k">++</span>k;</td>
      </tr>
      <tr>
        <td id="L2073" class="blob-num js-line-number" data-line-number="2073"></td>
        <td id="LC2073" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (c <span class="pl-k">!==</span> delimiterCode) <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L2074" class="blob-num js-line-number" data-line-number="2074"></td>
        <td id="LC2074" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> text.<span class="pl-c1">slice</span>(j, I <span class="pl-k">-</span> k);</td>
      </tr>
      <tr>
        <td id="L2075" class="blob-num js-line-number" data-line-number="2075"></td>
        <td id="LC2075" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2076" class="blob-num js-line-number" data-line-number="2076"></td>
        <td id="LC2076" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> text.<span class="pl-c1">slice</span>(j);</td>
      </tr>
      <tr>
        <td id="L2077" class="blob-num js-line-number" data-line-number="2077"></td>
        <td id="LC2077" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2078" class="blob-num js-line-number" data-line-number="2078"></td>
        <td id="LC2078" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> ((t <span class="pl-k">=</span> token()) <span class="pl-k">!==</span> <span class="pl-c1">EOF</span>) {</td>
      </tr>
      <tr>
        <td id="L2079" class="blob-num js-line-number" data-line-number="2079"></td>
        <td id="LC2079" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> a <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2080" class="blob-num js-line-number" data-line-number="2080"></td>
        <td id="LC2080" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (t <span class="pl-k">!==</span> <span class="pl-c1">EOL</span> <span class="pl-k">&amp;&amp;</span> t <span class="pl-k">!==</span> <span class="pl-c1">EOF</span>) {</td>
      </tr>
      <tr>
        <td id="L2081" class="blob-num js-line-number" data-line-number="2081"></td>
        <td id="LC2081" class="blob-code blob-code-inner js-file-line">          a.<span class="pl-c1">push</span>(t);</td>
      </tr>
      <tr>
        <td id="L2082" class="blob-num js-line-number" data-line-number="2082"></td>
        <td id="LC2082" class="blob-code blob-code-inner js-file-line">          t <span class="pl-k">=</span> token();</td>
      </tr>
      <tr>
        <td id="L2083" class="blob-num js-line-number" data-line-number="2083"></td>
        <td id="LC2083" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2084" class="blob-num js-line-number" data-line-number="2084"></td>
        <td id="LC2084" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (f <span class="pl-k">&amp;&amp;</span> (a <span class="pl-k">=</span> f(a, n<span class="pl-k">++</span>)) <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L2085" class="blob-num js-line-number" data-line-number="2085"></td>
        <td id="LC2085" class="blob-code blob-code-inner js-file-line">        rows.<span class="pl-c1">push</span>(a);</td>
      </tr>
      <tr>
        <td id="L2086" class="blob-num js-line-number" data-line-number="2086"></td>
        <td id="LC2086" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2087" class="blob-num js-line-number" data-line-number="2087"></td>
        <td id="LC2087" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rows;</td>
      </tr>
      <tr>
        <td id="L2088" class="blob-num js-line-number" data-line-number="2088"></td>
        <td id="LC2088" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2089" class="blob-num js-line-number" data-line-number="2089"></td>
        <td id="LC2089" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">dsv</span>.<span class="pl-en">format</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">rows</span>) {</td>
      </tr>
      <tr>
        <td id="L2090" class="blob-num js-line-number" data-line-number="2090"></td>
        <td id="LC2090" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">Array</span>.isArray(rows[<span class="pl-c1">0</span>])) <span class="pl-k">return</span> dsv.formatRows(rows);</td>
      </tr>
      <tr>
        <td id="L2091" class="blob-num js-line-number" data-line-number="2091"></td>
        <td id="LC2091" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> fieldSet <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_Set</span>(), fields <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2092" class="blob-num js-line-number" data-line-number="2092"></td>
        <td id="LC2092" class="blob-code blob-code-inner js-file-line">      rows.forEach(<span class="pl-k">function</span>(<span class="pl-smi">row</span>) {</td>
      </tr>
      <tr>
        <td id="L2093" class="blob-num js-line-number" data-line-number="2093"></td>
        <td id="LC2093" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> field <span class="pl-k">in</span> row) {</td>
      </tr>
      <tr>
        <td id="L2094" class="blob-num js-line-number" data-line-number="2094"></td>
        <td id="LC2094" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>fieldSet.has(field)) {</td>
      </tr>
      <tr>
        <td id="L2095" class="blob-num js-line-number" data-line-number="2095"></td>
        <td id="LC2095" class="blob-code blob-code-inner js-file-line">            fields.<span class="pl-c1">push</span>(fieldSet.<span class="pl-c1">add</span>(field));</td>
      </tr>
      <tr>
        <td id="L2096" class="blob-num js-line-number" data-line-number="2096"></td>
        <td id="LC2096" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2097" class="blob-num js-line-number" data-line-number="2097"></td>
        <td id="LC2097" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2098" class="blob-num js-line-number" data-line-number="2098"></td>
        <td id="LC2098" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L2099" class="blob-num js-line-number" data-line-number="2099"></td>
        <td id="LC2099" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ fields.map(formatValue).<span class="pl-c1">join</span>(delimiter) ].<span class="pl-c1">concat</span>(rows.map(<span class="pl-k">function</span>(<span class="pl-smi">row</span>) {</td>
      </tr>
      <tr>
        <td id="L2100" class="blob-num js-line-number" data-line-number="2100"></td>
        <td id="LC2100" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> fields.map(<span class="pl-k">function</span>(<span class="pl-smi">field</span>) {</td>
      </tr>
      <tr>
        <td id="L2101" class="blob-num js-line-number" data-line-number="2101"></td>
        <td id="LC2101" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> formatValue(row[field]);</td>
      </tr>
      <tr>
        <td id="L2102" class="blob-num js-line-number" data-line-number="2102"></td>
        <td id="LC2102" class="blob-code blob-code-inner js-file-line">        }).<span class="pl-c1">join</span>(delimiter);</td>
      </tr>
      <tr>
        <td id="L2103" class="blob-num js-line-number" data-line-number="2103"></td>
        <td id="LC2103" class="blob-code blob-code-inner js-file-line">      })).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2104" class="blob-num js-line-number" data-line-number="2104"></td>
        <td id="LC2104" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2105" class="blob-num js-line-number" data-line-number="2105"></td>
        <td id="LC2105" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">dsv</span>.<span class="pl-en">formatRows</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">rows</span>) {</td>
      </tr>
      <tr>
        <td id="L2106" class="blob-num js-line-number" data-line-number="2106"></td>
        <td id="LC2106" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rows.map(formatRow).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2107" class="blob-num js-line-number" data-line-number="2107"></td>
        <td id="LC2107" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2108" class="blob-num js-line-number" data-line-number="2108"></td>
        <td id="LC2108" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">formatRow</span>(<span class="pl-smi">row</span>) {</td>
      </tr>
      <tr>
        <td id="L2109" class="blob-num js-line-number" data-line-number="2109"></td>
        <td id="LC2109" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> row.map(formatValue).<span class="pl-c1">join</span>(delimiter);</td>
      </tr>
      <tr>
        <td id="L2110" class="blob-num js-line-number" data-line-number="2110"></td>
        <td id="LC2110" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2111" class="blob-num js-line-number" data-line-number="2111"></td>
        <td id="LC2111" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">formatValue</span>(<span class="pl-smi">text</span>) {</td>
      </tr>
      <tr>
        <td id="L2112" class="blob-num js-line-number" data-line-number="2112"></td>
        <td id="LC2112" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> reFormat.<span class="pl-c1">test</span>(text) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> text.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\&quot;</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&quot;<span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> text;</td>
      </tr>
      <tr>
        <td id="L2113" class="blob-num js-line-number" data-line-number="2113"></td>
        <td id="LC2113" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2114" class="blob-num js-line-number" data-line-number="2114"></td>
        <td id="LC2114" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> dsv;</td>
      </tr>
      <tr>
        <td id="L2115" class="blob-num js-line-number" data-line-number="2115"></td>
        <td id="LC2115" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2116" class="blob-num js-line-number" data-line-number="2116"></td>
        <td id="LC2116" class="blob-code blob-code-inner js-file-line">  d3.csv <span class="pl-k">=</span> d3.dsv(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>text/csv<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2117" class="blob-num js-line-number" data-line-number="2117"></td>
        <td id="LC2117" class="blob-code blob-code-inner js-file-line">  d3.tsv <span class="pl-k">=</span> d3.dsv(<span class="pl-s"><span class="pl-pds">&quot;</span>	<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>text/tab-separated-values<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2118" class="blob-num js-line-number" data-line-number="2118"></td>
        <td id="LC2118" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame <span class="pl-k">=</span> <span class="pl-v">this</span>[d3_vendorSymbol(<span class="pl-v">this</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>requestAnimationFrame<span class="pl-pds">&quot;</span></span>)] <span class="pl-k">||</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L2119" class="blob-num js-line-number" data-line-number="2119"></td>
        <td id="LC2119" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setTimeout</span>(callback, <span class="pl-c1">17</span>);</td>
      </tr>
      <tr>
        <td id="L2120" class="blob-num js-line-number" data-line-number="2120"></td>
        <td id="LC2120" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2121" class="blob-num js-line-number" data-line-number="2121"></td>
        <td id="LC2121" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">timer</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>, <span class="pl-smi">delay</span>, <span class="pl-smi">then</span>) {</td>
      </tr>
      <tr>
        <td id="L2122" class="blob-num js-line-number" data-line-number="2122"></td>
        <td id="LC2122" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2123" class="blob-num js-line-number" data-line-number="2123"></td>
        <td id="LC2123" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) delay <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2124" class="blob-num js-line-number" data-line-number="2124"></td>
        <td id="LC2124" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) then <span class="pl-k">=</span> <span class="pl-c1">Date</span>.now();</td>
      </tr>
      <tr>
        <td id="L2125" class="blob-num js-line-number" data-line-number="2125"></td>
        <td id="LC2125" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> time <span class="pl-k">=</span> then <span class="pl-k">+</span> delay, timer <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2126" class="blob-num js-line-number" data-line-number="2126"></td>
        <td id="LC2126" class="blob-code blob-code-inner js-file-line">      c<span class="pl-k">:</span> callback,</td>
      </tr>
      <tr>
        <td id="L2127" class="blob-num js-line-number" data-line-number="2127"></td>
        <td id="LC2127" class="blob-code blob-code-inner js-file-line">      t<span class="pl-k">:</span> time,</td>
      </tr>
      <tr>
        <td id="L2128" class="blob-num js-line-number" data-line-number="2128"></td>
        <td id="LC2128" class="blob-code blob-code-inner js-file-line">      f<span class="pl-k">:</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L2129" class="blob-num js-line-number" data-line-number="2129"></td>
        <td id="LC2129" class="blob-code blob-code-inner js-file-line">      n<span class="pl-k">:</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L2130" class="blob-num js-line-number" data-line-number="2130"></td>
        <td id="LC2130" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2131" class="blob-num js-line-number" data-line-number="2131"></td>
        <td id="LC2131" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (d3_timer_queueTail) d3_timer_queueTail.n <span class="pl-k">=</span> timer; <span class="pl-k">else</span> d3_timer_queueHead <span class="pl-k">=</span> timer;</td>
      </tr>
      <tr>
        <td id="L2132" class="blob-num js-line-number" data-line-number="2132"></td>
        <td id="LC2132" class="blob-code blob-code-inner js-file-line">    d3_timer_queueTail <span class="pl-k">=</span> timer;</td>
      </tr>
      <tr>
        <td id="L2133" class="blob-num js-line-number" data-line-number="2133"></td>
        <td id="LC2133" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_timer_interval) {</td>
      </tr>
      <tr>
        <td id="L2134" class="blob-num js-line-number" data-line-number="2134"></td>
        <td id="LC2134" class="blob-code blob-code-inner js-file-line">      d3_timer_timeout <span class="pl-k">=</span> <span class="pl-c1">clearTimeout</span>(d3_timer_timeout);</td>
      </tr>
      <tr>
        <td id="L2135" class="blob-num js-line-number" data-line-number="2135"></td>
        <td id="LC2135" class="blob-code blob-code-inner js-file-line">      d3_timer_interval <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2136" class="blob-num js-line-number" data-line-number="2136"></td>
        <td id="LC2136" class="blob-code blob-code-inner js-file-line">      d3_timer_frame(d3_timer_step);</td>
      </tr>
      <tr>
        <td id="L2137" class="blob-num js-line-number" data-line-number="2137"></td>
        <td id="LC2137" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2138" class="blob-num js-line-number" data-line-number="2138"></td>
        <td id="LC2138" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2139" class="blob-num js-line-number" data-line-number="2139"></td>
        <td id="LC2139" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_timer_step</span>() {</td>
      </tr>
      <tr>
        <td id="L2140" class="blob-num js-line-number" data-line-number="2140"></td>
        <td id="LC2140" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> now <span class="pl-k">=</span> d3_timer_mark(), delay <span class="pl-k">=</span> d3_timer_sweep() <span class="pl-k">-</span> now;</td>
      </tr>
      <tr>
        <td id="L2141" class="blob-num js-line-number" data-line-number="2141"></td>
        <td id="LC2141" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (delay <span class="pl-k">&gt;</span> <span class="pl-c1">24</span>) {</td>
      </tr>
      <tr>
        <td id="L2142" class="blob-num js-line-number" data-line-number="2142"></td>
        <td id="LC2142" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">isFinite</span>(delay)) {</td>
      </tr>
      <tr>
        <td id="L2143" class="blob-num js-line-number" data-line-number="2143"></td>
        <td id="LC2143" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">clearTimeout</span>(d3_timer_timeout);</td>
      </tr>
      <tr>
        <td id="L2144" class="blob-num js-line-number" data-line-number="2144"></td>
        <td id="LC2144" class="blob-code blob-code-inner js-file-line">        d3_timer_timeout <span class="pl-k">=</span> <span class="pl-c1">setTimeout</span>(d3_timer_step, delay);</td>
      </tr>
      <tr>
        <td id="L2145" class="blob-num js-line-number" data-line-number="2145"></td>
        <td id="LC2145" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2146" class="blob-num js-line-number" data-line-number="2146"></td>
        <td id="LC2146" class="blob-code blob-code-inner js-file-line">      d3_timer_interval <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2147" class="blob-num js-line-number" data-line-number="2147"></td>
        <td id="LC2147" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2148" class="blob-num js-line-number" data-line-number="2148"></td>
        <td id="LC2148" class="blob-code blob-code-inner js-file-line">      d3_timer_interval <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2149" class="blob-num js-line-number" data-line-number="2149"></td>
        <td id="LC2149" class="blob-code blob-code-inner js-file-line">      d3_timer_frame(d3_timer_step);</td>
      </tr>
      <tr>
        <td id="L2150" class="blob-num js-line-number" data-line-number="2150"></td>
        <td id="LC2150" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2151" class="blob-num js-line-number" data-line-number="2151"></td>
        <td id="LC2151" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2152" class="blob-num js-line-number" data-line-number="2152"></td>
        <td id="LC2152" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.timer</span>.<span class="pl-en">flush</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2153" class="blob-num js-line-number" data-line-number="2153"></td>
        <td id="LC2153" class="blob-code blob-code-inner js-file-line">    d3_timer_mark();</td>
      </tr>
      <tr>
        <td id="L2154" class="blob-num js-line-number" data-line-number="2154"></td>
        <td id="LC2154" class="blob-code blob-code-inner js-file-line">    d3_timer_sweep();</td>
      </tr>
      <tr>
        <td id="L2155" class="blob-num js-line-number" data-line-number="2155"></td>
        <td id="LC2155" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2156" class="blob-num js-line-number" data-line-number="2156"></td>
        <td id="LC2156" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_timer_mark</span>() {</td>
      </tr>
      <tr>
        <td id="L2157" class="blob-num js-line-number" data-line-number="2157"></td>
        <td id="LC2157" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> now <span class="pl-k">=</span> <span class="pl-c1">Date</span>.now();</td>
      </tr>
      <tr>
        <td id="L2158" class="blob-num js-line-number" data-line-number="2158"></td>
        <td id="LC2158" class="blob-code blob-code-inner js-file-line">    d3_timer_active <span class="pl-k">=</span> d3_timer_queueHead;</td>
      </tr>
      <tr>
        <td id="L2159" class="blob-num js-line-number" data-line-number="2159"></td>
        <td id="LC2159" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (d3_timer_active) {</td>
      </tr>
      <tr>
        <td id="L2160" class="blob-num js-line-number" data-line-number="2160"></td>
        <td id="LC2160" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (now <span class="pl-k">&gt;=</span> d3_timer_active.t) d3_timer_active.f <span class="pl-k">=</span> d3_timer_active.c(now <span class="pl-k">-</span> d3_timer_active.t);</td>
      </tr>
      <tr>
        <td id="L2161" class="blob-num js-line-number" data-line-number="2161"></td>
        <td id="LC2161" class="blob-code blob-code-inner js-file-line">      d3_timer_active <span class="pl-k">=</span> d3_timer_active.n;</td>
      </tr>
      <tr>
        <td id="L2162" class="blob-num js-line-number" data-line-number="2162"></td>
        <td id="LC2162" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2163" class="blob-num js-line-number" data-line-number="2163"></td>
        <td id="LC2163" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> now;</td>
      </tr>
      <tr>
        <td id="L2164" class="blob-num js-line-number" data-line-number="2164"></td>
        <td id="LC2164" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2165" class="blob-num js-line-number" data-line-number="2165"></td>
        <td id="LC2165" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_timer_sweep</span>() {</td>
      </tr>
      <tr>
        <td id="L2166" class="blob-num js-line-number" data-line-number="2166"></td>
        <td id="LC2166" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> t0, t1 <span class="pl-k">=</span> d3_timer_queueHead, time <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L2167" class="blob-num js-line-number" data-line-number="2167"></td>
        <td id="LC2167" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (t1) {</td>
      </tr>
      <tr>
        <td id="L2168" class="blob-num js-line-number" data-line-number="2168"></td>
        <td id="LC2168" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (t1.f) {</td>
      </tr>
      <tr>
        <td id="L2169" class="blob-num js-line-number" data-line-number="2169"></td>
        <td id="LC2169" class="blob-code blob-code-inner js-file-line">        t1 <span class="pl-k">=</span> t0 <span class="pl-k">?</span> t0.n <span class="pl-k">=</span> t1.n <span class="pl-k">:</span> d3_timer_queueHead <span class="pl-k">=</span> t1.n;</td>
      </tr>
      <tr>
        <td id="L2170" class="blob-num js-line-number" data-line-number="2170"></td>
        <td id="LC2170" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2171" class="blob-num js-line-number" data-line-number="2171"></td>
        <td id="LC2171" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (t1.t <span class="pl-k">&lt;</span> time) time <span class="pl-k">=</span> t1.t;</td>
      </tr>
      <tr>
        <td id="L2172" class="blob-num js-line-number" data-line-number="2172"></td>
        <td id="LC2172" class="blob-code blob-code-inner js-file-line">        t1 <span class="pl-k">=</span> (t0 <span class="pl-k">=</span> t1).n;</td>
      </tr>
      <tr>
        <td id="L2173" class="blob-num js-line-number" data-line-number="2173"></td>
        <td id="LC2173" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2174" class="blob-num js-line-number" data-line-number="2174"></td>
        <td id="LC2174" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2175" class="blob-num js-line-number" data-line-number="2175"></td>
        <td id="LC2175" class="blob-code blob-code-inner js-file-line">    d3_timer_queueTail <span class="pl-k">=</span> t0;</td>
      </tr>
      <tr>
        <td id="L2176" class="blob-num js-line-number" data-line-number="2176"></td>
        <td id="LC2176" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> time;</td>
      </tr>
      <tr>
        <td id="L2177" class="blob-num js-line-number" data-line-number="2177"></td>
        <td id="LC2177" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2178" class="blob-num js-line-number" data-line-number="2178"></td>
        <td id="LC2178" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_format_precision</span>(<span class="pl-smi">x</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2179" class="blob-num js-line-number" data-line-number="2179"></td>
        <td id="LC2179" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> p <span class="pl-k">-</span> (x <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">Math</span><span class="pl-c1">.log</span>(x) / <span class="pl-c1">Math</span>.<span class="pl-c1">LN10</span>) <span class="pl-k">:</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2180" class="blob-num js-line-number" data-line-number="2180"></td>
        <td id="LC2180" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2181" class="blob-num js-line-number" data-line-number="2181"></td>
        <td id="LC2181" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">round</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">n</span>) {</td>
      </tr>
      <tr>
        <td id="L2182" class="blob-num js-line-number" data-line-number="2182"></td>
        <td id="LC2182" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(x <span class="pl-k">*</span> (n <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, n))) / n <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(x);</td>
      </tr>
      <tr>
        <td id="L2183" class="blob-num js-line-number" data-line-number="2183"></td>
        <td id="LC2183" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2184" class="blob-num js-line-number" data-line-number="2184"></td>
        <td id="LC2184" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_formatPrefixes <span class="pl-k">=</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Âµ<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>k<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>G<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>T<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>P<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>E<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span> ].map(d3_formatPrefix);</td>
      </tr>
      <tr>
        <td id="L2185" class="blob-num js-line-number" data-line-number="2185"></td>
        <td id="LC2185" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">formatPrefix</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">precision</span>) {</td>
      </tr>
      <tr>
        <td id="L2186" class="blob-num js-line-number" data-line-number="2186"></td>
        <td id="LC2186" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2187" class="blob-num js-line-number" data-line-number="2187"></td>
        <td id="LC2187" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value) {</td>
      </tr>
      <tr>
        <td id="L2188" class="blob-num js-line-number" data-line-number="2188"></td>
        <td id="LC2188" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) value <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2189" class="blob-num js-line-number" data-line-number="2189"></td>
        <td id="LC2189" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (precision) value <span class="pl-k">=</span> d3.<span class="pl-c1">round</span>(value, d3_format_precision(value, precision));</td>
      </tr>
      <tr>
        <td id="L2190" class="blob-num js-line-number" data-line-number="2190"></td>
        <td id="LC2190" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">1e-12</span> <span class="pl-k">+</span> <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(value) / <span class="pl-c1">Math</span>.<span class="pl-c1">LN10</span>);</td>
      </tr>
      <tr>
        <td id="L2191" class="blob-num js-line-number" data-line-number="2191"></td>
        <td id="LC2191" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-k">-</span><span class="pl-c1">24</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">24</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((i <span class="pl-k">-</span> <span class="pl-c1">1</span>) / <span class="pl-c1">3</span>) <span class="pl-k">*</span> <span class="pl-c1">3</span>));</td>
      </tr>
      <tr>
        <td id="L2192" class="blob-num js-line-number" data-line-number="2192"></td>
        <td id="LC2192" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2193" class="blob-num js-line-number" data-line-number="2193"></td>
        <td id="LC2193" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_formatPrefixes[<span class="pl-c1">8</span> <span class="pl-k">+</span> i / <span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L2194" class="blob-num js-line-number" data-line-number="2194"></td>
        <td id="LC2194" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2195" class="blob-num js-line-number" data-line-number="2195"></td>
        <td id="LC2195" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_formatPrefix</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2196" class="blob-num js-line-number" data-line-number="2196"></td>
        <td id="LC2196" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, <span class="pl-c1">abs</span>(<span class="pl-c1">8</span> <span class="pl-k">-</span> i) <span class="pl-k">*</span> <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L2197" class="blob-num js-line-number" data-line-number="2197"></td>
        <td id="LC2197" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2198" class="blob-num js-line-number" data-line-number="2198"></td>
        <td id="LC2198" class="blob-code blob-code-inner js-file-line">      scale<span class="pl-k">:</span> i <span class="pl-k">&gt;</span> <span class="pl-c1">8</span> <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2199" class="blob-num js-line-number" data-line-number="2199"></td>
        <td id="LC2199" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d / k;</td>
      </tr>
      <tr>
        <td id="L2200" class="blob-num js-line-number" data-line-number="2200"></td>
        <td id="LC2200" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2201" class="blob-num js-line-number" data-line-number="2201"></td>
        <td id="LC2201" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L2202" class="blob-num js-line-number" data-line-number="2202"></td>
        <td id="LC2202" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2203" class="blob-num js-line-number" data-line-number="2203"></td>
        <td id="LC2203" class="blob-code blob-code-inner js-file-line">      symbol<span class="pl-k">:</span> d</td>
      </tr>
      <tr>
        <td id="L2204" class="blob-num js-line-number" data-line-number="2204"></td>
        <td id="LC2204" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2205" class="blob-num js-line-number" data-line-number="2205"></td>
        <td id="LC2205" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2206" class="blob-num js-line-number" data-line-number="2206"></td>
        <td id="LC2206" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_locale_numberFormat</span>(<span class="pl-smi">locale</span>) {</td>
      </tr>
      <tr>
        <td id="L2207" class="blob-num js-line-number" data-line-number="2207"></td>
        <td id="LC2207" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> locale_decimal <span class="pl-k">=</span> locale.decimal, locale_thousands <span class="pl-k">=</span> locale.thousands, locale_grouping <span class="pl-k">=</span> locale.grouping, locale_currency <span class="pl-k">=</span> locale.currency, formatGroup <span class="pl-k">=</span> locale_grouping <span class="pl-k">&amp;&amp;</span> locale_thousands <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">width</span>) {</td>
      </tr>
      <tr>
        <td id="L2208" class="blob-num js-line-number" data-line-number="2208"></td>
        <td id="LC2208" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> value.<span class="pl-c1">length</span>, t <span class="pl-k">=</span> [], j <span class="pl-k">=</span> <span class="pl-c1">0</span>, g <span class="pl-k">=</span> locale_grouping[<span class="pl-c1">0</span>], length <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2209" class="blob-num js-line-number" data-line-number="2209"></td>
        <td id="LC2209" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (i <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> g <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2210" class="blob-num js-line-number" data-line-number="2210"></td>
        <td id="LC2210" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (length <span class="pl-k">+</span> g <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">&gt;</span> width) g <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">1</span>, width <span class="pl-k">-</span> length);</td>
      </tr>
      <tr>
        <td id="L2211" class="blob-num js-line-number" data-line-number="2211"></td>
        <td id="LC2211" class="blob-code blob-code-inner js-file-line">        t.<span class="pl-c1">push</span>(value.<span class="pl-c1">substring</span>(i <span class="pl-k">-=</span> g, i <span class="pl-k">+</span> g));</td>
      </tr>
      <tr>
        <td id="L2212" class="blob-num js-line-number" data-line-number="2212"></td>
        <td id="LC2212" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((length <span class="pl-k">+=</span> g <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">&gt;</span> width) <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2213" class="blob-num js-line-number" data-line-number="2213"></td>
        <td id="LC2213" class="blob-code blob-code-inner js-file-line">        g <span class="pl-k">=</span> locale_grouping[j <span class="pl-k">=</span> (j <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">%</span> locale_grouping.<span class="pl-c1">length</span>];</td>
      </tr>
      <tr>
        <td id="L2214" class="blob-num js-line-number" data-line-number="2214"></td>
        <td id="LC2214" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2215" class="blob-num js-line-number" data-line-number="2215"></td>
        <td id="LC2215" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> t.<span class="pl-c1">reverse</span>().<span class="pl-c1">join</span>(locale_thousands);</td>
      </tr>
      <tr>
        <td id="L2216" class="blob-num js-line-number" data-line-number="2216"></td>
        <td id="LC2216" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> d3_identity;</td>
      </tr>
      <tr>
        <td id="L2217" class="blob-num js-line-number" data-line-number="2217"></td>
        <td id="LC2217" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">specifier</span>) {</td>
      </tr>
      <tr>
        <td id="L2218" class="blob-num js-line-number" data-line-number="2218"></td>
        <td id="LC2218" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> match <span class="pl-k">=</span> d3_format_re.<span class="pl-c1">exec</span>(specifier), fill <span class="pl-k">=</span> match[<span class="pl-c1">1</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, align <span class="pl-k">=</span> match[<span class="pl-c1">2</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>, sign <span class="pl-k">=</span> match[<span class="pl-c1">3</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>, symbol <span class="pl-k">=</span> match[<span class="pl-c1">4</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, zfill <span class="pl-k">=</span> match[<span class="pl-c1">5</span>], width <span class="pl-k">=</span> <span class="pl-k">+</span>match[<span class="pl-c1">6</span>], comma <span class="pl-k">=</span> match[<span class="pl-c1">7</span>], precision <span class="pl-k">=</span> match[<span class="pl-c1">8</span>], type <span class="pl-k">=</span> match[<span class="pl-c1">9</span>], scale <span class="pl-k">=</span> <span class="pl-c1">1</span>, prefix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, suffix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, integer <span class="pl-k">=</span> <span class="pl-c1">false</span>, exponent <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2219" class="blob-num js-line-number" data-line-number="2219"></td>
        <td id="LC2219" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (precision) precision <span class="pl-k">=</span> <span class="pl-k">+</span>precision.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2220" class="blob-num js-line-number" data-line-number="2220"></td>
        <td id="LC2220" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (zfill <span class="pl-k">||</span> fill <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> align <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2221" class="blob-num js-line-number" data-line-number="2221"></td>
        <td id="LC2221" class="blob-code blob-code-inner js-file-line">        zfill <span class="pl-k">=</span> fill <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2222" class="blob-num js-line-number" data-line-number="2222"></td>
        <td id="LC2222" class="blob-code blob-code-inner js-file-line">        align <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2223" class="blob-num js-line-number" data-line-number="2223"></td>
        <td id="LC2223" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2224" class="blob-num js-line-number" data-line-number="2224"></td>
        <td id="LC2224" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span> (type) {</td>
      </tr>
      <tr>
        <td id="L2225" class="blob-num js-line-number" data-line-number="2225"></td>
        <td id="LC2225" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2226" class="blob-num js-line-number" data-line-number="2226"></td>
        <td id="LC2226" class="blob-code blob-code-inner js-file-line">        comma <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2227" class="blob-num js-line-number" data-line-number="2227"></td>
        <td id="LC2227" class="blob-code blob-code-inner js-file-line">        type <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2228" class="blob-num js-line-number" data-line-number="2228"></td>
        <td id="LC2228" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2229" class="blob-num js-line-number" data-line-number="2229"></td>
        <td id="LC2229" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2230" class="blob-num js-line-number" data-line-number="2230"></td>
        <td id="LC2230" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2231" class="blob-num js-line-number" data-line-number="2231"></td>
        <td id="LC2231" class="blob-code blob-code-inner js-file-line">        scale <span class="pl-k">=</span> <span class="pl-c1">100</span>;</td>
      </tr>
      <tr>
        <td id="L2232" class="blob-num js-line-number" data-line-number="2232"></td>
        <td id="LC2232" class="blob-code blob-code-inner js-file-line">        suffix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2233" class="blob-num js-line-number" data-line-number="2233"></td>
        <td id="LC2233" class="blob-code blob-code-inner js-file-line">        type <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2234" class="blob-num js-line-number" data-line-number="2234"></td>
        <td id="LC2234" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2235" class="blob-num js-line-number" data-line-number="2235"></td>
        <td id="LC2235" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2236" class="blob-num js-line-number" data-line-number="2236"></td>
        <td id="LC2236" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2237" class="blob-num js-line-number" data-line-number="2237"></td>
        <td id="LC2237" class="blob-code blob-code-inner js-file-line">        scale <span class="pl-k">=</span> <span class="pl-c1">100</span>;</td>
      </tr>
      <tr>
        <td id="L2238" class="blob-num js-line-number" data-line-number="2238"></td>
        <td id="LC2238" class="blob-code blob-code-inner js-file-line">        suffix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2239" class="blob-num js-line-number" data-line-number="2239"></td>
        <td id="LC2239" class="blob-code blob-code-inner js-file-line">        type <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2240" class="blob-num js-line-number" data-line-number="2240"></td>
        <td id="LC2240" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2241" class="blob-num js-line-number" data-line-number="2241"></td>
        <td id="LC2241" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2242" class="blob-num js-line-number" data-line-number="2242"></td>
        <td id="LC2242" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2243" class="blob-num js-line-number" data-line-number="2243"></td>
        <td id="LC2243" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>o<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2244" class="blob-num js-line-number" data-line-number="2244"></td>
        <td id="LC2244" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2245" class="blob-num js-line-number" data-line-number="2245"></td>
        <td id="LC2245" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2246" class="blob-num js-line-number" data-line-number="2246"></td>
        <td id="LC2246" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (symbol <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span>) prefix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> type.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L2247" class="blob-num js-line-number" data-line-number="2247"></td>
        <td id="LC2247" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2248" class="blob-num js-line-number" data-line-number="2248"></td>
        <td id="LC2248" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2249" class="blob-num js-line-number" data-line-number="2249"></td>
        <td id="LC2249" class="blob-code blob-code-inner js-file-line">        exponent <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2250" class="blob-num js-line-number" data-line-number="2250"></td>
        <td id="LC2250" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2251" class="blob-num js-line-number" data-line-number="2251"></td>
        <td id="LC2251" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2252" class="blob-num js-line-number" data-line-number="2252"></td>
        <td id="LC2252" class="blob-code blob-code-inner js-file-line">        integer <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2253" class="blob-num js-line-number" data-line-number="2253"></td>
        <td id="LC2253" class="blob-code blob-code-inner js-file-line">        precision <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2254" class="blob-num js-line-number" data-line-number="2254"></td>
        <td id="LC2254" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2255" class="blob-num js-line-number" data-line-number="2255"></td>
        <td id="LC2255" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2256" class="blob-num js-line-number" data-line-number="2256"></td>
        <td id="LC2256" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2257" class="blob-num js-line-number" data-line-number="2257"></td>
        <td id="LC2257" class="blob-code blob-code-inner js-file-line">        scale <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2258" class="blob-num js-line-number" data-line-number="2258"></td>
        <td id="LC2258" class="blob-code blob-code-inner js-file-line">        type <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2259" class="blob-num js-line-number" data-line-number="2259"></td>
        <td id="LC2259" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L2260" class="blob-num js-line-number" data-line-number="2260"></td>
        <td id="LC2260" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2261" class="blob-num js-line-number" data-line-number="2261"></td>
        <td id="LC2261" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (symbol <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>) prefix <span class="pl-k">=</span> locale_currency[<span class="pl-c1">0</span>], suffix <span class="pl-k">=</span> locale_currency[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2262" class="blob-num js-line-number" data-line-number="2262"></td>
        <td id="LC2262" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (type <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>precision) type <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2263" class="blob-num js-line-number" data-line-number="2263"></td>
        <td id="LC2263" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (precision <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2264" class="blob-num js-line-number" data-line-number="2264"></td>
        <td id="LC2264" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (type <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>) precision <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">1</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">21</span>, precision)); <span class="pl-k">else</span> <span class="pl-k">if</span> (type <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> type <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span>) precision <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">20</span>, precision));</td>
      </tr>
      <tr>
        <td id="L2265" class="blob-num js-line-number" data-line-number="2265"></td>
        <td id="LC2265" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2266" class="blob-num js-line-number" data-line-number="2266"></td>
        <td id="LC2266" class="blob-code blob-code-inner js-file-line">      type <span class="pl-k">=</span> d3_format_types.get(type) <span class="pl-k">||</span> d3_format_typeDefault;</td>
      </tr>
      <tr>
        <td id="L2267" class="blob-num js-line-number" data-line-number="2267"></td>
        <td id="LC2267" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> zcomma <span class="pl-k">=</span> zfill <span class="pl-k">&amp;&amp;</span> comma;</td>
      </tr>
      <tr>
        <td id="L2268" class="blob-num js-line-number" data-line-number="2268"></td>
        <td id="LC2268" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2269" class="blob-num js-line-number" data-line-number="2269"></td>
        <td id="LC2269" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fullSuffix <span class="pl-k">=</span> suffix;</td>
      </tr>
      <tr>
        <td id="L2270" class="blob-num js-line-number" data-line-number="2270"></td>
        <td id="LC2270" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (integer <span class="pl-k">&amp;&amp;</span> value <span class="pl-k">%</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2271" class="blob-num js-line-number" data-line-number="2271"></td>
        <td id="LC2271" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> negative <span class="pl-k">=</span> value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> value <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">1</span> / value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> (value <span class="pl-k">=</span> <span class="pl-k">-</span>value, <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> sign <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> sign;</td>
      </tr>
      <tr>
        <td id="L2272" class="blob-num js-line-number" data-line-number="2272"></td>
        <td id="LC2272" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (scale <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2273" class="blob-num js-line-number" data-line-number="2273"></td>
        <td id="LC2273" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> unit <span class="pl-k">=</span> d3.formatPrefix(value, precision);</td>
      </tr>
      <tr>
        <td id="L2274" class="blob-num js-line-number" data-line-number="2274"></td>
        <td id="LC2274" class="blob-code blob-code-inner js-file-line">          value <span class="pl-k">=</span> unit.scale(value);</td>
      </tr>
      <tr>
        <td id="L2275" class="blob-num js-line-number" data-line-number="2275"></td>
        <td id="LC2275" class="blob-code blob-code-inner js-file-line">          fullSuffix <span class="pl-k">=</span> unit.symbol <span class="pl-k">+</span> suffix;</td>
      </tr>
      <tr>
        <td id="L2276" class="blob-num js-line-number" data-line-number="2276"></td>
        <td id="LC2276" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2277" class="blob-num js-line-number" data-line-number="2277"></td>
        <td id="LC2277" class="blob-code blob-code-inner js-file-line">          value <span class="pl-k">*=</span> scale;</td>
      </tr>
      <tr>
        <td id="L2278" class="blob-num js-line-number" data-line-number="2278"></td>
        <td id="LC2278" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2279" class="blob-num js-line-number" data-line-number="2279"></td>
        <td id="LC2279" class="blob-code blob-code-inner js-file-line">        value <span class="pl-k">=</span> type(value, precision);</td>
      </tr>
      <tr>
        <td id="L2280" class="blob-num js-line-number" data-line-number="2280"></td>
        <td id="LC2280" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> i <span class="pl-k">=</span> value.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>), before, after;</td>
      </tr>
      <tr>
        <td id="L2281" class="blob-num js-line-number" data-line-number="2281"></td>
        <td id="LC2281" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (i <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2282" class="blob-num js-line-number" data-line-number="2282"></td>
        <td id="LC2282" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> j <span class="pl-k">=</span> exponent <span class="pl-k">?</span> value.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2283" class="blob-num js-line-number" data-line-number="2283"></td>
        <td id="LC2283" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (j <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) before <span class="pl-k">=</span> value, after <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>; <span class="pl-k">else</span> before <span class="pl-k">=</span> value.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>, j), after <span class="pl-k">=</span> value.<span class="pl-c1">substring</span>(j);</td>
      </tr>
      <tr>
        <td id="L2284" class="blob-num js-line-number" data-line-number="2284"></td>
        <td id="LC2284" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2285" class="blob-num js-line-number" data-line-number="2285"></td>
        <td id="LC2285" class="blob-code blob-code-inner js-file-line">          before <span class="pl-k">=</span> value.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>, i);</td>
      </tr>
      <tr>
        <td id="L2286" class="blob-num js-line-number" data-line-number="2286"></td>
        <td id="LC2286" class="blob-code blob-code-inner js-file-line">          after <span class="pl-k">=</span> locale_decimal <span class="pl-k">+</span> value.<span class="pl-c1">substring</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2287" class="blob-num js-line-number" data-line-number="2287"></td>
        <td id="LC2287" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2288" class="blob-num js-line-number" data-line-number="2288"></td>
        <td id="LC2288" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>zfill <span class="pl-k">&amp;&amp;</span> comma) before <span class="pl-k">=</span> formatGroup(before, <span class="pl-c1">Infinity</span>);</td>
      </tr>
      <tr>
        <td id="L2289" class="blob-num js-line-number" data-line-number="2289"></td>
        <td id="LC2289" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> length <span class="pl-k">=</span> prefix.<span class="pl-c1">length</span> <span class="pl-k">+</span> before.<span class="pl-c1">length</span> <span class="pl-k">+</span> after.<span class="pl-c1">length</span> <span class="pl-k">+</span> (zcomma <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> negative.<span class="pl-c1">length</span>), padding <span class="pl-k">=</span> length <span class="pl-k">&lt;</span> width <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(length <span class="pl-k">=</span> width <span class="pl-k">-</span> length <span class="pl-k">+</span> <span class="pl-c1">1</span>).<span class="pl-c1">join</span>(fill) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2290" class="blob-num js-line-number" data-line-number="2290"></td>
        <td id="LC2290" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (zcomma) before <span class="pl-k">=</span> formatGroup(padding <span class="pl-k">+</span> before, padding.<span class="pl-c1">length</span> <span class="pl-k">?</span> width <span class="pl-k">-</span> after.<span class="pl-c1">length</span> <span class="pl-k">:</span> <span class="pl-c1">Infinity</span>);</td>
      </tr>
      <tr>
        <td id="L2291" class="blob-num js-line-number" data-line-number="2291"></td>
        <td id="LC2291" class="blob-code blob-code-inner js-file-line">        negative <span class="pl-k">+=</span> prefix;</td>
      </tr>
      <tr>
        <td id="L2292" class="blob-num js-line-number" data-line-number="2292"></td>
        <td id="LC2292" class="blob-code blob-code-inner js-file-line">        value <span class="pl-k">=</span> before <span class="pl-k">+</span> after;</td>
      </tr>
      <tr>
        <td id="L2293" class="blob-num js-line-number" data-line-number="2293"></td>
        <td id="LC2293" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (align <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> negative <span class="pl-k">+</span> value <span class="pl-k">+</span> padding <span class="pl-k">:</span> align <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> padding <span class="pl-k">+</span> negative <span class="pl-k">+</span> value <span class="pl-k">:</span> align <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>^<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> padding.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>, length <span class="pl-k">&gt;&gt;=</span> <span class="pl-c1">1</span>) <span class="pl-k">+</span> negative <span class="pl-k">+</span> value <span class="pl-k">+</span> padding.<span class="pl-c1">substring</span>(length) <span class="pl-k">:</span> negative <span class="pl-k">+</span> (zcomma <span class="pl-k">?</span> value <span class="pl-k">:</span> padding <span class="pl-k">+</span> value)) <span class="pl-k">+</span> fullSuffix;</td>
      </tr>
      <tr>
        <td id="L2294" class="blob-num js-line-number" data-line-number="2294"></td>
        <td id="LC2294" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L2295" class="blob-num js-line-number" data-line-number="2295"></td>
        <td id="LC2295" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2296" class="blob-num js-line-number" data-line-number="2296"></td>
        <td id="LC2296" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2297" class="blob-num js-line-number" data-line-number="2297"></td>
        <td id="LC2297" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_format_re <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>(?:(<span class="pl-c1">[<span class="pl-k">^</span>{]</span>)<span class="pl-k">?</span>(<span class="pl-c1">[&lt;&gt;=^]</span>))<span class="pl-k">?</span>(<span class="pl-c1">[+<span class="pl-c1">\- </span>]</span>)<span class="pl-k">?</span>(<span class="pl-c1">[$#]</span>)<span class="pl-k">?</span>(0)<span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(,)<span class="pl-k">?</span>(<span class="pl-cce">\.</span>-<span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>%]</span>)<span class="pl-k">?</span><span class="pl-pds">/</span>i</span>;</td>
      </tr>
      <tr>
        <td id="L2298" class="blob-num js-line-number" data-line-number="2298"></td>
        <td id="LC2298" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_format_types <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L2299" class="blob-num js-line-number" data-line-number="2299"></td>
        <td id="LC2299" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">b</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2300" class="blob-num js-line-number" data-line-number="2300"></td>
        <td id="LC2300" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x.<span class="pl-c1">toString</span>(<span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2301" class="blob-num js-line-number" data-line-number="2301"></td>
        <td id="LC2301" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2302" class="blob-num js-line-number" data-line-number="2302"></td>
        <td id="LC2302" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">c</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2303" class="blob-num js-line-number" data-line-number="2303"></td>
        <td id="LC2303" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(x);</td>
      </tr>
      <tr>
        <td id="L2304" class="blob-num js-line-number" data-line-number="2304"></td>
        <td id="LC2304" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2305" class="blob-num js-line-number" data-line-number="2305"></td>
        <td id="LC2305" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">o</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2306" class="blob-num js-line-number" data-line-number="2306"></td>
        <td id="LC2306" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x.<span class="pl-c1">toString</span>(<span class="pl-c1">8</span>);</td>
      </tr>
      <tr>
        <td id="L2307" class="blob-num js-line-number" data-line-number="2307"></td>
        <td id="LC2307" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2308" class="blob-num js-line-number" data-line-number="2308"></td>
        <td id="LC2308" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">x</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2309" class="blob-num js-line-number" data-line-number="2309"></td>
        <td id="LC2309" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x.<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>);</td>
      </tr>
      <tr>
        <td id="L2310" class="blob-num js-line-number" data-line-number="2310"></td>
        <td id="LC2310" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2311" class="blob-num js-line-number" data-line-number="2311"></td>
        <td id="LC2311" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">X</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2312" class="blob-num js-line-number" data-line-number="2312"></td>
        <td id="LC2312" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x.<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>).<span class="pl-c1">toUpperCase</span>();</td>
      </tr>
      <tr>
        <td id="L2313" class="blob-num js-line-number" data-line-number="2313"></td>
        <td id="LC2313" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2314" class="blob-num js-line-number" data-line-number="2314"></td>
        <td id="LC2314" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">g</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2315" class="blob-num js-line-number" data-line-number="2315"></td>
        <td id="LC2315" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x.toPrecision(p);</td>
      </tr>
      <tr>
        <td id="L2316" class="blob-num js-line-number" data-line-number="2316"></td>
        <td id="LC2316" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2317" class="blob-num js-line-number" data-line-number="2317"></td>
        <td id="LC2317" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">e</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2318" class="blob-num js-line-number" data-line-number="2318"></td>
        <td id="LC2318" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x.toExponential(p);</td>
      </tr>
      <tr>
        <td id="L2319" class="blob-num js-line-number" data-line-number="2319"></td>
        <td id="LC2319" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2320" class="blob-num js-line-number" data-line-number="2320"></td>
        <td id="LC2320" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">f</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2321" class="blob-num js-line-number" data-line-number="2321"></td>
        <td id="LC2321" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x.toFixed(p);</td>
      </tr>
      <tr>
        <td id="L2322" class="blob-num js-line-number" data-line-number="2322"></td>
        <td id="LC2322" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2323" class="blob-num js-line-number" data-line-number="2323"></td>
        <td id="LC2323" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">r</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2324" class="blob-num js-line-number" data-line-number="2324"></td>
        <td id="LC2324" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (x <span class="pl-k">=</span> d3.<span class="pl-c1">round</span>(x, d3_format_precision(x, p))).toFixed(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">20</span>, d3_format_precision(x <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1e-15</span>), p))));</td>
      </tr>
      <tr>
        <td id="L2325" class="blob-num js-line-number" data-line-number="2325"></td>
        <td id="LC2325" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2326" class="blob-num js-line-number" data-line-number="2326"></td>
        <td id="LC2326" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L2327" class="blob-num js-line-number" data-line-number="2327"></td>
        <td id="LC2327" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_format_typeDefault</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L2328" class="blob-num js-line-number" data-line-number="2328"></td>
        <td id="LC2328" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> x <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2329" class="blob-num js-line-number" data-line-number="2329"></td>
        <td id="LC2329" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2330" class="blob-num js-line-number" data-line-number="2330"></td>
        <td id="LC2330" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time <span class="pl-k">=</span> d3<span class="pl-c1">.time</span> <span class="pl-k">=</span> {}, d3_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>;</td>
      </tr>
      <tr>
        <td id="L2331" class="blob-num js-line-number" data-line-number="2331"></td>
        <td id="LC2331" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_date_utc</span>() {</td>
      </tr>
      <tr>
        <td id="L2332" class="blob-num js-line-number" data-line-number="2332"></td>
        <td id="LC2332" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>._ <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>(arguments.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">Date</span>.UTC.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">:</span> arguments[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L2333" class="blob-num js-line-number" data-line-number="2333"></td>
        <td id="LC2333" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2334" class="blob-num js-line-number" data-line-number="2334"></td>
        <td id="LC2334" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_date_utc</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2335" class="blob-num js-line-number" data-line-number="2335"></td>
        <td id="LC2335" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getDate</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2336" class="blob-num js-line-number" data-line-number="2336"></td>
        <td id="LC2336" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getUTCDate</span>();</td>
      </tr>
      <tr>
        <td id="L2337" class="blob-num js-line-number" data-line-number="2337"></td>
        <td id="LC2337" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2338" class="blob-num js-line-number" data-line-number="2338"></td>
        <td id="LC2338" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getDay</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2339" class="blob-num js-line-number" data-line-number="2339"></td>
        <td id="LC2339" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getUTCDay</span>();</td>
      </tr>
      <tr>
        <td id="L2340" class="blob-num js-line-number" data-line-number="2340"></td>
        <td id="LC2340" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2341" class="blob-num js-line-number" data-line-number="2341"></td>
        <td id="LC2341" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getFullYear</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2342" class="blob-num js-line-number" data-line-number="2342"></td>
        <td id="LC2342" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getUTCFullYear</span>();</td>
      </tr>
      <tr>
        <td id="L2343" class="blob-num js-line-number" data-line-number="2343"></td>
        <td id="LC2343" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2344" class="blob-num js-line-number" data-line-number="2344"></td>
        <td id="LC2344" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getHours</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2345" class="blob-num js-line-number" data-line-number="2345"></td>
        <td id="LC2345" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getUTCHours</span>();</td>
      </tr>
      <tr>
        <td id="L2346" class="blob-num js-line-number" data-line-number="2346"></td>
        <td id="LC2346" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2347" class="blob-num js-line-number" data-line-number="2347"></td>
        <td id="LC2347" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getMilliseconds</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2348" class="blob-num js-line-number" data-line-number="2348"></td>
        <td id="LC2348" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getUTCMilliseconds</span>();</td>
      </tr>
      <tr>
        <td id="L2349" class="blob-num js-line-number" data-line-number="2349"></td>
        <td id="LC2349" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2350" class="blob-num js-line-number" data-line-number="2350"></td>
        <td id="LC2350" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getMinutes</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2351" class="blob-num js-line-number" data-line-number="2351"></td>
        <td id="LC2351" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getUTCMinutes</span>();</td>
      </tr>
      <tr>
        <td id="L2352" class="blob-num js-line-number" data-line-number="2352"></td>
        <td id="LC2352" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2353" class="blob-num js-line-number" data-line-number="2353"></td>
        <td id="LC2353" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getMonth</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2354" class="blob-num js-line-number" data-line-number="2354"></td>
        <td id="LC2354" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getUTCMonth</span>();</td>
      </tr>
      <tr>
        <td id="L2355" class="blob-num js-line-number" data-line-number="2355"></td>
        <td id="LC2355" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2356" class="blob-num js-line-number" data-line-number="2356"></td>
        <td id="LC2356" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getSeconds</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2357" class="blob-num js-line-number" data-line-number="2357"></td>
        <td id="LC2357" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getUTCSeconds</span>();</td>
      </tr>
      <tr>
        <td id="L2358" class="blob-num js-line-number" data-line-number="2358"></td>
        <td id="LC2358" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2359" class="blob-num js-line-number" data-line-number="2359"></td>
        <td id="LC2359" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getTime</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2360" class="blob-num js-line-number" data-line-number="2360"></td>
        <td id="LC2360" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">getTime</span>();</td>
      </tr>
      <tr>
        <td id="L2361" class="blob-num js-line-number" data-line-number="2361"></td>
        <td id="LC2361" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2362" class="blob-num js-line-number" data-line-number="2362"></td>
        <td id="LC2362" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">getTimezoneOffset</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2363" class="blob-num js-line-number" data-line-number="2363"></td>
        <td id="LC2363" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2364" class="blob-num js-line-number" data-line-number="2364"></td>
        <td id="LC2364" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2365" class="blob-num js-line-number" data-line-number="2365"></td>
        <td id="LC2365" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">valueOf</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2366" class="blob-num js-line-number" data-line-number="2366"></td>
        <td id="LC2366" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>._.<span class="pl-c1">valueOf</span>();</td>
      </tr>
      <tr>
        <td id="L2367" class="blob-num js-line-number" data-line-number="2367"></td>
        <td id="LC2367" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2368" class="blob-num js-line-number" data-line-number="2368"></td>
        <td id="LC2368" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setDate</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2369" class="blob-num js-line-number" data-line-number="2369"></td>
        <td id="LC2369" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setUTCDate.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2370" class="blob-num js-line-number" data-line-number="2370"></td>
        <td id="LC2370" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2371" class="blob-num js-line-number" data-line-number="2371"></td>
        <td id="LC2371" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setDay</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2372" class="blob-num js-line-number" data-line-number="2372"></td>
        <td id="LC2372" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setUTCDay.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2373" class="blob-num js-line-number" data-line-number="2373"></td>
        <td id="LC2373" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2374" class="blob-num js-line-number" data-line-number="2374"></td>
        <td id="LC2374" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setFullYear</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2375" class="blob-num js-line-number" data-line-number="2375"></td>
        <td id="LC2375" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setUTCFullYear.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2376" class="blob-num js-line-number" data-line-number="2376"></td>
        <td id="LC2376" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2377" class="blob-num js-line-number" data-line-number="2377"></td>
        <td id="LC2377" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setHours</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2378" class="blob-num js-line-number" data-line-number="2378"></td>
        <td id="LC2378" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setUTCHours.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2379" class="blob-num js-line-number" data-line-number="2379"></td>
        <td id="LC2379" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2380" class="blob-num js-line-number" data-line-number="2380"></td>
        <td id="LC2380" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setMilliseconds</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2381" class="blob-num js-line-number" data-line-number="2381"></td>
        <td id="LC2381" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setUTCMilliseconds.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2382" class="blob-num js-line-number" data-line-number="2382"></td>
        <td id="LC2382" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2383" class="blob-num js-line-number" data-line-number="2383"></td>
        <td id="LC2383" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setMinutes</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2384" class="blob-num js-line-number" data-line-number="2384"></td>
        <td id="LC2384" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setUTCMinutes.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2385" class="blob-num js-line-number" data-line-number="2385"></td>
        <td id="LC2385" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2386" class="blob-num js-line-number" data-line-number="2386"></td>
        <td id="LC2386" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setMonth</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2387" class="blob-num js-line-number" data-line-number="2387"></td>
        <td id="LC2387" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setUTCMonth.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2388" class="blob-num js-line-number" data-line-number="2388"></td>
        <td id="LC2388" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2389" class="blob-num js-line-number" data-line-number="2389"></td>
        <td id="LC2389" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setSeconds</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2390" class="blob-num js-line-number" data-line-number="2390"></td>
        <td id="LC2390" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setUTCSeconds.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2391" class="blob-num js-line-number" data-line-number="2391"></td>
        <td id="LC2391" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2392" class="blob-num js-line-number" data-line-number="2392"></td>
        <td id="LC2392" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setTime</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2393" class="blob-num js-line-number" data-line-number="2393"></td>
        <td id="LC2393" class="blob-code blob-code-inner js-file-line">      d3_time_prototype.setTime.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>._, arguments);</td>
      </tr>
      <tr>
        <td id="L2394" class="blob-num js-line-number" data-line-number="2394"></td>
        <td id="LC2394" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2395" class="blob-num js-line-number" data-line-number="2395"></td>
        <td id="LC2395" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2396" class="blob-num js-line-number" data-line-number="2396"></td>
        <td id="LC2396" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_prototype <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-c1">prototype</span>;</td>
      </tr>
      <tr>
        <td id="L2397" class="blob-num js-line-number" data-line-number="2397"></td>
        <td id="LC2397" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_interval</span>(<span class="pl-smi">local</span>, <span class="pl-smi">step</span>, <span class="pl-smi">number</span>) {</td>
      </tr>
      <tr>
        <td id="L2398" class="blob-num js-line-number" data-line-number="2398"></td>
        <td id="LC2398" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">round</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2399" class="blob-num js-line-number" data-line-number="2399"></td>
        <td id="LC2399" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> d0 <span class="pl-k">=</span> local(date), d1 <span class="pl-k">=</span> offset(d0, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2400" class="blob-num js-line-number" data-line-number="2400"></td>
        <td id="LC2400" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> date <span class="pl-k">-</span> d0 <span class="pl-k">&lt;</span> d1 <span class="pl-k">-</span> date <span class="pl-k">?</span> d0 <span class="pl-k">:</span> d1;</td>
      </tr>
      <tr>
        <td id="L2401" class="blob-num js-line-number" data-line-number="2401"></td>
        <td id="LC2401" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2402" class="blob-num js-line-number" data-line-number="2402"></td>
        <td id="LC2402" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">ceil</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2403" class="blob-num js-line-number" data-line-number="2403"></td>
        <td id="LC2403" class="blob-code blob-code-inner js-file-line">      step(date <span class="pl-k">=</span> local(<span class="pl-k">new</span> <span class="pl-en">d3_date</span>(date <span class="pl-k">-</span> <span class="pl-c1">1</span>)), <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2404" class="blob-num js-line-number" data-line-number="2404"></td>
        <td id="LC2404" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L2405" class="blob-num js-line-number" data-line-number="2405"></td>
        <td id="LC2405" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2406" class="blob-num js-line-number" data-line-number="2406"></td>
        <td id="LC2406" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">offset</span>(<span class="pl-smi">date</span>, <span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L2407" class="blob-num js-line-number" data-line-number="2407"></td>
        <td id="LC2407" class="blob-code blob-code-inner js-file-line">      step(date <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_date</span>(<span class="pl-k">+</span>date), k);</td>
      </tr>
      <tr>
        <td id="L2408" class="blob-num js-line-number" data-line-number="2408"></td>
        <td id="LC2408" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L2409" class="blob-num js-line-number" data-line-number="2409"></td>
        <td id="LC2409" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2410" class="blob-num js-line-number" data-line-number="2410"></td>
        <td id="LC2410" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">range</span>(<span class="pl-smi">t0</span>, <span class="pl-smi">t1</span>, <span class="pl-smi">dt</span>) {</td>
      </tr>
      <tr>
        <td id="L2411" class="blob-num js-line-number" data-line-number="2411"></td>
        <td id="LC2411" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> time <span class="pl-k">=</span> <span class="pl-c1">ceil</span>(t0), times <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2412" class="blob-num js-line-number" data-line-number="2412"></td>
        <td id="LC2412" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dt <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2413" class="blob-num js-line-number" data-line-number="2413"></td>
        <td id="LC2413" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (time <span class="pl-k">&lt;</span> t1) {</td>
      </tr>
      <tr>
        <td id="L2414" class="blob-num js-line-number" data-line-number="2414"></td>
        <td id="LC2414" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>(number(time) <span class="pl-k">%</span> dt)) times.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-k">+</span>time));</td>
      </tr>
      <tr>
        <td id="L2415" class="blob-num js-line-number" data-line-number="2415"></td>
        <td id="LC2415" class="blob-code blob-code-inner js-file-line">          step(time, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2416" class="blob-num js-line-number" data-line-number="2416"></td>
        <td id="LC2416" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2417" class="blob-num js-line-number" data-line-number="2417"></td>
        <td id="LC2417" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2418" class="blob-num js-line-number" data-line-number="2418"></td>
        <td id="LC2418" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (time <span class="pl-k">&lt;</span> t1) times.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-k">+</span>time)), step(time, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2419" class="blob-num js-line-number" data-line-number="2419"></td>
        <td id="LC2419" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2420" class="blob-num js-line-number" data-line-number="2420"></td>
        <td id="LC2420" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> times;</td>
      </tr>
      <tr>
        <td id="L2421" class="blob-num js-line-number" data-line-number="2421"></td>
        <td id="LC2421" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2422" class="blob-num js-line-number" data-line-number="2422"></td>
        <td id="LC2422" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">range_utc</span>(<span class="pl-smi">t0</span>, <span class="pl-smi">t1</span>, <span class="pl-smi">dt</span>) {</td>
      </tr>
      <tr>
        <td id="L2423" class="blob-num js-line-number" data-line-number="2423"></td>
        <td id="LC2423" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2424" class="blob-num js-line-number" data-line-number="2424"></td>
        <td id="LC2424" class="blob-code blob-code-inner js-file-line">        d3_date <span class="pl-k">=</span> d3_date_utc;</td>
      </tr>
      <tr>
        <td id="L2425" class="blob-num js-line-number" data-line-number="2425"></td>
        <td id="LC2425" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> utc <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_date_utc</span>();</td>
      </tr>
      <tr>
        <td id="L2426" class="blob-num js-line-number" data-line-number="2426"></td>
        <td id="LC2426" class="blob-code blob-code-inner js-file-line">        utc._ <span class="pl-k">=</span> t0;</td>
      </tr>
      <tr>
        <td id="L2427" class="blob-num js-line-number" data-line-number="2427"></td>
        <td id="LC2427" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> range(utc, t1, dt);</td>
      </tr>
      <tr>
        <td id="L2428" class="blob-num js-line-number" data-line-number="2428"></td>
        <td id="LC2428" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L2429" class="blob-num js-line-number" data-line-number="2429"></td>
        <td id="LC2429" class="blob-code blob-code-inner js-file-line">        d3_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>;</td>
      </tr>
      <tr>
        <td id="L2430" class="blob-num js-line-number" data-line-number="2430"></td>
        <td id="LC2430" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2431" class="blob-num js-line-number" data-line-number="2431"></td>
        <td id="LC2431" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2432" class="blob-num js-line-number" data-line-number="2432"></td>
        <td id="LC2432" class="blob-code blob-code-inner js-file-line">    local.floor <span class="pl-k">=</span> local;</td>
      </tr>
      <tr>
        <td id="L2433" class="blob-num js-line-number" data-line-number="2433"></td>
        <td id="LC2433" class="blob-code blob-code-inner js-file-line">    local.round <span class="pl-k">=</span> round;</td>
      </tr>
      <tr>
        <td id="L2434" class="blob-num js-line-number" data-line-number="2434"></td>
        <td id="LC2434" class="blob-code blob-code-inner js-file-line">    local.ceil <span class="pl-k">=</span> ceil;</td>
      </tr>
      <tr>
        <td id="L2435" class="blob-num js-line-number" data-line-number="2435"></td>
        <td id="LC2435" class="blob-code blob-code-inner js-file-line">    local.offset <span class="pl-k">=</span> offset;</td>
      </tr>
      <tr>
        <td id="L2436" class="blob-num js-line-number" data-line-number="2436"></td>
        <td id="LC2436" class="blob-code blob-code-inner js-file-line">    local.range <span class="pl-k">=</span> range;</td>
      </tr>
      <tr>
        <td id="L2437" class="blob-num js-line-number" data-line-number="2437"></td>
        <td id="LC2437" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> utc <span class="pl-k">=</span> local.utc <span class="pl-k">=</span> d3_time_interval_utc(local);</td>
      </tr>
      <tr>
        <td id="L2438" class="blob-num js-line-number" data-line-number="2438"></td>
        <td id="LC2438" class="blob-code blob-code-inner js-file-line">    utc.floor <span class="pl-k">=</span> utc;</td>
      </tr>
      <tr>
        <td id="L2439" class="blob-num js-line-number" data-line-number="2439"></td>
        <td id="LC2439" class="blob-code blob-code-inner js-file-line">    utc.round <span class="pl-k">=</span> d3_time_interval_utc(round);</td>
      </tr>
      <tr>
        <td id="L2440" class="blob-num js-line-number" data-line-number="2440"></td>
        <td id="LC2440" class="blob-code blob-code-inner js-file-line">    utc.ceil <span class="pl-k">=</span> d3_time_interval_utc(ceil);</td>
      </tr>
      <tr>
        <td id="L2441" class="blob-num js-line-number" data-line-number="2441"></td>
        <td id="LC2441" class="blob-code blob-code-inner js-file-line">    utc.offset <span class="pl-k">=</span> d3_time_interval_utc(offset);</td>
      </tr>
      <tr>
        <td id="L2442" class="blob-num js-line-number" data-line-number="2442"></td>
        <td id="LC2442" class="blob-code blob-code-inner js-file-line">    utc.range <span class="pl-k">=</span> range_utc;</td>
      </tr>
      <tr>
        <td id="L2443" class="blob-num js-line-number" data-line-number="2443"></td>
        <td id="LC2443" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> local;</td>
      </tr>
      <tr>
        <td id="L2444" class="blob-num js-line-number" data-line-number="2444"></td>
        <td id="LC2444" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2445" class="blob-num js-line-number" data-line-number="2445"></td>
        <td id="LC2445" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_interval_utc</span>(<span class="pl-smi">method</span>) {</td>
      </tr>
      <tr>
        <td id="L2446" class="blob-num js-line-number" data-line-number="2446"></td>
        <td id="LC2446" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L2447" class="blob-num js-line-number" data-line-number="2447"></td>
        <td id="LC2447" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2448" class="blob-num js-line-number" data-line-number="2448"></td>
        <td id="LC2448" class="blob-code blob-code-inner js-file-line">        d3_date <span class="pl-k">=</span> d3_date_utc;</td>
      </tr>
      <tr>
        <td id="L2449" class="blob-num js-line-number" data-line-number="2449"></td>
        <td id="LC2449" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> utc <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_date_utc</span>();</td>
      </tr>
      <tr>
        <td id="L2450" class="blob-num js-line-number" data-line-number="2450"></td>
        <td id="LC2450" class="blob-code blob-code-inner js-file-line">        utc._ <span class="pl-k">=</span> date;</td>
      </tr>
      <tr>
        <td id="L2451" class="blob-num js-line-number" data-line-number="2451"></td>
        <td id="LC2451" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> method(utc, k)._;</td>
      </tr>
      <tr>
        <td id="L2452" class="blob-num js-line-number" data-line-number="2452"></td>
        <td id="LC2452" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L2453" class="blob-num js-line-number" data-line-number="2453"></td>
        <td id="LC2453" class="blob-code blob-code-inner js-file-line">        d3_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>;</td>
      </tr>
      <tr>
        <td id="L2454" class="blob-num js-line-number" data-line-number="2454"></td>
        <td id="LC2454" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2455" class="blob-num js-line-number" data-line-number="2455"></td>
        <td id="LC2455" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2456" class="blob-num js-line-number" data-line-number="2456"></td>
        <td id="LC2456" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2457" class="blob-num js-line-number" data-line-number="2457"></td>
        <td id="LC2457" class="blob-code blob-code-inner js-file-line">  d3_time.year <span class="pl-k">=</span> d3_time_interval(<span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2458" class="blob-num js-line-number" data-line-number="2458"></td>
        <td id="LC2458" class="blob-code blob-code-inner js-file-line">    date <span class="pl-k">=</span> d3_time.day(date);</td>
      </tr>
      <tr>
        <td id="L2459" class="blob-num js-line-number" data-line-number="2459"></td>
        <td id="LC2459" class="blob-code blob-code-inner js-file-line">    date.<span class="pl-c1">setMonth</span>(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2460" class="blob-num js-line-number" data-line-number="2460"></td>
        <td id="LC2460" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L2461" class="blob-num js-line-number" data-line-number="2461"></td>
        <td id="LC2461" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L2462" class="blob-num js-line-number" data-line-number="2462"></td>
        <td id="LC2462" class="blob-code blob-code-inner js-file-line">    date.<span class="pl-c1">setFullYear</span>(date.<span class="pl-c1">getFullYear</span>() <span class="pl-k">+</span> offset);</td>
      </tr>
      <tr>
        <td id="L2463" class="blob-num js-line-number" data-line-number="2463"></td>
        <td id="LC2463" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2464" class="blob-num js-line-number" data-line-number="2464"></td>
        <td id="LC2464" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date.<span class="pl-c1">getFullYear</span>();</td>
      </tr>
      <tr>
        <td id="L2465" class="blob-num js-line-number" data-line-number="2465"></td>
        <td id="LC2465" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L2466" class="blob-num js-line-number" data-line-number="2466"></td>
        <td id="LC2466" class="blob-code blob-code-inner js-file-line">  d3_time.years <span class="pl-k">=</span> d3_time.year.range;</td>
      </tr>
      <tr>
        <td id="L2467" class="blob-num js-line-number" data-line-number="2467"></td>
        <td id="LC2467" class="blob-code blob-code-inner js-file-line">  d3_time.years.utc <span class="pl-k">=</span> d3_time.year.utc.range;</td>
      </tr>
      <tr>
        <td id="L2468" class="blob-num js-line-number" data-line-number="2468"></td>
        <td id="LC2468" class="blob-code blob-code-inner js-file-line">  d3_time.day <span class="pl-k">=</span> d3_time_interval(<span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2469" class="blob-num js-line-number" data-line-number="2469"></td>
        <td id="LC2469" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> day <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_date</span>(<span class="pl-c1">2e3</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2470" class="blob-num js-line-number" data-line-number="2470"></td>
        <td id="LC2470" class="blob-code blob-code-inner js-file-line">    day.<span class="pl-c1">setFullYear</span>(date.<span class="pl-c1">getFullYear</span>(), date.<span class="pl-c1">getMonth</span>(), date.<span class="pl-c1">getDate</span>());</td>
      </tr>
      <tr>
        <td id="L2471" class="blob-num js-line-number" data-line-number="2471"></td>
        <td id="LC2471" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> day;</td>
      </tr>
      <tr>
        <td id="L2472" class="blob-num js-line-number" data-line-number="2472"></td>
        <td id="LC2472" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L2473" class="blob-num js-line-number" data-line-number="2473"></td>
        <td id="LC2473" class="blob-code blob-code-inner js-file-line">    date.<span class="pl-c1">setDate</span>(date.<span class="pl-c1">getDate</span>() <span class="pl-k">+</span> offset);</td>
      </tr>
      <tr>
        <td id="L2474" class="blob-num js-line-number" data-line-number="2474"></td>
        <td id="LC2474" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2475" class="blob-num js-line-number" data-line-number="2475"></td>
        <td id="LC2475" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date.<span class="pl-c1">getDate</span>() <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2476" class="blob-num js-line-number" data-line-number="2476"></td>
        <td id="LC2476" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L2477" class="blob-num js-line-number" data-line-number="2477"></td>
        <td id="LC2477" class="blob-code blob-code-inner js-file-line">  d3_time.days <span class="pl-k">=</span> d3_time.day.range;</td>
      </tr>
      <tr>
        <td id="L2478" class="blob-num js-line-number" data-line-number="2478"></td>
        <td id="LC2478" class="blob-code blob-code-inner js-file-line">  d3_time.days.utc <span class="pl-k">=</span> d3_time.day.utc.range;</td>
      </tr>
      <tr>
        <td id="L2479" class="blob-num js-line-number" data-line-number="2479"></td>
        <td id="LC2479" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_time</span>.<span class="pl-en">dayOfYear</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2480" class="blob-num js-line-number" data-line-number="2480"></td>
        <td id="LC2480" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> year <span class="pl-k">=</span> d3_time.year(date);</td>
      </tr>
      <tr>
        <td id="L2481" class="blob-num js-line-number" data-line-number="2481"></td>
        <td id="LC2481" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((date <span class="pl-k">-</span> year <span class="pl-k">-</span> (date.<span class="pl-c1">getTimezoneOffset</span>() <span class="pl-k">-</span> year.<span class="pl-c1">getTimezoneOffset</span>()) <span class="pl-k">*</span> <span class="pl-c1">6e4</span>) / <span class="pl-c1">864e5</span>);</td>
      </tr>
      <tr>
        <td id="L2482" class="blob-num js-line-number" data-line-number="2482"></td>
        <td id="LC2482" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2483" class="blob-num js-line-number" data-line-number="2483"></td>
        <td id="LC2483" class="blob-code blob-code-inner js-file-line">  [ <span class="pl-s"><span class="pl-pds">&quot;</span>sunday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>monday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>tuesday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>wednesday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>thursday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>friday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>saturday<span class="pl-pds">&quot;</span></span> ].forEach(<span class="pl-k">function</span>(<span class="pl-smi">day</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2484" class="blob-num js-line-number" data-line-number="2484"></td>
        <td id="LC2484" class="blob-code blob-code-inner js-file-line">    i <span class="pl-k">=</span> <span class="pl-c1">7</span> <span class="pl-k">-</span> i;</td>
      </tr>
      <tr>
        <td id="L2485" class="blob-num js-line-number" data-line-number="2485"></td>
        <td id="LC2485" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> interval <span class="pl-k">=</span> d3_time[day] <span class="pl-k">=</span> d3_time_interval(<span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2486" class="blob-num js-line-number" data-line-number="2486"></td>
        <td id="LC2486" class="blob-code blob-code-inner js-file-line">      (date <span class="pl-k">=</span> d3_time.day(date)).<span class="pl-c1">setDate</span>(date.<span class="pl-c1">getDate</span>() <span class="pl-k">-</span> (date.<span class="pl-c1">getDay</span>() <span class="pl-k">+</span> i) <span class="pl-k">%</span> <span class="pl-c1">7</span>);</td>
      </tr>
      <tr>
        <td id="L2487" class="blob-num js-line-number" data-line-number="2487"></td>
        <td id="LC2487" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L2488" class="blob-num js-line-number" data-line-number="2488"></td>
        <td id="LC2488" class="blob-code blob-code-inner js-file-line">    }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L2489" class="blob-num js-line-number" data-line-number="2489"></td>
        <td id="LC2489" class="blob-code blob-code-inner js-file-line">      date.<span class="pl-c1">setDate</span>(date.<span class="pl-c1">getDate</span>() <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(offset) <span class="pl-k">*</span> <span class="pl-c1">7</span>);</td>
      </tr>
      <tr>
        <td id="L2490" class="blob-num js-line-number" data-line-number="2490"></td>
        <td id="LC2490" class="blob-code blob-code-inner js-file-line">    }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2491" class="blob-num js-line-number" data-line-number="2491"></td>
        <td id="LC2491" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> day <span class="pl-k">=</span> d3_time.year(date).<span class="pl-c1">getDay</span>();</td>
      </tr>
      <tr>
        <td id="L2492" class="blob-num js-line-number" data-line-number="2492"></td>
        <td id="LC2492" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((d3_time.dayOfYear(date) <span class="pl-k">+</span> (day <span class="pl-k">+</span> i) <span class="pl-k">%</span> <span class="pl-c1">7</span>) / <span class="pl-c1">7</span>) <span class="pl-k">-</span> (day <span class="pl-k">!==</span> i);</td>
      </tr>
      <tr>
        <td id="L2493" class="blob-num js-line-number" data-line-number="2493"></td>
        <td id="LC2493" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2494" class="blob-num js-line-number" data-line-number="2494"></td>
        <td id="LC2494" class="blob-code blob-code-inner js-file-line">    d3_time[day <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> interval.range;</td>
      </tr>
      <tr>
        <td id="L2495" class="blob-num js-line-number" data-line-number="2495"></td>
        <td id="LC2495" class="blob-code blob-code-inner js-file-line">    d3_time[day <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>].utc <span class="pl-k">=</span> interval.utc.range;</td>
      </tr>
      <tr>
        <td id="L2496" class="blob-num js-line-number" data-line-number="2496"></td>
        <td id="LC2496" class="blob-code blob-code-inner js-file-line">    d3_time[day <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>OfYear<span class="pl-pds">&quot;</span></span>] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2497" class="blob-num js-line-number" data-line-number="2497"></td>
        <td id="LC2497" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> day <span class="pl-k">=</span> d3_time.year(date).<span class="pl-c1">getDay</span>();</td>
      </tr>
      <tr>
        <td id="L2498" class="blob-num js-line-number" data-line-number="2498"></td>
        <td id="LC2498" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((d3_time.dayOfYear(date) <span class="pl-k">+</span> (day <span class="pl-k">+</span> i) <span class="pl-k">%</span> <span class="pl-c1">7</span>) / <span class="pl-c1">7</span>);</td>
      </tr>
      <tr>
        <td id="L2499" class="blob-num js-line-number" data-line-number="2499"></td>
        <td id="LC2499" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2500" class="blob-num js-line-number" data-line-number="2500"></td>
        <td id="LC2500" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L2501" class="blob-num js-line-number" data-line-number="2501"></td>
        <td id="LC2501" class="blob-code blob-code-inner js-file-line">  d3_time.week <span class="pl-k">=</span> d3_time.sunday;</td>
      </tr>
      <tr>
        <td id="L2502" class="blob-num js-line-number" data-line-number="2502"></td>
        <td id="LC2502" class="blob-code blob-code-inner js-file-line">  d3_time.weeks <span class="pl-k">=</span> d3_time.sunday.range;</td>
      </tr>
      <tr>
        <td id="L2503" class="blob-num js-line-number" data-line-number="2503"></td>
        <td id="LC2503" class="blob-code blob-code-inner js-file-line">  d3_time.weeks.utc <span class="pl-k">=</span> d3_time.sunday.utc.range;</td>
      </tr>
      <tr>
        <td id="L2504" class="blob-num js-line-number" data-line-number="2504"></td>
        <td id="LC2504" class="blob-code blob-code-inner js-file-line">  d3_time.weekOfYear <span class="pl-k">=</span> d3_time.sundayOfYear;</td>
      </tr>
      <tr>
        <td id="L2505" class="blob-num js-line-number" data-line-number="2505"></td>
        <td id="LC2505" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_locale_timeFormat</span>(<span class="pl-smi">locale</span>) {</td>
      </tr>
      <tr>
        <td id="L2506" class="blob-num js-line-number" data-line-number="2506"></td>
        <td id="LC2506" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> locale_dateTime <span class="pl-k">=</span> locale.<span class="pl-c1">dateTime</span>, locale_date <span class="pl-k">=</span> locale.date, locale_time <span class="pl-k">=</span> locale<span class="pl-c1">.time</span>, locale_periods <span class="pl-k">=</span> locale.periods, locale_days <span class="pl-k">=</span> locale.days, locale_shortDays <span class="pl-k">=</span> locale.shortDays, locale_months <span class="pl-k">=</span> locale.months, locale_shortMonths <span class="pl-k">=</span> locale.shortMonths;</td>
      </tr>
      <tr>
        <td id="L2507" class="blob-num js-line-number" data-line-number="2507"></td>
        <td id="LC2507" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_format</span>(<span class="pl-smi">template</span>) {</td>
      </tr>
      <tr>
        <td id="L2508" class="blob-num js-line-number" data-line-number="2508"></td>
        <td id="LC2508" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> template.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2509" class="blob-num js-line-number" data-line-number="2509"></td>
        <td id="LC2509" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">format</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2510" class="blob-num js-line-number" data-line-number="2510"></td>
        <td id="LC2510" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> string <span class="pl-k">=</span> [], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, j <span class="pl-k">=</span> <span class="pl-c1">0</span>, c, p, f;</td>
      </tr>
      <tr>
        <td id="L2511" class="blob-num js-line-number" data-line-number="2511"></td>
        <td id="LC2511" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L2512" class="blob-num js-line-number" data-line-number="2512"></td>
        <td id="LC2512" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (template.<span class="pl-c1">charCodeAt</span>(i) <span class="pl-k">===</span> <span class="pl-c1">37</span>) {</td>
      </tr>
      <tr>
        <td id="L2513" class="blob-num js-line-number" data-line-number="2513"></td>
        <td id="LC2513" class="blob-code blob-code-inner js-file-line">            string.<span class="pl-c1">push</span>(template.<span class="pl-c1">slice</span>(j, i));</td>
      </tr>
      <tr>
        <td id="L2514" class="blob-num js-line-number" data-line-number="2514"></td>
        <td id="LC2514" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((p <span class="pl-k">=</span> d3_time_formatPads[c <span class="pl-k">=</span> template.<span class="pl-c1">charAt</span>(<span class="pl-k">++</span>i)]) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) c <span class="pl-k">=</span> template.<span class="pl-c1">charAt</span>(<span class="pl-k">++</span>i);</td>
      </tr>
      <tr>
        <td id="L2515" class="blob-num js-line-number" data-line-number="2515"></td>
        <td id="LC2515" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (f <span class="pl-k">=</span> d3_time_formats[c]) c <span class="pl-k">=</span> f(date, p <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> c <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> p);</td>
      </tr>
      <tr>
        <td id="L2516" class="blob-num js-line-number" data-line-number="2516"></td>
        <td id="LC2516" class="blob-code blob-code-inner js-file-line">            string.<span class="pl-c1">push</span>(c);</td>
      </tr>
      <tr>
        <td id="L2517" class="blob-num js-line-number" data-line-number="2517"></td>
        <td id="LC2517" class="blob-code blob-code-inner js-file-line">            j <span class="pl-k">=</span> i <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2518" class="blob-num js-line-number" data-line-number="2518"></td>
        <td id="LC2518" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2519" class="blob-num js-line-number" data-line-number="2519"></td>
        <td id="LC2519" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2520" class="blob-num js-line-number" data-line-number="2520"></td>
        <td id="LC2520" class="blob-code blob-code-inner js-file-line">        string.<span class="pl-c1">push</span>(template.<span class="pl-c1">slice</span>(j, i));</td>
      </tr>
      <tr>
        <td id="L2521" class="blob-num js-line-number" data-line-number="2521"></td>
        <td id="LC2521" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> string.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2522" class="blob-num js-line-number" data-line-number="2522"></td>
        <td id="LC2522" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2523" class="blob-num js-line-number" data-line-number="2523"></td>
        <td id="LC2523" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">format</span>.<span class="pl-en">parse</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">string</span>) {</td>
      </tr>
      <tr>
        <td id="L2524" class="blob-num js-line-number" data-line-number="2524"></td>
        <td id="LC2524" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> d <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2525" class="blob-num js-line-number" data-line-number="2525"></td>
        <td id="LC2525" class="blob-code blob-code-inner js-file-line">          y<span class="pl-k">:</span> <span class="pl-c1">1900</span>,</td>
      </tr>
      <tr>
        <td id="L2526" class="blob-num js-line-number" data-line-number="2526"></td>
        <td id="LC2526" class="blob-code blob-code-inner js-file-line">          m<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2527" class="blob-num js-line-number" data-line-number="2527"></td>
        <td id="LC2527" class="blob-code blob-code-inner js-file-line">          d<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L2528" class="blob-num js-line-number" data-line-number="2528"></td>
        <td id="LC2528" class="blob-code blob-code-inner js-file-line">          H<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2529" class="blob-num js-line-number" data-line-number="2529"></td>
        <td id="LC2529" class="blob-code blob-code-inner js-file-line">          M<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2530" class="blob-num js-line-number" data-line-number="2530"></td>
        <td id="LC2530" class="blob-code blob-code-inner js-file-line">          S<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2531" class="blob-num js-line-number" data-line-number="2531"></td>
        <td id="LC2531" class="blob-code blob-code-inner js-file-line">          L<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2532" class="blob-num js-line-number" data-line-number="2532"></td>
        <td id="LC2532" class="blob-code blob-code-inner js-file-line">          Z<span class="pl-k">:</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L2533" class="blob-num js-line-number" data-line-number="2533"></td>
        <td id="LC2533" class="blob-code blob-code-inner js-file-line">        }, i <span class="pl-k">=</span> d3_time_parse(d, template, string, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2534" class="blob-num js-line-number" data-line-number="2534"></td>
        <td id="LC2534" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (i <span class="pl-k">!=</span> string.<span class="pl-c1">length</span>) <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2535" class="blob-num js-line-number" data-line-number="2535"></td>
        <td id="LC2535" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> d) d.H <span class="pl-k">=</span> d.H <span class="pl-k">%</span> <span class="pl-c1">12</span> <span class="pl-k">+</span> d.p <span class="pl-k">*</span> <span class="pl-c1">12</span>;</td>
      </tr>
      <tr>
        <td id="L2536" class="blob-num js-line-number" data-line-number="2536"></td>
        <td id="LC2536" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> localZ <span class="pl-k">=</span> d.Z <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> d3_date <span class="pl-k">!==</span> d3_date_utc, date <span class="pl-k">=</span> <span class="pl-k">new</span> (localZ <span class="pl-k">?</span> d3_date_utc <span class="pl-k">:</span> d3_date)();</td>
      </tr>
      <tr>
        <td id="L2537" class="blob-num js-line-number" data-line-number="2537"></td>
        <td id="LC2537" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&quot;</span>j<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> d) date.<span class="pl-c1">setFullYear</span>(d.<span class="pl-c1">y</span>, <span class="pl-c1">0</span>, d.j); <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> d <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> d <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span>U<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> d)) {</td>
      </tr>
      <tr>
        <td id="L2538" class="blob-num js-line-number" data-line-number="2538"></td>
        <td id="LC2538" class="blob-code blob-code-inner js-file-line">          date.<span class="pl-c1">setFullYear</span>(d.<span class="pl-c1">y</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2539" class="blob-num js-line-number" data-line-number="2539"></td>
        <td id="LC2539" class="blob-code blob-code-inner js-file-line">          date.<span class="pl-c1">setFullYear</span>(d.<span class="pl-c1">y</span>, <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> d <span class="pl-k">?</span> (d.w <span class="pl-k">+</span> <span class="pl-c1">6</span>) <span class="pl-k">%</span> <span class="pl-c1">7</span> <span class="pl-k">+</span> d.W <span class="pl-k">*</span> <span class="pl-c1">7</span> <span class="pl-k">-</span> (date.<span class="pl-c1">getDay</span>() <span class="pl-k">+</span> <span class="pl-c1">5</span>) <span class="pl-k">%</span> <span class="pl-c1">7</span> <span class="pl-k">:</span> d.w <span class="pl-k">+</span> d.U <span class="pl-k">*</span> <span class="pl-c1">7</span> <span class="pl-k">-</span> (date.<span class="pl-c1">getDay</span>() <span class="pl-k">+</span> <span class="pl-c1">6</span>) <span class="pl-k">%</span> <span class="pl-c1">7</span>);</td>
      </tr>
      <tr>
        <td id="L2540" class="blob-num js-line-number" data-line-number="2540"></td>
        <td id="LC2540" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> date.<span class="pl-c1">setFullYear</span>(d.<span class="pl-c1">y</span>, d.m, d.d);</td>
      </tr>
      <tr>
        <td id="L2541" class="blob-num js-line-number" data-line-number="2541"></td>
        <td id="LC2541" class="blob-code blob-code-inner js-file-line">        date.<span class="pl-c1">setHours</span>(d.H <span class="pl-k">+</span> (d.Z / <span class="pl-c1">100</span> | <span class="pl-c1">0</span>), d.M <span class="pl-k">+</span> d.Z <span class="pl-k">%</span> <span class="pl-c1">100</span>, d.S, d.L);</td>
      </tr>
      <tr>
        <td id="L2542" class="blob-num js-line-number" data-line-number="2542"></td>
        <td id="LC2542" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> localZ <span class="pl-k">?</span> date._ <span class="pl-k">:</span> date;</td>
      </tr>
      <tr>
        <td id="L2543" class="blob-num js-line-number" data-line-number="2543"></td>
        <td id="LC2543" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L2544" class="blob-num js-line-number" data-line-number="2544"></td>
        <td id="LC2544" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">format</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2545" class="blob-num js-line-number" data-line-number="2545"></td>
        <td id="LC2545" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> template;</td>
      </tr>
      <tr>
        <td id="L2546" class="blob-num js-line-number" data-line-number="2546"></td>
        <td id="LC2546" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L2547" class="blob-num js-line-number" data-line-number="2547"></td>
        <td id="LC2547" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> format;</td>
      </tr>
      <tr>
        <td id="L2548" class="blob-num js-line-number" data-line-number="2548"></td>
        <td id="LC2548" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2549" class="blob-num js-line-number" data-line-number="2549"></td>
        <td id="LC2549" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parse</span>(<span class="pl-smi">date</span>, <span class="pl-smi">template</span>, <span class="pl-smi">string</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L2550" class="blob-num js-line-number" data-line-number="2550"></td>
        <td id="LC2550" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> c, p, t, i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> template.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> string.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2551" class="blob-num js-line-number" data-line-number="2551"></td>
        <td id="LC2551" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L2552" class="blob-num js-line-number" data-line-number="2552"></td>
        <td id="LC2552" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (j <span class="pl-k">&gt;=</span> m) <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2553" class="blob-num js-line-number" data-line-number="2553"></td>
        <td id="LC2553" class="blob-code blob-code-inner js-file-line">        c <span class="pl-k">=</span> template.<span class="pl-c1">charCodeAt</span>(i<span class="pl-k">++</span>);</td>
      </tr>
      <tr>
        <td id="L2554" class="blob-num js-line-number" data-line-number="2554"></td>
        <td id="LC2554" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (c <span class="pl-k">===</span> <span class="pl-c1">37</span>) {</td>
      </tr>
      <tr>
        <td id="L2555" class="blob-num js-line-number" data-line-number="2555"></td>
        <td id="LC2555" class="blob-code blob-code-inner js-file-line">          t <span class="pl-k">=</span> template.<span class="pl-c1">charAt</span>(i<span class="pl-k">++</span>);</td>
      </tr>
      <tr>
        <td id="L2556" class="blob-num js-line-number" data-line-number="2556"></td>
        <td id="LC2556" class="blob-code blob-code-inner js-file-line">          p <span class="pl-k">=</span> d3_time_parsers[t <span class="pl-k">in</span> d3_time_formatPads <span class="pl-k">?</span> template.<span class="pl-c1">charAt</span>(i<span class="pl-k">++</span>) <span class="pl-k">:</span> t];</td>
      </tr>
      <tr>
        <td id="L2557" class="blob-num js-line-number" data-line-number="2557"></td>
        <td id="LC2557" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>p <span class="pl-k">||</span> (j <span class="pl-k">=</span> p(date, string, j)) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2558" class="blob-num js-line-number" data-line-number="2558"></td>
        <td id="LC2558" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (c <span class="pl-k">!=</span> string.<span class="pl-c1">charCodeAt</span>(j<span class="pl-k">++</span>)) {</td>
      </tr>
      <tr>
        <td id="L2559" class="blob-num js-line-number" data-line-number="2559"></td>
        <td id="LC2559" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2560" class="blob-num js-line-number" data-line-number="2560"></td>
        <td id="LC2560" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2561" class="blob-num js-line-number" data-line-number="2561"></td>
        <td id="LC2561" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2562" class="blob-num js-line-number" data-line-number="2562"></td>
        <td id="LC2562" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> j;</td>
      </tr>
      <tr>
        <td id="L2563" class="blob-num js-line-number" data-line-number="2563"></td>
        <td id="LC2563" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2564" class="blob-num js-line-number" data-line-number="2564"></td>
        <td id="LC2564" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_time_format</span>.<span class="pl-en">utc</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">template</span>) {</td>
      </tr>
      <tr>
        <td id="L2565" class="blob-num js-line-number" data-line-number="2565"></td>
        <td id="LC2565" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> local <span class="pl-k">=</span> d3_time_format(template);</td>
      </tr>
      <tr>
        <td id="L2566" class="blob-num js-line-number" data-line-number="2566"></td>
        <td id="LC2566" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">format</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2567" class="blob-num js-line-number" data-line-number="2567"></td>
        <td id="LC2567" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2568" class="blob-num js-line-number" data-line-number="2568"></td>
        <td id="LC2568" class="blob-code blob-code-inner js-file-line">          d3_date <span class="pl-k">=</span> d3_date_utc;</td>
      </tr>
      <tr>
        <td id="L2569" class="blob-num js-line-number" data-line-number="2569"></td>
        <td id="LC2569" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> utc <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_date</span>();</td>
      </tr>
      <tr>
        <td id="L2570" class="blob-num js-line-number" data-line-number="2570"></td>
        <td id="LC2570" class="blob-code blob-code-inner js-file-line">          utc._ <span class="pl-k">=</span> date;</td>
      </tr>
      <tr>
        <td id="L2571" class="blob-num js-line-number" data-line-number="2571"></td>
        <td id="LC2571" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> local(utc);</td>
      </tr>
      <tr>
        <td id="L2572" class="blob-num js-line-number" data-line-number="2572"></td>
        <td id="LC2572" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L2573" class="blob-num js-line-number" data-line-number="2573"></td>
        <td id="LC2573" class="blob-code blob-code-inner js-file-line">          d3_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>;</td>
      </tr>
      <tr>
        <td id="L2574" class="blob-num js-line-number" data-line-number="2574"></td>
        <td id="LC2574" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2575" class="blob-num js-line-number" data-line-number="2575"></td>
        <td id="LC2575" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2576" class="blob-num js-line-number" data-line-number="2576"></td>
        <td id="LC2576" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">format</span>.<span class="pl-en">parse</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">string</span>) {</td>
      </tr>
      <tr>
        <td id="L2577" class="blob-num js-line-number" data-line-number="2577"></td>
        <td id="LC2577" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2578" class="blob-num js-line-number" data-line-number="2578"></td>
        <td id="LC2578" class="blob-code blob-code-inner js-file-line">          d3_date <span class="pl-k">=</span> d3_date_utc;</td>
      </tr>
      <tr>
        <td id="L2579" class="blob-num js-line-number" data-line-number="2579"></td>
        <td id="LC2579" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> date <span class="pl-k">=</span> local.<span class="pl-c1">parse</span>(string);</td>
      </tr>
      <tr>
        <td id="L2580" class="blob-num js-line-number" data-line-number="2580"></td>
        <td id="LC2580" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> date <span class="pl-k">&amp;&amp;</span> date._;</td>
      </tr>
      <tr>
        <td id="L2581" class="blob-num js-line-number" data-line-number="2581"></td>
        <td id="LC2581" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L2582" class="blob-num js-line-number" data-line-number="2582"></td>
        <td id="LC2582" class="blob-code blob-code-inner js-file-line">          d3_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>;</td>
      </tr>
      <tr>
        <td id="L2583" class="blob-num js-line-number" data-line-number="2583"></td>
        <td id="LC2583" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2584" class="blob-num js-line-number" data-line-number="2584"></td>
        <td id="LC2584" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L2585" class="blob-num js-line-number" data-line-number="2585"></td>
        <td id="LC2585" class="blob-code blob-code-inner js-file-line">      format.toString <span class="pl-k">=</span> local.toString;</td>
      </tr>
      <tr>
        <td id="L2586" class="blob-num js-line-number" data-line-number="2586"></td>
        <td id="LC2586" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> format;</td>
      </tr>
      <tr>
        <td id="L2587" class="blob-num js-line-number" data-line-number="2587"></td>
        <td id="LC2587" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2588" class="blob-num js-line-number" data-line-number="2588"></td>
        <td id="LC2588" class="blob-code blob-code-inner js-file-line">    d3_time_format.multi <span class="pl-k">=</span> d3_time_format.utc.multi <span class="pl-k">=</span> d3_time_formatMulti;</td>
      </tr>
      <tr>
        <td id="L2589" class="blob-num js-line-number" data-line-number="2589"></td>
        <td id="LC2589" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> d3_time_periodLookup <span class="pl-k">=</span> d3.map(), d3_time_dayRe <span class="pl-k">=</span> d3_time_formatRe(locale_days), d3_time_dayLookup <span class="pl-k">=</span> d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe <span class="pl-k">=</span> d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup <span class="pl-k">=</span> d3_time_formatLookup(locale_shortDays), d3_time_monthRe <span class="pl-k">=</span> d3_time_formatRe(locale_months), d3_time_monthLookup <span class="pl-k">=</span> d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe <span class="pl-k">=</span> d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup <span class="pl-k">=</span> d3_time_formatLookup(locale_shortMonths);</td>
      </tr>
      <tr>
        <td id="L2590" class="blob-num js-line-number" data-line-number="2590"></td>
        <td id="LC2590" class="blob-code blob-code-inner js-file-line">    locale_periods.forEach(<span class="pl-k">function</span>(<span class="pl-smi">p</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2591" class="blob-num js-line-number" data-line-number="2591"></td>
        <td id="LC2591" class="blob-code blob-code-inner js-file-line">      d3_time_periodLookup.set(p.<span class="pl-c1">toLowerCase</span>(), i);</td>
      </tr>
      <tr>
        <td id="L2592" class="blob-num js-line-number" data-line-number="2592"></td>
        <td id="LC2592" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2593" class="blob-num js-line-number" data-line-number="2593"></td>
        <td id="LC2593" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> d3_time_formats <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2594" class="blob-num js-line-number" data-line-number="2594"></td>
        <td id="LC2594" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">a</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2595" class="blob-num js-line-number" data-line-number="2595"></td>
        <td id="LC2595" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> locale_shortDays[d.<span class="pl-c1">getDay</span>()];</td>
      </tr>
      <tr>
        <td id="L2596" class="blob-num js-line-number" data-line-number="2596"></td>
        <td id="LC2596" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2597" class="blob-num js-line-number" data-line-number="2597"></td>
        <td id="LC2597" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">A</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2598" class="blob-num js-line-number" data-line-number="2598"></td>
        <td id="LC2598" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> locale_days[d.<span class="pl-c1">getDay</span>()];</td>
      </tr>
      <tr>
        <td id="L2599" class="blob-num js-line-number" data-line-number="2599"></td>
        <td id="LC2599" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2600" class="blob-num js-line-number" data-line-number="2600"></td>
        <td id="LC2600" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">b</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2601" class="blob-num js-line-number" data-line-number="2601"></td>
        <td id="LC2601" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> locale_shortMonths[d.<span class="pl-c1">getMonth</span>()];</td>
      </tr>
      <tr>
        <td id="L2602" class="blob-num js-line-number" data-line-number="2602"></td>
        <td id="LC2602" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2603" class="blob-num js-line-number" data-line-number="2603"></td>
        <td id="LC2603" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">B</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2604" class="blob-num js-line-number" data-line-number="2604"></td>
        <td id="LC2604" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> locale_months[d.<span class="pl-c1">getMonth</span>()];</td>
      </tr>
      <tr>
        <td id="L2605" class="blob-num js-line-number" data-line-number="2605"></td>
        <td id="LC2605" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2606" class="blob-num js-line-number" data-line-number="2606"></td>
        <td id="LC2606" class="blob-code blob-code-inner js-file-line">      c<span class="pl-k">:</span> d3_time_format(locale_dateTime),</td>
      </tr>
      <tr>
        <td id="L2607" class="blob-num js-line-number" data-line-number="2607"></td>
        <td id="LC2607" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">d</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2608" class="blob-num js-line-number" data-line-number="2608"></td>
        <td id="LC2608" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getDate</span>(), p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2609" class="blob-num js-line-number" data-line-number="2609"></td>
        <td id="LC2609" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2610" class="blob-num js-line-number" data-line-number="2610"></td>
        <td id="LC2610" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">e</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2611" class="blob-num js-line-number" data-line-number="2611"></td>
        <td id="LC2611" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getDate</span>(), p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2612" class="blob-num js-line-number" data-line-number="2612"></td>
        <td id="LC2612" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2613" class="blob-num js-line-number" data-line-number="2613"></td>
        <td id="LC2613" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">H</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2614" class="blob-num js-line-number" data-line-number="2614"></td>
        <td id="LC2614" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getHours</span>(), p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2615" class="blob-num js-line-number" data-line-number="2615"></td>
        <td id="LC2615" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2616" class="blob-num js-line-number" data-line-number="2616"></td>
        <td id="LC2616" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">I</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2617" class="blob-num js-line-number" data-line-number="2617"></td>
        <td id="LC2617" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getHours</span>() <span class="pl-k">%</span> <span class="pl-c1">12</span> <span class="pl-k">||</span> <span class="pl-c1">12</span>, p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2618" class="blob-num js-line-number" data-line-number="2618"></td>
        <td id="LC2618" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2619" class="blob-num js-line-number" data-line-number="2619"></td>
        <td id="LC2619" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">j</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2620" class="blob-num js-line-number" data-line-number="2620"></td>
        <td id="LC2620" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(<span class="pl-c1">1</span> <span class="pl-k">+</span> d3_time.dayOfYear(d), p, <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L2621" class="blob-num js-line-number" data-line-number="2621"></td>
        <td id="LC2621" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2622" class="blob-num js-line-number" data-line-number="2622"></td>
        <td id="LC2622" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">L</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2623" class="blob-num js-line-number" data-line-number="2623"></td>
        <td id="LC2623" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getMilliseconds</span>(), p, <span class="pl-c1">3</span>);</td>
      </tr>
      <tr>
        <td id="L2624" class="blob-num js-line-number" data-line-number="2624"></td>
        <td id="LC2624" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2625" class="blob-num js-line-number" data-line-number="2625"></td>
        <td id="LC2625" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">m</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2626" class="blob-num js-line-number" data-line-number="2626"></td>
        <td id="LC2626" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getMonth</span>() <span class="pl-k">+</span> <span class="pl-c1">1</span>, p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2627" class="blob-num js-line-number" data-line-number="2627"></td>
        <td id="LC2627" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2628" class="blob-num js-line-number" data-line-number="2628"></td>
        <td id="LC2628" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">M</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2629" class="blob-num js-line-number" data-line-number="2629"></td>
        <td id="LC2629" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getMinutes</span>(), p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2630" class="blob-num js-line-number" data-line-number="2630"></td>
        <td id="LC2630" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2631" class="blob-num js-line-number" data-line-number="2631"></td>
        <td id="LC2631" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">p</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2632" class="blob-num js-line-number" data-line-number="2632"></td>
        <td id="LC2632" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> locale_periods[<span class="pl-k">+</span>(d.<span class="pl-c1">getHours</span>() <span class="pl-k">&gt;=</span> <span class="pl-c1">12</span>)];</td>
      </tr>
      <tr>
        <td id="L2633" class="blob-num js-line-number" data-line-number="2633"></td>
        <td id="LC2633" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2634" class="blob-num js-line-number" data-line-number="2634"></td>
        <td id="LC2634" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">S</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2635" class="blob-num js-line-number" data-line-number="2635"></td>
        <td id="LC2635" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getSeconds</span>(), p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2636" class="blob-num js-line-number" data-line-number="2636"></td>
        <td id="LC2636" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2637" class="blob-num js-line-number" data-line-number="2637"></td>
        <td id="LC2637" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">U</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2638" class="blob-num js-line-number" data-line-number="2638"></td>
        <td id="LC2638" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d3_time.sundayOfYear(d), p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2639" class="blob-num js-line-number" data-line-number="2639"></td>
        <td id="LC2639" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2640" class="blob-num js-line-number" data-line-number="2640"></td>
        <td id="LC2640" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">w</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2641" class="blob-num js-line-number" data-line-number="2641"></td>
        <td id="LC2641" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d.<span class="pl-c1">getDay</span>();</td>
      </tr>
      <tr>
        <td id="L2642" class="blob-num js-line-number" data-line-number="2642"></td>
        <td id="LC2642" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2643" class="blob-num js-line-number" data-line-number="2643"></td>
        <td id="LC2643" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">W</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2644" class="blob-num js-line-number" data-line-number="2644"></td>
        <td id="LC2644" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d3_time.mondayOfYear(d), p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2645" class="blob-num js-line-number" data-line-number="2645"></td>
        <td id="LC2645" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2646" class="blob-num js-line-number" data-line-number="2646"></td>
        <td id="LC2646" class="blob-code blob-code-inner js-file-line">      x<span class="pl-k">:</span> d3_time_format(locale_date),</td>
      </tr>
      <tr>
        <td id="L2647" class="blob-num js-line-number" data-line-number="2647"></td>
        <td id="LC2647" class="blob-code blob-code-inner js-file-line">      X<span class="pl-k">:</span> d3_time_format(locale_time),</td>
      </tr>
      <tr>
        <td id="L2648" class="blob-num js-line-number" data-line-number="2648"></td>
        <td id="LC2648" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">y</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2649" class="blob-num js-line-number" data-line-number="2649"></td>
        <td id="LC2649" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getFullYear</span>() <span class="pl-k">%</span> <span class="pl-c1">100</span>, p, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2650" class="blob-num js-line-number" data-line-number="2650"></td>
        <td id="LC2650" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2651" class="blob-num js-line-number" data-line-number="2651"></td>
        <td id="LC2651" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">Y</span>: <span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L2652" class="blob-num js-line-number" data-line-number="2652"></td>
        <td id="LC2652" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_time_formatPad(d.<span class="pl-c1">getFullYear</span>() <span class="pl-k">%</span> <span class="pl-c1">1e4</span>, p, <span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L2653" class="blob-num js-line-number" data-line-number="2653"></td>
        <td id="LC2653" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2654" class="blob-num js-line-number" data-line-number="2654"></td>
        <td id="LC2654" class="blob-code blob-code-inner js-file-line">      Z<span class="pl-k">:</span> d3_time_zone,</td>
      </tr>
      <tr>
        <td id="L2655" class="blob-num js-line-number" data-line-number="2655"></td>
        <td id="LC2655" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">%</span><span class="pl-pds">&quot;</span></span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2656" class="blob-num js-line-number" data-line-number="2656"></td>
        <td id="LC2656" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2657" class="blob-num js-line-number" data-line-number="2657"></td>
        <td id="LC2657" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2658" class="blob-num js-line-number" data-line-number="2658"></td>
        <td id="LC2658" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2659" class="blob-num js-line-number" data-line-number="2659"></td>
        <td id="LC2659" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> d3_time_parsers <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2660" class="blob-num js-line-number" data-line-number="2660"></td>
        <td id="LC2660" class="blob-code blob-code-inner js-file-line">      a<span class="pl-k">:</span> d3_time_parseWeekdayAbbrev,</td>
      </tr>
      <tr>
        <td id="L2661" class="blob-num js-line-number" data-line-number="2661"></td>
        <td id="LC2661" class="blob-code blob-code-inner js-file-line">      A<span class="pl-k">:</span> d3_time_parseWeekday,</td>
      </tr>
      <tr>
        <td id="L2662" class="blob-num js-line-number" data-line-number="2662"></td>
        <td id="LC2662" class="blob-code blob-code-inner js-file-line">      b<span class="pl-k">:</span> d3_time_parseMonthAbbrev,</td>
      </tr>
      <tr>
        <td id="L2663" class="blob-num js-line-number" data-line-number="2663"></td>
        <td id="LC2663" class="blob-code blob-code-inner js-file-line">      B<span class="pl-k">:</span> d3_time_parseMonth,</td>
      </tr>
      <tr>
        <td id="L2664" class="blob-num js-line-number" data-line-number="2664"></td>
        <td id="LC2664" class="blob-code blob-code-inner js-file-line">      c<span class="pl-k">:</span> d3_time_parseLocaleFull,</td>
      </tr>
      <tr>
        <td id="L2665" class="blob-num js-line-number" data-line-number="2665"></td>
        <td id="LC2665" class="blob-code blob-code-inner js-file-line">      d<span class="pl-k">:</span> d3_time_parseDay,</td>
      </tr>
      <tr>
        <td id="L2666" class="blob-num js-line-number" data-line-number="2666"></td>
        <td id="LC2666" class="blob-code blob-code-inner js-file-line">      e<span class="pl-k">:</span> d3_time_parseDay,</td>
      </tr>
      <tr>
        <td id="L2667" class="blob-num js-line-number" data-line-number="2667"></td>
        <td id="LC2667" class="blob-code blob-code-inner js-file-line">      H<span class="pl-k">:</span> d3_time_parseHour24,</td>
      </tr>
      <tr>
        <td id="L2668" class="blob-num js-line-number" data-line-number="2668"></td>
        <td id="LC2668" class="blob-code blob-code-inner js-file-line">      I<span class="pl-k">:</span> d3_time_parseHour24,</td>
      </tr>
      <tr>
        <td id="L2669" class="blob-num js-line-number" data-line-number="2669"></td>
        <td id="LC2669" class="blob-code blob-code-inner js-file-line">      j<span class="pl-k">:</span> d3_time_parseDayOfYear,</td>
      </tr>
      <tr>
        <td id="L2670" class="blob-num js-line-number" data-line-number="2670"></td>
        <td id="LC2670" class="blob-code blob-code-inner js-file-line">      L<span class="pl-k">:</span> d3_time_parseMilliseconds,</td>
      </tr>
      <tr>
        <td id="L2671" class="blob-num js-line-number" data-line-number="2671"></td>
        <td id="LC2671" class="blob-code blob-code-inner js-file-line">      m<span class="pl-k">:</span> d3_time_parseMonthNumber,</td>
      </tr>
      <tr>
        <td id="L2672" class="blob-num js-line-number" data-line-number="2672"></td>
        <td id="LC2672" class="blob-code blob-code-inner js-file-line">      M<span class="pl-k">:</span> d3_time_parseMinutes,</td>
      </tr>
      <tr>
        <td id="L2673" class="blob-num js-line-number" data-line-number="2673"></td>
        <td id="LC2673" class="blob-code blob-code-inner js-file-line">      p<span class="pl-k">:</span> d3_time_parseAmPm,</td>
      </tr>
      <tr>
        <td id="L2674" class="blob-num js-line-number" data-line-number="2674"></td>
        <td id="LC2674" class="blob-code blob-code-inner js-file-line">      S<span class="pl-k">:</span> d3_time_parseSeconds,</td>
      </tr>
      <tr>
        <td id="L2675" class="blob-num js-line-number" data-line-number="2675"></td>
        <td id="LC2675" class="blob-code blob-code-inner js-file-line">      U<span class="pl-k">:</span> d3_time_parseWeekNumberSunday,</td>
      </tr>
      <tr>
        <td id="L2676" class="blob-num js-line-number" data-line-number="2676"></td>
        <td id="LC2676" class="blob-code blob-code-inner js-file-line">      w<span class="pl-k">:</span> d3_time_parseWeekdayNumber,</td>
      </tr>
      <tr>
        <td id="L2677" class="blob-num js-line-number" data-line-number="2677"></td>
        <td id="LC2677" class="blob-code blob-code-inner js-file-line">      W<span class="pl-k">:</span> d3_time_parseWeekNumberMonday,</td>
      </tr>
      <tr>
        <td id="L2678" class="blob-num js-line-number" data-line-number="2678"></td>
        <td id="LC2678" class="blob-code blob-code-inner js-file-line">      x<span class="pl-k">:</span> d3_time_parseLocaleDate,</td>
      </tr>
      <tr>
        <td id="L2679" class="blob-num js-line-number" data-line-number="2679"></td>
        <td id="LC2679" class="blob-code blob-code-inner js-file-line">      X<span class="pl-k">:</span> d3_time_parseLocaleTime,</td>
      </tr>
      <tr>
        <td id="L2680" class="blob-num js-line-number" data-line-number="2680"></td>
        <td id="LC2680" class="blob-code blob-code-inner js-file-line">      y<span class="pl-k">:</span> d3_time_parseYear,</td>
      </tr>
      <tr>
        <td id="L2681" class="blob-num js-line-number" data-line-number="2681"></td>
        <td id="LC2681" class="blob-code blob-code-inner js-file-line">      Y<span class="pl-k">:</span> d3_time_parseFullYear,</td>
      </tr>
      <tr>
        <td id="L2682" class="blob-num js-line-number" data-line-number="2682"></td>
        <td id="LC2682" class="blob-code blob-code-inner js-file-line">      Z<span class="pl-k">:</span> d3_time_parseZone,</td>
      </tr>
      <tr>
        <td id="L2683" class="blob-num js-line-number" data-line-number="2683"></td>
        <td id="LC2683" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_time_parseLiteralPercent</td>
      </tr>
      <tr>
        <td id="L2684" class="blob-num js-line-number" data-line-number="2684"></td>
        <td id="LC2684" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2685" class="blob-num js-line-number" data-line-number="2685"></td>
        <td id="LC2685" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parseWeekdayAbbrev</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2686" class="blob-num js-line-number" data-line-number="2686"></td>
        <td id="LC2686" class="blob-code blob-code-inner js-file-line">      d3_time_dayAbbrevRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2687" class="blob-num js-line-number" data-line-number="2687"></td>
        <td id="LC2687" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_dayAbbrevRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i));</td>
      </tr>
      <tr>
        <td id="L2688" class="blob-num js-line-number" data-line-number="2688"></td>
        <td id="LC2688" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.w <span class="pl-k">=</span> d3_time_dayAbbrevLookup.get(n[<span class="pl-c1">0</span>].<span class="pl-c1">toLowerCase</span>()), i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2689" class="blob-num js-line-number" data-line-number="2689"></td>
        <td id="LC2689" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2690" class="blob-num js-line-number" data-line-number="2690"></td>
        <td id="LC2690" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parseWeekday</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2691" class="blob-num js-line-number" data-line-number="2691"></td>
        <td id="LC2691" class="blob-code blob-code-inner js-file-line">      d3_time_dayRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2692" class="blob-num js-line-number" data-line-number="2692"></td>
        <td id="LC2692" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_dayRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i));</td>
      </tr>
      <tr>
        <td id="L2693" class="blob-num js-line-number" data-line-number="2693"></td>
        <td id="LC2693" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.w <span class="pl-k">=</span> d3_time_dayLookup.get(n[<span class="pl-c1">0</span>].<span class="pl-c1">toLowerCase</span>()), i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2694" class="blob-num js-line-number" data-line-number="2694"></td>
        <td id="LC2694" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2695" class="blob-num js-line-number" data-line-number="2695"></td>
        <td id="LC2695" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parseMonthAbbrev</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2696" class="blob-num js-line-number" data-line-number="2696"></td>
        <td id="LC2696" class="blob-code blob-code-inner js-file-line">      d3_time_monthAbbrevRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2697" class="blob-num js-line-number" data-line-number="2697"></td>
        <td id="LC2697" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_monthAbbrevRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i));</td>
      </tr>
      <tr>
        <td id="L2698" class="blob-num js-line-number" data-line-number="2698"></td>
        <td id="LC2698" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.m <span class="pl-k">=</span> d3_time_monthAbbrevLookup.get(n[<span class="pl-c1">0</span>].<span class="pl-c1">toLowerCase</span>()), i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2699" class="blob-num js-line-number" data-line-number="2699"></td>
        <td id="LC2699" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2700" class="blob-num js-line-number" data-line-number="2700"></td>
        <td id="LC2700" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parseMonth</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2701" class="blob-num js-line-number" data-line-number="2701"></td>
        <td id="LC2701" class="blob-code blob-code-inner js-file-line">      d3_time_monthRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2702" class="blob-num js-line-number" data-line-number="2702"></td>
        <td id="LC2702" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_monthRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i));</td>
      </tr>
      <tr>
        <td id="L2703" class="blob-num js-line-number" data-line-number="2703"></td>
        <td id="LC2703" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.m <span class="pl-k">=</span> d3_time_monthLookup.get(n[<span class="pl-c1">0</span>].<span class="pl-c1">toLowerCase</span>()), i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2704" class="blob-num js-line-number" data-line-number="2704"></td>
        <td id="LC2704" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2705" class="blob-num js-line-number" data-line-number="2705"></td>
        <td id="LC2705" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parseLocaleFull</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2706" class="blob-num js-line-number" data-line-number="2706"></td>
        <td id="LC2706" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_time_parse(date, d3_time_formats.c.<span class="pl-c1">toString</span>(), string, i);</td>
      </tr>
      <tr>
        <td id="L2707" class="blob-num js-line-number" data-line-number="2707"></td>
        <td id="LC2707" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2708" class="blob-num js-line-number" data-line-number="2708"></td>
        <td id="LC2708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parseLocaleDate</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2709" class="blob-num js-line-number" data-line-number="2709"></td>
        <td id="LC2709" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_time_parse(date, d3_time_formats.<span class="pl-c1">x</span>.<span class="pl-c1">toString</span>(), string, i);</td>
      </tr>
      <tr>
        <td id="L2710" class="blob-num js-line-number" data-line-number="2710"></td>
        <td id="LC2710" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2711" class="blob-num js-line-number" data-line-number="2711"></td>
        <td id="LC2711" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parseLocaleTime</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2712" class="blob-num js-line-number" data-line-number="2712"></td>
        <td id="LC2712" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_time_parse(date, d3_time_formats.X.<span class="pl-c1">toString</span>(), string, i);</td>
      </tr>
      <tr>
        <td id="L2713" class="blob-num js-line-number" data-line-number="2713"></td>
        <td id="LC2713" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2714" class="blob-num js-line-number" data-line-number="2714"></td>
        <td id="LC2714" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">d3_time_parseAmPm</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2715" class="blob-num js-line-number" data-line-number="2715"></td>
        <td id="LC2715" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_periodLookup.get(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+=</span> <span class="pl-c1">2</span>).<span class="pl-c1">toLowerCase</span>());</td>
      </tr>
      <tr>
        <td id="L2716" class="blob-num js-line-number" data-line-number="2716"></td>
        <td id="LC2716" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> n <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> (date.p <span class="pl-k">=</span> n, i);</td>
      </tr>
      <tr>
        <td id="L2717" class="blob-num js-line-number" data-line-number="2717"></td>
        <td id="LC2717" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2718" class="blob-num js-line-number" data-line-number="2718"></td>
        <td id="LC2718" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_time_format;</td>
      </tr>
      <tr>
        <td id="L2719" class="blob-num js-line-number" data-line-number="2719"></td>
        <td id="LC2719" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2720" class="blob-num js-line-number" data-line-number="2720"></td>
        <td id="LC2720" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_formatPads <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2721" class="blob-num js-line-number" data-line-number="2721"></td>
        <td id="LC2721" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2722" class="blob-num js-line-number" data-line-number="2722"></td>
        <td id="LC2722" class="blob-code blob-code-inner js-file-line">    _<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2723" class="blob-num js-line-number" data-line-number="2723"></td>
        <td id="LC2723" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2724" class="blob-num js-line-number" data-line-number="2724"></td>
        <td id="LC2724" class="blob-code blob-code-inner js-file-line">  }, d3_time_numberRe <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-c1">\d</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>, d3_time_percentRe <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>%<span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L2725" class="blob-num js-line-number" data-line-number="2725"></td>
        <td id="LC2725" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_formatPad</span>(<span class="pl-smi">value</span>, <span class="pl-smi">fill</span>, <span class="pl-smi">width</span>) {</td>
      </tr>
      <tr>
        <td id="L2726" class="blob-num js-line-number" data-line-number="2726"></td>
        <td id="LC2726" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> sign <span class="pl-k">=</span> value <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, string <span class="pl-k">=</span> (sign <span class="pl-k">?</span> <span class="pl-k">-</span>value <span class="pl-k">:</span> value) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, length <span class="pl-k">=</span> string.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2727" class="blob-num js-line-number" data-line-number="2727"></td>
        <td id="LC2727" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> sign <span class="pl-k">+</span> (length <span class="pl-k">&lt;</span> width <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(width <span class="pl-k">-</span> length <span class="pl-k">+</span> <span class="pl-c1">1</span>).<span class="pl-c1">join</span>(fill) <span class="pl-k">+</span> string <span class="pl-k">:</span> string);</td>
      </tr>
      <tr>
        <td id="L2728" class="blob-num js-line-number" data-line-number="2728"></td>
        <td id="LC2728" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2729" class="blob-num js-line-number" data-line-number="2729"></td>
        <td id="LC2729" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_formatRe</span>(<span class="pl-smi">names</span>) {</td>
      </tr>
      <tr>
        <td id="L2730" class="blob-num js-line-number" data-line-number="2730"></td>
        <td id="LC2730" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>^(?:<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> names.map(d3.requote).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>i<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2731" class="blob-num js-line-number" data-line-number="2731"></td>
        <td id="LC2731" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2732" class="blob-num js-line-number" data-line-number="2732"></td>
        <td id="LC2732" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_formatLookup</span>(<span class="pl-smi">names</span>) {</td>
      </tr>
      <tr>
        <td id="L2733" class="blob-num js-line-number" data-line-number="2733"></td>
        <td id="LC2733" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> map <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_Map</span>(), i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> names.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2734" class="blob-num js-line-number" data-line-number="2734"></td>
        <td id="LC2734" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) map.set(names[i].<span class="pl-c1">toLowerCase</span>(), i);</td>
      </tr>
      <tr>
        <td id="L2735" class="blob-num js-line-number" data-line-number="2735"></td>
        <td id="LC2735" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> map;</td>
      </tr>
      <tr>
        <td id="L2736" class="blob-num js-line-number" data-line-number="2736"></td>
        <td id="LC2736" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2737" class="blob-num js-line-number" data-line-number="2737"></td>
        <td id="LC2737" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseWeekdayNumber</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2738" class="blob-num js-line-number" data-line-number="2738"></td>
        <td id="LC2738" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2739" class="blob-num js-line-number" data-line-number="2739"></td>
        <td id="LC2739" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L2740" class="blob-num js-line-number" data-line-number="2740"></td>
        <td id="LC2740" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.w <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2741" class="blob-num js-line-number" data-line-number="2741"></td>
        <td id="LC2741" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2742" class="blob-num js-line-number" data-line-number="2742"></td>
        <td id="LC2742" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseWeekNumberSunday</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2743" class="blob-num js-line-number" data-line-number="2743"></td>
        <td id="LC2743" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2744" class="blob-num js-line-number" data-line-number="2744"></td>
        <td id="LC2744" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i));</td>
      </tr>
      <tr>
        <td id="L2745" class="blob-num js-line-number" data-line-number="2745"></td>
        <td id="LC2745" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.U <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2746" class="blob-num js-line-number" data-line-number="2746"></td>
        <td id="LC2746" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2747" class="blob-num js-line-number" data-line-number="2747"></td>
        <td id="LC2747" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseWeekNumberMonday</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2748" class="blob-num js-line-number" data-line-number="2748"></td>
        <td id="LC2748" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2749" class="blob-num js-line-number" data-line-number="2749"></td>
        <td id="LC2749" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i));</td>
      </tr>
      <tr>
        <td id="L2750" class="blob-num js-line-number" data-line-number="2750"></td>
        <td id="LC2750" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.W <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2751" class="blob-num js-line-number" data-line-number="2751"></td>
        <td id="LC2751" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2752" class="blob-num js-line-number" data-line-number="2752"></td>
        <td id="LC2752" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseFullYear</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2753" class="blob-num js-line-number" data-line-number="2753"></td>
        <td id="LC2753" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2754" class="blob-num js-line-number" data-line-number="2754"></td>
        <td id="LC2754" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">4</span>));</td>
      </tr>
      <tr>
        <td id="L2755" class="blob-num js-line-number" data-line-number="2755"></td>
        <td id="LC2755" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2756" class="blob-num js-line-number" data-line-number="2756"></td>
        <td id="LC2756" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2757" class="blob-num js-line-number" data-line-number="2757"></td>
        <td id="LC2757" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseYear</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2758" class="blob-num js-line-number" data-line-number="2758"></td>
        <td id="LC2758" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2759" class="blob-num js-line-number" data-line-number="2759"></td>
        <td id="LC2759" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L2760" class="blob-num js-line-number" data-line-number="2760"></td>
        <td id="LC2760" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.<span class="pl-c1">y</span> <span class="pl-k">=</span> d3_time_expandYear(<span class="pl-k">+</span>n[<span class="pl-c1">0</span>]), i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2761" class="blob-num js-line-number" data-line-number="2761"></td>
        <td id="LC2761" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2762" class="blob-num js-line-number" data-line-number="2762"></td>
        <td id="LC2762" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseZone</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2763" class="blob-num js-line-number" data-line-number="2763"></td>
        <td id="LC2763" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[+-]</span><span class="pl-c1">\d</span><span class="pl-k">{4}</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(string <span class="pl-k">=</span> string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">5</span>)) <span class="pl-k">?</span> (date.Z <span class="pl-k">=</span> <span class="pl-k">-</span>string, </td>
      </tr>
      <tr>
        <td id="L2764" class="blob-num js-line-number" data-line-number="2764"></td>
        <td id="LC2764" class="blob-code blob-code-inner js-file-line">    i <span class="pl-k">+</span> <span class="pl-c1">5</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2765" class="blob-num js-line-number" data-line-number="2765"></td>
        <td id="LC2765" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2766" class="blob-num js-line-number" data-line-number="2766"></td>
        <td id="LC2766" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_expandYear</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2767" class="blob-num js-line-number" data-line-number="2767"></td>
        <td id="LC2767" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d <span class="pl-k">+</span> (d <span class="pl-k">&gt;</span> <span class="pl-c1">68</span> <span class="pl-k">?</span> <span class="pl-c1">1900</span> <span class="pl-k">:</span> <span class="pl-c1">2e3</span>);</td>
      </tr>
      <tr>
        <td id="L2768" class="blob-num js-line-number" data-line-number="2768"></td>
        <td id="LC2768" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2769" class="blob-num js-line-number" data-line-number="2769"></td>
        <td id="LC2769" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseMonthNumber</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2770" class="blob-num js-line-number" data-line-number="2770"></td>
        <td id="LC2770" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2771" class="blob-num js-line-number" data-line-number="2771"></td>
        <td id="LC2771" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L2772" class="blob-num js-line-number" data-line-number="2772"></td>
        <td id="LC2772" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.m <span class="pl-k">=</span> n[<span class="pl-c1">0</span>] <span class="pl-k">-</span> <span class="pl-c1">1</span>, i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2773" class="blob-num js-line-number" data-line-number="2773"></td>
        <td id="LC2773" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2774" class="blob-num js-line-number" data-line-number="2774"></td>
        <td id="LC2774" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseDay</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2775" class="blob-num js-line-number" data-line-number="2775"></td>
        <td id="LC2775" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2776" class="blob-num js-line-number" data-line-number="2776"></td>
        <td id="LC2776" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L2777" class="blob-num js-line-number" data-line-number="2777"></td>
        <td id="LC2777" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.d <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2778" class="blob-num js-line-number" data-line-number="2778"></td>
        <td id="LC2778" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2779" class="blob-num js-line-number" data-line-number="2779"></td>
        <td id="LC2779" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseDayOfYear</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2780" class="blob-num js-line-number" data-line-number="2780"></td>
        <td id="LC2780" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2781" class="blob-num js-line-number" data-line-number="2781"></td>
        <td id="LC2781" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">3</span>));</td>
      </tr>
      <tr>
        <td id="L2782" class="blob-num js-line-number" data-line-number="2782"></td>
        <td id="LC2782" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.j <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2783" class="blob-num js-line-number" data-line-number="2783"></td>
        <td id="LC2783" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2784" class="blob-num js-line-number" data-line-number="2784"></td>
        <td id="LC2784" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseHour24</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2785" class="blob-num js-line-number" data-line-number="2785"></td>
        <td id="LC2785" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2786" class="blob-num js-line-number" data-line-number="2786"></td>
        <td id="LC2786" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L2787" class="blob-num js-line-number" data-line-number="2787"></td>
        <td id="LC2787" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.H <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2788" class="blob-num js-line-number" data-line-number="2788"></td>
        <td id="LC2788" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2789" class="blob-num js-line-number" data-line-number="2789"></td>
        <td id="LC2789" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseMinutes</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2790" class="blob-num js-line-number" data-line-number="2790"></td>
        <td id="LC2790" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2791" class="blob-num js-line-number" data-line-number="2791"></td>
        <td id="LC2791" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L2792" class="blob-num js-line-number" data-line-number="2792"></td>
        <td id="LC2792" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.M <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2793" class="blob-num js-line-number" data-line-number="2793"></td>
        <td id="LC2793" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2794" class="blob-num js-line-number" data-line-number="2794"></td>
        <td id="LC2794" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseSeconds</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2795" class="blob-num js-line-number" data-line-number="2795"></td>
        <td id="LC2795" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2796" class="blob-num js-line-number" data-line-number="2796"></td>
        <td id="LC2796" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L2797" class="blob-num js-line-number" data-line-number="2797"></td>
        <td id="LC2797" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.S <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2798" class="blob-num js-line-number" data-line-number="2798"></td>
        <td id="LC2798" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2799" class="blob-num js-line-number" data-line-number="2799"></td>
        <td id="LC2799" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseMilliseconds</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2800" class="blob-num js-line-number" data-line-number="2800"></td>
        <td id="LC2800" class="blob-code blob-code-inner js-file-line">    d3_time_numberRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2801" class="blob-num js-line-number" data-line-number="2801"></td>
        <td id="LC2801" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_numberRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">3</span>));</td>
      </tr>
      <tr>
        <td id="L2802" class="blob-num js-line-number" data-line-number="2802"></td>
        <td id="LC2802" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> (date.L <span class="pl-k">=</span> <span class="pl-k">+</span>n[<span class="pl-c1">0</span>], i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2803" class="blob-num js-line-number" data-line-number="2803"></td>
        <td id="LC2803" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2804" class="blob-num js-line-number" data-line-number="2804"></td>
        <td id="LC2804" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_zone</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2805" class="blob-num js-line-number" data-line-number="2805"></td>
        <td id="LC2805" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> z <span class="pl-k">=</span> d.<span class="pl-c1">getTimezoneOffset</span>(), zs <span class="pl-k">=</span> z <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span>, zh <span class="pl-k">=</span> <span class="pl-c1">abs</span>(z) / <span class="pl-c1">60</span> | <span class="pl-c1">0</span>, zm <span class="pl-k">=</span> <span class="pl-c1">abs</span>(z) <span class="pl-k">%</span> <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L2806" class="blob-num js-line-number" data-line-number="2806"></td>
        <td id="LC2806" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> zs <span class="pl-k">+</span> d3_time_formatPad(zh, <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">2</span>) <span class="pl-k">+</span> d3_time_formatPad(zm, <span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L2807" class="blob-num js-line-number" data-line-number="2807"></td>
        <td id="LC2807" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2808" class="blob-num js-line-number" data-line-number="2808"></td>
        <td id="LC2808" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_parseLiteralPercent</span>(<span class="pl-smi">date</span>, <span class="pl-smi">string</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L2809" class="blob-num js-line-number" data-line-number="2809"></td>
        <td id="LC2809" class="blob-code blob-code-inner js-file-line">    d3_time_percentRe.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2810" class="blob-num js-line-number" data-line-number="2810"></td>
        <td id="LC2810" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> d3_time_percentRe.<span class="pl-c1">exec</span>(string.<span class="pl-c1">slice</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L2811" class="blob-num js-line-number" data-line-number="2811"></td>
        <td id="LC2811" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> n <span class="pl-k">?</span> i <span class="pl-k">+</span> n[<span class="pl-c1">0</span>].<span class="pl-c1">length</span> <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2812" class="blob-num js-line-number" data-line-number="2812"></td>
        <td id="LC2812" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2813" class="blob-num js-line-number" data-line-number="2813"></td>
        <td id="LC2813" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_formatMulti</span>(<span class="pl-smi">formats</span>) {</td>
      </tr>
      <tr>
        <td id="L2814" class="blob-num js-line-number" data-line-number="2814"></td>
        <td id="LC2814" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> formats.<span class="pl-c1">length</span>, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2815" class="blob-num js-line-number" data-line-number="2815"></td>
        <td id="LC2815" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) formats[i][<span class="pl-c1">0</span>] <span class="pl-k">=</span> <span class="pl-v">this</span>(formats[i][<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L2816" class="blob-num js-line-number" data-line-number="2816"></td>
        <td id="LC2816" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L2817" class="blob-num js-line-number" data-line-number="2817"></td>
        <td id="LC2817" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, f <span class="pl-k">=</span> formats[i];</td>
      </tr>
      <tr>
        <td id="L2818" class="blob-num js-line-number" data-line-number="2818"></td>
        <td id="LC2818" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">!</span>f[<span class="pl-c1">1</span>](date)) f <span class="pl-k">=</span> formats[<span class="pl-k">++</span>i];</td>
      </tr>
      <tr>
        <td id="L2819" class="blob-num js-line-number" data-line-number="2819"></td>
        <td id="LC2819" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> f[<span class="pl-c1">0</span>](date);</td>
      </tr>
      <tr>
        <td id="L2820" class="blob-num js-line-number" data-line-number="2820"></td>
        <td id="LC2820" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2821" class="blob-num js-line-number" data-line-number="2821"></td>
        <td id="LC2821" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2822" class="blob-num js-line-number" data-line-number="2822"></td>
        <td id="LC2822" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">locale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">locale</span>) {</td>
      </tr>
      <tr>
        <td id="L2823" class="blob-num js-line-number" data-line-number="2823"></td>
        <td id="LC2823" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2824" class="blob-num js-line-number" data-line-number="2824"></td>
        <td id="LC2824" class="blob-code blob-code-inner js-file-line">      numberFormat<span class="pl-k">:</span> d3_locale_numberFormat(locale),</td>
      </tr>
      <tr>
        <td id="L2825" class="blob-num js-line-number" data-line-number="2825"></td>
        <td id="LC2825" class="blob-code blob-code-inner js-file-line">      timeFormat<span class="pl-k">:</span> d3_locale_timeFormat(locale)</td>
      </tr>
      <tr>
        <td id="L2826" class="blob-num js-line-number" data-line-number="2826"></td>
        <td id="LC2826" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2827" class="blob-num js-line-number" data-line-number="2827"></td>
        <td id="LC2827" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2828" class="blob-num js-line-number" data-line-number="2828"></td>
        <td id="LC2828" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_locale_enUS <span class="pl-k">=</span> d3.locale({</td>
      </tr>
      <tr>
        <td id="L2829" class="blob-num js-line-number" data-line-number="2829"></td>
        <td id="LC2829" class="blob-code blob-code-inner js-file-line">    decimal<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2830" class="blob-num js-line-number" data-line-number="2830"></td>
        <td id="LC2830" class="blob-code blob-code-inner js-file-line">    thousands<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2831" class="blob-num js-line-number" data-line-number="2831"></td>
        <td id="LC2831" class="blob-code blob-code-inner js-file-line">    grouping<span class="pl-k">:</span> [ <span class="pl-c1">3</span> ],</td>
      </tr>
      <tr>
        <td id="L2832" class="blob-num js-line-number" data-line-number="2832"></td>
        <td id="LC2832" class="blob-code blob-code-inner js-file-line">    currency<span class="pl-k">:</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> ],</td>
      </tr>
      <tr>
        <td id="L2833" class="blob-num js-line-number" data-line-number="2833"></td>
        <td id="LC2833" class="blob-code blob-code-inner js-file-line">    dateTime<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%a %b %e %X %Y<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2834" class="blob-num js-line-number" data-line-number="2834"></td>
        <td id="LC2834" class="blob-code blob-code-inner js-file-line">    date<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%m/%d/%Y<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2835" class="blob-num js-line-number" data-line-number="2835"></td>
        <td id="LC2835" class="blob-code blob-code-inner js-file-line">    time<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%H:%M:%S<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2836" class="blob-num js-line-number" data-line-number="2836"></td>
        <td id="LC2836" class="blob-code blob-code-inner js-file-line">    periods<span class="pl-k">:</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>AM<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>PM<span class="pl-pds">&quot;</span></span> ],</td>
      </tr>
      <tr>
        <td id="L2837" class="blob-num js-line-number" data-line-number="2837"></td>
        <td id="LC2837" class="blob-code blob-code-inner js-file-line">    days<span class="pl-k">:</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>Sunday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Monday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Tuesday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Wednesday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Thursday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Friday<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Saturday<span class="pl-pds">&quot;</span></span> ],</td>
      </tr>
      <tr>
        <td id="L2838" class="blob-num js-line-number" data-line-number="2838"></td>
        <td id="LC2838" class="blob-code blob-code-inner js-file-line">    shortDays<span class="pl-k">:</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>Sun<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Mon<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Tue<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Wed<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Thu<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Fri<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Sat<span class="pl-pds">&quot;</span></span> ],</td>
      </tr>
      <tr>
        <td id="L2839" class="blob-num js-line-number" data-line-number="2839"></td>
        <td id="LC2839" class="blob-code blob-code-inner js-file-line">    months<span class="pl-k">:</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>January<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>February<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>March<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>April<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>May<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>June<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>July<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>August<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>September<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>October<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>November<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>December<span class="pl-pds">&quot;</span></span> ],</td>
      </tr>
      <tr>
        <td id="L2840" class="blob-num js-line-number" data-line-number="2840"></td>
        <td id="LC2840" class="blob-code blob-code-inner js-file-line">    shortMonths<span class="pl-k">:</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>Jan<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Feb<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Mar<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Apr<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>May<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Jun<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Jul<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Aug<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Sep<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Oct<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Nov<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Dec<span class="pl-pds">&quot;</span></span> ]</td>
      </tr>
      <tr>
        <td id="L2841" class="blob-num js-line-number" data-line-number="2841"></td>
        <td id="LC2841" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L2842" class="blob-num js-line-number" data-line-number="2842"></td>
        <td id="LC2842" class="blob-code blob-code-inner js-file-line">  d3.format <span class="pl-k">=</span> d3_locale_enUS.numberFormat;</td>
      </tr>
      <tr>
        <td id="L2843" class="blob-num js-line-number" data-line-number="2843"></td>
        <td id="LC2843" class="blob-code blob-code-inner js-file-line">  d3.geo <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2844" class="blob-num js-line-number" data-line-number="2844"></td>
        <td id="LC2844" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_adder</span>() {}</td>
      </tr>
      <tr>
        <td id="L2845" class="blob-num js-line-number" data-line-number="2845"></td>
        <td id="LC2845" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_adder</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2846" class="blob-num js-line-number" data-line-number="2846"></td>
        <td id="LC2846" class="blob-code blob-code-inner js-file-line">    s<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2847" class="blob-num js-line-number" data-line-number="2847"></td>
        <td id="LC2847" class="blob-code blob-code-inner js-file-line">    t<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2848" class="blob-num js-line-number" data-line-number="2848"></td>
        <td id="LC2848" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">add</span>: <span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L2849" class="blob-num js-line-number" data-line-number="2849"></td>
        <td id="LC2849" class="blob-code blob-code-inner js-file-line">      d3_adderSum(y, <span class="pl-v">this</span>.t, d3_adderTemp);</td>
      </tr>
      <tr>
        <td id="L2850" class="blob-num js-line-number" data-line-number="2850"></td>
        <td id="LC2850" class="blob-code blob-code-inner js-file-line">      d3_adderSum(d3_adderTemp.s, <span class="pl-v">this</span>.s, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L2851" class="blob-num js-line-number" data-line-number="2851"></td>
        <td id="LC2851" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-v">this</span>.s) <span class="pl-v">this</span>.t <span class="pl-k">+=</span> d3_adderTemp.t; <span class="pl-k">else</span> <span class="pl-v">this</span>.s <span class="pl-k">=</span> d3_adderTemp.t;</td>
      </tr>
      <tr>
        <td id="L2852" class="blob-num js-line-number" data-line-number="2852"></td>
        <td id="LC2852" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2853" class="blob-num js-line-number" data-line-number="2853"></td>
        <td id="LC2853" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">reset</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2854" class="blob-num js-line-number" data-line-number="2854"></td>
        <td id="LC2854" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.s <span class="pl-k">=</span> <span class="pl-v">this</span>.t <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2855" class="blob-num js-line-number" data-line-number="2855"></td>
        <td id="LC2855" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2856" class="blob-num js-line-number" data-line-number="2856"></td>
        <td id="LC2856" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">valueOf</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2857" class="blob-num js-line-number" data-line-number="2857"></td>
        <td id="LC2857" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>.s;</td>
      </tr>
      <tr>
        <td id="L2858" class="blob-num js-line-number" data-line-number="2858"></td>
        <td id="LC2858" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2859" class="blob-num js-line-number" data-line-number="2859"></td>
        <td id="LC2859" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2860" class="blob-num js-line-number" data-line-number="2860"></td>
        <td id="LC2860" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_adderTemp <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_adder</span>();</td>
      </tr>
      <tr>
        <td id="L2861" class="blob-num js-line-number" data-line-number="2861"></td>
        <td id="LC2861" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_adderSum</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">o</span>) {</td>
      </tr>
      <tr>
        <td id="L2862" class="blob-num js-line-number" data-line-number="2862"></td>
        <td id="LC2862" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> o.s <span class="pl-k">=</span> a <span class="pl-k">+</span> b, bv <span class="pl-k">=</span> x <span class="pl-k">-</span> a, av <span class="pl-k">=</span> x <span class="pl-k">-</span> bv;</td>
      </tr>
      <tr>
        <td id="L2863" class="blob-num js-line-number" data-line-number="2863"></td>
        <td id="LC2863" class="blob-code blob-code-inner js-file-line">    o.t <span class="pl-k">=</span> a <span class="pl-k">-</span> av <span class="pl-k">+</span> (b <span class="pl-k">-</span> bv);</td>
      </tr>
      <tr>
        <td id="L2864" class="blob-num js-line-number" data-line-number="2864"></td>
        <td id="LC2864" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2865" class="blob-num js-line-number" data-line-number="2865"></td>
        <td id="LC2865" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">stream</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2866" class="blob-num js-line-number" data-line-number="2866"></td>
        <td id="LC2866" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (object <span class="pl-k">&amp;&amp;</span> d3_geo_streamObjectType.hasOwnProperty(object.<span class="pl-c1">type</span>)) {</td>
      </tr>
      <tr>
        <td id="L2867" class="blob-num js-line-number" data-line-number="2867"></td>
        <td id="LC2867" class="blob-code blob-code-inner js-file-line">      d3_geo_streamObjectType[object.<span class="pl-c1">type</span>](object, listener);</td>
      </tr>
      <tr>
        <td id="L2868" class="blob-num js-line-number" data-line-number="2868"></td>
        <td id="LC2868" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2869" class="blob-num js-line-number" data-line-number="2869"></td>
        <td id="LC2869" class="blob-code blob-code-inner js-file-line">      d3_geo_streamGeometry(object, listener);</td>
      </tr>
      <tr>
        <td id="L2870" class="blob-num js-line-number" data-line-number="2870"></td>
        <td id="LC2870" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2871" class="blob-num js-line-number" data-line-number="2871"></td>
        <td id="LC2871" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2872" class="blob-num js-line-number" data-line-number="2872"></td>
        <td id="LC2872" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_streamGeometry</span>(<span class="pl-smi">geometry</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2873" class="blob-num js-line-number" data-line-number="2873"></td>
        <td id="LC2873" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (geometry <span class="pl-k">&amp;&amp;</span> d3_geo_streamGeometryType.hasOwnProperty(geometry.<span class="pl-c1">type</span>)) {</td>
      </tr>
      <tr>
        <td id="L2874" class="blob-num js-line-number" data-line-number="2874"></td>
        <td id="LC2874" class="blob-code blob-code-inner js-file-line">      d3_geo_streamGeometryType[geometry.<span class="pl-c1">type</span>](geometry, listener);</td>
      </tr>
      <tr>
        <td id="L2875" class="blob-num js-line-number" data-line-number="2875"></td>
        <td id="LC2875" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2876" class="blob-num js-line-number" data-line-number="2876"></td>
        <td id="LC2876" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2877" class="blob-num js-line-number" data-line-number="2877"></td>
        <td id="LC2877" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_streamObjectType <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2878" class="blob-num js-line-number" data-line-number="2878"></td>
        <td id="LC2878" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">Feature</span>: <span class="pl-k">function</span>(<span class="pl-smi">feature</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2879" class="blob-num js-line-number" data-line-number="2879"></td>
        <td id="LC2879" class="blob-code blob-code-inner js-file-line">      d3_geo_streamGeometry(feature.geometry, listener);</td>
      </tr>
      <tr>
        <td id="L2880" class="blob-num js-line-number" data-line-number="2880"></td>
        <td id="LC2880" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2881" class="blob-num js-line-number" data-line-number="2881"></td>
        <td id="LC2881" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">FeatureCollection</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2882" class="blob-num js-line-number" data-line-number="2882"></td>
        <td id="LC2882" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> features <span class="pl-k">=</span> object.features, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> features.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2883" class="blob-num js-line-number" data-line-number="2883"></td>
        <td id="LC2883" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d3_geo_streamGeometry(features[i].geometry, listener);</td>
      </tr>
      <tr>
        <td id="L2884" class="blob-num js-line-number" data-line-number="2884"></td>
        <td id="LC2884" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2885" class="blob-num js-line-number" data-line-number="2885"></td>
        <td id="LC2885" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2886" class="blob-num js-line-number" data-line-number="2886"></td>
        <td id="LC2886" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_streamGeometryType <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2887" class="blob-num js-line-number" data-line-number="2887"></td>
        <td id="LC2887" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">Sphere</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2888" class="blob-num js-line-number" data-line-number="2888"></td>
        <td id="LC2888" class="blob-code blob-code-inner js-file-line">      listener.sphere();</td>
      </tr>
      <tr>
        <td id="L2889" class="blob-num js-line-number" data-line-number="2889"></td>
        <td id="LC2889" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2890" class="blob-num js-line-number" data-line-number="2890"></td>
        <td id="LC2890" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">Point</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2891" class="blob-num js-line-number" data-line-number="2891"></td>
        <td id="LC2891" class="blob-code blob-code-inner js-file-line">      object <span class="pl-k">=</span> object.coordinates;</td>
      </tr>
      <tr>
        <td id="L2892" class="blob-num js-line-number" data-line-number="2892"></td>
        <td id="LC2892" class="blob-code blob-code-inner js-file-line">      listener.point(object[<span class="pl-c1">0</span>], object[<span class="pl-c1">1</span>], object[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L2893" class="blob-num js-line-number" data-line-number="2893"></td>
        <td id="LC2893" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2894" class="blob-num js-line-number" data-line-number="2894"></td>
        <td id="LC2894" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">MultiPoint</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2895" class="blob-num js-line-number" data-line-number="2895"></td>
        <td id="LC2895" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> coordinates <span class="pl-k">=</span> object.coordinates, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> coordinates.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2896" class="blob-num js-line-number" data-line-number="2896"></td>
        <td id="LC2896" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) object <span class="pl-k">=</span> coordinates[i], listener.point(object[<span class="pl-c1">0</span>], object[<span class="pl-c1">1</span>], object[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L2897" class="blob-num js-line-number" data-line-number="2897"></td>
        <td id="LC2897" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2898" class="blob-num js-line-number" data-line-number="2898"></td>
        <td id="LC2898" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">LineString</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2899" class="blob-num js-line-number" data-line-number="2899"></td>
        <td id="LC2899" class="blob-code blob-code-inner js-file-line">      d3_geo_streamLine(object.coordinates, listener, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2900" class="blob-num js-line-number" data-line-number="2900"></td>
        <td id="LC2900" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2901" class="blob-num js-line-number" data-line-number="2901"></td>
        <td id="LC2901" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">MultiLineString</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2902" class="blob-num js-line-number" data-line-number="2902"></td>
        <td id="LC2902" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> coordinates <span class="pl-k">=</span> object.coordinates, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> coordinates.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2903" class="blob-num js-line-number" data-line-number="2903"></td>
        <td id="LC2903" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d3_geo_streamLine(coordinates[i], listener, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2904" class="blob-num js-line-number" data-line-number="2904"></td>
        <td id="LC2904" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2905" class="blob-num js-line-number" data-line-number="2905"></td>
        <td id="LC2905" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">Polygon</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2906" class="blob-num js-line-number" data-line-number="2906"></td>
        <td id="LC2906" class="blob-code blob-code-inner js-file-line">      d3_geo_streamPolygon(object.coordinates, listener);</td>
      </tr>
      <tr>
        <td id="L2907" class="blob-num js-line-number" data-line-number="2907"></td>
        <td id="LC2907" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2908" class="blob-num js-line-number" data-line-number="2908"></td>
        <td id="LC2908" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">MultiPolygon</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2909" class="blob-num js-line-number" data-line-number="2909"></td>
        <td id="LC2909" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> coordinates <span class="pl-k">=</span> object.coordinates, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> coordinates.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2910" class="blob-num js-line-number" data-line-number="2910"></td>
        <td id="LC2910" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d3_geo_streamPolygon(coordinates[i], listener);</td>
      </tr>
      <tr>
        <td id="L2911" class="blob-num js-line-number" data-line-number="2911"></td>
        <td id="LC2911" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2912" class="blob-num js-line-number" data-line-number="2912"></td>
        <td id="LC2912" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">GeometryCollection</span>: <span class="pl-k">function</span>(<span class="pl-smi">object</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2913" class="blob-num js-line-number" data-line-number="2913"></td>
        <td id="LC2913" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> geometries <span class="pl-k">=</span> object.geometries, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> geometries.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2914" class="blob-num js-line-number" data-line-number="2914"></td>
        <td id="LC2914" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d3_geo_streamGeometry(geometries[i], listener);</td>
      </tr>
      <tr>
        <td id="L2915" class="blob-num js-line-number" data-line-number="2915"></td>
        <td id="LC2915" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2916" class="blob-num js-line-number" data-line-number="2916"></td>
        <td id="LC2916" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2917" class="blob-num js-line-number" data-line-number="2917"></td>
        <td id="LC2917" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_streamLine</span>(<span class="pl-smi">coordinates</span>, <span class="pl-smi">listener</span>, <span class="pl-smi">closed</span>) {</td>
      </tr>
      <tr>
        <td id="L2918" class="blob-num js-line-number" data-line-number="2918"></td>
        <td id="LC2918" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> coordinates.<span class="pl-c1">length</span> <span class="pl-k">-</span> closed, coordinate;</td>
      </tr>
      <tr>
        <td id="L2919" class="blob-num js-line-number" data-line-number="2919"></td>
        <td id="LC2919" class="blob-code blob-code-inner js-file-line">    listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L2920" class="blob-num js-line-number" data-line-number="2920"></td>
        <td id="LC2920" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) coordinate <span class="pl-k">=</span> coordinates[i], listener.point(coordinate[<span class="pl-c1">0</span>], coordinate[<span class="pl-c1">1</span>], coordinate[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L2921" class="blob-num js-line-number" data-line-number="2921"></td>
        <td id="LC2921" class="blob-code blob-code-inner js-file-line">    listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L2922" class="blob-num js-line-number" data-line-number="2922"></td>
        <td id="LC2922" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2923" class="blob-num js-line-number" data-line-number="2923"></td>
        <td id="LC2923" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_streamPolygon</span>(<span class="pl-smi">coordinates</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2924" class="blob-num js-line-number" data-line-number="2924"></td>
        <td id="LC2924" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> coordinates.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2925" class="blob-num js-line-number" data-line-number="2925"></td>
        <td id="LC2925" class="blob-code blob-code-inner js-file-line">    listener.polygonStart();</td>
      </tr>
      <tr>
        <td id="L2926" class="blob-num js-line-number" data-line-number="2926"></td>
        <td id="LC2926" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d3_geo_streamLine(coordinates[i], listener, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2927" class="blob-num js-line-number" data-line-number="2927"></td>
        <td id="LC2927" class="blob-code blob-code-inner js-file-line">    listener.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L2928" class="blob-num js-line-number" data-line-number="2928"></td>
        <td id="LC2928" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2929" class="blob-num js-line-number" data-line-number="2929"></td>
        <td id="LC2929" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">area</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L2930" class="blob-num js-line-number" data-line-number="2930"></td>
        <td id="LC2930" class="blob-code blob-code-inner js-file-line">    d3_geo_areaSum <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2931" class="blob-num js-line-number" data-line-number="2931"></td>
        <td id="LC2931" class="blob-code blob-code-inner js-file-line">    d3.geo.stream(object, d3_geo_area);</td>
      </tr>
      <tr>
        <td id="L2932" class="blob-num js-line-number" data-line-number="2932"></td>
        <td id="LC2932" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_areaSum;</td>
      </tr>
      <tr>
        <td id="L2933" class="blob-num js-line-number" data-line-number="2933"></td>
        <td id="LC2933" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2934" class="blob-num js-line-number" data-line-number="2934"></td>
        <td id="LC2934" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_areaSum, d3_geo_areaRingSum <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_adder</span>();</td>
      </tr>
      <tr>
        <td id="L2935" class="blob-num js-line-number" data-line-number="2935"></td>
        <td id="LC2935" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_area <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2936" class="blob-num js-line-number" data-line-number="2936"></td>
        <td id="LC2936" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">sphere</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2937" class="blob-num js-line-number" data-line-number="2937"></td>
        <td id="LC2937" class="blob-code blob-code-inner js-file-line">      d3_geo_areaSum <span class="pl-k">+=</span> <span class="pl-c1">4</span> <span class="pl-k">*</span> Ï;</td>
      </tr>
      <tr>
        <td id="L2938" class="blob-num js-line-number" data-line-number="2938"></td>
        <td id="LC2938" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2939" class="blob-num js-line-number" data-line-number="2939"></td>
        <td id="LC2939" class="blob-code blob-code-inner js-file-line">    point<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L2940" class="blob-num js-line-number" data-line-number="2940"></td>
        <td id="LC2940" class="blob-code blob-code-inner js-file-line">    lineStart<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L2941" class="blob-num js-line-number" data-line-number="2941"></td>
        <td id="LC2941" class="blob-code blob-code-inner js-file-line">    lineEnd<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L2942" class="blob-num js-line-number" data-line-number="2942"></td>
        <td id="LC2942" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2943" class="blob-num js-line-number" data-line-number="2943"></td>
        <td id="LC2943" class="blob-code blob-code-inner js-file-line">      d3_geo_areaRingSum.<span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L2944" class="blob-num js-line-number" data-line-number="2944"></td>
        <td id="LC2944" class="blob-code blob-code-inner js-file-line">      d3_geo_area.lineStart <span class="pl-k">=</span> d3_geo_areaRingStart;</td>
      </tr>
      <tr>
        <td id="L2945" class="blob-num js-line-number" data-line-number="2945"></td>
        <td id="LC2945" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L2946" class="blob-num js-line-number" data-line-number="2946"></td>
        <td id="LC2946" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2947" class="blob-num js-line-number" data-line-number="2947"></td>
        <td id="LC2947" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> area <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> d3_geo_areaRingSum;</td>
      </tr>
      <tr>
        <td id="L2948" class="blob-num js-line-number" data-line-number="2948"></td>
        <td id="LC2948" class="blob-code blob-code-inner js-file-line">      d3_geo_areaSum <span class="pl-k">+=</span> area <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">4</span> <span class="pl-k">*</span> Ï <span class="pl-k">+</span> area <span class="pl-k">:</span> area;</td>
      </tr>
      <tr>
        <td id="L2949" class="blob-num js-line-number" data-line-number="2949"></td>
        <td id="LC2949" class="blob-code blob-code-inner js-file-line">      d3_geo_area.lineStart <span class="pl-k">=</span> d3_geo_area.lineEnd <span class="pl-k">=</span> d3_geo_area.point <span class="pl-k">=</span> d3_noop;</td>
      </tr>
      <tr>
        <td id="L2950" class="blob-num js-line-number" data-line-number="2950"></td>
        <td id="LC2950" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2951" class="blob-num js-line-number" data-line-number="2951"></td>
        <td id="LC2951" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2952" class="blob-num js-line-number" data-line-number="2952"></td>
        <td id="LC2952" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_areaRingStart</span>() {</td>
      </tr>
      <tr>
        <td id="L2953" class="blob-num js-line-number" data-line-number="2953"></td>
        <td id="LC2953" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Î»<span class="pl-c1">00</span>, Ï<span class="pl-c1">00</span>, Î»<span class="pl-c1">0</span>, cosÏ<span class="pl-c1">0</span>, sinÏ<span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2954" class="blob-num js-line-number" data-line-number="2954"></td>
        <td id="LC2954" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_area</span>.<span class="pl-en">point</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L2955" class="blob-num js-line-number" data-line-number="2955"></td>
        <td id="LC2955" class="blob-code blob-code-inner js-file-line">      d3_geo_area.point <span class="pl-k">=</span> nextPoint;</td>
      </tr>
      <tr>
        <td id="L2956" class="blob-num js-line-number" data-line-number="2956"></td>
        <td id="LC2956" class="blob-code blob-code-inner js-file-line">      Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> (Î»<span class="pl-c1">00</span> <span class="pl-k">=</span> Î») <span class="pl-k">*</span> d3_radians, cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï <span class="pl-k">=</span> (Ï<span class="pl-c1">00</span> <span class="pl-k">=</span> Ï) <span class="pl-k">*</span> d3_radians / <span class="pl-c1">2</span> <span class="pl-k">+</span> Ï / <span class="pl-c1">4</span>), </td>
      </tr>
      <tr>
        <td id="L2957" class="blob-num js-line-number" data-line-number="2957"></td>
        <td id="LC2957" class="blob-code blob-code-inner js-file-line">      sinÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï);</td>
      </tr>
      <tr>
        <td id="L2958" class="blob-num js-line-number" data-line-number="2958"></td>
        <td id="LC2958" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2959" class="blob-num js-line-number" data-line-number="2959"></td>
        <td id="LC2959" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nextPoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L2960" class="blob-num js-line-number" data-line-number="2960"></td>
        <td id="LC2960" class="blob-code blob-code-inner js-file-line">      Î» <span class="pl-k">*=</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L2961" class="blob-num js-line-number" data-line-number="2961"></td>
        <td id="LC2961" class="blob-code blob-code-inner js-file-line">      Ï <span class="pl-k">=</span> Ï <span class="pl-k">*</span> d3_radians / <span class="pl-c1">2</span> <span class="pl-k">+</span> Ï / <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L2962" class="blob-num js-line-number" data-line-number="2962"></td>
        <td id="LC2962" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> dÎ» <span class="pl-k">=</span> Î» <span class="pl-k">-</span> Î»<span class="pl-c1">0</span>, sdÎ» <span class="pl-k">=</span> dÎ» <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, adÎ» <span class="pl-k">=</span> sdÎ» <span class="pl-k">*</span> dÎ», cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï), sinÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï), k <span class="pl-k">=</span> sinÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> sinÏ, u <span class="pl-k">=</span> cosÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> cosÏ <span class="pl-k">+</span> k <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(adÎ»), v <span class="pl-k">=</span> k <span class="pl-k">*</span> sdÎ» <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(adÎ»);</td>
      </tr>
      <tr>
        <td id="L2963" class="blob-num js-line-number" data-line-number="2963"></td>
        <td id="LC2963" class="blob-code blob-code-inner js-file-line">      d3_geo_areaRingSum.<span class="pl-c1">add</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(v, u));</td>
      </tr>
      <tr>
        <td id="L2964" class="blob-num js-line-number" data-line-number="2964"></td>
        <td id="LC2964" class="blob-code blob-code-inner js-file-line">      Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î», cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> cosÏ, sinÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> sinÏ;</td>
      </tr>
      <tr>
        <td id="L2965" class="blob-num js-line-number" data-line-number="2965"></td>
        <td id="LC2965" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2966" class="blob-num js-line-number" data-line-number="2966"></td>
        <td id="LC2966" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_area</span>.<span class="pl-en">lineEnd</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2967" class="blob-num js-line-number" data-line-number="2967"></td>
        <td id="LC2967" class="blob-code blob-code-inner js-file-line">      nextPoint(Î»<span class="pl-c1">00</span>, Ï<span class="pl-c1">00</span>);</td>
      </tr>
      <tr>
        <td id="L2968" class="blob-num js-line-number" data-line-number="2968"></td>
        <td id="LC2968" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2969" class="blob-num js-line-number" data-line-number="2969"></td>
        <td id="LC2969" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2970" class="blob-num js-line-number" data-line-number="2970"></td>
        <td id="LC2970" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_cartesian</span>(<span class="pl-smi">spherical</span>) {</td>
      </tr>
      <tr>
        <td id="L2971" class="blob-num js-line-number" data-line-number="2971"></td>
        <td id="LC2971" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Î» <span class="pl-k">=</span> spherical[<span class="pl-c1">0</span>], Ï <span class="pl-k">=</span> spherical[<span class="pl-c1">1</span>], cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï);</td>
      </tr>
      <tr>
        <td id="L2972" class="blob-num js-line-number" data-line-number="2972"></td>
        <td id="LC2972" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î»), cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»), <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï) ];</td>
      </tr>
      <tr>
        <td id="L2973" class="blob-num js-line-number" data-line-number="2973"></td>
        <td id="LC2973" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2974" class="blob-num js-line-number" data-line-number="2974"></td>
        <td id="LC2974" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_cartesianDot</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L2975" class="blob-num js-line-number" data-line-number="2975"></td>
        <td id="LC2975" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">0</span>] <span class="pl-k">+</span> a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>] <span class="pl-k">+</span> a[<span class="pl-c1">2</span>] <span class="pl-k">*</span> b[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L2976" class="blob-num js-line-number" data-line-number="2976"></td>
        <td id="LC2976" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2977" class="blob-num js-line-number" data-line-number="2977"></td>
        <td id="LC2977" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_cartesianCross</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L2978" class="blob-num js-line-number" data-line-number="2978"></td>
        <td id="LC2978" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> b[<span class="pl-c1">2</span>] <span class="pl-k">-</span> a[<span class="pl-c1">2</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>], a[<span class="pl-c1">2</span>] <span class="pl-k">*</span> b[<span class="pl-c1">0</span>] <span class="pl-k">-</span> a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">2</span>], a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>] <span class="pl-k">-</span> a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> b[<span class="pl-c1">0</span>] ];</td>
      </tr>
      <tr>
        <td id="L2979" class="blob-num js-line-number" data-line-number="2979"></td>
        <td id="LC2979" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2980" class="blob-num js-line-number" data-line-number="2980"></td>
        <td id="LC2980" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_cartesianAdd</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L2981" class="blob-num js-line-number" data-line-number="2981"></td>
        <td id="LC2981" class="blob-code blob-code-inner js-file-line">    a[<span class="pl-c1">0</span>] <span class="pl-k">+=</span> b[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2982" class="blob-num js-line-number" data-line-number="2982"></td>
        <td id="LC2982" class="blob-code blob-code-inner js-file-line">    a[<span class="pl-c1">1</span>] <span class="pl-k">+=</span> b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2983" class="blob-num js-line-number" data-line-number="2983"></td>
        <td id="LC2983" class="blob-code blob-code-inner js-file-line">    a[<span class="pl-c1">2</span>] <span class="pl-k">+=</span> b[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L2984" class="blob-num js-line-number" data-line-number="2984"></td>
        <td id="LC2984" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2985" class="blob-num js-line-number" data-line-number="2985"></td>
        <td id="LC2985" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_cartesianScale</span>(<span class="pl-smi">vector</span>, <span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L2986" class="blob-num js-line-number" data-line-number="2986"></td>
        <td id="LC2986" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ vector[<span class="pl-c1">0</span>] <span class="pl-k">*</span> k, vector[<span class="pl-c1">1</span>] <span class="pl-k">*</span> k, vector[<span class="pl-c1">2</span>] <span class="pl-k">*</span> k ];</td>
      </tr>
      <tr>
        <td id="L2987" class="blob-num js-line-number" data-line-number="2987"></td>
        <td id="LC2987" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2988" class="blob-num js-line-number" data-line-number="2988"></td>
        <td id="LC2988" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_cartesianNormalize</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L2989" class="blob-num js-line-number" data-line-number="2989"></td>
        <td id="LC2989" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> l <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(d[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d[<span class="pl-c1">0</span>] <span class="pl-k">+</span> d[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d[<span class="pl-c1">1</span>] <span class="pl-k">+</span> d[<span class="pl-c1">2</span>] <span class="pl-k">*</span> d[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L2990" class="blob-num js-line-number" data-line-number="2990"></td>
        <td id="LC2990" class="blob-code blob-code-inner js-file-line">    d[<span class="pl-c1">0</span>] <span class="pl-k">/=</span> l;</td>
      </tr>
      <tr>
        <td id="L2991" class="blob-num js-line-number" data-line-number="2991"></td>
        <td id="LC2991" class="blob-code blob-code-inner js-file-line">    d[<span class="pl-c1">1</span>] <span class="pl-k">/=</span> l;</td>
      </tr>
      <tr>
        <td id="L2992" class="blob-num js-line-number" data-line-number="2992"></td>
        <td id="LC2992" class="blob-code blob-code-inner js-file-line">    d[<span class="pl-c1">2</span>] <span class="pl-k">/=</span> l;</td>
      </tr>
      <tr>
        <td id="L2993" class="blob-num js-line-number" data-line-number="2993"></td>
        <td id="LC2993" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2994" class="blob-num js-line-number" data-line-number="2994"></td>
        <td id="LC2994" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_spherical</span>(<span class="pl-smi">cartesian</span>) {</td>
      </tr>
      <tr>
        <td id="L2995" class="blob-num js-line-number" data-line-number="2995"></td>
        <td id="LC2995" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(cartesian[<span class="pl-c1">1</span>], cartesian[<span class="pl-c1">0</span>]), d3_asin(cartesian[<span class="pl-c1">2</span>]) ];</td>
      </tr>
      <tr>
        <td id="L2996" class="blob-num js-line-number" data-line-number="2996"></td>
        <td id="LC2996" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2997" class="blob-num js-line-number" data-line-number="2997"></td>
        <td id="LC2997" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_sphericalEqual</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L2998" class="blob-num js-line-number" data-line-number="2998"></td>
        <td id="LC2998" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">abs</span>(a[<span class="pl-c1">0</span>] <span class="pl-k">-</span> b[<span class="pl-c1">0</span>]) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">abs</span>(a[<span class="pl-c1">1</span>] <span class="pl-k">-</span> b[<span class="pl-c1">1</span>]) <span class="pl-k">&lt;</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L2999" class="blob-num js-line-number" data-line-number="2999"></td>
        <td id="LC2999" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3000" class="blob-num js-line-number" data-line-number="3000"></td>
        <td id="LC3000" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">bounds</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3001" class="blob-num js-line-number" data-line-number="3001"></td>
        <td id="LC3001" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Î»<span class="pl-c1">0</span>, Ï<span class="pl-c1">0</span>, Î»<span class="pl-c1">1</span>, Ï<span class="pl-c1">1</span>, Î»_, Î»__, Ï__, p0, dÎ»Sum, ranges, range;</td>
      </tr>
      <tr>
        <td id="L3002" class="blob-num js-line-number" data-line-number="3002"></td>
        <td id="LC3002" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> bound <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3003" class="blob-num js-line-number" data-line-number="3003"></td>
        <td id="LC3003" class="blob-code blob-code-inner js-file-line">      point<span class="pl-k">:</span> point,</td>
      </tr>
      <tr>
        <td id="L3004" class="blob-num js-line-number" data-line-number="3004"></td>
        <td id="LC3004" class="blob-code blob-code-inner js-file-line">      lineStart<span class="pl-k">:</span> lineStart,</td>
      </tr>
      <tr>
        <td id="L3005" class="blob-num js-line-number" data-line-number="3005"></td>
        <td id="LC3005" class="blob-code blob-code-inner js-file-line">      lineEnd<span class="pl-k">:</span> lineEnd,</td>
      </tr>
      <tr>
        <td id="L3006" class="blob-num js-line-number" data-line-number="3006"></td>
        <td id="LC3006" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3007" class="blob-num js-line-number" data-line-number="3007"></td>
        <td id="LC3007" class="blob-code blob-code-inner js-file-line">        bound.point <span class="pl-k">=</span> ringPoint;</td>
      </tr>
      <tr>
        <td id="L3008" class="blob-num js-line-number" data-line-number="3008"></td>
        <td id="LC3008" class="blob-code blob-code-inner js-file-line">        bound.lineStart <span class="pl-k">=</span> ringStart;</td>
      </tr>
      <tr>
        <td id="L3009" class="blob-num js-line-number" data-line-number="3009"></td>
        <td id="LC3009" class="blob-code blob-code-inner js-file-line">        bound.lineEnd <span class="pl-k">=</span> ringEnd;</td>
      </tr>
      <tr>
        <td id="L3010" class="blob-num js-line-number" data-line-number="3010"></td>
        <td id="LC3010" class="blob-code blob-code-inner js-file-line">        dÎ»Sum <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3011" class="blob-num js-line-number" data-line-number="3011"></td>
        <td id="LC3011" class="blob-code blob-code-inner js-file-line">        d3_geo_area.polygonStart();</td>
      </tr>
      <tr>
        <td id="L3012" class="blob-num js-line-number" data-line-number="3012"></td>
        <td id="LC3012" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3013" class="blob-num js-line-number" data-line-number="3013"></td>
        <td id="LC3013" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3014" class="blob-num js-line-number" data-line-number="3014"></td>
        <td id="LC3014" class="blob-code blob-code-inner js-file-line">        d3_geo_area.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L3015" class="blob-num js-line-number" data-line-number="3015"></td>
        <td id="LC3015" class="blob-code blob-code-inner js-file-line">        bound.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L3016" class="blob-num js-line-number" data-line-number="3016"></td>
        <td id="LC3016" class="blob-code blob-code-inner js-file-line">        bound.lineStart <span class="pl-k">=</span> lineStart;</td>
      </tr>
      <tr>
        <td id="L3017" class="blob-num js-line-number" data-line-number="3017"></td>
        <td id="LC3017" class="blob-code blob-code-inner js-file-line">        bound.lineEnd <span class="pl-k">=</span> lineEnd;</td>
      </tr>
      <tr>
        <td id="L3018" class="blob-num js-line-number" data-line-number="3018"></td>
        <td id="LC3018" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3_geo_areaRingSum <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-k">-</span>(Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-c1">180</span>), Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-k">-</span>(Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-c1">90</span>); <span class="pl-k">else</span> <span class="pl-k">if</span> (dÎ»Sum <span class="pl-k">&gt;</span> Îµ) Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-c1">90</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (dÎ»Sum <span class="pl-k">&lt;</span> <span class="pl-k">-</span>Îµ) Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">90</span>;</td>
      </tr>
      <tr>
        <td id="L3019" class="blob-num js-line-number" data-line-number="3019"></td>
        <td id="LC3019" class="blob-code blob-code-inner js-file-line">        range[<span class="pl-c1">0</span>] <span class="pl-k">=</span> Î»<span class="pl-c1">0</span>, range[<span class="pl-c1">1</span>] <span class="pl-k">=</span> Î»<span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3020" class="blob-num js-line-number" data-line-number="3020"></td>
        <td id="LC3020" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3021" class="blob-num js-line-number" data-line-number="3021"></td>
        <td id="LC3021" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3022" class="blob-num js-line-number" data-line-number="3022"></td>
        <td id="LC3022" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">point</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3023" class="blob-num js-line-number" data-line-number="3023"></td>
        <td id="LC3023" class="blob-code blob-code-inner js-file-line">      ranges.<span class="pl-c1">push</span>(range <span class="pl-k">=</span> [ Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î», Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> Î» ]);</td>
      </tr>
      <tr>
        <td id="L3024" class="blob-num js-line-number" data-line-number="3024"></td>
        <td id="LC3024" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (Ï <span class="pl-k">&lt;</span> Ï<span class="pl-c1">0</span>) Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> Ï;</td>
      </tr>
      <tr>
        <td id="L3025" class="blob-num js-line-number" data-line-number="3025"></td>
        <td id="LC3025" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (Ï <span class="pl-k">&gt;</span> Ï<span class="pl-c1">1</span>) Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> Ï;</td>
      </tr>
      <tr>
        <td id="L3026" class="blob-num js-line-number" data-line-number="3026"></td>
        <td id="LC3026" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3027" class="blob-num js-line-number" data-line-number="3027"></td>
        <td id="LC3027" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">linePoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3028" class="blob-num js-line-number" data-line-number="3028"></td>
        <td id="LC3028" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> p <span class="pl-k">=</span> d3_geo_cartesian([ Î» <span class="pl-k">*</span> d3_radians, Ï <span class="pl-k">*</span> d3_radians ]);</td>
      </tr>
      <tr>
        <td id="L3029" class="blob-num js-line-number" data-line-number="3029"></td>
        <td id="LC3029" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (p0) {</td>
      </tr>
      <tr>
        <td id="L3030" class="blob-num js-line-number" data-line-number="3030"></td>
        <td id="LC3030" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> normal <span class="pl-k">=</span> d3_geo_cartesianCross(p0, p), equatorial <span class="pl-k">=</span> [ normal[<span class="pl-c1">1</span>], <span class="pl-k">-</span>normal[<span class="pl-c1">0</span>], <span class="pl-c1">0</span> ], inflection <span class="pl-k">=</span> d3_geo_cartesianCross(equatorial, normal);</td>
      </tr>
      <tr>
        <td id="L3031" class="blob-num js-line-number" data-line-number="3031"></td>
        <td id="LC3031" class="blob-code blob-code-inner js-file-line">        d3_geo_cartesianNormalize(inflection);</td>
      </tr>
      <tr>
        <td id="L3032" class="blob-num js-line-number" data-line-number="3032"></td>
        <td id="LC3032" class="blob-code blob-code-inner js-file-line">        inflection <span class="pl-k">=</span> d3_geo_spherical(inflection);</td>
      </tr>
      <tr>
        <td id="L3033" class="blob-num js-line-number" data-line-number="3033"></td>
        <td id="LC3033" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dÎ» <span class="pl-k">=</span> Î» <span class="pl-k">-</span> Î»_, s <span class="pl-k">=</span> dÎ» <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, Î»i <span class="pl-k">=</span> inflection[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d3_degrees <span class="pl-k">*</span> s, antimeridian <span class="pl-k">=</span> <span class="pl-c1">abs</span>(dÎ») <span class="pl-k">&gt;</span> <span class="pl-c1">180</span>;</td>
      </tr>
      <tr>
        <td id="L3034" class="blob-num js-line-number" data-line-number="3034"></td>
        <td id="LC3034" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (antimeridian <span class="pl-k">^</span> (s <span class="pl-k">*</span> Î»_ <span class="pl-k">&lt;</span> Î»i <span class="pl-k">&amp;&amp;</span> Î»i <span class="pl-k">&lt;</span> s <span class="pl-k">*</span> Î»)) {</td>
      </tr>
      <tr>
        <td id="L3035" class="blob-num js-line-number" data-line-number="3035"></td>
        <td id="LC3035" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> Ïi <span class="pl-k">=</span> inflection[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_degrees;</td>
      </tr>
      <tr>
        <td id="L3036" class="blob-num js-line-number" data-line-number="3036"></td>
        <td id="LC3036" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (Ïi <span class="pl-k">&gt;</span> Ï<span class="pl-c1">1</span>) Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> Ïi;</td>
      </tr>
      <tr>
        <td id="L3037" class="blob-num js-line-number" data-line-number="3037"></td>
        <td id="LC3037" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (Î»i <span class="pl-k">=</span> (Î»i <span class="pl-k">+</span> <span class="pl-c1">360</span>) <span class="pl-k">%</span> <span class="pl-c1">360</span> <span class="pl-k">-</span> <span class="pl-c1">180</span>, antimeridian <span class="pl-k">^</span> (s <span class="pl-k">*</span> Î»_ <span class="pl-k">&lt;</span> Î»i <span class="pl-k">&amp;&amp;</span> Î»i <span class="pl-k">&lt;</span> s <span class="pl-k">*</span> Î»)) {</td>
      </tr>
      <tr>
        <td id="L3038" class="blob-num js-line-number" data-line-number="3038"></td>
        <td id="LC3038" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> Ïi <span class="pl-k">=</span> <span class="pl-k">-</span>inflection[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_degrees;</td>
      </tr>
      <tr>
        <td id="L3039" class="blob-num js-line-number" data-line-number="3039"></td>
        <td id="LC3039" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (Ïi <span class="pl-k">&lt;</span> Ï<span class="pl-c1">0</span>) Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> Ïi;</td>
      </tr>
      <tr>
        <td id="L3040" class="blob-num js-line-number" data-line-number="3040"></td>
        <td id="LC3040" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3041" class="blob-num js-line-number" data-line-number="3041"></td>
        <td id="LC3041" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (Ï <span class="pl-k">&lt;</span> Ï<span class="pl-c1">0</span>) Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> Ï;</td>
      </tr>
      <tr>
        <td id="L3042" class="blob-num js-line-number" data-line-number="3042"></td>
        <td id="LC3042" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (Ï <span class="pl-k">&gt;</span> Ï<span class="pl-c1">1</span>) Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> Ï;</td>
      </tr>
      <tr>
        <td id="L3043" class="blob-num js-line-number" data-line-number="3043"></td>
        <td id="LC3043" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3044" class="blob-num js-line-number" data-line-number="3044"></td>
        <td id="LC3044" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (antimeridian) {</td>
      </tr>
      <tr>
        <td id="L3045" class="blob-num js-line-number" data-line-number="3045"></td>
        <td id="LC3045" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (Î» <span class="pl-k">&lt;</span> Î»_) {</td>
      </tr>
      <tr>
        <td id="L3046" class="blob-num js-line-number" data-line-number="3046"></td>
        <td id="LC3046" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (angle(Î»<span class="pl-c1">0</span>, Î») <span class="pl-k">&gt;</span> angle(Î»<span class="pl-c1">0</span>, Î»<span class="pl-c1">1</span>)) Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> Î»;</td>
      </tr>
      <tr>
        <td id="L3047" class="blob-num js-line-number" data-line-number="3047"></td>
        <td id="LC3047" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3048" class="blob-num js-line-number" data-line-number="3048"></td>
        <td id="LC3048" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (angle(Î», Î»<span class="pl-c1">1</span>) <span class="pl-k">&gt;</span> angle(Î»<span class="pl-c1">0</span>, Î»<span class="pl-c1">1</span>)) Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î»;</td>
      </tr>
      <tr>
        <td id="L3049" class="blob-num js-line-number" data-line-number="3049"></td>
        <td id="LC3049" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3050" class="blob-num js-line-number" data-line-number="3050"></td>
        <td id="LC3050" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3051" class="blob-num js-line-number" data-line-number="3051"></td>
        <td id="LC3051" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (Î»<span class="pl-c1">1</span> <span class="pl-k">&gt;=</span> Î»<span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3052" class="blob-num js-line-number" data-line-number="3052"></td>
        <td id="LC3052" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (Î» <span class="pl-k">&lt;</span> Î»<span class="pl-c1">0</span>) Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î»;</td>
      </tr>
      <tr>
        <td id="L3053" class="blob-num js-line-number" data-line-number="3053"></td>
        <td id="LC3053" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (Î» <span class="pl-k">&gt;</span> Î»<span class="pl-c1">1</span>) Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> Î»;</td>
      </tr>
      <tr>
        <td id="L3054" class="blob-num js-line-number" data-line-number="3054"></td>
        <td id="LC3054" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3055" class="blob-num js-line-number" data-line-number="3055"></td>
        <td id="LC3055" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (Î» <span class="pl-k">&gt;</span> Î»_) {</td>
      </tr>
      <tr>
        <td id="L3056" class="blob-num js-line-number" data-line-number="3056"></td>
        <td id="LC3056" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (angle(Î»<span class="pl-c1">0</span>, Î») <span class="pl-k">&gt;</span> angle(Î»<span class="pl-c1">0</span>, Î»<span class="pl-c1">1</span>)) Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> Î»;</td>
      </tr>
      <tr>
        <td id="L3057" class="blob-num js-line-number" data-line-number="3057"></td>
        <td id="LC3057" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3058" class="blob-num js-line-number" data-line-number="3058"></td>
        <td id="LC3058" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (angle(Î», Î»<span class="pl-c1">1</span>) <span class="pl-k">&gt;</span> angle(Î»<span class="pl-c1">0</span>, Î»<span class="pl-c1">1</span>)) Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î»;</td>
      </tr>
      <tr>
        <td id="L3059" class="blob-num js-line-number" data-line-number="3059"></td>
        <td id="LC3059" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3060" class="blob-num js-line-number" data-line-number="3060"></td>
        <td id="LC3060" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3061" class="blob-num js-line-number" data-line-number="3061"></td>
        <td id="LC3061" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3062" class="blob-num js-line-number" data-line-number="3062"></td>
        <td id="LC3062" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3063" class="blob-num js-line-number" data-line-number="3063"></td>
        <td id="LC3063" class="blob-code blob-code-inner js-file-line">        point(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L3064" class="blob-num js-line-number" data-line-number="3064"></td>
        <td id="LC3064" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3065" class="blob-num js-line-number" data-line-number="3065"></td>
        <td id="LC3065" class="blob-code blob-code-inner js-file-line">      p0 <span class="pl-k">=</span> p, Î»_ <span class="pl-k">=</span> Î»;</td>
      </tr>
      <tr>
        <td id="L3066" class="blob-num js-line-number" data-line-number="3066"></td>
        <td id="LC3066" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3067" class="blob-num js-line-number" data-line-number="3067"></td>
        <td id="LC3067" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">lineStart</span>() {</td>
      </tr>
      <tr>
        <td id="L3068" class="blob-num js-line-number" data-line-number="3068"></td>
        <td id="LC3068" class="blob-code blob-code-inner js-file-line">      bound.point <span class="pl-k">=</span> linePoint;</td>
      </tr>
      <tr>
        <td id="L3069" class="blob-num js-line-number" data-line-number="3069"></td>
        <td id="LC3069" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3070" class="blob-num js-line-number" data-line-number="3070"></td>
        <td id="LC3070" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">lineEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L3071" class="blob-num js-line-number" data-line-number="3071"></td>
        <td id="LC3071" class="blob-code blob-code-inner js-file-line">      range[<span class="pl-c1">0</span>] <span class="pl-k">=</span> Î»<span class="pl-c1">0</span>, range[<span class="pl-c1">1</span>] <span class="pl-k">=</span> Î»<span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3072" class="blob-num js-line-number" data-line-number="3072"></td>
        <td id="LC3072" class="blob-code blob-code-inner js-file-line">      bound.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L3073" class="blob-num js-line-number" data-line-number="3073"></td>
        <td id="LC3073" class="blob-code blob-code-inner js-file-line">      p0 <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3074" class="blob-num js-line-number" data-line-number="3074"></td>
        <td id="LC3074" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3075" class="blob-num js-line-number" data-line-number="3075"></td>
        <td id="LC3075" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">ringPoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3076" class="blob-num js-line-number" data-line-number="3076"></td>
        <td id="LC3076" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (p0) {</td>
      </tr>
      <tr>
        <td id="L3077" class="blob-num js-line-number" data-line-number="3077"></td>
        <td id="LC3077" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dÎ» <span class="pl-k">=</span> Î» <span class="pl-k">-</span> Î»_;</td>
      </tr>
      <tr>
        <td id="L3078" class="blob-num js-line-number" data-line-number="3078"></td>
        <td id="LC3078" class="blob-code blob-code-inner js-file-line">        dÎ»Sum <span class="pl-k">+=</span> <span class="pl-c1">abs</span>(dÎ») <span class="pl-k">&gt;</span> <span class="pl-c1">180</span> <span class="pl-k">?</span> dÎ» <span class="pl-k">+</span> (dÎ» <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">360</span> <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">360</span>) <span class="pl-k">:</span> dÎ»;</td>
      </tr>
      <tr>
        <td id="L3079" class="blob-num js-line-number" data-line-number="3079"></td>
        <td id="LC3079" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> Î»__ <span class="pl-k">=</span> Î», Ï__ <span class="pl-k">=</span> Ï;</td>
      </tr>
      <tr>
        <td id="L3080" class="blob-num js-line-number" data-line-number="3080"></td>
        <td id="LC3080" class="blob-code blob-code-inner js-file-line">      d3_geo_area.point(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L3081" class="blob-num js-line-number" data-line-number="3081"></td>
        <td id="LC3081" class="blob-code blob-code-inner js-file-line">      linePoint(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L3082" class="blob-num js-line-number" data-line-number="3082"></td>
        <td id="LC3082" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3083" class="blob-num js-line-number" data-line-number="3083"></td>
        <td id="LC3083" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">ringStart</span>() {</td>
      </tr>
      <tr>
        <td id="L3084" class="blob-num js-line-number" data-line-number="3084"></td>
        <td id="LC3084" class="blob-code blob-code-inner js-file-line">      d3_geo_area.lineStart();</td>
      </tr>
      <tr>
        <td id="L3085" class="blob-num js-line-number" data-line-number="3085"></td>
        <td id="LC3085" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3086" class="blob-num js-line-number" data-line-number="3086"></td>
        <td id="LC3086" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">ringEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L3087" class="blob-num js-line-number" data-line-number="3087"></td>
        <td id="LC3087" class="blob-code blob-code-inner js-file-line">      ringPoint(Î»__, Ï__);</td>
      </tr>
      <tr>
        <td id="L3088" class="blob-num js-line-number" data-line-number="3088"></td>
        <td id="LC3088" class="blob-code blob-code-inner js-file-line">      d3_geo_area.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3089" class="blob-num js-line-number" data-line-number="3089"></td>
        <td id="LC3089" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(dÎ»Sum) <span class="pl-k">&gt;</span> Îµ) Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-k">-</span>(Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-c1">180</span>);</td>
      </tr>
      <tr>
        <td id="L3090" class="blob-num js-line-number" data-line-number="3090"></td>
        <td id="LC3090" class="blob-code blob-code-inner js-file-line">      range[<span class="pl-c1">0</span>] <span class="pl-k">=</span> Î»<span class="pl-c1">0</span>, range[<span class="pl-c1">1</span>] <span class="pl-k">=</span> Î»<span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3091" class="blob-num js-line-number" data-line-number="3091"></td>
        <td id="LC3091" class="blob-code blob-code-inner js-file-line">      p0 <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3092" class="blob-num js-line-number" data-line-number="3092"></td>
        <td id="LC3092" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3093" class="blob-num js-line-number" data-line-number="3093"></td>
        <td id="LC3093" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">angle</span>(<span class="pl-smi">Î»0</span>, <span class="pl-smi">Î»1</span>) {</td>
      </tr>
      <tr>
        <td id="L3094" class="blob-num js-line-number" data-line-number="3094"></td>
        <td id="LC3094" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (Î»<span class="pl-c1">1</span> <span class="pl-k">-=</span> Î»<span class="pl-c1">0</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> Î»<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">360</span> <span class="pl-k">:</span> Î»<span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3095" class="blob-num js-line-number" data-line-number="3095"></td>
        <td id="LC3095" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3096" class="blob-num js-line-number" data-line-number="3096"></td>
        <td id="LC3096" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">compareRanges</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L3097" class="blob-num js-line-number" data-line-number="3097"></td>
        <td id="LC3097" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> a[<span class="pl-c1">0</span>] <span class="pl-k">-</span> b[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3098" class="blob-num js-line-number" data-line-number="3098"></td>
        <td id="LC3098" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3099" class="blob-num js-line-number" data-line-number="3099"></td>
        <td id="LC3099" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">withinRange</span>(<span class="pl-smi">x</span>, <span class="pl-smi">range</span>) {</td>
      </tr>
      <tr>
        <td id="L3100" class="blob-num js-line-number" data-line-number="3100"></td>
        <td id="LC3100" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> range[<span class="pl-c1">0</span>] <span class="pl-k">&lt;=</span> range[<span class="pl-c1">1</span>] <span class="pl-k">?</span> range[<span class="pl-c1">0</span>] <span class="pl-k">&lt;=</span> x <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;=</span> range[<span class="pl-c1">1</span>] <span class="pl-k">:</span> x <span class="pl-k">&lt;</span> range[<span class="pl-c1">0</span>] <span class="pl-k">||</span> range[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> x;</td>
      </tr>
      <tr>
        <td id="L3101" class="blob-num js-line-number" data-line-number="3101"></td>
        <td id="LC3101" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3102" class="blob-num js-line-number" data-line-number="3102"></td>
        <td id="LC3102" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">feature</span>) {</td>
      </tr>
      <tr>
        <td id="L3103" class="blob-num js-line-number" data-line-number="3103"></td>
        <td id="LC3103" class="blob-code blob-code-inner js-file-line">      Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-k">-</span>(Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>);</td>
      </tr>
      <tr>
        <td id="L3104" class="blob-num js-line-number" data-line-number="3104"></td>
        <td id="LC3104" class="blob-code blob-code-inner js-file-line">      ranges <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3105" class="blob-num js-line-number" data-line-number="3105"></td>
        <td id="LC3105" class="blob-code blob-code-inner js-file-line">      d3.geo.stream(feature, bound);</td>
      </tr>
      <tr>
        <td id="L3106" class="blob-num js-line-number" data-line-number="3106"></td>
        <td id="LC3106" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> ranges.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3107" class="blob-num js-line-number" data-line-number="3107"></td>
        <td id="LC3107" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (n) {</td>
      </tr>
      <tr>
        <td id="L3108" class="blob-num js-line-number" data-line-number="3108"></td>
        <td id="LC3108" class="blob-code blob-code-inner js-file-line">        ranges.<span class="pl-c1">sort</span>(compareRanges);</td>
      </tr>
      <tr>
        <td id="L3109" class="blob-num js-line-number" data-line-number="3109"></td>
        <td id="LC3109" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span>, a <span class="pl-k">=</span> ranges[<span class="pl-c1">0</span>], b, merged <span class="pl-k">=</span> [ a ]; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3110" class="blob-num js-line-number" data-line-number="3110"></td>
        <td id="LC3110" class="blob-code blob-code-inner js-file-line">          b <span class="pl-k">=</span> ranges[i];</td>
      </tr>
      <tr>
        <td id="L3111" class="blob-num js-line-number" data-line-number="3111"></td>
        <td id="LC3111" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (withinRange(b[<span class="pl-c1">0</span>], a) <span class="pl-k">||</span> withinRange(b[<span class="pl-c1">1</span>], a)) {</td>
      </tr>
      <tr>
        <td id="L3112" class="blob-num js-line-number" data-line-number="3112"></td>
        <td id="LC3112" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (angle(a[<span class="pl-c1">0</span>], b[<span class="pl-c1">1</span>]) <span class="pl-k">&gt;</span> angle(a[<span class="pl-c1">0</span>], a[<span class="pl-c1">1</span>])) a[<span class="pl-c1">1</span>] <span class="pl-k">=</span> b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3113" class="blob-num js-line-number" data-line-number="3113"></td>
        <td id="LC3113" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (angle(b[<span class="pl-c1">0</span>], a[<span class="pl-c1">1</span>]) <span class="pl-k">&gt;</span> angle(a[<span class="pl-c1">0</span>], a[<span class="pl-c1">1</span>])) a[<span class="pl-c1">0</span>] <span class="pl-k">=</span> b[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3114" class="blob-num js-line-number" data-line-number="3114"></td>
        <td id="LC3114" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3115" class="blob-num js-line-number" data-line-number="3115"></td>
        <td id="LC3115" class="blob-code blob-code-inner js-file-line">            merged.<span class="pl-c1">push</span>(a <span class="pl-k">=</span> b);</td>
      </tr>
      <tr>
        <td id="L3116" class="blob-num js-line-number" data-line-number="3116"></td>
        <td id="LC3116" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3117" class="blob-num js-line-number" data-line-number="3117"></td>
        <td id="LC3117" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3118" class="blob-num js-line-number" data-line-number="3118"></td>
        <td id="LC3118" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> best <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">Infinity</span>, dÎ»;</td>
      </tr>
      <tr>
        <td id="L3119" class="blob-num js-line-number" data-line-number="3119"></td>
        <td id="LC3119" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> n <span class="pl-k">=</span> merged.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>, i <span class="pl-k">=</span> <span class="pl-c1">0</span>, a <span class="pl-k">=</span> merged[n], b; i <span class="pl-k">&lt;=</span> n; a <span class="pl-k">=</span> b, <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3120" class="blob-num js-line-number" data-line-number="3120"></td>
        <td id="LC3120" class="blob-code blob-code-inner js-file-line">          b <span class="pl-k">=</span> merged[i];</td>
      </tr>
      <tr>
        <td id="L3121" class="blob-num js-line-number" data-line-number="3121"></td>
        <td id="LC3121" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> ((dÎ» <span class="pl-k">=</span> angle(a[<span class="pl-c1">1</span>], b[<span class="pl-c1">0</span>])) <span class="pl-k">&gt;</span> best) best <span class="pl-k">=</span> dÎ», Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> b[<span class="pl-c1">0</span>], Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> a[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3122" class="blob-num js-line-number" data-line-number="3122"></td>
        <td id="LC3122" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3123" class="blob-num js-line-number" data-line-number="3123"></td>
        <td id="LC3123" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3124" class="blob-num js-line-number" data-line-number="3124"></td>
        <td id="LC3124" class="blob-code blob-code-inner js-file-line">      ranges <span class="pl-k">=</span> range <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3125" class="blob-num js-line-number" data-line-number="3125"></td>
        <td id="LC3125" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> Î»<span class="pl-c1">0</span> <span class="pl-k">===</span> <span class="pl-c1">Infinity</span> <span class="pl-k">||</span> Ï<span class="pl-c1">0</span> <span class="pl-k">===</span> <span class="pl-c1">Infinity</span> <span class="pl-k">?</span> [ [ <span class="pl-c1">NaN</span>, <span class="pl-c1">NaN</span> ], [ <span class="pl-c1">NaN</span>, <span class="pl-c1">NaN</span> ] ] <span class="pl-k">:</span> [ [ Î»<span class="pl-c1">0</span>, Ï<span class="pl-c1">0</span> ], [ Î»<span class="pl-c1">1</span>, Ï<span class="pl-c1">1</span> ] ];</td>
      </tr>
      <tr>
        <td id="L3126" class="blob-num js-line-number" data-line-number="3126"></td>
        <td id="LC3126" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3127" class="blob-num js-line-number" data-line-number="3127"></td>
        <td id="LC3127" class="blob-code blob-code-inner js-file-line">  }();</td>
      </tr>
      <tr>
        <td id="L3128" class="blob-num js-line-number" data-line-number="3128"></td>
        <td id="LC3128" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">centroid</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L3129" class="blob-num js-line-number" data-line-number="3129"></td>
        <td id="LC3129" class="blob-code blob-code-inner js-file-line">    d3_geo_centroidW0 <span class="pl-k">=</span> d3_geo_centroidW1 <span class="pl-k">=</span> d3_geo_centroidX0 <span class="pl-k">=</span> d3_geo_centroidY0 <span class="pl-k">=</span> d3_geo_centroidZ0 <span class="pl-k">=</span> d3_geo_centroidX1 <span class="pl-k">=</span> d3_geo_centroidY1 <span class="pl-k">=</span> d3_geo_centroidZ1 <span class="pl-k">=</span> d3_geo_centroidX2 <span class="pl-k">=</span> d3_geo_centroidY2 <span class="pl-k">=</span> d3_geo_centroidZ2 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3130" class="blob-num js-line-number" data-line-number="3130"></td>
        <td id="LC3130" class="blob-code blob-code-inner js-file-line">    d3.geo.stream(object, d3_geo_centroid);</td>
      </tr>
      <tr>
        <td id="L3131" class="blob-num js-line-number" data-line-number="3131"></td>
        <td id="LC3131" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> d3_geo_centroidX2, y <span class="pl-k">=</span> d3_geo_centroidY2, z <span class="pl-k">=</span> d3_geo_centroidZ2, m <span class="pl-k">=</span> x <span class="pl-k">*</span> x <span class="pl-k">+</span> y <span class="pl-k">*</span> y <span class="pl-k">+</span> z <span class="pl-k">*</span> z;</td>
      </tr>
      <tr>
        <td id="L3132" class="blob-num js-line-number" data-line-number="3132"></td>
        <td id="LC3132" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (m <span class="pl-k">&lt;</span> Îµ<span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L3133" class="blob-num js-line-number" data-line-number="3133"></td>
        <td id="LC3133" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> d3_geo_centroidX1, y <span class="pl-k">=</span> d3_geo_centroidY1, z <span class="pl-k">=</span> d3_geo_centroidZ1;</td>
      </tr>
      <tr>
        <td id="L3134" class="blob-num js-line-number" data-line-number="3134"></td>
        <td id="LC3134" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (d3_geo_centroidW1 <span class="pl-k">&lt;</span> Îµ) x <span class="pl-k">=</span> d3_geo_centroidX0, y <span class="pl-k">=</span> d3_geo_centroidY0, z <span class="pl-k">=</span> d3_geo_centroidZ0;</td>
      </tr>
      <tr>
        <td id="L3135" class="blob-num js-line-number" data-line-number="3135"></td>
        <td id="LC3135" class="blob-code blob-code-inner js-file-line">      m <span class="pl-k">=</span> x <span class="pl-k">*</span> x <span class="pl-k">+</span> y <span class="pl-k">*</span> y <span class="pl-k">+</span> z <span class="pl-k">*</span> z;</td>
      </tr>
      <tr>
        <td id="L3136" class="blob-num js-line-number" data-line-number="3136"></td>
        <td id="LC3136" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (m <span class="pl-k">&lt;</span> Îµ<span class="pl-c1">2</span>) <span class="pl-k">return</span> [ <span class="pl-c1">NaN</span>, <span class="pl-c1">NaN</span> ];</td>
      </tr>
      <tr>
        <td id="L3137" class="blob-num js-line-number" data-line-number="3137"></td>
        <td id="LC3137" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3138" class="blob-num js-line-number" data-line-number="3138"></td>
        <td id="LC3138" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(y, x) <span class="pl-k">*</span> d3_degrees, d3_asin(z / <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(m)) <span class="pl-k">*</span> d3_degrees ];</td>
      </tr>
      <tr>
        <td id="L3139" class="blob-num js-line-number" data-line-number="3139"></td>
        <td id="LC3139" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3140" class="blob-num js-line-number" data-line-number="3140"></td>
        <td id="LC3140" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;</td>
      </tr>
      <tr>
        <td id="L3141" class="blob-num js-line-number" data-line-number="3141"></td>
        <td id="LC3141" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_centroid <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3142" class="blob-num js-line-number" data-line-number="3142"></td>
        <td id="LC3142" class="blob-code blob-code-inner js-file-line">    sphere<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L3143" class="blob-num js-line-number" data-line-number="3143"></td>
        <td id="LC3143" class="blob-code blob-code-inner js-file-line">    point<span class="pl-k">:</span> d3_geo_centroidPoint,</td>
      </tr>
      <tr>
        <td id="L3144" class="blob-num js-line-number" data-line-number="3144"></td>
        <td id="LC3144" class="blob-code blob-code-inner js-file-line">    lineStart<span class="pl-k">:</span> d3_geo_centroidLineStart,</td>
      </tr>
      <tr>
        <td id="L3145" class="blob-num js-line-number" data-line-number="3145"></td>
        <td id="LC3145" class="blob-code blob-code-inner js-file-line">    lineEnd<span class="pl-k">:</span> d3_geo_centroidLineEnd,</td>
      </tr>
      <tr>
        <td id="L3146" class="blob-num js-line-number" data-line-number="3146"></td>
        <td id="LC3146" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3147" class="blob-num js-line-number" data-line-number="3147"></td>
        <td id="LC3147" class="blob-code blob-code-inner js-file-line">      d3_geo_centroid.lineStart <span class="pl-k">=</span> d3_geo_centroidRingStart;</td>
      </tr>
      <tr>
        <td id="L3148" class="blob-num js-line-number" data-line-number="3148"></td>
        <td id="LC3148" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L3149" class="blob-num js-line-number" data-line-number="3149"></td>
        <td id="LC3149" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3150" class="blob-num js-line-number" data-line-number="3150"></td>
        <td id="LC3150" class="blob-code blob-code-inner js-file-line">      d3_geo_centroid.lineStart <span class="pl-k">=</span> d3_geo_centroidLineStart;</td>
      </tr>
      <tr>
        <td id="L3151" class="blob-num js-line-number" data-line-number="3151"></td>
        <td id="LC3151" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3152" class="blob-num js-line-number" data-line-number="3152"></td>
        <td id="LC3152" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3153" class="blob-num js-line-number" data-line-number="3153"></td>
        <td id="LC3153" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_centroidPoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3154" class="blob-num js-line-number" data-line-number="3154"></td>
        <td id="LC3154" class="blob-code blob-code-inner js-file-line">    Î» <span class="pl-k">*=</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L3155" class="blob-num js-line-number" data-line-number="3155"></td>
        <td id="LC3155" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï <span class="pl-k">*=</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L3156" class="blob-num js-line-number" data-line-number="3156"></td>
        <td id="LC3156" class="blob-code blob-code-inner js-file-line">    d3_geo_centroidPointXYZ(cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î»), cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»), <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï));</td>
      </tr>
      <tr>
        <td id="L3157" class="blob-num js-line-number" data-line-number="3157"></td>
        <td id="LC3157" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3158" class="blob-num js-line-number" data-line-number="3158"></td>
        <td id="LC3158" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_centroidPointXYZ</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>, <span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L3159" class="blob-num js-line-number" data-line-number="3159"></td>
        <td id="LC3159" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">++</span>d3_geo_centroidW0;</td>
      </tr>
      <tr>
        <td id="L3160" class="blob-num js-line-number" data-line-number="3160"></td>
        <td id="LC3160" class="blob-code blob-code-inner js-file-line">    d3_geo_centroidX0 <span class="pl-k">+=</span> (x <span class="pl-k">-</span> d3_geo_centroidX0) / d3_geo_centroidW0;</td>
      </tr>
      <tr>
        <td id="L3161" class="blob-num js-line-number" data-line-number="3161"></td>
        <td id="LC3161" class="blob-code blob-code-inner js-file-line">    d3_geo_centroidY0 <span class="pl-k">+=</span> (y <span class="pl-k">-</span> d3_geo_centroidY0) / d3_geo_centroidW0;</td>
      </tr>
      <tr>
        <td id="L3162" class="blob-num js-line-number" data-line-number="3162"></td>
        <td id="LC3162" class="blob-code blob-code-inner js-file-line">    d3_geo_centroidZ0 <span class="pl-k">+=</span> (z <span class="pl-k">-</span> d3_geo_centroidZ0) / d3_geo_centroidW0;</td>
      </tr>
      <tr>
        <td id="L3163" class="blob-num js-line-number" data-line-number="3163"></td>
        <td id="LC3163" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3164" class="blob-num js-line-number" data-line-number="3164"></td>
        <td id="LC3164" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_centroidLineStart</span>() {</td>
      </tr>
      <tr>
        <td id="L3165" class="blob-num js-line-number" data-line-number="3165"></td>
        <td id="LC3165" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x0, y0, z0;</td>
      </tr>
      <tr>
        <td id="L3166" class="blob-num js-line-number" data-line-number="3166"></td>
        <td id="LC3166" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_centroid</span>.<span class="pl-en">point</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3167" class="blob-num js-line-number" data-line-number="3167"></td>
        <td id="LC3167" class="blob-code blob-code-inner js-file-line">      Î» <span class="pl-k">*=</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L3168" class="blob-num js-line-number" data-line-number="3168"></td>
        <td id="LC3168" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï <span class="pl-k">*=</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L3169" class="blob-num js-line-number" data-line-number="3169"></td>
        <td id="LC3169" class="blob-code blob-code-inner js-file-line">      x0 <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î»);</td>
      </tr>
      <tr>
        <td id="L3170" class="blob-num js-line-number" data-line-number="3170"></td>
        <td id="LC3170" class="blob-code blob-code-inner js-file-line">      y0 <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»);</td>
      </tr>
      <tr>
        <td id="L3171" class="blob-num js-line-number" data-line-number="3171"></td>
        <td id="LC3171" class="blob-code blob-code-inner js-file-line">      z0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï);</td>
      </tr>
      <tr>
        <td id="L3172" class="blob-num js-line-number" data-line-number="3172"></td>
        <td id="LC3172" class="blob-code blob-code-inner js-file-line">      d3_geo_centroid.point <span class="pl-k">=</span> nextPoint;</td>
      </tr>
      <tr>
        <td id="L3173" class="blob-num js-line-number" data-line-number="3173"></td>
        <td id="LC3173" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidPointXYZ(x0, y0, z0);</td>
      </tr>
      <tr>
        <td id="L3174" class="blob-num js-line-number" data-line-number="3174"></td>
        <td id="LC3174" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3175" class="blob-num js-line-number" data-line-number="3175"></td>
        <td id="LC3175" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nextPoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3176" class="blob-num js-line-number" data-line-number="3176"></td>
        <td id="LC3176" class="blob-code blob-code-inner js-file-line">      Î» <span class="pl-k">*=</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L3177" class="blob-num js-line-number" data-line-number="3177"></td>
        <td id="LC3177" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï <span class="pl-k">*=</span> d3_radians), x <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î»), y <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»), z <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï), w <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>((w <span class="pl-k">=</span> y0 <span class="pl-k">*</span> z <span class="pl-k">-</span> z0 <span class="pl-k">*</span> y) <span class="pl-k">*</span> w <span class="pl-k">+</span> (w <span class="pl-k">=</span> z0 <span class="pl-k">*</span> x <span class="pl-k">-</span> x0 <span class="pl-k">*</span> z) <span class="pl-k">*</span> w <span class="pl-k">+</span> (w <span class="pl-k">=</span> x0 <span class="pl-k">*</span> y <span class="pl-k">-</span> y0 <span class="pl-k">*</span> x) <span class="pl-k">*</span> w), x0 <span class="pl-k">*</span> x <span class="pl-k">+</span> y0 <span class="pl-k">*</span> y <span class="pl-k">+</span> z0 <span class="pl-k">*</span> z);</td>
      </tr>
      <tr>
        <td id="L3178" class="blob-num js-line-number" data-line-number="3178"></td>
        <td id="LC3178" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidW1 <span class="pl-k">+=</span> w;</td>
      </tr>
      <tr>
        <td id="L3179" class="blob-num js-line-number" data-line-number="3179"></td>
        <td id="LC3179" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidX1 <span class="pl-k">+=</span> w <span class="pl-k">*</span> (x0 <span class="pl-k">+</span> (x0 <span class="pl-k">=</span> x));</td>
      </tr>
      <tr>
        <td id="L3180" class="blob-num js-line-number" data-line-number="3180"></td>
        <td id="LC3180" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidY1 <span class="pl-k">+=</span> w <span class="pl-k">*</span> (y0 <span class="pl-k">+</span> (y0 <span class="pl-k">=</span> y));</td>
      </tr>
      <tr>
        <td id="L3181" class="blob-num js-line-number" data-line-number="3181"></td>
        <td id="LC3181" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidZ1 <span class="pl-k">+=</span> w <span class="pl-k">*</span> (z0 <span class="pl-k">+</span> (z0 <span class="pl-k">=</span> z));</td>
      </tr>
      <tr>
        <td id="L3182" class="blob-num js-line-number" data-line-number="3182"></td>
        <td id="LC3182" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidPointXYZ(x0, y0, z0);</td>
      </tr>
      <tr>
        <td id="L3183" class="blob-num js-line-number" data-line-number="3183"></td>
        <td id="LC3183" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3184" class="blob-num js-line-number" data-line-number="3184"></td>
        <td id="LC3184" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3185" class="blob-num js-line-number" data-line-number="3185"></td>
        <td id="LC3185" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_centroidLineEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L3186" class="blob-num js-line-number" data-line-number="3186"></td>
        <td id="LC3186" class="blob-code blob-code-inner js-file-line">    d3_geo_centroid.point <span class="pl-k">=</span> d3_geo_centroidPoint;</td>
      </tr>
      <tr>
        <td id="L3187" class="blob-num js-line-number" data-line-number="3187"></td>
        <td id="LC3187" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3188" class="blob-num js-line-number" data-line-number="3188"></td>
        <td id="LC3188" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_centroidRingStart</span>() {</td>
      </tr>
      <tr>
        <td id="L3189" class="blob-num js-line-number" data-line-number="3189"></td>
        <td id="LC3189" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Î»<span class="pl-c1">00</span>, Ï<span class="pl-c1">00</span>, x0, y0, z0;</td>
      </tr>
      <tr>
        <td id="L3190" class="blob-num js-line-number" data-line-number="3190"></td>
        <td id="LC3190" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_centroid</span>.<span class="pl-en">point</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3191" class="blob-num js-line-number" data-line-number="3191"></td>
        <td id="LC3191" class="blob-code blob-code-inner js-file-line">      Î»<span class="pl-c1">00</span> <span class="pl-k">=</span> Î», Ï<span class="pl-c1">00</span> <span class="pl-k">=</span> Ï;</td>
      </tr>
      <tr>
        <td id="L3192" class="blob-num js-line-number" data-line-number="3192"></td>
        <td id="LC3192" class="blob-code blob-code-inner js-file-line">      d3_geo_centroid.point <span class="pl-k">=</span> nextPoint;</td>
      </tr>
      <tr>
        <td id="L3193" class="blob-num js-line-number" data-line-number="3193"></td>
        <td id="LC3193" class="blob-code blob-code-inner js-file-line">      Î» <span class="pl-k">*=</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L3194" class="blob-num js-line-number" data-line-number="3194"></td>
        <td id="LC3194" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï <span class="pl-k">*=</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L3195" class="blob-num js-line-number" data-line-number="3195"></td>
        <td id="LC3195" class="blob-code blob-code-inner js-file-line">      x0 <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î»);</td>
      </tr>
      <tr>
        <td id="L3196" class="blob-num js-line-number" data-line-number="3196"></td>
        <td id="LC3196" class="blob-code blob-code-inner js-file-line">      y0 <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»);</td>
      </tr>
      <tr>
        <td id="L3197" class="blob-num js-line-number" data-line-number="3197"></td>
        <td id="LC3197" class="blob-code blob-code-inner js-file-line">      z0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï);</td>
      </tr>
      <tr>
        <td id="L3198" class="blob-num js-line-number" data-line-number="3198"></td>
        <td id="LC3198" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidPointXYZ(x0, y0, z0);</td>
      </tr>
      <tr>
        <td id="L3199" class="blob-num js-line-number" data-line-number="3199"></td>
        <td id="LC3199" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3200" class="blob-num js-line-number" data-line-number="3200"></td>
        <td id="LC3200" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_centroid</span>.<span class="pl-en">lineEnd</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3201" class="blob-num js-line-number" data-line-number="3201"></td>
        <td id="LC3201" class="blob-code blob-code-inner js-file-line">      nextPoint(Î»<span class="pl-c1">00</span>, Ï<span class="pl-c1">00</span>);</td>
      </tr>
      <tr>
        <td id="L3202" class="blob-num js-line-number" data-line-number="3202"></td>
        <td id="LC3202" class="blob-code blob-code-inner js-file-line">      d3_geo_centroid.lineEnd <span class="pl-k">=</span> d3_geo_centroidLineEnd;</td>
      </tr>
      <tr>
        <td id="L3203" class="blob-num js-line-number" data-line-number="3203"></td>
        <td id="LC3203" class="blob-code blob-code-inner js-file-line">      d3_geo_centroid.point <span class="pl-k">=</span> d3_geo_centroidPoint;</td>
      </tr>
      <tr>
        <td id="L3204" class="blob-num js-line-number" data-line-number="3204"></td>
        <td id="LC3204" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3205" class="blob-num js-line-number" data-line-number="3205"></td>
        <td id="LC3205" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nextPoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3206" class="blob-num js-line-number" data-line-number="3206"></td>
        <td id="LC3206" class="blob-code blob-code-inner js-file-line">      Î» <span class="pl-k">*=</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L3207" class="blob-num js-line-number" data-line-number="3207"></td>
        <td id="LC3207" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï <span class="pl-k">*=</span> d3_radians), x <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î»), y <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»), z <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï), cx <span class="pl-k">=</span> y0 <span class="pl-k">*</span> z <span class="pl-k">-</span> z0 <span class="pl-k">*</span> y, cy <span class="pl-k">=</span> z0 <span class="pl-k">*</span> x <span class="pl-k">-</span> x0 <span class="pl-k">*</span> z, cz <span class="pl-k">=</span> x0 <span class="pl-k">*</span> y <span class="pl-k">-</span> y0 <span class="pl-k">*</span> x, m <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(cx <span class="pl-k">*</span> cx <span class="pl-k">+</span> cy <span class="pl-k">*</span> cy <span class="pl-k">+</span> cz <span class="pl-k">*</span> cz), u <span class="pl-k">=</span> x0 <span class="pl-k">*</span> x <span class="pl-k">+</span> y0 <span class="pl-k">*</span> y <span class="pl-k">+</span> z0 <span class="pl-k">*</span> z, v <span class="pl-k">=</span> m <span class="pl-k">&amp;&amp;</span> <span class="pl-k">-</span>d3_acos(u) / m, w <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(m, u);</td>
      </tr>
      <tr>
        <td id="L3208" class="blob-num js-line-number" data-line-number="3208"></td>
        <td id="LC3208" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidX2 <span class="pl-k">+=</span> v <span class="pl-k">*</span> cx;</td>
      </tr>
      <tr>
        <td id="L3209" class="blob-num js-line-number" data-line-number="3209"></td>
        <td id="LC3209" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidY2 <span class="pl-k">+=</span> v <span class="pl-k">*</span> cy;</td>
      </tr>
      <tr>
        <td id="L3210" class="blob-num js-line-number" data-line-number="3210"></td>
        <td id="LC3210" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidZ2 <span class="pl-k">+=</span> v <span class="pl-k">*</span> cz;</td>
      </tr>
      <tr>
        <td id="L3211" class="blob-num js-line-number" data-line-number="3211"></td>
        <td id="LC3211" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidW1 <span class="pl-k">+=</span> w;</td>
      </tr>
      <tr>
        <td id="L3212" class="blob-num js-line-number" data-line-number="3212"></td>
        <td id="LC3212" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidX1 <span class="pl-k">+=</span> w <span class="pl-k">*</span> (x0 <span class="pl-k">+</span> (x0 <span class="pl-k">=</span> x));</td>
      </tr>
      <tr>
        <td id="L3213" class="blob-num js-line-number" data-line-number="3213"></td>
        <td id="LC3213" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidY1 <span class="pl-k">+=</span> w <span class="pl-k">*</span> (y0 <span class="pl-k">+</span> (y0 <span class="pl-k">=</span> y));</td>
      </tr>
      <tr>
        <td id="L3214" class="blob-num js-line-number" data-line-number="3214"></td>
        <td id="LC3214" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidZ1 <span class="pl-k">+=</span> w <span class="pl-k">*</span> (z0 <span class="pl-k">+</span> (z0 <span class="pl-k">=</span> z));</td>
      </tr>
      <tr>
        <td id="L3215" class="blob-num js-line-number" data-line-number="3215"></td>
        <td id="LC3215" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidPointXYZ(x0, y0, z0);</td>
      </tr>
      <tr>
        <td id="L3216" class="blob-num js-line-number" data-line-number="3216"></td>
        <td id="LC3216" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3217" class="blob-num js-line-number" data-line-number="3217"></td>
        <td id="LC3217" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3218" class="blob-num js-line-number" data-line-number="3218"></td>
        <td id="LC3218" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_compose</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L3219" class="blob-num js-line-number" data-line-number="3219"></td>
        <td id="LC3219" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">compose</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3220" class="blob-num js-line-number" data-line-number="3220"></td>
        <td id="LC3220" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x <span class="pl-k">=</span> a(x, y), b(x[<span class="pl-c1">0</span>], x[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3221" class="blob-num js-line-number" data-line-number="3221"></td>
        <td id="LC3221" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3222" class="blob-num js-line-number" data-line-number="3222"></td>
        <td id="LC3222" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (a.invert <span class="pl-k">&amp;&amp;</span> b.invert) <span class="pl-c1">compose</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3223" class="blob-num js-line-number" data-line-number="3223"></td>
        <td id="LC3223" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x <span class="pl-k">=</span> b.invert(x, y), x <span class="pl-k">&amp;&amp;</span> a.invert(x[<span class="pl-c1">0</span>], x[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3224" class="blob-num js-line-number" data-line-number="3224"></td>
        <td id="LC3224" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3225" class="blob-num js-line-number" data-line-number="3225"></td>
        <td id="LC3225" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> compose;</td>
      </tr>
      <tr>
        <td id="L3226" class="blob-num js-line-number" data-line-number="3226"></td>
        <td id="LC3226" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3227" class="blob-num js-line-number" data-line-number="3227"></td>
        <td id="LC3227" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_true</span>() {</td>
      </tr>
      <tr>
        <td id="L3228" class="blob-num js-line-number" data-line-number="3228"></td>
        <td id="LC3228" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3229" class="blob-num js-line-number" data-line-number="3229"></td>
        <td id="LC3229" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3230" class="blob-num js-line-number" data-line-number="3230"></td>
        <td id="LC3230" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipPolygon</span>(<span class="pl-smi">segments</span>, <span class="pl-smi">compare</span>, <span class="pl-smi">clipStartInside</span>, <span class="pl-smi">interpolate</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L3231" class="blob-num js-line-number" data-line-number="3231"></td>
        <td id="LC3231" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> subject <span class="pl-k">=</span> [], clip <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3232" class="blob-num js-line-number" data-line-number="3232"></td>
        <td id="LC3232" class="blob-code blob-code-inner js-file-line">    segments.forEach(<span class="pl-k">function</span>(<span class="pl-smi">segment</span>) {</td>
      </tr>
      <tr>
        <td id="L3233" class="blob-num js-line-number" data-line-number="3233"></td>
        <td id="LC3233" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((n <span class="pl-k">=</span> segment.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3234" class="blob-num js-line-number" data-line-number="3234"></td>
        <td id="LC3234" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n, p0 <span class="pl-k">=</span> segment[<span class="pl-c1">0</span>], p1 <span class="pl-k">=</span> segment[n];</td>
      </tr>
      <tr>
        <td id="L3235" class="blob-num js-line-number" data-line-number="3235"></td>
        <td id="LC3235" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (d3_geo_sphericalEqual(p0, p1)) {</td>
      </tr>
      <tr>
        <td id="L3236" class="blob-num js-line-number" data-line-number="3236"></td>
        <td id="LC3236" class="blob-code blob-code-inner js-file-line">        listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3237" class="blob-num js-line-number" data-line-number="3237"></td>
        <td id="LC3237" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) listener.point((p0 <span class="pl-k">=</span> segment[i])[<span class="pl-c1">0</span>], p0[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3238" class="blob-num js-line-number" data-line-number="3238"></td>
        <td id="LC3238" class="blob-code blob-code-inner js-file-line">        listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3239" class="blob-num js-line-number" data-line-number="3239"></td>
        <td id="LC3239" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3240" class="blob-num js-line-number" data-line-number="3240"></td>
        <td id="LC3240" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3241" class="blob-num js-line-number" data-line-number="3241"></td>
        <td id="LC3241" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> a <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geo_clipPolygonIntersection</span>(p0, segment, <span class="pl-c1">null</span>, <span class="pl-c1">true</span>), b <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geo_clipPolygonIntersection</span>(p0, <span class="pl-c1">null</span>, a, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L3242" class="blob-num js-line-number" data-line-number="3242"></td>
        <td id="LC3242" class="blob-code blob-code-inner js-file-line">      a.o <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L3243" class="blob-num js-line-number" data-line-number="3243"></td>
        <td id="LC3243" class="blob-code blob-code-inner js-file-line">      subject.<span class="pl-c1">push</span>(a);</td>
      </tr>
      <tr>
        <td id="L3244" class="blob-num js-line-number" data-line-number="3244"></td>
        <td id="LC3244" class="blob-code blob-code-inner js-file-line">      clip.<span class="pl-c1">push</span>(b);</td>
      </tr>
      <tr>
        <td id="L3245" class="blob-num js-line-number" data-line-number="3245"></td>
        <td id="LC3245" class="blob-code blob-code-inner js-file-line">      a <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geo_clipPolygonIntersection</span>(p1, segment, <span class="pl-c1">null</span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L3246" class="blob-num js-line-number" data-line-number="3246"></td>
        <td id="LC3246" class="blob-code blob-code-inner js-file-line">      b <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geo_clipPolygonIntersection</span>(p1, <span class="pl-c1">null</span>, a, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L3247" class="blob-num js-line-number" data-line-number="3247"></td>
        <td id="LC3247" class="blob-code blob-code-inner js-file-line">      a.o <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L3248" class="blob-num js-line-number" data-line-number="3248"></td>
        <td id="LC3248" class="blob-code blob-code-inner js-file-line">      subject.<span class="pl-c1">push</span>(a);</td>
      </tr>
      <tr>
        <td id="L3249" class="blob-num js-line-number" data-line-number="3249"></td>
        <td id="LC3249" class="blob-code blob-code-inner js-file-line">      clip.<span class="pl-c1">push</span>(b);</td>
      </tr>
      <tr>
        <td id="L3250" class="blob-num js-line-number" data-line-number="3250"></td>
        <td id="LC3250" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L3251" class="blob-num js-line-number" data-line-number="3251"></td>
        <td id="LC3251" class="blob-code blob-code-inner js-file-line">    clip.<span class="pl-c1">sort</span>(compare);</td>
      </tr>
      <tr>
        <td id="L3252" class="blob-num js-line-number" data-line-number="3252"></td>
        <td id="LC3252" class="blob-code blob-code-inner js-file-line">    d3_geo_clipPolygonLinkCircular(subject);</td>
      </tr>
      <tr>
        <td id="L3253" class="blob-num js-line-number" data-line-number="3253"></td>
        <td id="LC3253" class="blob-code blob-code-inner js-file-line">    d3_geo_clipPolygonLinkCircular(clip);</td>
      </tr>
      <tr>
        <td id="L3254" class="blob-num js-line-number" data-line-number="3254"></td>
        <td id="LC3254" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>subject.<span class="pl-c1">length</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3255" class="blob-num js-line-number" data-line-number="3255"></td>
        <td id="LC3255" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, entry <span class="pl-k">=</span> clipStartInside, n <span class="pl-k">=</span> clip.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3256" class="blob-num js-line-number" data-line-number="3256"></td>
        <td id="LC3256" class="blob-code blob-code-inner js-file-line">      clip[i].e <span class="pl-k">=</span> entry <span class="pl-k">=</span> <span class="pl-k">!</span>entry;</td>
      </tr>
      <tr>
        <td id="L3257" class="blob-num js-line-number" data-line-number="3257"></td>
        <td id="LC3257" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3258" class="blob-num js-line-number" data-line-number="3258"></td>
        <td id="LC3258" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> start <span class="pl-k">=</span> subject[<span class="pl-c1">0</span>], points, point;</td>
      </tr>
      <tr>
        <td id="L3259" class="blob-num js-line-number" data-line-number="3259"></td>
        <td id="LC3259" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3260" class="blob-num js-line-number" data-line-number="3260"></td>
        <td id="LC3260" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> current <span class="pl-k">=</span> start, isSubject <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3261" class="blob-num js-line-number" data-line-number="3261"></td>
        <td id="LC3261" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (current.v) <span class="pl-k">if</span> ((current <span class="pl-k">=</span> current.n) <span class="pl-k">===</span> start) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3262" class="blob-num js-line-number" data-line-number="3262"></td>
        <td id="LC3262" class="blob-code blob-code-inner js-file-line">      points <span class="pl-k">=</span> current.z;</td>
      </tr>
      <tr>
        <td id="L3263" class="blob-num js-line-number" data-line-number="3263"></td>
        <td id="LC3263" class="blob-code blob-code-inner js-file-line">      listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3264" class="blob-num js-line-number" data-line-number="3264"></td>
        <td id="LC3264" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L3265" class="blob-num js-line-number" data-line-number="3265"></td>
        <td id="LC3265" class="blob-code blob-code-inner js-file-line">        current.v <span class="pl-k">=</span> current.o.v <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3266" class="blob-num js-line-number" data-line-number="3266"></td>
        <td id="LC3266" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (current.e) {</td>
      </tr>
      <tr>
        <td id="L3267" class="blob-num js-line-number" data-line-number="3267"></td>
        <td id="LC3267" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isSubject) {</td>
      </tr>
      <tr>
        <td id="L3268" class="blob-num js-line-number" data-line-number="3268"></td>
        <td id="LC3268" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) listener.point((point <span class="pl-k">=</span> points[i])[<span class="pl-c1">0</span>], point[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3269" class="blob-num js-line-number" data-line-number="3269"></td>
        <td id="LC3269" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3270" class="blob-num js-line-number" data-line-number="3270"></td>
        <td id="LC3270" class="blob-code blob-code-inner js-file-line">            interpolate(current.<span class="pl-c1">x</span>, current.n.<span class="pl-c1">x</span>, <span class="pl-c1">1</span>, listener);</td>
      </tr>
      <tr>
        <td id="L3271" class="blob-num js-line-number" data-line-number="3271"></td>
        <td id="LC3271" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3272" class="blob-num js-line-number" data-line-number="3272"></td>
        <td id="LC3272" class="blob-code blob-code-inner js-file-line">          current <span class="pl-k">=</span> current.n;</td>
      </tr>
      <tr>
        <td id="L3273" class="blob-num js-line-number" data-line-number="3273"></td>
        <td id="LC3273" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3274" class="blob-num js-line-number" data-line-number="3274"></td>
        <td id="LC3274" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isSubject) {</td>
      </tr>
      <tr>
        <td id="L3275" class="blob-num js-line-number" data-line-number="3275"></td>
        <td id="LC3275" class="blob-code blob-code-inner js-file-line">            points <span class="pl-k">=</span> current.p.z;</td>
      </tr>
      <tr>
        <td id="L3276" class="blob-num js-line-number" data-line-number="3276"></td>
        <td id="LC3276" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> points.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; <span class="pl-k">--</span>i) listener.point((point <span class="pl-k">=</span> points[i])[<span class="pl-c1">0</span>], point[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3277" class="blob-num js-line-number" data-line-number="3277"></td>
        <td id="LC3277" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3278" class="blob-num js-line-number" data-line-number="3278"></td>
        <td id="LC3278" class="blob-code blob-code-inner js-file-line">            interpolate(current.<span class="pl-c1">x</span>, current.p.<span class="pl-c1">x</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>, listener);</td>
      </tr>
      <tr>
        <td id="L3279" class="blob-num js-line-number" data-line-number="3279"></td>
        <td id="LC3279" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3280" class="blob-num js-line-number" data-line-number="3280"></td>
        <td id="LC3280" class="blob-code blob-code-inner js-file-line">          current <span class="pl-k">=</span> current.p;</td>
      </tr>
      <tr>
        <td id="L3281" class="blob-num js-line-number" data-line-number="3281"></td>
        <td id="LC3281" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3282" class="blob-num js-line-number" data-line-number="3282"></td>
        <td id="LC3282" class="blob-code blob-code-inner js-file-line">        current <span class="pl-k">=</span> current.o;</td>
      </tr>
      <tr>
        <td id="L3283" class="blob-num js-line-number" data-line-number="3283"></td>
        <td id="LC3283" class="blob-code blob-code-inner js-file-line">        points <span class="pl-k">=</span> current.z;</td>
      </tr>
      <tr>
        <td id="L3284" class="blob-num js-line-number" data-line-number="3284"></td>
        <td id="LC3284" class="blob-code blob-code-inner js-file-line">        isSubject <span class="pl-k">=</span> <span class="pl-k">!</span>isSubject;</td>
      </tr>
      <tr>
        <td id="L3285" class="blob-num js-line-number" data-line-number="3285"></td>
        <td id="LC3285" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">while</span> (<span class="pl-k">!</span>current.v);</td>
      </tr>
      <tr>
        <td id="L3286" class="blob-num js-line-number" data-line-number="3286"></td>
        <td id="LC3286" class="blob-code blob-code-inner js-file-line">      listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3287" class="blob-num js-line-number" data-line-number="3287"></td>
        <td id="LC3287" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3288" class="blob-num js-line-number" data-line-number="3288"></td>
        <td id="LC3288" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3289" class="blob-num js-line-number" data-line-number="3289"></td>
        <td id="LC3289" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipPolygonLinkCircular</span>(<span class="pl-smi">array</span>) {</td>
      </tr>
      <tr>
        <td id="L3290" class="blob-num js-line-number" data-line-number="3290"></td>
        <td id="LC3290" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>(n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3291" class="blob-num js-line-number" data-line-number="3291"></td>
        <td id="LC3291" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n, i <span class="pl-k">=</span> <span class="pl-c1">0</span>, a <span class="pl-k">=</span> array[<span class="pl-c1">0</span>], b;</td>
      </tr>
      <tr>
        <td id="L3292" class="blob-num js-line-number" data-line-number="3292"></td>
        <td id="LC3292" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L3293" class="blob-num js-line-number" data-line-number="3293"></td>
        <td id="LC3293" class="blob-code blob-code-inner js-file-line">      a.n <span class="pl-k">=</span> b <span class="pl-k">=</span> array[i];</td>
      </tr>
      <tr>
        <td id="L3294" class="blob-num js-line-number" data-line-number="3294"></td>
        <td id="LC3294" class="blob-code blob-code-inner js-file-line">      b.p <span class="pl-k">=</span> a;</td>
      </tr>
      <tr>
        <td id="L3295" class="blob-num js-line-number" data-line-number="3295"></td>
        <td id="LC3295" class="blob-code blob-code-inner js-file-line">      a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L3296" class="blob-num js-line-number" data-line-number="3296"></td>
        <td id="LC3296" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3297" class="blob-num js-line-number" data-line-number="3297"></td>
        <td id="LC3297" class="blob-code blob-code-inner js-file-line">    a.n <span class="pl-k">=</span> b <span class="pl-k">=</span> array[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3298" class="blob-num js-line-number" data-line-number="3298"></td>
        <td id="LC3298" class="blob-code blob-code-inner js-file-line">    b.p <span class="pl-k">=</span> a;</td>
      </tr>
      <tr>
        <td id="L3299" class="blob-num js-line-number" data-line-number="3299"></td>
        <td id="LC3299" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3300" class="blob-num js-line-number" data-line-number="3300"></td>
        <td id="LC3300" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipPolygonIntersection</span>(<span class="pl-smi">point</span>, <span class="pl-smi">points</span>, <span class="pl-smi">other</span>, <span class="pl-smi">entry</span>) {</td>
      </tr>
      <tr>
        <td id="L3301" class="blob-num js-line-number" data-line-number="3301"></td>
        <td id="LC3301" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L3302" class="blob-num js-line-number" data-line-number="3302"></td>
        <td id="LC3302" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.z <span class="pl-k">=</span> points;</td>
      </tr>
      <tr>
        <td id="L3303" class="blob-num js-line-number" data-line-number="3303"></td>
        <td id="LC3303" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.o <span class="pl-k">=</span> other;</td>
      </tr>
      <tr>
        <td id="L3304" class="blob-num js-line-number" data-line-number="3304"></td>
        <td id="LC3304" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.e <span class="pl-k">=</span> entry;</td>
      </tr>
      <tr>
        <td id="L3305" class="blob-num js-line-number" data-line-number="3305"></td>
        <td id="LC3305" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.v <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3306" class="blob-num js-line-number" data-line-number="3306"></td>
        <td id="LC3306" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.n <span class="pl-k">=</span> <span class="pl-v">this</span>.p <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3307" class="blob-num js-line-number" data-line-number="3307"></td>
        <td id="LC3307" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3308" class="blob-num js-line-number" data-line-number="3308"></td>
        <td id="LC3308" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clip</span>(<span class="pl-smi">pointVisible</span>, <span class="pl-smi">clipLine</span>, <span class="pl-smi">interpolate</span>, <span class="pl-smi">clipStart</span>) {</td>
      </tr>
      <tr>
        <td id="L3309" class="blob-num js-line-number" data-line-number="3309"></td>
        <td id="LC3309" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">rotate</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L3310" class="blob-num js-line-number" data-line-number="3310"></td>
        <td id="LC3310" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> line <span class="pl-k">=</span> clipLine(listener), rotatedClipStart <span class="pl-k">=</span> rotate.invert(clipStart[<span class="pl-c1">0</span>], clipStart[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3311" class="blob-num js-line-number" data-line-number="3311"></td>
        <td id="LC3311" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> clip <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3312" class="blob-num js-line-number" data-line-number="3312"></td>
        <td id="LC3312" class="blob-code blob-code-inner js-file-line">        point<span class="pl-k">:</span> point,</td>
      </tr>
      <tr>
        <td id="L3313" class="blob-num js-line-number" data-line-number="3313"></td>
        <td id="LC3313" class="blob-code blob-code-inner js-file-line">        lineStart<span class="pl-k">:</span> lineStart,</td>
      </tr>
      <tr>
        <td id="L3314" class="blob-num js-line-number" data-line-number="3314"></td>
        <td id="LC3314" class="blob-code blob-code-inner js-file-line">        lineEnd<span class="pl-k">:</span> lineEnd,</td>
      </tr>
      <tr>
        <td id="L3315" class="blob-num js-line-number" data-line-number="3315"></td>
        <td id="LC3315" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3316" class="blob-num js-line-number" data-line-number="3316"></td>
        <td id="LC3316" class="blob-code blob-code-inner js-file-line">          clip.point <span class="pl-k">=</span> pointRing;</td>
      </tr>
      <tr>
        <td id="L3317" class="blob-num js-line-number" data-line-number="3317"></td>
        <td id="LC3317" class="blob-code blob-code-inner js-file-line">          clip.lineStart <span class="pl-k">=</span> ringStart;</td>
      </tr>
      <tr>
        <td id="L3318" class="blob-num js-line-number" data-line-number="3318"></td>
        <td id="LC3318" class="blob-code blob-code-inner js-file-line">          clip.lineEnd <span class="pl-k">=</span> ringEnd;</td>
      </tr>
      <tr>
        <td id="L3319" class="blob-num js-line-number" data-line-number="3319"></td>
        <td id="LC3319" class="blob-code blob-code-inner js-file-line">          segments <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3320" class="blob-num js-line-number" data-line-number="3320"></td>
        <td id="LC3320" class="blob-code blob-code-inner js-file-line">          polygon <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3321" class="blob-num js-line-number" data-line-number="3321"></td>
        <td id="LC3321" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3322" class="blob-num js-line-number" data-line-number="3322"></td>
        <td id="LC3322" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3323" class="blob-num js-line-number" data-line-number="3323"></td>
        <td id="LC3323" class="blob-code blob-code-inner js-file-line">          clip.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L3324" class="blob-num js-line-number" data-line-number="3324"></td>
        <td id="LC3324" class="blob-code blob-code-inner js-file-line">          clip.lineStart <span class="pl-k">=</span> lineStart;</td>
      </tr>
      <tr>
        <td id="L3325" class="blob-num js-line-number" data-line-number="3325"></td>
        <td id="LC3325" class="blob-code blob-code-inner js-file-line">          clip.lineEnd <span class="pl-k">=</span> lineEnd;</td>
      </tr>
      <tr>
        <td id="L3326" class="blob-num js-line-number" data-line-number="3326"></td>
        <td id="LC3326" class="blob-code blob-code-inner js-file-line">          segments <span class="pl-k">=</span> d3.merge(segments);</td>
      </tr>
      <tr>
        <td id="L3327" class="blob-num js-line-number" data-line-number="3327"></td>
        <td id="LC3327" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> clipStartInside <span class="pl-k">=</span> d3_geo_pointInPolygon(rotatedClipStart, polygon);</td>
      </tr>
      <tr>
        <td id="L3328" class="blob-num js-line-number" data-line-number="3328"></td>
        <td id="LC3328" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (segments.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L3329" class="blob-num js-line-number" data-line-number="3329"></td>
        <td id="LC3329" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>polygonStarted) listener.polygonStart(), polygonStarted <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3330" class="blob-num js-line-number" data-line-number="3330"></td>
        <td id="LC3330" class="blob-code blob-code-inner js-file-line">            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);</td>
      </tr>
      <tr>
        <td id="L3331" class="blob-num js-line-number" data-line-number="3331"></td>
        <td id="LC3331" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (clipStartInside) {</td>
      </tr>
      <tr>
        <td id="L3332" class="blob-num js-line-number" data-line-number="3332"></td>
        <td id="LC3332" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>polygonStarted) listener.polygonStart(), polygonStarted <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3333" class="blob-num js-line-number" data-line-number="3333"></td>
        <td id="LC3333" class="blob-code blob-code-inner js-file-line">            listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3334" class="blob-num js-line-number" data-line-number="3334"></td>
        <td id="LC3334" class="blob-code blob-code-inner js-file-line">            interpolate(<span class="pl-c1">null</span>, <span class="pl-c1">null</span>, <span class="pl-c1">1</span>, listener);</td>
      </tr>
      <tr>
        <td id="L3335" class="blob-num js-line-number" data-line-number="3335"></td>
        <td id="LC3335" class="blob-code blob-code-inner js-file-line">            listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3336" class="blob-num js-line-number" data-line-number="3336"></td>
        <td id="LC3336" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3337" class="blob-num js-line-number" data-line-number="3337"></td>
        <td id="LC3337" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (polygonStarted) listener.polygonEnd(), polygonStarted <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3338" class="blob-num js-line-number" data-line-number="3338"></td>
        <td id="LC3338" class="blob-code blob-code-inner js-file-line">          segments <span class="pl-k">=</span> polygon <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3339" class="blob-num js-line-number" data-line-number="3339"></td>
        <td id="LC3339" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3340" class="blob-num js-line-number" data-line-number="3340"></td>
        <td id="LC3340" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">sphere</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3341" class="blob-num js-line-number" data-line-number="3341"></td>
        <td id="LC3341" class="blob-code blob-code-inner js-file-line">          listener.polygonStart();</td>
      </tr>
      <tr>
        <td id="L3342" class="blob-num js-line-number" data-line-number="3342"></td>
        <td id="LC3342" class="blob-code blob-code-inner js-file-line">          listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3343" class="blob-num js-line-number" data-line-number="3343"></td>
        <td id="LC3343" class="blob-code blob-code-inner js-file-line">          interpolate(<span class="pl-c1">null</span>, <span class="pl-c1">null</span>, <span class="pl-c1">1</span>, listener);</td>
      </tr>
      <tr>
        <td id="L3344" class="blob-num js-line-number" data-line-number="3344"></td>
        <td id="LC3344" class="blob-code blob-code-inner js-file-line">          listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3345" class="blob-num js-line-number" data-line-number="3345"></td>
        <td id="LC3345" class="blob-code blob-code-inner js-file-line">          listener.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L3346" class="blob-num js-line-number" data-line-number="3346"></td>
        <td id="LC3346" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3347" class="blob-num js-line-number" data-line-number="3347"></td>
        <td id="LC3347" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L3348" class="blob-num js-line-number" data-line-number="3348"></td>
        <td id="LC3348" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">point</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3349" class="blob-num js-line-number" data-line-number="3349"></td>
        <td id="LC3349" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> point <span class="pl-k">=</span> rotate(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L3350" class="blob-num js-line-number" data-line-number="3350"></td>
        <td id="LC3350" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (pointVisible(Î» <span class="pl-k">=</span> point[<span class="pl-c1">0</span>], Ï <span class="pl-k">=</span> point[<span class="pl-c1">1</span>])) listener.point(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L3351" class="blob-num js-line-number" data-line-number="3351"></td>
        <td id="LC3351" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3352" class="blob-num js-line-number" data-line-number="3352"></td>
        <td id="LC3352" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">pointLine</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3353" class="blob-num js-line-number" data-line-number="3353"></td>
        <td id="LC3353" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> point <span class="pl-k">=</span> rotate(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L3354" class="blob-num js-line-number" data-line-number="3354"></td>
        <td id="LC3354" class="blob-code blob-code-inner js-file-line">        line.point(point[<span class="pl-c1">0</span>], point[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3355" class="blob-num js-line-number" data-line-number="3355"></td>
        <td id="LC3355" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3356" class="blob-num js-line-number" data-line-number="3356"></td>
        <td id="LC3356" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">lineStart</span>() {</td>
      </tr>
      <tr>
        <td id="L3357" class="blob-num js-line-number" data-line-number="3357"></td>
        <td id="LC3357" class="blob-code blob-code-inner js-file-line">        clip.point <span class="pl-k">=</span> pointLine;</td>
      </tr>
      <tr>
        <td id="L3358" class="blob-num js-line-number" data-line-number="3358"></td>
        <td id="LC3358" class="blob-code blob-code-inner js-file-line">        line.lineStart();</td>
      </tr>
      <tr>
        <td id="L3359" class="blob-num js-line-number" data-line-number="3359"></td>
        <td id="LC3359" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3360" class="blob-num js-line-number" data-line-number="3360"></td>
        <td id="LC3360" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">lineEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L3361" class="blob-num js-line-number" data-line-number="3361"></td>
        <td id="LC3361" class="blob-code blob-code-inner js-file-line">        clip.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L3362" class="blob-num js-line-number" data-line-number="3362"></td>
        <td id="LC3362" class="blob-code blob-code-inner js-file-line">        line.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3363" class="blob-num js-line-number" data-line-number="3363"></td>
        <td id="LC3363" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3364" class="blob-num js-line-number" data-line-number="3364"></td>
        <td id="LC3364" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> segments;</td>
      </tr>
      <tr>
        <td id="L3365" class="blob-num js-line-number" data-line-number="3365"></td>
        <td id="LC3365" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> buffer <span class="pl-k">=</span> d3_geo_clipBufferListener(), ringListener <span class="pl-k">=</span> clipLine(buffer), polygonStarted <span class="pl-k">=</span> <span class="pl-c1">false</span>, polygon, ring;</td>
      </tr>
      <tr>
        <td id="L3366" class="blob-num js-line-number" data-line-number="3366"></td>
        <td id="LC3366" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">pointRing</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3367" class="blob-num js-line-number" data-line-number="3367"></td>
        <td id="LC3367" class="blob-code blob-code-inner js-file-line">        ring.<span class="pl-c1">push</span>([ Î», Ï ]);</td>
      </tr>
      <tr>
        <td id="L3368" class="blob-num js-line-number" data-line-number="3368"></td>
        <td id="LC3368" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> point <span class="pl-k">=</span> rotate(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L3369" class="blob-num js-line-number" data-line-number="3369"></td>
        <td id="LC3369" class="blob-code blob-code-inner js-file-line">        ringListener.point(point[<span class="pl-c1">0</span>], point[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3370" class="blob-num js-line-number" data-line-number="3370"></td>
        <td id="LC3370" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3371" class="blob-num js-line-number" data-line-number="3371"></td>
        <td id="LC3371" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">ringStart</span>() {</td>
      </tr>
      <tr>
        <td id="L3372" class="blob-num js-line-number" data-line-number="3372"></td>
        <td id="LC3372" class="blob-code blob-code-inner js-file-line">        ringListener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3373" class="blob-num js-line-number" data-line-number="3373"></td>
        <td id="LC3373" class="blob-code blob-code-inner js-file-line">        ring <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3374" class="blob-num js-line-number" data-line-number="3374"></td>
        <td id="LC3374" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3375" class="blob-num js-line-number" data-line-number="3375"></td>
        <td id="LC3375" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">ringEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L3376" class="blob-num js-line-number" data-line-number="3376"></td>
        <td id="LC3376" class="blob-code blob-code-inner js-file-line">        pointRing(ring[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], ring[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3377" class="blob-num js-line-number" data-line-number="3377"></td>
        <td id="LC3377" class="blob-code blob-code-inner js-file-line">        ringListener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3378" class="blob-num js-line-number" data-line-number="3378"></td>
        <td id="LC3378" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> clean <span class="pl-k">=</span> ringListener.clean(), ringSegments <span class="pl-k">=</span> buffer.buffer(), segment, n <span class="pl-k">=</span> ringSegments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3379" class="blob-num js-line-number" data-line-number="3379"></td>
        <td id="LC3379" class="blob-code blob-code-inner js-file-line">        ring.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L3380" class="blob-num js-line-number" data-line-number="3380"></td>
        <td id="LC3380" class="blob-code blob-code-inner js-file-line">        polygon.<span class="pl-c1">push</span>(ring);</td>
      </tr>
      <tr>
        <td id="L3381" class="blob-num js-line-number" data-line-number="3381"></td>
        <td id="LC3381" class="blob-code blob-code-inner js-file-line">        ring <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3382" class="blob-num js-line-number" data-line-number="3382"></td>
        <td id="LC3382" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>n) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3383" class="blob-num js-line-number" data-line-number="3383"></td>
        <td id="LC3383" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (clean <span class="pl-k">&amp;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L3384" class="blob-num js-line-number" data-line-number="3384"></td>
        <td id="LC3384" class="blob-code blob-code-inner js-file-line">          segment <span class="pl-k">=</span> ringSegments[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3385" class="blob-num js-line-number" data-line-number="3385"></td>
        <td id="LC3385" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> n <span class="pl-k">=</span> segment.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, point;</td>
      </tr>
      <tr>
        <td id="L3386" class="blob-num js-line-number" data-line-number="3386"></td>
        <td id="LC3386" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (n <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3387" class="blob-num js-line-number" data-line-number="3387"></td>
        <td id="LC3387" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>polygonStarted) listener.polygonStart(), polygonStarted <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3388" class="blob-num js-line-number" data-line-number="3388"></td>
        <td id="LC3388" class="blob-code blob-code-inner js-file-line">            listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3389" class="blob-num js-line-number" data-line-number="3389"></td>
        <td id="LC3389" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) listener.point((point <span class="pl-k">=</span> segment[i])[<span class="pl-c1">0</span>], point[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3390" class="blob-num js-line-number" data-line-number="3390"></td>
        <td id="LC3390" class="blob-code blob-code-inner js-file-line">            listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3391" class="blob-num js-line-number" data-line-number="3391"></td>
        <td id="LC3391" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3392" class="blob-num js-line-number" data-line-number="3392"></td>
        <td id="LC3392" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3393" class="blob-num js-line-number" data-line-number="3393"></td>
        <td id="LC3393" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3394" class="blob-num js-line-number" data-line-number="3394"></td>
        <td id="LC3394" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (n <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> clean <span class="pl-k">&amp;</span> <span class="pl-c1">2</span>) ringSegments.<span class="pl-c1">push</span>(ringSegments.<span class="pl-c1">pop</span>().<span class="pl-c1">concat</span>(ringSegments.<span class="pl-c1">shift</span>()));</td>
      </tr>
      <tr>
        <td id="L3395" class="blob-num js-line-number" data-line-number="3395"></td>
        <td id="LC3395" class="blob-code blob-code-inner js-file-line">        segments.<span class="pl-c1">push</span>(ringSegments.filter(d3_geo_clipSegmentLength1));</td>
      </tr>
      <tr>
        <td id="L3396" class="blob-num js-line-number" data-line-number="3396"></td>
        <td id="LC3396" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3397" class="blob-num js-line-number" data-line-number="3397"></td>
        <td id="LC3397" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> clip;</td>
      </tr>
      <tr>
        <td id="L3398" class="blob-num js-line-number" data-line-number="3398"></td>
        <td id="LC3398" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3399" class="blob-num js-line-number" data-line-number="3399"></td>
        <td id="LC3399" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3400" class="blob-num js-line-number" data-line-number="3400"></td>
        <td id="LC3400" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipSegmentLength1</span>(<span class="pl-smi">segment</span>) {</td>
      </tr>
      <tr>
        <td id="L3401" class="blob-num js-line-number" data-line-number="3401"></td>
        <td id="LC3401" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> segment.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3402" class="blob-num js-line-number" data-line-number="3402"></td>
        <td id="LC3402" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3403" class="blob-num js-line-number" data-line-number="3403"></td>
        <td id="LC3403" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipBufferListener</span>() {</td>
      </tr>
      <tr>
        <td id="L3404" class="blob-num js-line-number" data-line-number="3404"></td>
        <td id="LC3404" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lines <span class="pl-k">=</span> [], line;</td>
      </tr>
      <tr>
        <td id="L3405" class="blob-num js-line-number" data-line-number="3405"></td>
        <td id="LC3405" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3406" class="blob-num js-line-number" data-line-number="3406"></td>
        <td id="LC3406" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">lineStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3407" class="blob-num js-line-number" data-line-number="3407"></td>
        <td id="LC3407" class="blob-code blob-code-inner js-file-line">        lines.<span class="pl-c1">push</span>(line <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L3408" class="blob-num js-line-number" data-line-number="3408"></td>
        <td id="LC3408" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3409" class="blob-num js-line-number" data-line-number="3409"></td>
        <td id="LC3409" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">point</span>: <span class="pl-k">function</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3410" class="blob-num js-line-number" data-line-number="3410"></td>
        <td id="LC3410" class="blob-code blob-code-inner js-file-line">        line.<span class="pl-c1">push</span>([ Î», Ï ]);</td>
      </tr>
      <tr>
        <td id="L3411" class="blob-num js-line-number" data-line-number="3411"></td>
        <td id="LC3411" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3412" class="blob-num js-line-number" data-line-number="3412"></td>
        <td id="LC3412" class="blob-code blob-code-inner js-file-line">      lineEnd<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L3413" class="blob-num js-line-number" data-line-number="3413"></td>
        <td id="LC3413" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">buffer</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3414" class="blob-num js-line-number" data-line-number="3414"></td>
        <td id="LC3414" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> buffer <span class="pl-k">=</span> lines;</td>
      </tr>
      <tr>
        <td id="L3415" class="blob-num js-line-number" data-line-number="3415"></td>
        <td id="LC3415" class="blob-code blob-code-inner js-file-line">        lines <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3416" class="blob-num js-line-number" data-line-number="3416"></td>
        <td id="LC3416" class="blob-code blob-code-inner js-file-line">        line <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3417" class="blob-num js-line-number" data-line-number="3417"></td>
        <td id="LC3417" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> buffer;</td>
      </tr>
      <tr>
        <td id="L3418" class="blob-num js-line-number" data-line-number="3418"></td>
        <td id="LC3418" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3419" class="blob-num js-line-number" data-line-number="3419"></td>
        <td id="LC3419" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">rejoin</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3420" class="blob-num js-line-number" data-line-number="3420"></td>
        <td id="LC3420" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (lines.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) lines.<span class="pl-c1">push</span>(lines.<span class="pl-c1">pop</span>().<span class="pl-c1">concat</span>(lines.<span class="pl-c1">shift</span>()));</td>
      </tr>
      <tr>
        <td id="L3421" class="blob-num js-line-number" data-line-number="3421"></td>
        <td id="LC3421" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3422" class="blob-num js-line-number" data-line-number="3422"></td>
        <td id="LC3422" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3423" class="blob-num js-line-number" data-line-number="3423"></td>
        <td id="LC3423" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3424" class="blob-num js-line-number" data-line-number="3424"></td>
        <td id="LC3424" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipSort</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L3425" class="blob-num js-line-number" data-line-number="3425"></td>
        <td id="LC3425" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ((a <span class="pl-k">=</span> a.<span class="pl-c1">x</span>)[<span class="pl-c1">0</span>] <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> a[<span class="pl-c1">1</span>] <span class="pl-k">-</span> halfÏ <span class="pl-k">-</span> Îµ <span class="pl-k">:</span> halfÏ <span class="pl-k">-</span> a[<span class="pl-c1">1</span>]) <span class="pl-k">-</span> ((b <span class="pl-k">=</span> b.<span class="pl-c1">x</span>)[<span class="pl-c1">0</span>] <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> b[<span class="pl-c1">1</span>] <span class="pl-k">-</span> halfÏ <span class="pl-k">-</span> Îµ <span class="pl-k">:</span> halfÏ <span class="pl-k">-</span> b[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3426" class="blob-num js-line-number" data-line-number="3426"></td>
        <td id="LC3426" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3427" class="blob-num js-line-number" data-line-number="3427"></td>
        <td id="LC3427" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_clipAntimeridian <span class="pl-k">=</span> d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ <span class="pl-k">-</span>Ï, <span class="pl-k">-</span>Ï / <span class="pl-c1">2</span> ]);</td>
      </tr>
      <tr>
        <td id="L3428" class="blob-num js-line-number" data-line-number="3428"></td>
        <td id="LC3428" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipAntimeridianLine</span>(<span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L3429" class="blob-num js-line-number" data-line-number="3429"></td>
        <td id="LC3429" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">NaN</span>, Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">NaN</span>, sÎ»<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">NaN</span>, clean;</td>
      </tr>
      <tr>
        <td id="L3430" class="blob-num js-line-number" data-line-number="3430"></td>
        <td id="LC3430" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3431" class="blob-num js-line-number" data-line-number="3431"></td>
        <td id="LC3431" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">lineStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3432" class="blob-num js-line-number" data-line-number="3432"></td>
        <td id="LC3432" class="blob-code blob-code-inner js-file-line">        listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3433" class="blob-num js-line-number" data-line-number="3433"></td>
        <td id="LC3433" class="blob-code blob-code-inner js-file-line">        clean <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3434" class="blob-num js-line-number" data-line-number="3434"></td>
        <td id="LC3434" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3435" class="blob-num js-line-number" data-line-number="3435"></td>
        <td id="LC3435" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">point</span>: <span class="pl-k">function</span>(<span class="pl-smi">Î»1</span>, <span class="pl-smi">Ï1</span>) {</td>
      </tr>
      <tr>
        <td id="L3436" class="blob-num js-line-number" data-line-number="3436"></td>
        <td id="LC3436" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> sÎ»<span class="pl-c1">1</span> <span class="pl-k">=</span> Î»<span class="pl-c1">1</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> Ï <span class="pl-k">:</span> <span class="pl-k">-</span>Ï, dÎ» <span class="pl-k">=</span> <span class="pl-c1">abs</span>(Î»<span class="pl-c1">1</span> <span class="pl-k">-</span> Î»<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3437" class="blob-num js-line-number" data-line-number="3437"></td>
        <td id="LC3437" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(dÎ» <span class="pl-k">-</span> Ï) <span class="pl-k">&lt;</span> Îµ) {</td>
      </tr>
      <tr>
        <td id="L3438" class="blob-num js-line-number" data-line-number="3438"></td>
        <td id="LC3438" class="blob-code blob-code-inner js-file-line">          listener.point(Î»<span class="pl-c1">0</span>, Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> (Ï<span class="pl-c1">0</span> <span class="pl-k">+</span> Ï<span class="pl-c1">1</span>) / <span class="pl-c1">2</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> halfÏ <span class="pl-k">:</span> <span class="pl-k">-</span>halfÏ);</td>
      </tr>
      <tr>
        <td id="L3439" class="blob-num js-line-number" data-line-number="3439"></td>
        <td id="LC3439" class="blob-code blob-code-inner js-file-line">          listener.point(sÎ»<span class="pl-c1">0</span>, Ï<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3440" class="blob-num js-line-number" data-line-number="3440"></td>
        <td id="LC3440" class="blob-code blob-code-inner js-file-line">          listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3441" class="blob-num js-line-number" data-line-number="3441"></td>
        <td id="LC3441" class="blob-code blob-code-inner js-file-line">          listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3442" class="blob-num js-line-number" data-line-number="3442"></td>
        <td id="LC3442" class="blob-code blob-code-inner js-file-line">          listener.point(sÎ»<span class="pl-c1">1</span>, Ï<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3443" class="blob-num js-line-number" data-line-number="3443"></td>
        <td id="LC3443" class="blob-code blob-code-inner js-file-line">          listener.point(Î»<span class="pl-c1">1</span>, Ï<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3444" class="blob-num js-line-number" data-line-number="3444"></td>
        <td id="LC3444" class="blob-code blob-code-inner js-file-line">          clean <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3445" class="blob-num js-line-number" data-line-number="3445"></td>
        <td id="LC3445" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (sÎ»<span class="pl-c1">0</span> <span class="pl-k">!==</span> sÎ»<span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> dÎ» <span class="pl-k">&gt;=</span> Ï) {</td>
      </tr>
      <tr>
        <td id="L3446" class="blob-num js-line-number" data-line-number="3446"></td>
        <td id="LC3446" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(Î»<span class="pl-c1">0</span> <span class="pl-k">-</span> sÎ»<span class="pl-c1">0</span>) <span class="pl-k">&lt;</span> Îµ) Î»<span class="pl-c1">0</span> <span class="pl-k">-=</span> sÎ»<span class="pl-c1">0</span> <span class="pl-k">*</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L3447" class="blob-num js-line-number" data-line-number="3447"></td>
        <td id="LC3447" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(Î»<span class="pl-c1">1</span> <span class="pl-k">-</span> sÎ»<span class="pl-c1">1</span>) <span class="pl-k">&lt;</span> Îµ) Î»<span class="pl-c1">1</span> <span class="pl-k">-=</span> sÎ»<span class="pl-c1">1</span> <span class="pl-k">*</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L3448" class="blob-num js-line-number" data-line-number="3448"></td>
        <td id="LC3448" class="blob-code blob-code-inner js-file-line">          Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> d3_geo_clipAntimeridianIntersect(Î»<span class="pl-c1">0</span>, Ï<span class="pl-c1">0</span>, Î»<span class="pl-c1">1</span>, Ï<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3449" class="blob-num js-line-number" data-line-number="3449"></td>
        <td id="LC3449" class="blob-code blob-code-inner js-file-line">          listener.point(sÎ»<span class="pl-c1">0</span>, Ï<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3450" class="blob-num js-line-number" data-line-number="3450"></td>
        <td id="LC3450" class="blob-code blob-code-inner js-file-line">          listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3451" class="blob-num js-line-number" data-line-number="3451"></td>
        <td id="LC3451" class="blob-code blob-code-inner js-file-line">          listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3452" class="blob-num js-line-number" data-line-number="3452"></td>
        <td id="LC3452" class="blob-code blob-code-inner js-file-line">          listener.point(sÎ»<span class="pl-c1">1</span>, Ï<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3453" class="blob-num js-line-number" data-line-number="3453"></td>
        <td id="LC3453" class="blob-code blob-code-inner js-file-line">          clean <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3454" class="blob-num js-line-number" data-line-number="3454"></td>
        <td id="LC3454" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3455" class="blob-num js-line-number" data-line-number="3455"></td>
        <td id="LC3455" class="blob-code blob-code-inner js-file-line">        listener.point(Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î»<span class="pl-c1">1</span>, Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> Ï<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3456" class="blob-num js-line-number" data-line-number="3456"></td>
        <td id="LC3456" class="blob-code blob-code-inner js-file-line">        sÎ»<span class="pl-c1">0</span> <span class="pl-k">=</span> sÎ»<span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3457" class="blob-num js-line-number" data-line-number="3457"></td>
        <td id="LC3457" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3458" class="blob-num js-line-number" data-line-number="3458"></td>
        <td id="LC3458" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">lineEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3459" class="blob-num js-line-number" data-line-number="3459"></td>
        <td id="LC3459" class="blob-code blob-code-inner js-file-line">        listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3460" class="blob-num js-line-number" data-line-number="3460"></td>
        <td id="LC3460" class="blob-code blob-code-inner js-file-line">        Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L3461" class="blob-num js-line-number" data-line-number="3461"></td>
        <td id="LC3461" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3462" class="blob-num js-line-number" data-line-number="3462"></td>
        <td id="LC3462" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">clean</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3463" class="blob-num js-line-number" data-line-number="3463"></td>
        <td id="LC3463" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> clean;</td>
      </tr>
      <tr>
        <td id="L3464" class="blob-num js-line-number" data-line-number="3464"></td>
        <td id="LC3464" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3465" class="blob-num js-line-number" data-line-number="3465"></td>
        <td id="LC3465" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3466" class="blob-num js-line-number" data-line-number="3466"></td>
        <td id="LC3466" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3467" class="blob-num js-line-number" data-line-number="3467"></td>
        <td id="LC3467" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipAntimeridianIntersect</span>(<span class="pl-smi">Î»0</span>, <span class="pl-smi">Ï0</span>, <span class="pl-smi">Î»1</span>, <span class="pl-smi">Ï1</span>) {</td>
      </tr>
      <tr>
        <td id="L3468" class="blob-num js-line-number" data-line-number="3468"></td>
        <td id="LC3468" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cosÏ<span class="pl-c1">0</span>, cosÏ<span class="pl-c1">1</span>, sinÎ»0_Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»<span class="pl-c1">0</span> <span class="pl-k">-</span> Î»<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3469" class="blob-num js-line-number" data-line-number="3469"></td>
        <td id="LC3469" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">abs</span>(sinÎ»0_Î»<span class="pl-c1">1</span>) <span class="pl-k">&gt;</span> Îµ <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan</span>((<span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">0</span>) <span class="pl-k">*</span> (cosÏ<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">1</span>)) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»<span class="pl-c1">1</span>) <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">1</span>) <span class="pl-k">*</span> (cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">0</span>)) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»<span class="pl-c1">0</span>)) / (cosÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> cosÏ<span class="pl-c1">1</span> <span class="pl-k">*</span> sinÎ»0_Î»<span class="pl-c1">1</span>)) <span class="pl-k">:</span> (Ï<span class="pl-c1">0</span> <span class="pl-k">+</span> Ï<span class="pl-c1">1</span>) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3470" class="blob-num js-line-number" data-line-number="3470"></td>
        <td id="LC3470" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3471" class="blob-num js-line-number" data-line-number="3471"></td>
        <td id="LC3471" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipAntimeridianInterpolate</span>(<span class="pl-smi">from</span>, <span class="pl-smi">to</span>, <span class="pl-smi">direction</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L3472" class="blob-num js-line-number" data-line-number="3472"></td>
        <td id="LC3472" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Ï;</td>
      </tr>
      <tr>
        <td id="L3473" class="blob-num js-line-number" data-line-number="3473"></td>
        <td id="LC3473" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">from</span> <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L3474" class="blob-num js-line-number" data-line-number="3474"></td>
        <td id="LC3474" class="blob-code blob-code-inner js-file-line">      Ï <span class="pl-k">=</span> direction <span class="pl-k">*</span> halfÏ;</td>
      </tr>
      <tr>
        <td id="L3475" class="blob-num js-line-number" data-line-number="3475"></td>
        <td id="LC3475" class="blob-code blob-code-inner js-file-line">      listener.point(<span class="pl-k">-</span>Ï, Ï);</td>
      </tr>
      <tr>
        <td id="L3476" class="blob-num js-line-number" data-line-number="3476"></td>
        <td id="LC3476" class="blob-code blob-code-inner js-file-line">      listener.point(<span class="pl-c1">0</span>, Ï);</td>
      </tr>
      <tr>
        <td id="L3477" class="blob-num js-line-number" data-line-number="3477"></td>
        <td id="LC3477" class="blob-code blob-code-inner js-file-line">      listener.point(Ï, Ï);</td>
      </tr>
      <tr>
        <td id="L3478" class="blob-num js-line-number" data-line-number="3478"></td>
        <td id="LC3478" class="blob-code blob-code-inner js-file-line">      listener.point(Ï, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3479" class="blob-num js-line-number" data-line-number="3479"></td>
        <td id="LC3479" class="blob-code blob-code-inner js-file-line">      listener.point(Ï, <span class="pl-k">-</span>Ï);</td>
      </tr>
      <tr>
        <td id="L3480" class="blob-num js-line-number" data-line-number="3480"></td>
        <td id="LC3480" class="blob-code blob-code-inner js-file-line">      listener.point(<span class="pl-c1">0</span>, <span class="pl-k">-</span>Ï);</td>
      </tr>
      <tr>
        <td id="L3481" class="blob-num js-line-number" data-line-number="3481"></td>
        <td id="LC3481" class="blob-code blob-code-inner js-file-line">      listener.point(<span class="pl-k">-</span>Ï, <span class="pl-k">-</span>Ï);</td>
      </tr>
      <tr>
        <td id="L3482" class="blob-num js-line-number" data-line-number="3482"></td>
        <td id="LC3482" class="blob-code blob-code-inner js-file-line">      listener.point(<span class="pl-k">-</span>Ï, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3483" class="blob-num js-line-number" data-line-number="3483"></td>
        <td id="LC3483" class="blob-code blob-code-inner js-file-line">      listener.point(<span class="pl-k">-</span>Ï, Ï);</td>
      </tr>
      <tr>
        <td id="L3484" class="blob-num js-line-number" data-line-number="3484"></td>
        <td id="LC3484" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(<span class="pl-k">from</span>[<span class="pl-c1">0</span>] <span class="pl-k">-</span> to[<span class="pl-c1">0</span>]) <span class="pl-k">&gt;</span> Îµ) {</td>
      </tr>
      <tr>
        <td id="L3485" class="blob-num js-line-number" data-line-number="3485"></td>
        <td id="LC3485" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-k">from</span>[<span class="pl-c1">0</span>] <span class="pl-k">&lt;</span> to[<span class="pl-c1">0</span>] <span class="pl-k">?</span> Ï <span class="pl-k">:</span> <span class="pl-k">-</span>Ï;</td>
      </tr>
      <tr>
        <td id="L3486" class="blob-num js-line-number" data-line-number="3486"></td>
        <td id="LC3486" class="blob-code blob-code-inner js-file-line">      Ï <span class="pl-k">=</span> direction <span class="pl-k">*</span> s / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3487" class="blob-num js-line-number" data-line-number="3487"></td>
        <td id="LC3487" class="blob-code blob-code-inner js-file-line">      listener.point(<span class="pl-k">-</span>s, Ï);</td>
      </tr>
      <tr>
        <td id="L3488" class="blob-num js-line-number" data-line-number="3488"></td>
        <td id="LC3488" class="blob-code blob-code-inner js-file-line">      listener.point(<span class="pl-c1">0</span>, Ï);</td>
      </tr>
      <tr>
        <td id="L3489" class="blob-num js-line-number" data-line-number="3489"></td>
        <td id="LC3489" class="blob-code blob-code-inner js-file-line">      listener.point(s, Ï);</td>
      </tr>
      <tr>
        <td id="L3490" class="blob-num js-line-number" data-line-number="3490"></td>
        <td id="LC3490" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3491" class="blob-num js-line-number" data-line-number="3491"></td>
        <td id="LC3491" class="blob-code blob-code-inner js-file-line">      listener.point(to[<span class="pl-c1">0</span>], to[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3492" class="blob-num js-line-number" data-line-number="3492"></td>
        <td id="LC3492" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3493" class="blob-num js-line-number" data-line-number="3493"></td>
        <td id="LC3493" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3494" class="blob-num js-line-number" data-line-number="3494"></td>
        <td id="LC3494" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pointInPolygon</span>(<span class="pl-smi">point</span>, <span class="pl-smi">polygon</span>) {</td>
      </tr>
      <tr>
        <td id="L3495" class="blob-num js-line-number" data-line-number="3495"></td>
        <td id="LC3495" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> meridian <span class="pl-k">=</span> point[<span class="pl-c1">0</span>], parallel <span class="pl-k">=</span> point[<span class="pl-c1">1</span>], meridianNormal <span class="pl-k">=</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(meridian), <span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(meridian), <span class="pl-c1">0</span> ], polarAngle <span class="pl-k">=</span> <span class="pl-c1">0</span>, winding <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3496" class="blob-num js-line-number" data-line-number="3496"></td>
        <td id="LC3496" class="blob-code blob-code-inner js-file-line">    d3_geo_areaRingSum.<span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L3497" class="blob-num js-line-number" data-line-number="3497"></td>
        <td id="LC3497" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> polygon.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3498" class="blob-num js-line-number" data-line-number="3498"></td>
        <td id="LC3498" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> ring <span class="pl-k">=</span> polygon[i], m <span class="pl-k">=</span> ring.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3499" class="blob-num js-line-number" data-line-number="3499"></td>
        <td id="LC3499" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>m) <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L3500" class="blob-num js-line-number" data-line-number="3500"></td>
        <td id="LC3500" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> point0 <span class="pl-k">=</span> ring[<span class="pl-c1">0</span>], Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> point0[<span class="pl-c1">0</span>], Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> point0[<span class="pl-c1">1</span>] / <span class="pl-c1">2</span> <span class="pl-k">+</span> Ï / <span class="pl-c1">4</span>, sinÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">0</span>), cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">0</span>), j <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3501" class="blob-num js-line-number" data-line-number="3501"></td>
        <td id="LC3501" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L3502" class="blob-num js-line-number" data-line-number="3502"></td>
        <td id="LC3502" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (j <span class="pl-k">===</span> m) j <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3503" class="blob-num js-line-number" data-line-number="3503"></td>
        <td id="LC3503" class="blob-code blob-code-inner js-file-line">        point <span class="pl-k">=</span> ring[j];</td>
      </tr>
      <tr>
        <td id="L3504" class="blob-num js-line-number" data-line-number="3504"></td>
        <td id="LC3504" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> Î» <span class="pl-k">=</span> point[<span class="pl-c1">0</span>], Ï <span class="pl-k">=</span> point[<span class="pl-c1">1</span>] / <span class="pl-c1">2</span> <span class="pl-k">+</span> Ï / <span class="pl-c1">4</span>, sinÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï), cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï), dÎ» <span class="pl-k">=</span> Î» <span class="pl-k">-</span> Î»<span class="pl-c1">0</span>, sdÎ» <span class="pl-k">=</span> dÎ» <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, adÎ» <span class="pl-k">=</span> sdÎ» <span class="pl-k">*</span> dÎ», antimeridian <span class="pl-k">=</span> adÎ» <span class="pl-k">&gt;</span> Ï, k <span class="pl-k">=</span> sinÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> sinÏ;</td>
      </tr>
      <tr>
        <td id="L3505" class="blob-num js-line-number" data-line-number="3505"></td>
        <td id="LC3505" class="blob-code blob-code-inner js-file-line">        d3_geo_areaRingSum.<span class="pl-c1">add</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(k <span class="pl-k">*</span> sdÎ» <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(adÎ»), cosÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> cosÏ <span class="pl-k">+</span> k <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(adÎ»)));</td>
      </tr>
      <tr>
        <td id="L3506" class="blob-num js-line-number" data-line-number="3506"></td>
        <td id="LC3506" class="blob-code blob-code-inner js-file-line">        polarAngle <span class="pl-k">+=</span> antimeridian <span class="pl-k">?</span> dÎ» <span class="pl-k">+</span> sdÎ» <span class="pl-k">*</span> Ï <span class="pl-k">:</span> dÎ»;</td>
      </tr>
      <tr>
        <td id="L3507" class="blob-num js-line-number" data-line-number="3507"></td>
        <td id="LC3507" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (antimeridian <span class="pl-k">^</span> Î»<span class="pl-c1">0</span> <span class="pl-k">&gt;=</span> meridian <span class="pl-k">^</span> Î» <span class="pl-k">&gt;=</span> meridian) {</td>
      </tr>
      <tr>
        <td id="L3508" class="blob-num js-line-number" data-line-number="3508"></td>
        <td id="LC3508" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> arc <span class="pl-k">=</span> d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));</td>
      </tr>
      <tr>
        <td id="L3509" class="blob-num js-line-number" data-line-number="3509"></td>
        <td id="LC3509" class="blob-code blob-code-inner js-file-line">          d3_geo_cartesianNormalize(arc);</td>
      </tr>
      <tr>
        <td id="L3510" class="blob-num js-line-number" data-line-number="3510"></td>
        <td id="LC3510" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> intersection <span class="pl-k">=</span> d3_geo_cartesianCross(meridianNormal, arc);</td>
      </tr>
      <tr>
        <td id="L3511" class="blob-num js-line-number" data-line-number="3511"></td>
        <td id="LC3511" class="blob-code blob-code-inner js-file-line">          d3_geo_cartesianNormalize(intersection);</td>
      </tr>
      <tr>
        <td id="L3512" class="blob-num js-line-number" data-line-number="3512"></td>
        <td id="LC3512" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> Ïarc <span class="pl-k">=</span> (antimeridian <span class="pl-k">^</span> dÎ» <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> d3_asin(intersection[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L3513" class="blob-num js-line-number" data-line-number="3513"></td>
        <td id="LC3513" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (parallel <span class="pl-k">&gt;</span> Ïarc <span class="pl-k">||</span> parallel <span class="pl-k">===</span> Ïarc <span class="pl-k">&amp;&amp;</span> (arc[<span class="pl-c1">0</span>] <span class="pl-k">||</span> arc[<span class="pl-c1">1</span>])) {</td>
      </tr>
      <tr>
        <td id="L3514" class="blob-num js-line-number" data-line-number="3514"></td>
        <td id="LC3514" class="blob-code blob-code-inner js-file-line">            winding <span class="pl-k">+=</span> antimeridian <span class="pl-k">^</span> dÎ» <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3515" class="blob-num js-line-number" data-line-number="3515"></td>
        <td id="LC3515" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3516" class="blob-num js-line-number" data-line-number="3516"></td>
        <td id="LC3516" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3517" class="blob-num js-line-number" data-line-number="3517"></td>
        <td id="LC3517" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>j<span class="pl-k">++</span>) <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3518" class="blob-num js-line-number" data-line-number="3518"></td>
        <td id="LC3518" class="blob-code blob-code-inner js-file-line">        Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î», sinÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> sinÏ, cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> cosÏ, point0 <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L3519" class="blob-num js-line-number" data-line-number="3519"></td>
        <td id="LC3519" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3520" class="blob-num js-line-number" data-line-number="3520"></td>
        <td id="LC3520" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3521" class="blob-num js-line-number" data-line-number="3521"></td>
        <td id="LC3521" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (polarAngle <span class="pl-k">&lt;</span> <span class="pl-k">-</span>Îµ <span class="pl-k">||</span> polarAngle <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> d3_geo_areaRingSum <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">^</span> winding <span class="pl-k">&amp;</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3522" class="blob-num js-line-number" data-line-number="3522"></td>
        <td id="LC3522" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3523" class="blob-num js-line-number" data-line-number="3523"></td>
        <td id="LC3523" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipCircle</span>(<span class="pl-smi">radius</span>) {</td>
      </tr>
      <tr>
        <td id="L3524" class="blob-num js-line-number" data-line-number="3524"></td>
        <td id="LC3524" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cr <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(radius), smallRadius <span class="pl-k">=</span> cr <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>, notHemisphere <span class="pl-k">=</span> <span class="pl-c1">abs</span>(cr) <span class="pl-k">&gt;</span> Îµ, interpolate <span class="pl-k">=</span> d3_geo_circleInterpolate(radius, <span class="pl-c1">6</span> <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L3525" class="blob-num js-line-number" data-line-number="3525"></td>
        <td id="LC3525" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_clip(visible, clipLine, interpolate, smallRadius <span class="pl-k">?</span> [ <span class="pl-c1">0</span>, <span class="pl-k">-</span>radius ] <span class="pl-k">:</span> [ <span class="pl-k">-</span>Ï, radius <span class="pl-k">-</span> Ï ]);</td>
      </tr>
      <tr>
        <td id="L3526" class="blob-num js-line-number" data-line-number="3526"></td>
        <td id="LC3526" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">visible</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3527" class="blob-num js-line-number" data-line-number="3527"></td>
        <td id="LC3527" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î») <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï) <span class="pl-k">&gt;</span> cr;</td>
      </tr>
      <tr>
        <td id="L3528" class="blob-num js-line-number" data-line-number="3528"></td>
        <td id="LC3528" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3529" class="blob-num js-line-number" data-line-number="3529"></td>
        <td id="LC3529" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">clipLine</span>(<span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L3530" class="blob-num js-line-number" data-line-number="3530"></td>
        <td id="LC3530" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> point0, c0, v0, v00, clean;</td>
      </tr>
      <tr>
        <td id="L3531" class="blob-num js-line-number" data-line-number="3531"></td>
        <td id="LC3531" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3532" class="blob-num js-line-number" data-line-number="3532"></td>
        <td id="LC3532" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">lineStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3533" class="blob-num js-line-number" data-line-number="3533"></td>
        <td id="LC3533" class="blob-code blob-code-inner js-file-line">          v00 <span class="pl-k">=</span> v0 <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3534" class="blob-num js-line-number" data-line-number="3534"></td>
        <td id="LC3534" class="blob-code blob-code-inner js-file-line">          clean <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3535" class="blob-num js-line-number" data-line-number="3535"></td>
        <td id="LC3535" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3536" class="blob-num js-line-number" data-line-number="3536"></td>
        <td id="LC3536" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">point</span>: <span class="pl-k">function</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3537" class="blob-num js-line-number" data-line-number="3537"></td>
        <td id="LC3537" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> point1 <span class="pl-k">=</span> [ Î», Ï ], point2, v <span class="pl-k">=</span> visible(Î», Ï), c <span class="pl-k">=</span> smallRadius <span class="pl-k">?</span> v <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> code(Î», Ï) <span class="pl-k">:</span> v <span class="pl-k">?</span> code(Î» <span class="pl-k">+</span> (Î» <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> Ï <span class="pl-k">:</span> <span class="pl-k">-</span>Ï), Ï) <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3538" class="blob-num js-line-number" data-line-number="3538"></td>
        <td id="LC3538" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>point0 <span class="pl-k">&amp;&amp;</span> (v00 <span class="pl-k">=</span> v0 <span class="pl-k">=</span> v)) listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3539" class="blob-num js-line-number" data-line-number="3539"></td>
        <td id="LC3539" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (v <span class="pl-k">!==</span> v0) {</td>
      </tr>
      <tr>
        <td id="L3540" class="blob-num js-line-number" data-line-number="3540"></td>
        <td id="LC3540" class="blob-code blob-code-inner js-file-line">            point2 <span class="pl-k">=</span> intersect(point0, point1);</td>
      </tr>
      <tr>
        <td id="L3541" class="blob-num js-line-number" data-line-number="3541"></td>
        <td id="LC3541" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (d3_geo_sphericalEqual(point0, point2) <span class="pl-k">||</span> d3_geo_sphericalEqual(point1, point2)) {</td>
      </tr>
      <tr>
        <td id="L3542" class="blob-num js-line-number" data-line-number="3542"></td>
        <td id="LC3542" class="blob-code blob-code-inner js-file-line">              point1[<span class="pl-c1">0</span>] <span class="pl-k">+=</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L3543" class="blob-num js-line-number" data-line-number="3543"></td>
        <td id="LC3543" class="blob-code blob-code-inner js-file-line">              point1[<span class="pl-c1">1</span>] <span class="pl-k">+=</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L3544" class="blob-num js-line-number" data-line-number="3544"></td>
        <td id="LC3544" class="blob-code blob-code-inner js-file-line">              v <span class="pl-k">=</span> visible(point1[<span class="pl-c1">0</span>], point1[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3545" class="blob-num js-line-number" data-line-number="3545"></td>
        <td id="LC3545" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3546" class="blob-num js-line-number" data-line-number="3546"></td>
        <td id="LC3546" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3547" class="blob-num js-line-number" data-line-number="3547"></td>
        <td id="LC3547" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (v <span class="pl-k">!==</span> v0) {</td>
      </tr>
      <tr>
        <td id="L3548" class="blob-num js-line-number" data-line-number="3548"></td>
        <td id="LC3548" class="blob-code blob-code-inner js-file-line">            clean <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3549" class="blob-num js-line-number" data-line-number="3549"></td>
        <td id="LC3549" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (v) {</td>
      </tr>
      <tr>
        <td id="L3550" class="blob-num js-line-number" data-line-number="3550"></td>
        <td id="LC3550" class="blob-code blob-code-inner js-file-line">              listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3551" class="blob-num js-line-number" data-line-number="3551"></td>
        <td id="LC3551" class="blob-code blob-code-inner js-file-line">              point2 <span class="pl-k">=</span> intersect(point1, point0);</td>
      </tr>
      <tr>
        <td id="L3552" class="blob-num js-line-number" data-line-number="3552"></td>
        <td id="LC3552" class="blob-code blob-code-inner js-file-line">              listener.point(point2[<span class="pl-c1">0</span>], point2[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3553" class="blob-num js-line-number" data-line-number="3553"></td>
        <td id="LC3553" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3554" class="blob-num js-line-number" data-line-number="3554"></td>
        <td id="LC3554" class="blob-code blob-code-inner js-file-line">              point2 <span class="pl-k">=</span> intersect(point0, point1);</td>
      </tr>
      <tr>
        <td id="L3555" class="blob-num js-line-number" data-line-number="3555"></td>
        <td id="LC3555" class="blob-code blob-code-inner js-file-line">              listener.point(point2[<span class="pl-c1">0</span>], point2[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3556" class="blob-num js-line-number" data-line-number="3556"></td>
        <td id="LC3556" class="blob-code blob-code-inner js-file-line">              listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3557" class="blob-num js-line-number" data-line-number="3557"></td>
        <td id="LC3557" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3558" class="blob-num js-line-number" data-line-number="3558"></td>
        <td id="LC3558" class="blob-code blob-code-inner js-file-line">            point0 <span class="pl-k">=</span> point2;</td>
      </tr>
      <tr>
        <td id="L3559" class="blob-num js-line-number" data-line-number="3559"></td>
        <td id="LC3559" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (notHemisphere <span class="pl-k">&amp;&amp;</span> point0 <span class="pl-k">&amp;&amp;</span> smallRadius <span class="pl-k">^</span> v) {</td>
      </tr>
      <tr>
        <td id="L3560" class="blob-num js-line-number" data-line-number="3560"></td>
        <td id="LC3560" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> t;</td>
      </tr>
      <tr>
        <td id="L3561" class="blob-num js-line-number" data-line-number="3561"></td>
        <td id="LC3561" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>(c <span class="pl-k">&amp;</span> c0) <span class="pl-k">&amp;&amp;</span> (t <span class="pl-k">=</span> intersect(point1, point0, <span class="pl-c1">true</span>))) {</td>
      </tr>
      <tr>
        <td id="L3562" class="blob-num js-line-number" data-line-number="3562"></td>
        <td id="LC3562" class="blob-code blob-code-inner js-file-line">              clean <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3563" class="blob-num js-line-number" data-line-number="3563"></td>
        <td id="LC3563" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (smallRadius) {</td>
      </tr>
      <tr>
        <td id="L3564" class="blob-num js-line-number" data-line-number="3564"></td>
        <td id="LC3564" class="blob-code blob-code-inner js-file-line">                listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3565" class="blob-num js-line-number" data-line-number="3565"></td>
        <td id="LC3565" class="blob-code blob-code-inner js-file-line">                listener.point(t[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], t[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3566" class="blob-num js-line-number" data-line-number="3566"></td>
        <td id="LC3566" class="blob-code blob-code-inner js-file-line">                listener.point(t[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], t[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3567" class="blob-num js-line-number" data-line-number="3567"></td>
        <td id="LC3567" class="blob-code blob-code-inner js-file-line">                listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3568" class="blob-num js-line-number" data-line-number="3568"></td>
        <td id="LC3568" class="blob-code blob-code-inner js-file-line">              } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3569" class="blob-num js-line-number" data-line-number="3569"></td>
        <td id="LC3569" class="blob-code blob-code-inner js-file-line">                listener.point(t[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], t[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3570" class="blob-num js-line-number" data-line-number="3570"></td>
        <td id="LC3570" class="blob-code blob-code-inner js-file-line">                listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3571" class="blob-num js-line-number" data-line-number="3571"></td>
        <td id="LC3571" class="blob-code blob-code-inner js-file-line">                listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3572" class="blob-num js-line-number" data-line-number="3572"></td>
        <td id="LC3572" class="blob-code blob-code-inner js-file-line">                listener.point(t[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], t[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3573" class="blob-num js-line-number" data-line-number="3573"></td>
        <td id="LC3573" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L3574" class="blob-num js-line-number" data-line-number="3574"></td>
        <td id="LC3574" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3575" class="blob-num js-line-number" data-line-number="3575"></td>
        <td id="LC3575" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3576" class="blob-num js-line-number" data-line-number="3576"></td>
        <td id="LC3576" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (v <span class="pl-k">&amp;&amp;</span> (<span class="pl-k">!</span>point0 <span class="pl-k">||</span> <span class="pl-k">!</span>d3_geo_sphericalEqual(point0, point1))) {</td>
      </tr>
      <tr>
        <td id="L3577" class="blob-num js-line-number" data-line-number="3577"></td>
        <td id="LC3577" class="blob-code blob-code-inner js-file-line">            listener.point(point1[<span class="pl-c1">0</span>], point1[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3578" class="blob-num js-line-number" data-line-number="3578"></td>
        <td id="LC3578" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3579" class="blob-num js-line-number" data-line-number="3579"></td>
        <td id="LC3579" class="blob-code blob-code-inner js-file-line">          point0 <span class="pl-k">=</span> point1, v0 <span class="pl-k">=</span> v, c0 <span class="pl-k">=</span> c;</td>
      </tr>
      <tr>
        <td id="L3580" class="blob-num js-line-number" data-line-number="3580"></td>
        <td id="LC3580" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3581" class="blob-num js-line-number" data-line-number="3581"></td>
        <td id="LC3581" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">lineEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3582" class="blob-num js-line-number" data-line-number="3582"></td>
        <td id="LC3582" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (v0) listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3583" class="blob-num js-line-number" data-line-number="3583"></td>
        <td id="LC3583" class="blob-code blob-code-inner js-file-line">          point0 <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3584" class="blob-num js-line-number" data-line-number="3584"></td>
        <td id="LC3584" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3585" class="blob-num js-line-number" data-line-number="3585"></td>
        <td id="LC3585" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">clean</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3586" class="blob-num js-line-number" data-line-number="3586"></td>
        <td id="LC3586" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> clean | (v00 <span class="pl-k">&amp;&amp;</span> v0) <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3587" class="blob-num js-line-number" data-line-number="3587"></td>
        <td id="LC3587" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3588" class="blob-num js-line-number" data-line-number="3588"></td>
        <td id="LC3588" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L3589" class="blob-num js-line-number" data-line-number="3589"></td>
        <td id="LC3589" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3590" class="blob-num js-line-number" data-line-number="3590"></td>
        <td id="LC3590" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">intersect</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">two</span>) {</td>
      </tr>
      <tr>
        <td id="L3591" class="blob-num js-line-number" data-line-number="3591"></td>
        <td id="LC3591" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> pa <span class="pl-k">=</span> d3_geo_cartesian(a), pb <span class="pl-k">=</span> d3_geo_cartesian(b);</td>
      </tr>
      <tr>
        <td id="L3592" class="blob-num js-line-number" data-line-number="3592"></td>
        <td id="LC3592" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n1 <span class="pl-k">=</span> [ <span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ], n2 <span class="pl-k">=</span> d3_geo_cartesianCross(pa, pb), n2n2 <span class="pl-k">=</span> d3_geo_cartesianDot(n2, n2), n1n2 <span class="pl-k">=</span> n2[<span class="pl-c1">0</span>], determinant <span class="pl-k">=</span> n2n2 <span class="pl-k">-</span> n1n2 <span class="pl-k">*</span> n1n2;</td>
      </tr>
      <tr>
        <td id="L3593" class="blob-num js-line-number" data-line-number="3593"></td>
        <td id="LC3593" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>determinant) <span class="pl-k">return</span> <span class="pl-k">!</span>two <span class="pl-k">&amp;&amp;</span> a;</td>
      </tr>
      <tr>
        <td id="L3594" class="blob-num js-line-number" data-line-number="3594"></td>
        <td id="LC3594" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> c1 <span class="pl-k">=</span> cr <span class="pl-k">*</span> n2n2 / determinant, c2 <span class="pl-k">=</span> <span class="pl-k">-</span>cr <span class="pl-k">*</span> n1n2 / determinant, n1xn2 <span class="pl-k">=</span> d3_geo_cartesianCross(n1, n2), A <span class="pl-k">=</span> d3_geo_cartesianScale(n1, c1), B <span class="pl-k">=</span> d3_geo_cartesianScale(n2, c2);</td>
      </tr>
      <tr>
        <td id="L3595" class="blob-num js-line-number" data-line-number="3595"></td>
        <td id="LC3595" class="blob-code blob-code-inner js-file-line">      d3_geo_cartesianAdd(A, B);</td>
      </tr>
      <tr>
        <td id="L3596" class="blob-num js-line-number" data-line-number="3596"></td>
        <td id="LC3596" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> u <span class="pl-k">=</span> n1xn2, w <span class="pl-k">=</span> d3_geo_cartesianDot(A, u), uu <span class="pl-k">=</span> d3_geo_cartesianDot(u, u), t2 <span class="pl-k">=</span> w <span class="pl-k">*</span> w <span class="pl-k">-</span> uu <span class="pl-k">*</span> (d3_geo_cartesianDot(A, A) <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3597" class="blob-num js-line-number" data-line-number="3597"></td>
        <td id="LC3597" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (t2 <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3598" class="blob-num js-line-number" data-line-number="3598"></td>
        <td id="LC3598" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> t <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(t2), q <span class="pl-k">=</span> d3_geo_cartesianScale(u, (<span class="pl-k">-</span>w <span class="pl-k">-</span> t) / uu);</td>
      </tr>
      <tr>
        <td id="L3599" class="blob-num js-line-number" data-line-number="3599"></td>
        <td id="LC3599" class="blob-code blob-code-inner js-file-line">      d3_geo_cartesianAdd(q, A);</td>
      </tr>
      <tr>
        <td id="L3600" class="blob-num js-line-number" data-line-number="3600"></td>
        <td id="LC3600" class="blob-code blob-code-inner js-file-line">      q <span class="pl-k">=</span> d3_geo_spherical(q);</td>
      </tr>
      <tr>
        <td id="L3601" class="blob-num js-line-number" data-line-number="3601"></td>
        <td id="LC3601" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>two) <span class="pl-k">return</span> q;</td>
      </tr>
      <tr>
        <td id="L3602" class="blob-num js-line-number" data-line-number="3602"></td>
        <td id="LC3602" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> a[<span class="pl-c1">0</span>], Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> b[<span class="pl-c1">0</span>], Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> a[<span class="pl-c1">1</span>], Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> b[<span class="pl-c1">1</span>], z;</td>
      </tr>
      <tr>
        <td id="L3603" class="blob-num js-line-number" data-line-number="3603"></td>
        <td id="LC3603" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (Î»<span class="pl-c1">1</span> <span class="pl-k">&lt;</span> Î»<span class="pl-c1">0</span>) z <span class="pl-k">=</span> Î»<span class="pl-c1">0</span>, Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î»<span class="pl-c1">1</span>, Î»<span class="pl-c1">1</span> <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L3604" class="blob-num js-line-number" data-line-number="3604"></td>
        <td id="LC3604" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Î´Î» <span class="pl-k">=</span> Î»<span class="pl-c1">1</span> <span class="pl-k">-</span> Î»<span class="pl-c1">0</span>, polar <span class="pl-k">=</span> <span class="pl-c1">abs</span>(Î´Î» <span class="pl-k">-</span> Ï) <span class="pl-k">&lt;</span> Îµ, meridian <span class="pl-k">=</span> polar <span class="pl-k">||</span> Î´Î» <span class="pl-k">&lt;</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L3605" class="blob-num js-line-number" data-line-number="3605"></td>
        <td id="LC3605" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>polar <span class="pl-k">&amp;&amp;</span> Ï<span class="pl-c1">1</span> <span class="pl-k">&lt;</span> Ï<span class="pl-c1">0</span>) z <span class="pl-k">=</span> Ï<span class="pl-c1">0</span>, Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> Ï<span class="pl-c1">1</span>, Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L3606" class="blob-num js-line-number" data-line-number="3606"></td>
        <td id="LC3606" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (meridian <span class="pl-k">?</span> polar <span class="pl-k">?</span> Ï<span class="pl-c1">0</span> <span class="pl-k">+</span> Ï<span class="pl-c1">1</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">^</span> q[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> (<span class="pl-c1">abs</span>(q[<span class="pl-c1">0</span>] <span class="pl-k">-</span> Î»<span class="pl-c1">0</span>) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> Ï<span class="pl-c1">0</span> <span class="pl-k">:</span> Ï<span class="pl-c1">1</span>) <span class="pl-k">:</span> Ï<span class="pl-c1">0</span> <span class="pl-k">&lt;=</span> q[<span class="pl-c1">1</span>] <span class="pl-k">&amp;&amp;</span> q[<span class="pl-c1">1</span>] <span class="pl-k">&lt;=</span> Ï<span class="pl-c1">1</span> <span class="pl-k">:</span> Î´Î» <span class="pl-k">&gt;</span> Ï <span class="pl-k">^</span> (Î»<span class="pl-c1">0</span> <span class="pl-k">&lt;=</span> q[<span class="pl-c1">0</span>] <span class="pl-k">&amp;&amp;</span> q[<span class="pl-c1">0</span>] <span class="pl-k">&lt;=</span> Î»<span class="pl-c1">1</span>)) {</td>
      </tr>
      <tr>
        <td id="L3607" class="blob-num js-line-number" data-line-number="3607"></td>
        <td id="LC3607" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> q1 <span class="pl-k">=</span> d3_geo_cartesianScale(u, (<span class="pl-k">-</span>w <span class="pl-k">+</span> t) / uu);</td>
      </tr>
      <tr>
        <td id="L3608" class="blob-num js-line-number" data-line-number="3608"></td>
        <td id="LC3608" class="blob-code blob-code-inner js-file-line">        d3_geo_cartesianAdd(q1, A);</td>
      </tr>
      <tr>
        <td id="L3609" class="blob-num js-line-number" data-line-number="3609"></td>
        <td id="LC3609" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> [ q, d3_geo_spherical(q1) ];</td>
      </tr>
      <tr>
        <td id="L3610" class="blob-num js-line-number" data-line-number="3610"></td>
        <td id="LC3610" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3611" class="blob-num js-line-number" data-line-number="3611"></td>
        <td id="LC3611" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3612" class="blob-num js-line-number" data-line-number="3612"></td>
        <td id="LC3612" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">code</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3613" class="blob-num js-line-number" data-line-number="3613"></td>
        <td id="LC3613" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> r <span class="pl-k">=</span> smallRadius <span class="pl-k">?</span> radius <span class="pl-k">:</span> Ï <span class="pl-k">-</span> radius, code <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3614" class="blob-num js-line-number" data-line-number="3614"></td>
        <td id="LC3614" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (Î» <span class="pl-k">&lt;</span> <span class="pl-k">-</span>r) code |<span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (Î» <span class="pl-k">&gt;</span> r) code |<span class="pl-k">=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3615" class="blob-num js-line-number" data-line-number="3615"></td>
        <td id="LC3615" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (Ï <span class="pl-k">&lt;</span> <span class="pl-k">-</span>r) code |<span class="pl-k">=</span> <span class="pl-c1">4</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (Ï <span class="pl-k">&gt;</span> r) code |<span class="pl-k">=</span> <span class="pl-c1">8</span>;</td>
      </tr>
      <tr>
        <td id="L3616" class="blob-num js-line-number" data-line-number="3616"></td>
        <td id="LC3616" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> code;</td>
      </tr>
      <tr>
        <td id="L3617" class="blob-num js-line-number" data-line-number="3617"></td>
        <td id="LC3617" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3618" class="blob-num js-line-number" data-line-number="3618"></td>
        <td id="LC3618" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3619" class="blob-num js-line-number" data-line-number="3619"></td>
        <td id="LC3619" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_clipLine</span>(<span class="pl-smi">x0</span>, <span class="pl-smi">y0</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>) {</td>
      </tr>
      <tr>
        <td id="L3620" class="blob-num js-line-number" data-line-number="3620"></td>
        <td id="LC3620" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">line</span>) {</td>
      </tr>
      <tr>
        <td id="L3621" class="blob-num js-line-number" data-line-number="3621"></td>
        <td id="LC3621" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> a <span class="pl-k">=</span> line.a, b <span class="pl-k">=</span> line.b, ax <span class="pl-k">=</span> a.<span class="pl-c1">x</span>, ay <span class="pl-k">=</span> a.<span class="pl-c1">y</span>, bx <span class="pl-k">=</span> b.<span class="pl-c1">x</span>, by <span class="pl-k">=</span> b.<span class="pl-c1">y</span>, t0 <span class="pl-k">=</span> <span class="pl-c1">0</span>, t1 <span class="pl-k">=</span> <span class="pl-c1">1</span>, dx <span class="pl-k">=</span> bx <span class="pl-k">-</span> ax, dy <span class="pl-k">=</span> by <span class="pl-k">-</span> ay, r;</td>
      </tr>
      <tr>
        <td id="L3622" class="blob-num js-line-number" data-line-number="3622"></td>
        <td id="LC3622" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">=</span> x0 <span class="pl-k">-</span> ax;</td>
      </tr>
      <tr>
        <td id="L3623" class="blob-num js-line-number" data-line-number="3623"></td>
        <td id="LC3623" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>dx <span class="pl-k">&amp;&amp;</span> r <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3624" class="blob-num js-line-number" data-line-number="3624"></td>
        <td id="LC3624" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">/=</span> dx;</td>
      </tr>
      <tr>
        <td id="L3625" class="blob-num js-line-number" data-line-number="3625"></td>
        <td id="LC3625" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dx <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3626" class="blob-num js-line-number" data-line-number="3626"></td>
        <td id="LC3626" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> t0) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3627" class="blob-num js-line-number" data-line-number="3627"></td>
        <td id="LC3627" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> t1) t1 <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L3628" class="blob-num js-line-number" data-line-number="3628"></td>
        <td id="LC3628" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (dx <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3629" class="blob-num js-line-number" data-line-number="3629"></td>
        <td id="LC3629" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> t1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3630" class="blob-num js-line-number" data-line-number="3630"></td>
        <td id="LC3630" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> t0) t0 <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L3631" class="blob-num js-line-number" data-line-number="3631"></td>
        <td id="LC3631" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3632" class="blob-num js-line-number" data-line-number="3632"></td>
        <td id="LC3632" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">=</span> x1 <span class="pl-k">-</span> ax;</td>
      </tr>
      <tr>
        <td id="L3633" class="blob-num js-line-number" data-line-number="3633"></td>
        <td id="LC3633" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>dx <span class="pl-k">&amp;&amp;</span> r <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3634" class="blob-num js-line-number" data-line-number="3634"></td>
        <td id="LC3634" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">/=</span> dx;</td>
      </tr>
      <tr>
        <td id="L3635" class="blob-num js-line-number" data-line-number="3635"></td>
        <td id="LC3635" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dx <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3636" class="blob-num js-line-number" data-line-number="3636"></td>
        <td id="LC3636" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> t1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3637" class="blob-num js-line-number" data-line-number="3637"></td>
        <td id="LC3637" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> t0) t0 <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L3638" class="blob-num js-line-number" data-line-number="3638"></td>
        <td id="LC3638" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (dx <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3639" class="blob-num js-line-number" data-line-number="3639"></td>
        <td id="LC3639" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> t0) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3640" class="blob-num js-line-number" data-line-number="3640"></td>
        <td id="LC3640" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> t1) t1 <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L3641" class="blob-num js-line-number" data-line-number="3641"></td>
        <td id="LC3641" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3642" class="blob-num js-line-number" data-line-number="3642"></td>
        <td id="LC3642" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">=</span> y0 <span class="pl-k">-</span> ay;</td>
      </tr>
      <tr>
        <td id="L3643" class="blob-num js-line-number" data-line-number="3643"></td>
        <td id="LC3643" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>dy <span class="pl-k">&amp;&amp;</span> r <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3644" class="blob-num js-line-number" data-line-number="3644"></td>
        <td id="LC3644" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">/=</span> dy;</td>
      </tr>
      <tr>
        <td id="L3645" class="blob-num js-line-number" data-line-number="3645"></td>
        <td id="LC3645" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dy <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3646" class="blob-num js-line-number" data-line-number="3646"></td>
        <td id="LC3646" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> t0) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3647" class="blob-num js-line-number" data-line-number="3647"></td>
        <td id="LC3647" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> t1) t1 <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L3648" class="blob-num js-line-number" data-line-number="3648"></td>
        <td id="LC3648" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (dy <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3649" class="blob-num js-line-number" data-line-number="3649"></td>
        <td id="LC3649" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> t1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3650" class="blob-num js-line-number" data-line-number="3650"></td>
        <td id="LC3650" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> t0) t0 <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L3651" class="blob-num js-line-number" data-line-number="3651"></td>
        <td id="LC3651" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3652" class="blob-num js-line-number" data-line-number="3652"></td>
        <td id="LC3652" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">=</span> y1 <span class="pl-k">-</span> ay;</td>
      </tr>
      <tr>
        <td id="L3653" class="blob-num js-line-number" data-line-number="3653"></td>
        <td id="LC3653" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>dy <span class="pl-k">&amp;&amp;</span> r <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3654" class="blob-num js-line-number" data-line-number="3654"></td>
        <td id="LC3654" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">/=</span> dy;</td>
      </tr>
      <tr>
        <td id="L3655" class="blob-num js-line-number" data-line-number="3655"></td>
        <td id="LC3655" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dy <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3656" class="blob-num js-line-number" data-line-number="3656"></td>
        <td id="LC3656" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> t1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3657" class="blob-num js-line-number" data-line-number="3657"></td>
        <td id="LC3657" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> t0) t0 <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L3658" class="blob-num js-line-number" data-line-number="3658"></td>
        <td id="LC3658" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (dy <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3659" class="blob-num js-line-number" data-line-number="3659"></td>
        <td id="LC3659" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> t0) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3660" class="blob-num js-line-number" data-line-number="3660"></td>
        <td id="LC3660" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> t1) t1 <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L3661" class="blob-num js-line-number" data-line-number="3661"></td>
        <td id="LC3661" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3662" class="blob-num js-line-number" data-line-number="3662"></td>
        <td id="LC3662" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (t0 <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) line.a <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3663" class="blob-num js-line-number" data-line-number="3663"></td>
        <td id="LC3663" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> ax <span class="pl-k">+</span> t0 <span class="pl-k">*</span> dx,</td>
      </tr>
      <tr>
        <td id="L3664" class="blob-num js-line-number" data-line-number="3664"></td>
        <td id="LC3664" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> ay <span class="pl-k">+</span> t0 <span class="pl-k">*</span> dy</td>
      </tr>
      <tr>
        <td id="L3665" class="blob-num js-line-number" data-line-number="3665"></td>
        <td id="LC3665" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L3666" class="blob-num js-line-number" data-line-number="3666"></td>
        <td id="LC3666" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (t1 <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) line.b <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3667" class="blob-num js-line-number" data-line-number="3667"></td>
        <td id="LC3667" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> ax <span class="pl-k">+</span> t1 <span class="pl-k">*</span> dx,</td>
      </tr>
      <tr>
        <td id="L3668" class="blob-num js-line-number" data-line-number="3668"></td>
        <td id="LC3668" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> ay <span class="pl-k">+</span> t1 <span class="pl-k">*</span> dy</td>
      </tr>
      <tr>
        <td id="L3669" class="blob-num js-line-number" data-line-number="3669"></td>
        <td id="LC3669" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L3670" class="blob-num js-line-number" data-line-number="3670"></td>
        <td id="LC3670" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L3671" class="blob-num js-line-number" data-line-number="3671"></td>
        <td id="LC3671" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3672" class="blob-num js-line-number" data-line-number="3672"></td>
        <td id="LC3672" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3673" class="blob-num js-line-number" data-line-number="3673"></td>
        <td id="LC3673" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_clipExtentMAX <span class="pl-k">=</span> <span class="pl-c1">1e9</span>;</td>
      </tr>
      <tr>
        <td id="L3674" class="blob-num js-line-number" data-line-number="3674"></td>
        <td id="LC3674" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">clipExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3675" class="blob-num js-line-number" data-line-number="3675"></td>
        <td id="LC3675" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x0, y0, x1, y1, stream, clip, clipExtent <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3676" class="blob-num js-line-number" data-line-number="3676"></td>
        <td id="LC3676" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">stream</span>: <span class="pl-k">function</span>(<span class="pl-smi">output</span>) {</td>
      </tr>
      <tr>
        <td id="L3677" class="blob-num js-line-number" data-line-number="3677"></td>
        <td id="LC3677" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (stream) stream.valid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3678" class="blob-num js-line-number" data-line-number="3678"></td>
        <td id="LC3678" class="blob-code blob-code-inner js-file-line">        stream <span class="pl-k">=</span> clip(output);</td>
      </tr>
      <tr>
        <td id="L3679" class="blob-num js-line-number" data-line-number="3679"></td>
        <td id="LC3679" class="blob-code blob-code-inner js-file-line">        stream.valid <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3680" class="blob-num js-line-number" data-line-number="3680"></td>
        <td id="LC3680" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> stream;</td>
      </tr>
      <tr>
        <td id="L3681" class="blob-num js-line-number" data-line-number="3681"></td>
        <td id="LC3681" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3682" class="blob-num js-line-number" data-line-number="3682"></td>
        <td id="LC3682" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">extent</span>: <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L3683" class="blob-num js-line-number" data-line-number="3683"></td>
        <td id="LC3683" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ [ x0, y0 ], [ x1, y1 ] ];</td>
      </tr>
      <tr>
        <td id="L3684" class="blob-num js-line-number" data-line-number="3684"></td>
        <td id="LC3684" class="blob-code blob-code-inner js-file-line">        clip <span class="pl-k">=</span> d3_geo_clipExtent(x0 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], y0 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], x1 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], y1 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3685" class="blob-num js-line-number" data-line-number="3685"></td>
        <td id="LC3685" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (stream) stream.valid <span class="pl-k">=</span> <span class="pl-c1">false</span>, stream <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3686" class="blob-num js-line-number" data-line-number="3686"></td>
        <td id="LC3686" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> clipExtent;</td>
      </tr>
      <tr>
        <td id="L3687" class="blob-num js-line-number" data-line-number="3687"></td>
        <td id="LC3687" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3688" class="blob-num js-line-number" data-line-number="3688"></td>
        <td id="LC3688" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3689" class="blob-num js-line-number" data-line-number="3689"></td>
        <td id="LC3689" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> clipExtent.extent([ [ <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ], [ <span class="pl-c1">960</span>, <span class="pl-c1">500</span> ] ]);</td>
      </tr>
      <tr>
        <td id="L3690" class="blob-num js-line-number" data-line-number="3690"></td>
        <td id="LC3690" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3691" class="blob-num js-line-number" data-line-number="3691"></td>
        <td id="LC3691" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_clipExtent</span>(<span class="pl-smi">x0</span>, <span class="pl-smi">y0</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>) {</td>
      </tr>
      <tr>
        <td id="L3692" class="blob-num js-line-number" data-line-number="3692"></td>
        <td id="LC3692" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L3693" class="blob-num js-line-number" data-line-number="3693"></td>
        <td id="LC3693" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> listener_ <span class="pl-k">=</span> listener, bufferListener <span class="pl-k">=</span> d3_geo_clipBufferListener(), clipLine <span class="pl-k">=</span> d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;</td>
      </tr>
      <tr>
        <td id="L3694" class="blob-num js-line-number" data-line-number="3694"></td>
        <td id="LC3694" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> clip <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3695" class="blob-num js-line-number" data-line-number="3695"></td>
        <td id="LC3695" class="blob-code blob-code-inner js-file-line">        point<span class="pl-k">:</span> point,</td>
      </tr>
      <tr>
        <td id="L3696" class="blob-num js-line-number" data-line-number="3696"></td>
        <td id="LC3696" class="blob-code blob-code-inner js-file-line">        lineStart<span class="pl-k">:</span> lineStart,</td>
      </tr>
      <tr>
        <td id="L3697" class="blob-num js-line-number" data-line-number="3697"></td>
        <td id="LC3697" class="blob-code blob-code-inner js-file-line">        lineEnd<span class="pl-k">:</span> lineEnd,</td>
      </tr>
      <tr>
        <td id="L3698" class="blob-num js-line-number" data-line-number="3698"></td>
        <td id="LC3698" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3699" class="blob-num js-line-number" data-line-number="3699"></td>
        <td id="LC3699" class="blob-code blob-code-inner js-file-line">          listener <span class="pl-k">=</span> bufferListener;</td>
      </tr>
      <tr>
        <td id="L3700" class="blob-num js-line-number" data-line-number="3700"></td>
        <td id="LC3700" class="blob-code blob-code-inner js-file-line">          segments <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3701" class="blob-num js-line-number" data-line-number="3701"></td>
        <td id="LC3701" class="blob-code blob-code-inner js-file-line">          polygon <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3702" class="blob-num js-line-number" data-line-number="3702"></td>
        <td id="LC3702" class="blob-code blob-code-inner js-file-line">          clean <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3703" class="blob-num js-line-number" data-line-number="3703"></td>
        <td id="LC3703" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3704" class="blob-num js-line-number" data-line-number="3704"></td>
        <td id="LC3704" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3705" class="blob-num js-line-number" data-line-number="3705"></td>
        <td id="LC3705" class="blob-code blob-code-inner js-file-line">          listener <span class="pl-k">=</span> listener_;</td>
      </tr>
      <tr>
        <td id="L3706" class="blob-num js-line-number" data-line-number="3706"></td>
        <td id="LC3706" class="blob-code blob-code-inner js-file-line">          segments <span class="pl-k">=</span> d3.merge(segments);</td>
      </tr>
      <tr>
        <td id="L3707" class="blob-num js-line-number" data-line-number="3707"></td>
        <td id="LC3707" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> clipStartInside <span class="pl-k">=</span> insidePolygon([ x0, y1 ]), inside <span class="pl-k">=</span> clean <span class="pl-k">&amp;&amp;</span> clipStartInside, visible <span class="pl-k">=</span> segments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3708" class="blob-num js-line-number" data-line-number="3708"></td>
        <td id="LC3708" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (inside <span class="pl-k">||</span> visible) {</td>
      </tr>
      <tr>
        <td id="L3709" class="blob-num js-line-number" data-line-number="3709"></td>
        <td id="LC3709" class="blob-code blob-code-inner js-file-line">            listener.polygonStart();</td>
      </tr>
      <tr>
        <td id="L3710" class="blob-num js-line-number" data-line-number="3710"></td>
        <td id="LC3710" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (inside) {</td>
      </tr>
      <tr>
        <td id="L3711" class="blob-num js-line-number" data-line-number="3711"></td>
        <td id="LC3711" class="blob-code blob-code-inner js-file-line">              listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3712" class="blob-num js-line-number" data-line-number="3712"></td>
        <td id="LC3712" class="blob-code blob-code-inner js-file-line">              interpolate(<span class="pl-c1">null</span>, <span class="pl-c1">null</span>, <span class="pl-c1">1</span>, listener);</td>
      </tr>
      <tr>
        <td id="L3713" class="blob-num js-line-number" data-line-number="3713"></td>
        <td id="LC3713" class="blob-code blob-code-inner js-file-line">              listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3714" class="blob-num js-line-number" data-line-number="3714"></td>
        <td id="LC3714" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3715" class="blob-num js-line-number" data-line-number="3715"></td>
        <td id="LC3715" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (visible) {</td>
      </tr>
      <tr>
        <td id="L3716" class="blob-num js-line-number" data-line-number="3716"></td>
        <td id="LC3716" class="blob-code blob-code-inner js-file-line">              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);</td>
      </tr>
      <tr>
        <td id="L3717" class="blob-num js-line-number" data-line-number="3717"></td>
        <td id="LC3717" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3718" class="blob-num js-line-number" data-line-number="3718"></td>
        <td id="LC3718" class="blob-code blob-code-inner js-file-line">            listener.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L3719" class="blob-num js-line-number" data-line-number="3719"></td>
        <td id="LC3719" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3720" class="blob-num js-line-number" data-line-number="3720"></td>
        <td id="LC3720" class="blob-code blob-code-inner js-file-line">          segments <span class="pl-k">=</span> polygon <span class="pl-k">=</span> ring <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3721" class="blob-num js-line-number" data-line-number="3721"></td>
        <td id="LC3721" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3722" class="blob-num js-line-number" data-line-number="3722"></td>
        <td id="LC3722" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L3723" class="blob-num js-line-number" data-line-number="3723"></td>
        <td id="LC3723" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">insidePolygon</span>(<span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L3724" class="blob-num js-line-number" data-line-number="3724"></td>
        <td id="LC3724" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> wn <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> polygon.<span class="pl-c1">length</span>, y <span class="pl-k">=</span> p[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3725" class="blob-num js-line-number" data-line-number="3725"></td>
        <td id="LC3725" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L3726" class="blob-num js-line-number" data-line-number="3726"></td>
        <td id="LC3726" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">1</span>, v <span class="pl-k">=</span> polygon[i], m <span class="pl-k">=</span> v.<span class="pl-c1">length</span>, a <span class="pl-k">=</span> v[<span class="pl-c1">0</span>], b; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) {</td>
      </tr>
      <tr>
        <td id="L3727" class="blob-num js-line-number" data-line-number="3727"></td>
        <td id="LC3727" class="blob-code blob-code-inner js-file-line">            b <span class="pl-k">=</span> v[j];</td>
      </tr>
      <tr>
        <td id="L3728" class="blob-num js-line-number" data-line-number="3728"></td>
        <td id="LC3728" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (a[<span class="pl-c1">1</span>] <span class="pl-k">&lt;=</span> y) {</td>
      </tr>
      <tr>
        <td id="L3729" class="blob-num js-line-number" data-line-number="3729"></td>
        <td id="LC3729" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (b[<span class="pl-c1">1</span>] <span class="pl-k">&gt;</span> y <span class="pl-k">&amp;&amp;</span> d3_cross2d(a, b, p) <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) <span class="pl-k">++</span>wn;</td>
      </tr>
      <tr>
        <td id="L3730" class="blob-num js-line-number" data-line-number="3730"></td>
        <td id="LC3730" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3731" class="blob-num js-line-number" data-line-number="3731"></td>
        <td id="LC3731" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (b[<span class="pl-c1">1</span>] <span class="pl-k">&lt;=</span> y <span class="pl-k">&amp;&amp;</span> d3_cross2d(a, b, p) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) <span class="pl-k">--</span>wn;</td>
      </tr>
      <tr>
        <td id="L3732" class="blob-num js-line-number" data-line-number="3732"></td>
        <td id="LC3732" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3733" class="blob-num js-line-number" data-line-number="3733"></td>
        <td id="LC3733" class="blob-code blob-code-inner js-file-line">            a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L3734" class="blob-num js-line-number" data-line-number="3734"></td>
        <td id="LC3734" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3735" class="blob-num js-line-number" data-line-number="3735"></td>
        <td id="LC3735" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3736" class="blob-num js-line-number" data-line-number="3736"></td>
        <td id="LC3736" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> wn <span class="pl-k">!==</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3737" class="blob-num js-line-number" data-line-number="3737"></td>
        <td id="LC3737" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3738" class="blob-num js-line-number" data-line-number="3738"></td>
        <td id="LC3738" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">interpolate</span>(<span class="pl-smi">from</span>, <span class="pl-smi">to</span>, <span class="pl-smi">direction</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L3739" class="blob-num js-line-number" data-line-number="3739"></td>
        <td id="LC3739" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> a <span class="pl-k">=</span> <span class="pl-c1">0</span>, a1 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3740" class="blob-num js-line-number" data-line-number="3740"></td>
        <td id="LC3740" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">from</span> <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> (a <span class="pl-k">=</span> corner(<span class="pl-k">from</span>, direction)) <span class="pl-k">!==</span> (a1 <span class="pl-k">=</span> corner(to, direction)) <span class="pl-k">||</span> comparePoints(<span class="pl-k">from</span>, to) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">^</span> direction <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L3741" class="blob-num js-line-number" data-line-number="3741"></td>
        <td id="LC3741" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L3742" class="blob-num js-line-number" data-line-number="3742"></td>
        <td id="LC3742" class="blob-code blob-code-inner js-file-line">            listener.point(a <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> a <span class="pl-k">===</span> <span class="pl-c1">3</span> <span class="pl-k">?</span> x0 <span class="pl-k">:</span> x1, a <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> y1 <span class="pl-k">:</span> y0);</td>
      </tr>
      <tr>
        <td id="L3743" class="blob-num js-line-number" data-line-number="3743"></td>
        <td id="LC3743" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">while</span> ((a <span class="pl-k">=</span> (a <span class="pl-k">+</span> direction <span class="pl-k">+</span> <span class="pl-c1">4</span>) <span class="pl-k">%</span> <span class="pl-c1">4</span>) <span class="pl-k">!==</span> a1);</td>
      </tr>
      <tr>
        <td id="L3744" class="blob-num js-line-number" data-line-number="3744"></td>
        <td id="LC3744" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3745" class="blob-num js-line-number" data-line-number="3745"></td>
        <td id="LC3745" class="blob-code blob-code-inner js-file-line">          listener.point(to[<span class="pl-c1">0</span>], to[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3746" class="blob-num js-line-number" data-line-number="3746"></td>
        <td id="LC3746" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3747" class="blob-num js-line-number" data-line-number="3747"></td>
        <td id="LC3747" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3748" class="blob-num js-line-number" data-line-number="3748"></td>
        <td id="LC3748" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">pointVisible</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3749" class="blob-num js-line-number" data-line-number="3749"></td>
        <td id="LC3749" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> x0 <span class="pl-k">&lt;=</span> x <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;=</span> x1 <span class="pl-k">&amp;&amp;</span> y0 <span class="pl-k">&lt;=</span> y <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&lt;=</span> y1;</td>
      </tr>
      <tr>
        <td id="L3750" class="blob-num js-line-number" data-line-number="3750"></td>
        <td id="LC3750" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3751" class="blob-num js-line-number" data-line-number="3751"></td>
        <td id="LC3751" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">point</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3752" class="blob-num js-line-number" data-line-number="3752"></td>
        <td id="LC3752" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (pointVisible(x, y)) listener.point(x, y);</td>
      </tr>
      <tr>
        <td id="L3753" class="blob-num js-line-number" data-line-number="3753"></td>
        <td id="LC3753" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3754" class="blob-num js-line-number" data-line-number="3754"></td>
        <td id="LC3754" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x__, y__, v__, x_, y_, v_, first, clean;</td>
      </tr>
      <tr>
        <td id="L3755" class="blob-num js-line-number" data-line-number="3755"></td>
        <td id="LC3755" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">lineStart</span>() {</td>
      </tr>
      <tr>
        <td id="L3756" class="blob-num js-line-number" data-line-number="3756"></td>
        <td id="LC3756" class="blob-code blob-code-inner js-file-line">        clip.point <span class="pl-k">=</span> linePoint;</td>
      </tr>
      <tr>
        <td id="L3757" class="blob-num js-line-number" data-line-number="3757"></td>
        <td id="LC3757" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (polygon) polygon.<span class="pl-c1">push</span>(ring <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L3758" class="blob-num js-line-number" data-line-number="3758"></td>
        <td id="LC3758" class="blob-code blob-code-inner js-file-line">        first <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3759" class="blob-num js-line-number" data-line-number="3759"></td>
        <td id="LC3759" class="blob-code blob-code-inner js-file-line">        v_ <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3760" class="blob-num js-line-number" data-line-number="3760"></td>
        <td id="LC3760" class="blob-code blob-code-inner js-file-line">        x_ <span class="pl-k">=</span> y_ <span class="pl-k">=</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L3761" class="blob-num js-line-number" data-line-number="3761"></td>
        <td id="LC3761" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3762" class="blob-num js-line-number" data-line-number="3762"></td>
        <td id="LC3762" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">lineEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L3763" class="blob-num js-line-number" data-line-number="3763"></td>
        <td id="LC3763" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (segments) {</td>
      </tr>
      <tr>
        <td id="L3764" class="blob-num js-line-number" data-line-number="3764"></td>
        <td id="LC3764" class="blob-code blob-code-inner js-file-line">          linePoint(x__, y__);</td>
      </tr>
      <tr>
        <td id="L3765" class="blob-num js-line-number" data-line-number="3765"></td>
        <td id="LC3765" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (v__ <span class="pl-k">&amp;&amp;</span> v_) bufferListener.rejoin();</td>
      </tr>
      <tr>
        <td id="L3766" class="blob-num js-line-number" data-line-number="3766"></td>
        <td id="LC3766" class="blob-code blob-code-inner js-file-line">          segments.<span class="pl-c1">push</span>(bufferListener.buffer());</td>
      </tr>
      <tr>
        <td id="L3767" class="blob-num js-line-number" data-line-number="3767"></td>
        <td id="LC3767" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3768" class="blob-num js-line-number" data-line-number="3768"></td>
        <td id="LC3768" class="blob-code blob-code-inner js-file-line">        clip.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L3769" class="blob-num js-line-number" data-line-number="3769"></td>
        <td id="LC3769" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (v_) listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3770" class="blob-num js-line-number" data-line-number="3770"></td>
        <td id="LC3770" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3771" class="blob-num js-line-number" data-line-number="3771"></td>
        <td id="LC3771" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">linePoint</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3772" class="blob-num js-line-number" data-line-number="3772"></td>
        <td id="LC3772" class="blob-code blob-code-inner js-file-line">        x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-k">-</span>d3_geo_clipExtentMAX, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d3_geo_clipExtentMAX, x));</td>
      </tr>
      <tr>
        <td id="L3773" class="blob-num js-line-number" data-line-number="3773"></td>
        <td id="LC3773" class="blob-code blob-code-inner js-file-line">        y <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-k">-</span>d3_geo_clipExtentMAX, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d3_geo_clipExtentMAX, y));</td>
      </tr>
      <tr>
        <td id="L3774" class="blob-num js-line-number" data-line-number="3774"></td>
        <td id="LC3774" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> v <span class="pl-k">=</span> pointVisible(x, y);</td>
      </tr>
      <tr>
        <td id="L3775" class="blob-num js-line-number" data-line-number="3775"></td>
        <td id="LC3775" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (polygon) ring.<span class="pl-c1">push</span>([ x, y ]);</td>
      </tr>
      <tr>
        <td id="L3776" class="blob-num js-line-number" data-line-number="3776"></td>
        <td id="LC3776" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (first) {</td>
      </tr>
      <tr>
        <td id="L3777" class="blob-num js-line-number" data-line-number="3777"></td>
        <td id="LC3777" class="blob-code blob-code-inner js-file-line">          x__ <span class="pl-k">=</span> x, y__ <span class="pl-k">=</span> y, v__ <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L3778" class="blob-num js-line-number" data-line-number="3778"></td>
        <td id="LC3778" class="blob-code blob-code-inner js-file-line">          first <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3779" class="blob-num js-line-number" data-line-number="3779"></td>
        <td id="LC3779" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (v) {</td>
      </tr>
      <tr>
        <td id="L3780" class="blob-num js-line-number" data-line-number="3780"></td>
        <td id="LC3780" class="blob-code blob-code-inner js-file-line">            listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3781" class="blob-num js-line-number" data-line-number="3781"></td>
        <td id="LC3781" class="blob-code blob-code-inner js-file-line">            listener.point(x, y);</td>
      </tr>
      <tr>
        <td id="L3782" class="blob-num js-line-number" data-line-number="3782"></td>
        <td id="LC3782" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3783" class="blob-num js-line-number" data-line-number="3783"></td>
        <td id="LC3783" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3784" class="blob-num js-line-number" data-line-number="3784"></td>
        <td id="LC3784" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (v <span class="pl-k">&amp;&amp;</span> v_) listener.point(x, y); <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3785" class="blob-num js-line-number" data-line-number="3785"></td>
        <td id="LC3785" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> l <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3786" class="blob-num js-line-number" data-line-number="3786"></td>
        <td id="LC3786" class="blob-code blob-code-inner js-file-line">              a<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L3787" class="blob-num js-line-number" data-line-number="3787"></td>
        <td id="LC3787" class="blob-code blob-code-inner js-file-line">                x<span class="pl-k">:</span> x_,</td>
      </tr>
      <tr>
        <td id="L3788" class="blob-num js-line-number" data-line-number="3788"></td>
        <td id="LC3788" class="blob-code blob-code-inner js-file-line">                y<span class="pl-k">:</span> y_</td>
      </tr>
      <tr>
        <td id="L3789" class="blob-num js-line-number" data-line-number="3789"></td>
        <td id="LC3789" class="blob-code blob-code-inner js-file-line">              },</td>
      </tr>
      <tr>
        <td id="L3790" class="blob-num js-line-number" data-line-number="3790"></td>
        <td id="LC3790" class="blob-code blob-code-inner js-file-line">              b<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L3791" class="blob-num js-line-number" data-line-number="3791"></td>
        <td id="LC3791" class="blob-code blob-code-inner js-file-line">                x<span class="pl-k">:</span> x,</td>
      </tr>
      <tr>
        <td id="L3792" class="blob-num js-line-number" data-line-number="3792"></td>
        <td id="LC3792" class="blob-code blob-code-inner js-file-line">                y<span class="pl-k">:</span> y</td>
      </tr>
      <tr>
        <td id="L3793" class="blob-num js-line-number" data-line-number="3793"></td>
        <td id="LC3793" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L3794" class="blob-num js-line-number" data-line-number="3794"></td>
        <td id="LC3794" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L3795" class="blob-num js-line-number" data-line-number="3795"></td>
        <td id="LC3795" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (clipLine(l)) {</td>
      </tr>
      <tr>
        <td id="L3796" class="blob-num js-line-number" data-line-number="3796"></td>
        <td id="LC3796" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (<span class="pl-k">!</span>v_) {</td>
      </tr>
      <tr>
        <td id="L3797" class="blob-num js-line-number" data-line-number="3797"></td>
        <td id="LC3797" class="blob-code blob-code-inner js-file-line">                listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3798" class="blob-num js-line-number" data-line-number="3798"></td>
        <td id="LC3798" class="blob-code blob-code-inner js-file-line">                listener.point(l.a.<span class="pl-c1">x</span>, l.a.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L3799" class="blob-num js-line-number" data-line-number="3799"></td>
        <td id="LC3799" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L3800" class="blob-num js-line-number" data-line-number="3800"></td>
        <td id="LC3800" class="blob-code blob-code-inner js-file-line">              listener.point(l.b.<span class="pl-c1">x</span>, l.b.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L3801" class="blob-num js-line-number" data-line-number="3801"></td>
        <td id="LC3801" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (<span class="pl-k">!</span>v) listener.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3802" class="blob-num js-line-number" data-line-number="3802"></td>
        <td id="LC3802" class="blob-code blob-code-inner js-file-line">              clean <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3803" class="blob-num js-line-number" data-line-number="3803"></td>
        <td id="LC3803" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (v) {</td>
      </tr>
      <tr>
        <td id="L3804" class="blob-num js-line-number" data-line-number="3804"></td>
        <td id="LC3804" class="blob-code blob-code-inner js-file-line">              listener.lineStart();</td>
      </tr>
      <tr>
        <td id="L3805" class="blob-num js-line-number" data-line-number="3805"></td>
        <td id="LC3805" class="blob-code blob-code-inner js-file-line">              listener.point(x, y);</td>
      </tr>
      <tr>
        <td id="L3806" class="blob-num js-line-number" data-line-number="3806"></td>
        <td id="LC3806" class="blob-code blob-code-inner js-file-line">              clean <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3807" class="blob-num js-line-number" data-line-number="3807"></td>
        <td id="LC3807" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3808" class="blob-num js-line-number" data-line-number="3808"></td>
        <td id="LC3808" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3809" class="blob-num js-line-number" data-line-number="3809"></td>
        <td id="LC3809" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3810" class="blob-num js-line-number" data-line-number="3810"></td>
        <td id="LC3810" class="blob-code blob-code-inner js-file-line">        x_ <span class="pl-k">=</span> x, y_ <span class="pl-k">=</span> y, v_ <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L3811" class="blob-num js-line-number" data-line-number="3811"></td>
        <td id="LC3811" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3812" class="blob-num js-line-number" data-line-number="3812"></td>
        <td id="LC3812" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> clip;</td>
      </tr>
      <tr>
        <td id="L3813" class="blob-num js-line-number" data-line-number="3813"></td>
        <td id="LC3813" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3814" class="blob-num js-line-number" data-line-number="3814"></td>
        <td id="LC3814" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">corner</span>(<span class="pl-smi">p</span>, <span class="pl-smi">direction</span>) {</td>
      </tr>
      <tr>
        <td id="L3815" class="blob-num js-line-number" data-line-number="3815"></td>
        <td id="LC3815" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">abs</span>(p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> x0) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> direction <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">3</span> <span class="pl-k">:</span> <span class="pl-c1">abs</span>(p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> x1) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> direction <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">2</span> <span class="pl-k">:</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">abs</span>(p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> y0) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> direction <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> direction <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">3</span> <span class="pl-k">:</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L3816" class="blob-num js-line-number" data-line-number="3816"></td>
        <td id="LC3816" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3817" class="blob-num js-line-number" data-line-number="3817"></td>
        <td id="LC3817" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">compare</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L3818" class="blob-num js-line-number" data-line-number="3818"></td>
        <td id="LC3818" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> comparePoints(a.<span class="pl-c1">x</span>, b.<span class="pl-c1">x</span>);</td>
      </tr>
      <tr>
        <td id="L3819" class="blob-num js-line-number" data-line-number="3819"></td>
        <td id="LC3819" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3820" class="blob-num js-line-number" data-line-number="3820"></td>
        <td id="LC3820" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">comparePoints</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L3821" class="blob-num js-line-number" data-line-number="3821"></td>
        <td id="LC3821" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> ca <span class="pl-k">=</span> corner(a, <span class="pl-c1">1</span>), cb <span class="pl-k">=</span> corner(b, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3822" class="blob-num js-line-number" data-line-number="3822"></td>
        <td id="LC3822" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> ca <span class="pl-k">!==</span> cb <span class="pl-k">?</span> ca <span class="pl-k">-</span> cb <span class="pl-k">:</span> ca <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> b[<span class="pl-c1">1</span>] <span class="pl-k">-</span> a[<span class="pl-c1">1</span>] <span class="pl-k">:</span> ca <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> a[<span class="pl-c1">0</span>] <span class="pl-k">-</span> b[<span class="pl-c1">0</span>] <span class="pl-k">:</span> ca <span class="pl-k">===</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> a[<span class="pl-c1">1</span>] <span class="pl-k">-</span> b[<span class="pl-c1">1</span>] <span class="pl-k">:</span> b[<span class="pl-c1">0</span>] <span class="pl-k">-</span> a[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3823" class="blob-num js-line-number" data-line-number="3823"></td>
        <td id="LC3823" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3824" class="blob-num js-line-number" data-line-number="3824"></td>
        <td id="LC3824" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3825" class="blob-num js-line-number" data-line-number="3825"></td>
        <td id="LC3825" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_conic</span>(<span class="pl-smi">projectAt</span>) {</td>
      </tr>
      <tr>
        <td id="L3826" class="blob-num js-line-number" data-line-number="3826"></td>
        <td id="LC3826" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>, Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> Ï / <span class="pl-c1">3</span>, m <span class="pl-k">=</span> d3_geo_projectionMutator(projectAt), p <span class="pl-k">=</span> m(Ï<span class="pl-c1">0</span>, Ï<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3827" class="blob-num js-line-number" data-line-number="3827"></td>
        <td id="LC3827" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">p</span>.<span class="pl-en">parallels</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L3828" class="blob-num js-line-number" data-line-number="3828"></td>
        <td id="LC3828" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ Ï<span class="pl-c1">0</span> / Ï <span class="pl-k">*</span> <span class="pl-c1">180</span>, Ï<span class="pl-c1">1</span> / Ï <span class="pl-k">*</span> <span class="pl-c1">180</span> ];</td>
      </tr>
      <tr>
        <td id="L3829" class="blob-num js-line-number" data-line-number="3829"></td>
        <td id="LC3829" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> m(Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> _[<span class="pl-c1">0</span>] <span class="pl-k">*</span> Ï / <span class="pl-c1">180</span>, Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> _[<span class="pl-c1">1</span>] <span class="pl-k">*</span> Ï / <span class="pl-c1">180</span>);</td>
      </tr>
      <tr>
        <td id="L3830" class="blob-num js-line-number" data-line-number="3830"></td>
        <td id="LC3830" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3831" class="blob-num js-line-number" data-line-number="3831"></td>
        <td id="LC3831" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> p;</td>
      </tr>
      <tr>
        <td id="L3832" class="blob-num js-line-number" data-line-number="3832"></td>
        <td id="LC3832" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3833" class="blob-num js-line-number" data-line-number="3833"></td>
        <td id="LC3833" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_conicEqualArea</span>(<span class="pl-smi">Ï0</span>, <span class="pl-smi">Ï1</span>) {</td>
      </tr>
      <tr>
        <td id="L3834" class="blob-num js-line-number" data-line-number="3834"></td>
        <td id="LC3834" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> sinÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">0</span>), n <span class="pl-k">=</span> (sinÏ<span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">1</span>)) / <span class="pl-c1">2</span>, C <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> sinÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> n <span class="pl-k">-</span> sinÏ<span class="pl-c1">0</span>), Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(C) / n;</td>
      </tr>
      <tr>
        <td id="L3835" class="blob-num js-line-number" data-line-number="3835"></td>
        <td id="LC3835" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">forward</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L3836" class="blob-num js-line-number" data-line-number="3836"></td>
        <td id="LC3836" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Ï <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(C <span class="pl-k">-</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> n <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï)) / n;</td>
      </tr>
      <tr>
        <td id="L3837" class="blob-num js-line-number" data-line-number="3837"></td>
        <td id="LC3837" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ Ï <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î» <span class="pl-k">*=</span> n), Ï<span class="pl-c1">0</span> <span class="pl-k">-</span> Ï <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î») ];</td>
      </tr>
      <tr>
        <td id="L3838" class="blob-num js-line-number" data-line-number="3838"></td>
        <td id="LC3838" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3839" class="blob-num js-line-number" data-line-number="3839"></td>
        <td id="LC3839" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">forward</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3840" class="blob-num js-line-number" data-line-number="3840"></td>
        <td id="LC3840" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Ï0_y <span class="pl-k">=</span> Ï<span class="pl-c1">0</span> <span class="pl-k">-</span> y;</td>
      </tr>
      <tr>
        <td id="L3841" class="blob-num js-line-number" data-line-number="3841"></td>
        <td id="LC3841" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(x, Ï0_y) / n, d3_asin((C <span class="pl-k">-</span> (x <span class="pl-k">*</span> x <span class="pl-k">+</span> Ï0_y <span class="pl-k">*</span> Ï0_y) <span class="pl-k">*</span> n <span class="pl-k">*</span> n) / (<span class="pl-c1">2</span> <span class="pl-k">*</span> n)) ];</td>
      </tr>
      <tr>
        <td id="L3842" class="blob-num js-line-number" data-line-number="3842"></td>
        <td id="LC3842" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3843" class="blob-num js-line-number" data-line-number="3843"></td>
        <td id="LC3843" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> forward;</td>
      </tr>
      <tr>
        <td id="L3844" class="blob-num js-line-number" data-line-number="3844"></td>
        <td id="LC3844" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3845" class="blob-num js-line-number" data-line-number="3845"></td>
        <td id="LC3845" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">conicEqualArea</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3846" class="blob-num js-line-number" data-line-number="3846"></td>
        <td id="LC3846" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_conic(d3_geo_conicEqualArea);</td>
      </tr>
      <tr>
        <td id="L3847" class="blob-num js-line-number" data-line-number="3847"></td>
        <td id="LC3847" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_conicEqualArea;</td>
      </tr>
      <tr>
        <td id="L3848" class="blob-num js-line-number" data-line-number="3848"></td>
        <td id="LC3848" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">albers</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3849" class="blob-num js-line-number" data-line-number="3849"></td>
        <td id="LC3849" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.geo.conicEqualArea().rotate([ <span class="pl-c1">96</span>, <span class="pl-c1">0</span> ]).center([ <span class="pl-k">-</span>.<span class="pl-c1">6</span>, <span class="pl-c1">38.7</span> ]).parallels([ <span class="pl-c1">29.5</span>, <span class="pl-c1">45.5</span> ]).scale(<span class="pl-c1">1070</span>);</td>
      </tr>
      <tr>
        <td id="L3850" class="blob-num js-line-number" data-line-number="3850"></td>
        <td id="LC3850" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3851" class="blob-num js-line-number" data-line-number="3851"></td>
        <td id="LC3851" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">albersUsa</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3852" class="blob-num js-line-number" data-line-number="3852"></td>
        <td id="LC3852" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lower48 <span class="pl-k">=</span> d3.geo.albers();</td>
      </tr>
      <tr>
        <td id="L3853" class="blob-num js-line-number" data-line-number="3853"></td>
        <td id="LC3853" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> alaska <span class="pl-k">=</span> d3.geo.conicEqualArea().rotate([ <span class="pl-c1">154</span>, <span class="pl-c1">0</span> ]).center([ <span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">58.5</span> ]).parallels([ <span class="pl-c1">55</span>, <span class="pl-c1">65</span> ]);</td>
      </tr>
      <tr>
        <td id="L3854" class="blob-num js-line-number" data-line-number="3854"></td>
        <td id="LC3854" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> hawaii <span class="pl-k">=</span> d3.geo.conicEqualArea().rotate([ <span class="pl-c1">157</span>, <span class="pl-c1">0</span> ]).center([ <span class="pl-k">-</span><span class="pl-c1">3</span>, <span class="pl-c1">19.9</span> ]).parallels([ <span class="pl-c1">8</span>, <span class="pl-c1">18</span> ]);</td>
      </tr>
      <tr>
        <td id="L3855" class="blob-num js-line-number" data-line-number="3855"></td>
        <td id="LC3855" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> point, pointStream <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3856" class="blob-num js-line-number" data-line-number="3856"></td>
        <td id="LC3856" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">point</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3857" class="blob-num js-line-number" data-line-number="3857"></td>
        <td id="LC3857" class="blob-code blob-code-inner js-file-line">        point <span class="pl-k">=</span> [ x, y ];</td>
      </tr>
      <tr>
        <td id="L3858" class="blob-num js-line-number" data-line-number="3858"></td>
        <td id="LC3858" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3859" class="blob-num js-line-number" data-line-number="3859"></td>
        <td id="LC3859" class="blob-code blob-code-inner js-file-line">    }, lower48Point, alaskaPoint, hawaiiPoint;</td>
      </tr>
      <tr>
        <td id="L3860" class="blob-num js-line-number" data-line-number="3860"></td>
        <td id="LC3860" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">albersUsa</span>(<span class="pl-smi">coordinates</span>) {</td>
      </tr>
      <tr>
        <td id="L3861" class="blob-num js-line-number" data-line-number="3861"></td>
        <td id="LC3861" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x <span class="pl-k">=</span> coordinates[<span class="pl-c1">0</span>], y <span class="pl-k">=</span> coordinates[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3862" class="blob-num js-line-number" data-line-number="3862"></td>
        <td id="LC3862" class="blob-code blob-code-inner js-file-line">      point <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3863" class="blob-num js-line-number" data-line-number="3863"></td>
        <td id="LC3863" class="blob-code blob-code-inner js-file-line">      (lower48Point(x, y), point) <span class="pl-k">||</span> (alaskaPoint(x, y), point) <span class="pl-k">||</span> hawaiiPoint(x, y);</td>
      </tr>
      <tr>
        <td id="L3864" class="blob-num js-line-number" data-line-number="3864"></td>
        <td id="LC3864" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> point;</td>
      </tr>
      <tr>
        <td id="L3865" class="blob-num js-line-number" data-line-number="3865"></td>
        <td id="LC3865" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3866" class="blob-num js-line-number" data-line-number="3866"></td>
        <td id="LC3866" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">albersUsa</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">coordinates</span>) {</td>
      </tr>
      <tr>
        <td id="L3867" class="blob-num js-line-number" data-line-number="3867"></td>
        <td id="LC3867" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> k <span class="pl-k">=</span> lower48.scale(), t <span class="pl-k">=</span> lower48.translate(), x <span class="pl-k">=</span> (coordinates[<span class="pl-c1">0</span>] <span class="pl-k">-</span> t[<span class="pl-c1">0</span>]) / k, y <span class="pl-k">=</span> (coordinates[<span class="pl-c1">1</span>] <span class="pl-k">-</span> t[<span class="pl-c1">1</span>]) / k;</td>
      </tr>
      <tr>
        <td id="L3868" class="blob-num js-line-number" data-line-number="3868"></td>
        <td id="LC3868" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (y <span class="pl-k">&gt;=</span> .<span class="pl-c1">12</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&lt;</span> .<span class="pl-c1">234</span> <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&gt;=</span> <span class="pl-k">-</span>.<span class="pl-c1">425</span> <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;</span> <span class="pl-k">-</span>.<span class="pl-c1">214</span> <span class="pl-k">?</span> alaska <span class="pl-k">:</span> y <span class="pl-k">&gt;=</span> .<span class="pl-c1">166</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">&lt;</span> .<span class="pl-c1">234</span> <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&gt;=</span> <span class="pl-k">-</span>.<span class="pl-c1">214</span> <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;</span> <span class="pl-k">-</span>.<span class="pl-c1">115</span> <span class="pl-k">?</span> hawaii <span class="pl-k">:</span> lower48).invert(coordinates);</td>
      </tr>
      <tr>
        <td id="L3869" class="blob-num js-line-number" data-line-number="3869"></td>
        <td id="LC3869" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3870" class="blob-num js-line-number" data-line-number="3870"></td>
        <td id="LC3870" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">albersUsa</span>.<span class="pl-en">stream</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L3871" class="blob-num js-line-number" data-line-number="3871"></td>
        <td id="LC3871" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> lower48Stream <span class="pl-k">=</span> lower48.stream(stream), alaskaStream <span class="pl-k">=</span> alaska.stream(stream), hawaiiStream <span class="pl-k">=</span> hawaii.stream(stream);</td>
      </tr>
      <tr>
        <td id="L3872" class="blob-num js-line-number" data-line-number="3872"></td>
        <td id="LC3872" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L3873" class="blob-num js-line-number" data-line-number="3873"></td>
        <td id="LC3873" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">point</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3874" class="blob-num js-line-number" data-line-number="3874"></td>
        <td id="LC3874" class="blob-code blob-code-inner js-file-line">          lower48Stream.point(x, y);</td>
      </tr>
      <tr>
        <td id="L3875" class="blob-num js-line-number" data-line-number="3875"></td>
        <td id="LC3875" class="blob-code blob-code-inner js-file-line">          alaskaStream.point(x, y);</td>
      </tr>
      <tr>
        <td id="L3876" class="blob-num js-line-number" data-line-number="3876"></td>
        <td id="LC3876" class="blob-code blob-code-inner js-file-line">          hawaiiStream.point(x, y);</td>
      </tr>
      <tr>
        <td id="L3877" class="blob-num js-line-number" data-line-number="3877"></td>
        <td id="LC3877" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3878" class="blob-num js-line-number" data-line-number="3878"></td>
        <td id="LC3878" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">sphere</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3879" class="blob-num js-line-number" data-line-number="3879"></td>
        <td id="LC3879" class="blob-code blob-code-inner js-file-line">          lower48Stream.sphere();</td>
      </tr>
      <tr>
        <td id="L3880" class="blob-num js-line-number" data-line-number="3880"></td>
        <td id="LC3880" class="blob-code blob-code-inner js-file-line">          alaskaStream.sphere();</td>
      </tr>
      <tr>
        <td id="L3881" class="blob-num js-line-number" data-line-number="3881"></td>
        <td id="LC3881" class="blob-code blob-code-inner js-file-line">          hawaiiStream.sphere();</td>
      </tr>
      <tr>
        <td id="L3882" class="blob-num js-line-number" data-line-number="3882"></td>
        <td id="LC3882" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3883" class="blob-num js-line-number" data-line-number="3883"></td>
        <td id="LC3883" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">lineStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3884" class="blob-num js-line-number" data-line-number="3884"></td>
        <td id="LC3884" class="blob-code blob-code-inner js-file-line">          lower48Stream.lineStart();</td>
      </tr>
      <tr>
        <td id="L3885" class="blob-num js-line-number" data-line-number="3885"></td>
        <td id="LC3885" class="blob-code blob-code-inner js-file-line">          alaskaStream.lineStart();</td>
      </tr>
      <tr>
        <td id="L3886" class="blob-num js-line-number" data-line-number="3886"></td>
        <td id="LC3886" class="blob-code blob-code-inner js-file-line">          hawaiiStream.lineStart();</td>
      </tr>
      <tr>
        <td id="L3887" class="blob-num js-line-number" data-line-number="3887"></td>
        <td id="LC3887" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3888" class="blob-num js-line-number" data-line-number="3888"></td>
        <td id="LC3888" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">lineEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3889" class="blob-num js-line-number" data-line-number="3889"></td>
        <td id="LC3889" class="blob-code blob-code-inner js-file-line">          lower48Stream.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3890" class="blob-num js-line-number" data-line-number="3890"></td>
        <td id="LC3890" class="blob-code blob-code-inner js-file-line">          alaskaStream.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3891" class="blob-num js-line-number" data-line-number="3891"></td>
        <td id="LC3891" class="blob-code blob-code-inner js-file-line">          hawaiiStream.lineEnd();</td>
      </tr>
      <tr>
        <td id="L3892" class="blob-num js-line-number" data-line-number="3892"></td>
        <td id="LC3892" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3893" class="blob-num js-line-number" data-line-number="3893"></td>
        <td id="LC3893" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3894" class="blob-num js-line-number" data-line-number="3894"></td>
        <td id="LC3894" class="blob-code blob-code-inner js-file-line">          lower48Stream.polygonStart();</td>
      </tr>
      <tr>
        <td id="L3895" class="blob-num js-line-number" data-line-number="3895"></td>
        <td id="LC3895" class="blob-code blob-code-inner js-file-line">          alaskaStream.polygonStart();</td>
      </tr>
      <tr>
        <td id="L3896" class="blob-num js-line-number" data-line-number="3896"></td>
        <td id="LC3896" class="blob-code blob-code-inner js-file-line">          hawaiiStream.polygonStart();</td>
      </tr>
      <tr>
        <td id="L3897" class="blob-num js-line-number" data-line-number="3897"></td>
        <td id="LC3897" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3898" class="blob-num js-line-number" data-line-number="3898"></td>
        <td id="LC3898" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3899" class="blob-num js-line-number" data-line-number="3899"></td>
        <td id="LC3899" class="blob-code blob-code-inner js-file-line">          lower48Stream.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L3900" class="blob-num js-line-number" data-line-number="3900"></td>
        <td id="LC3900" class="blob-code blob-code-inner js-file-line">          alaskaStream.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L3901" class="blob-num js-line-number" data-line-number="3901"></td>
        <td id="LC3901" class="blob-code blob-code-inner js-file-line">          hawaiiStream.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L3902" class="blob-num js-line-number" data-line-number="3902"></td>
        <td id="LC3902" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3903" class="blob-num js-line-number" data-line-number="3903"></td>
        <td id="LC3903" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L3904" class="blob-num js-line-number" data-line-number="3904"></td>
        <td id="LC3904" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3905" class="blob-num js-line-number" data-line-number="3905"></td>
        <td id="LC3905" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">albersUsa</span>.<span class="pl-en">precision</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L3906" class="blob-num js-line-number" data-line-number="3906"></td>
        <td id="LC3906" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> lower48.precision();</td>
      </tr>
      <tr>
        <td id="L3907" class="blob-num js-line-number" data-line-number="3907"></td>
        <td id="LC3907" class="blob-code blob-code-inner js-file-line">      lower48.precision(_);</td>
      </tr>
      <tr>
        <td id="L3908" class="blob-num js-line-number" data-line-number="3908"></td>
        <td id="LC3908" class="blob-code blob-code-inner js-file-line">      alaska.precision(_);</td>
      </tr>
      <tr>
        <td id="L3909" class="blob-num js-line-number" data-line-number="3909"></td>
        <td id="LC3909" class="blob-code blob-code-inner js-file-line">      hawaii.precision(_);</td>
      </tr>
      <tr>
        <td id="L3910" class="blob-num js-line-number" data-line-number="3910"></td>
        <td id="LC3910" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> albersUsa;</td>
      </tr>
      <tr>
        <td id="L3911" class="blob-num js-line-number" data-line-number="3911"></td>
        <td id="LC3911" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3912" class="blob-num js-line-number" data-line-number="3912"></td>
        <td id="LC3912" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">albersUsa</span>.<span class="pl-en">scale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L3913" class="blob-num js-line-number" data-line-number="3913"></td>
        <td id="LC3913" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> lower48.scale();</td>
      </tr>
      <tr>
        <td id="L3914" class="blob-num js-line-number" data-line-number="3914"></td>
        <td id="LC3914" class="blob-code blob-code-inner js-file-line">      lower48.scale(_);</td>
      </tr>
      <tr>
        <td id="L3915" class="blob-num js-line-number" data-line-number="3915"></td>
        <td id="LC3915" class="blob-code blob-code-inner js-file-line">      alaska.scale(_ <span class="pl-k">*</span> .<span class="pl-c1">35</span>);</td>
      </tr>
      <tr>
        <td id="L3916" class="blob-num js-line-number" data-line-number="3916"></td>
        <td id="LC3916" class="blob-code blob-code-inner js-file-line">      hawaii.scale(_);</td>
      </tr>
      <tr>
        <td id="L3917" class="blob-num js-line-number" data-line-number="3917"></td>
        <td id="LC3917" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> albersUsa.translate(lower48.translate());</td>
      </tr>
      <tr>
        <td id="L3918" class="blob-num js-line-number" data-line-number="3918"></td>
        <td id="LC3918" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3919" class="blob-num js-line-number" data-line-number="3919"></td>
        <td id="LC3919" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">albersUsa</span>.<span class="pl-en">translate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L3920" class="blob-num js-line-number" data-line-number="3920"></td>
        <td id="LC3920" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> lower48.translate();</td>
      </tr>
      <tr>
        <td id="L3921" class="blob-num js-line-number" data-line-number="3921"></td>
        <td id="LC3921" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> k <span class="pl-k">=</span> lower48.scale(), x <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>], y <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L3922" class="blob-num js-line-number" data-line-number="3922"></td>
        <td id="LC3922" class="blob-code blob-code-inner js-file-line">      lower48Point <span class="pl-k">=</span> lower48.translate(_).clipExtent([ [ x <span class="pl-k">-</span> .<span class="pl-c1">455</span> <span class="pl-k">*</span> k, y <span class="pl-k">-</span> .<span class="pl-c1">238</span> <span class="pl-k">*</span> k ], [ x <span class="pl-k">+</span> .<span class="pl-c1">455</span> <span class="pl-k">*</span> k, y <span class="pl-k">+</span> .<span class="pl-c1">238</span> <span class="pl-k">*</span> k ] ]).stream(pointStream).point;</td>
      </tr>
      <tr>
        <td id="L3923" class="blob-num js-line-number" data-line-number="3923"></td>
        <td id="LC3923" class="blob-code blob-code-inner js-file-line">      alaskaPoint <span class="pl-k">=</span> alaska.translate([ x <span class="pl-k">-</span> .<span class="pl-c1">307</span> <span class="pl-k">*</span> k, y <span class="pl-k">+</span> .<span class="pl-c1">201</span> <span class="pl-k">*</span> k ]).clipExtent([ [ x <span class="pl-k">-</span> .<span class="pl-c1">425</span> <span class="pl-k">*</span> k <span class="pl-k">+</span> Îµ, y <span class="pl-k">+</span> .<span class="pl-c1">12</span> <span class="pl-k">*</span> k <span class="pl-k">+</span> Îµ ], [ x <span class="pl-k">-</span> .<span class="pl-c1">214</span> <span class="pl-k">*</span> k <span class="pl-k">-</span> Îµ, y <span class="pl-k">+</span> .<span class="pl-c1">234</span> <span class="pl-k">*</span> k <span class="pl-k">-</span> Îµ ] ]).stream(pointStream).point;</td>
      </tr>
      <tr>
        <td id="L3924" class="blob-num js-line-number" data-line-number="3924"></td>
        <td id="LC3924" class="blob-code blob-code-inner js-file-line">      hawaiiPoint <span class="pl-k">=</span> hawaii.translate([ x <span class="pl-k">-</span> .<span class="pl-c1">205</span> <span class="pl-k">*</span> k, y <span class="pl-k">+</span> .<span class="pl-c1">212</span> <span class="pl-k">*</span> k ]).clipExtent([ [ x <span class="pl-k">-</span> .<span class="pl-c1">214</span> <span class="pl-k">*</span> k <span class="pl-k">+</span> Îµ, y <span class="pl-k">+</span> .<span class="pl-c1">166</span> <span class="pl-k">*</span> k <span class="pl-k">+</span> Îµ ], [ x <span class="pl-k">-</span> .<span class="pl-c1">115</span> <span class="pl-k">*</span> k <span class="pl-k">-</span> Îµ, y <span class="pl-k">+</span> .<span class="pl-c1">234</span> <span class="pl-k">*</span> k <span class="pl-k">-</span> Îµ ] ]).stream(pointStream).point;</td>
      </tr>
      <tr>
        <td id="L3925" class="blob-num js-line-number" data-line-number="3925"></td>
        <td id="LC3925" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> albersUsa;</td>
      </tr>
      <tr>
        <td id="L3926" class="blob-num js-line-number" data-line-number="3926"></td>
        <td id="LC3926" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3927" class="blob-num js-line-number" data-line-number="3927"></td>
        <td id="LC3927" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> albersUsa.scale(<span class="pl-c1">1070</span>);</td>
      </tr>
      <tr>
        <td id="L3928" class="blob-num js-line-number" data-line-number="3928"></td>
        <td id="LC3928" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3929" class="blob-num js-line-number" data-line-number="3929"></td>
        <td id="LC3929" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3930" class="blob-num js-line-number" data-line-number="3930"></td>
        <td id="LC3930" class="blob-code blob-code-inner js-file-line">    point<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L3931" class="blob-num js-line-number" data-line-number="3931"></td>
        <td id="LC3931" class="blob-code blob-code-inner js-file-line">    lineStart<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L3932" class="blob-num js-line-number" data-line-number="3932"></td>
        <td id="LC3932" class="blob-code blob-code-inner js-file-line">    lineEnd<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L3933" class="blob-num js-line-number" data-line-number="3933"></td>
        <td id="LC3933" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3934" class="blob-num js-line-number" data-line-number="3934"></td>
        <td id="LC3934" class="blob-code blob-code-inner js-file-line">      d3_geo_pathAreaPolygon <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3935" class="blob-num js-line-number" data-line-number="3935"></td>
        <td id="LC3935" class="blob-code blob-code-inner js-file-line">      d3_geo_pathArea.lineStart <span class="pl-k">=</span> d3_geo_pathAreaRingStart;</td>
      </tr>
      <tr>
        <td id="L3936" class="blob-num js-line-number" data-line-number="3936"></td>
        <td id="LC3936" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L3937" class="blob-num js-line-number" data-line-number="3937"></td>
        <td id="LC3937" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3938" class="blob-num js-line-number" data-line-number="3938"></td>
        <td id="LC3938" class="blob-code blob-code-inner js-file-line">      d3_geo_pathArea.lineStart <span class="pl-k">=</span> d3_geo_pathArea.lineEnd <span class="pl-k">=</span> d3_geo_pathArea.point <span class="pl-k">=</span> d3_noop;</td>
      </tr>
      <tr>
        <td id="L3939" class="blob-num js-line-number" data-line-number="3939"></td>
        <td id="LC3939" class="blob-code blob-code-inner js-file-line">      d3_geo_pathAreaSum <span class="pl-k">+=</span> <span class="pl-c1">abs</span>(d3_geo_pathAreaPolygon / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L3940" class="blob-num js-line-number" data-line-number="3940"></td>
        <td id="LC3940" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3941" class="blob-num js-line-number" data-line-number="3941"></td>
        <td id="LC3941" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3942" class="blob-num js-line-number" data-line-number="3942"></td>
        <td id="LC3942" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathAreaRingStart</span>() {</td>
      </tr>
      <tr>
        <td id="L3943" class="blob-num js-line-number" data-line-number="3943"></td>
        <td id="LC3943" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x00, y00, x0, y0;</td>
      </tr>
      <tr>
        <td id="L3944" class="blob-num js-line-number" data-line-number="3944"></td>
        <td id="LC3944" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_pathArea</span>.<span class="pl-en">point</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3945" class="blob-num js-line-number" data-line-number="3945"></td>
        <td id="LC3945" class="blob-code blob-code-inner js-file-line">      d3_geo_pathArea.point <span class="pl-k">=</span> nextPoint;</td>
      </tr>
      <tr>
        <td id="L3946" class="blob-num js-line-number" data-line-number="3946"></td>
        <td id="LC3946" class="blob-code blob-code-inner js-file-line">      x00 <span class="pl-k">=</span> x0 <span class="pl-k">=</span> x, y00 <span class="pl-k">=</span> y0 <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L3947" class="blob-num js-line-number" data-line-number="3947"></td>
        <td id="LC3947" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3948" class="blob-num js-line-number" data-line-number="3948"></td>
        <td id="LC3948" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nextPoint</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3949" class="blob-num js-line-number" data-line-number="3949"></td>
        <td id="LC3949" class="blob-code blob-code-inner js-file-line">      d3_geo_pathAreaPolygon <span class="pl-k">+=</span> y0 <span class="pl-k">*</span> x <span class="pl-k">-</span> x0 <span class="pl-k">*</span> y;</td>
      </tr>
      <tr>
        <td id="L3950" class="blob-num js-line-number" data-line-number="3950"></td>
        <td id="LC3950" class="blob-code blob-code-inner js-file-line">      x0 <span class="pl-k">=</span> x, y0 <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L3951" class="blob-num js-line-number" data-line-number="3951"></td>
        <td id="LC3951" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3952" class="blob-num js-line-number" data-line-number="3952"></td>
        <td id="LC3952" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_pathArea</span>.<span class="pl-en">lineEnd</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3953" class="blob-num js-line-number" data-line-number="3953"></td>
        <td id="LC3953" class="blob-code blob-code-inner js-file-line">      nextPoint(x00, y00);</td>
      </tr>
      <tr>
        <td id="L3954" class="blob-num js-line-number" data-line-number="3954"></td>
        <td id="LC3954" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3955" class="blob-num js-line-number" data-line-number="3955"></td>
        <td id="LC3955" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3956" class="blob-num js-line-number" data-line-number="3956"></td>
        <td id="LC3956" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;</td>
      </tr>
      <tr>
        <td id="L3957" class="blob-num js-line-number" data-line-number="3957"></td>
        <td id="LC3957" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_pathBounds <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3958" class="blob-num js-line-number" data-line-number="3958"></td>
        <td id="LC3958" class="blob-code blob-code-inner js-file-line">    point<span class="pl-k">:</span> d3_geo_pathBoundsPoint,</td>
      </tr>
      <tr>
        <td id="L3959" class="blob-num js-line-number" data-line-number="3959"></td>
        <td id="LC3959" class="blob-code blob-code-inner js-file-line">    lineStart<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L3960" class="blob-num js-line-number" data-line-number="3960"></td>
        <td id="LC3960" class="blob-code blob-code-inner js-file-line">    lineEnd<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L3961" class="blob-num js-line-number" data-line-number="3961"></td>
        <td id="LC3961" class="blob-code blob-code-inner js-file-line">    polygonStart<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L3962" class="blob-num js-line-number" data-line-number="3962"></td>
        <td id="LC3962" class="blob-code blob-code-inner js-file-line">    polygonEnd<span class="pl-k">:</span> d3_noop</td>
      </tr>
      <tr>
        <td id="L3963" class="blob-num js-line-number" data-line-number="3963"></td>
        <td id="LC3963" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3964" class="blob-num js-line-number" data-line-number="3964"></td>
        <td id="LC3964" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathBoundsPoint</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3965" class="blob-num js-line-number" data-line-number="3965"></td>
        <td id="LC3965" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&lt;</span> d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3966" class="blob-num js-line-number" data-line-number="3966"></td>
        <td id="LC3966" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (x <span class="pl-k">&gt;</span> d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L3967" class="blob-num js-line-number" data-line-number="3967"></td>
        <td id="LC3967" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (y <span class="pl-k">&lt;</span> d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L3968" class="blob-num js-line-number" data-line-number="3968"></td>
        <td id="LC3968" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (y <span class="pl-k">&gt;</span> d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L3969" class="blob-num js-line-number" data-line-number="3969"></td>
        <td id="LC3969" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L3970" class="blob-num js-line-number" data-line-number="3970"></td>
        <td id="LC3970" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathBuffer</span>() {</td>
      </tr>
      <tr>
        <td id="L3971" class="blob-num js-line-number" data-line-number="3971"></td>
        <td id="LC3971" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> pointCircle <span class="pl-k">=</span> d3_geo_pathBufferCircle(<span class="pl-c1">4.5</span>), buffer <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3972" class="blob-num js-line-number" data-line-number="3972"></td>
        <td id="LC3972" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> stream <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3973" class="blob-num js-line-number" data-line-number="3973"></td>
        <td id="LC3973" class="blob-code blob-code-inner js-file-line">      point<span class="pl-k">:</span> point,</td>
      </tr>
      <tr>
        <td id="L3974" class="blob-num js-line-number" data-line-number="3974"></td>
        <td id="LC3974" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">lineStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3975" class="blob-num js-line-number" data-line-number="3975"></td>
        <td id="LC3975" class="blob-code blob-code-inner js-file-line">        stream.point <span class="pl-k">=</span> pointLineStart;</td>
      </tr>
      <tr>
        <td id="L3976" class="blob-num js-line-number" data-line-number="3976"></td>
        <td id="LC3976" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3977" class="blob-num js-line-number" data-line-number="3977"></td>
        <td id="LC3977" class="blob-code blob-code-inner js-file-line">      lineEnd<span class="pl-k">:</span> lineEnd,</td>
      </tr>
      <tr>
        <td id="L3978" class="blob-num js-line-number" data-line-number="3978"></td>
        <td id="LC3978" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3979" class="blob-num js-line-number" data-line-number="3979"></td>
        <td id="LC3979" class="blob-code blob-code-inner js-file-line">        stream.lineEnd <span class="pl-k">=</span> lineEndPolygon;</td>
      </tr>
      <tr>
        <td id="L3980" class="blob-num js-line-number" data-line-number="3980"></td>
        <td id="LC3980" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3981" class="blob-num js-line-number" data-line-number="3981"></td>
        <td id="LC3981" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3982" class="blob-num js-line-number" data-line-number="3982"></td>
        <td id="LC3982" class="blob-code blob-code-inner js-file-line">        stream.lineEnd <span class="pl-k">=</span> lineEnd;</td>
      </tr>
      <tr>
        <td id="L3983" class="blob-num js-line-number" data-line-number="3983"></td>
        <td id="LC3983" class="blob-code blob-code-inner js-file-line">        stream.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L3984" class="blob-num js-line-number" data-line-number="3984"></td>
        <td id="LC3984" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3985" class="blob-num js-line-number" data-line-number="3985"></td>
        <td id="LC3985" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">pointRadius</span>: <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L3986" class="blob-num js-line-number" data-line-number="3986"></td>
        <td id="LC3986" class="blob-code blob-code-inner js-file-line">        pointCircle <span class="pl-k">=</span> d3_geo_pathBufferCircle(_);</td>
      </tr>
      <tr>
        <td id="L3987" class="blob-num js-line-number" data-line-number="3987"></td>
        <td id="LC3987" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> stream;</td>
      </tr>
      <tr>
        <td id="L3988" class="blob-num js-line-number" data-line-number="3988"></td>
        <td id="LC3988" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3989" class="blob-num js-line-number" data-line-number="3989"></td>
        <td id="LC3989" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">result</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3990" class="blob-num js-line-number" data-line-number="3990"></td>
        <td id="LC3990" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (buffer.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L3991" class="blob-num js-line-number" data-line-number="3991"></td>
        <td id="LC3991" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> result <span class="pl-k">=</span> buffer.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3992" class="blob-num js-line-number" data-line-number="3992"></td>
        <td id="LC3992" class="blob-code blob-code-inner js-file-line">          buffer <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3993" class="blob-num js-line-number" data-line-number="3993"></td>
        <td id="LC3993" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> result;</td>
      </tr>
      <tr>
        <td id="L3994" class="blob-num js-line-number" data-line-number="3994"></td>
        <td id="LC3994" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3995" class="blob-num js-line-number" data-line-number="3995"></td>
        <td id="LC3995" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3996" class="blob-num js-line-number" data-line-number="3996"></td>
        <td id="LC3996" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3997" class="blob-num js-line-number" data-line-number="3997"></td>
        <td id="LC3997" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">point</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L3998" class="blob-num js-line-number" data-line-number="3998"></td>
        <td id="LC3998" class="blob-code blob-code-inner js-file-line">      buffer.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, x, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y, pointCircle);</td>
      </tr>
      <tr>
        <td id="L3999" class="blob-num js-line-number" data-line-number="3999"></td>
        <td id="LC3999" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4000" class="blob-num js-line-number" data-line-number="4000"></td>
        <td id="LC4000" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pointLineStart</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4001" class="blob-num js-line-number" data-line-number="4001"></td>
        <td id="LC4001" class="blob-code blob-code-inner js-file-line">      buffer.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, x, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y);</td>
      </tr>
      <tr>
        <td id="L4002" class="blob-num js-line-number" data-line-number="4002"></td>
        <td id="LC4002" class="blob-code blob-code-inner js-file-line">      stream.point <span class="pl-k">=</span> pointLine;</td>
      </tr>
      <tr>
        <td id="L4003" class="blob-num js-line-number" data-line-number="4003"></td>
        <td id="LC4003" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4004" class="blob-num js-line-number" data-line-number="4004"></td>
        <td id="LC4004" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pointLine</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4005" class="blob-num js-line-number" data-line-number="4005"></td>
        <td id="LC4005" class="blob-code blob-code-inner js-file-line">      buffer.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, x, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y);</td>
      </tr>
      <tr>
        <td id="L4006" class="blob-num js-line-number" data-line-number="4006"></td>
        <td id="LC4006" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4007" class="blob-num js-line-number" data-line-number="4007"></td>
        <td id="LC4007" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">lineEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L4008" class="blob-num js-line-number" data-line-number="4008"></td>
        <td id="LC4008" class="blob-code blob-code-inner js-file-line">      stream.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L4009" class="blob-num js-line-number" data-line-number="4009"></td>
        <td id="LC4009" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4010" class="blob-num js-line-number" data-line-number="4010"></td>
        <td id="LC4010" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">lineEndPolygon</span>() {</td>
      </tr>
      <tr>
        <td id="L4011" class="blob-num js-line-number" data-line-number="4011"></td>
        <td id="LC4011" class="blob-code blob-code-inner js-file-line">      buffer.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4012" class="blob-num js-line-number" data-line-number="4012"></td>
        <td id="LC4012" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4013" class="blob-num js-line-number" data-line-number="4013"></td>
        <td id="LC4013" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> stream;</td>
      </tr>
      <tr>
        <td id="L4014" class="blob-num js-line-number" data-line-number="4014"></td>
        <td id="LC4014" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4015" class="blob-num js-line-number" data-line-number="4015"></td>
        <td id="LC4015" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathBufferCircle</span>(<span class="pl-smi">radius</span>) {</td>
      </tr>
      <tr>
        <td id="L4016" class="blob-num js-line-number" data-line-number="4016"></td>
        <td id="LC4016" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>m0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> radius <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> radius <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> radius <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-k">*</span> radius <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> radius <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> radius <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> radius <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4017" class="blob-num js-line-number" data-line-number="4017"></td>
        <td id="LC4017" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4018" class="blob-num js-line-number" data-line-number="4018"></td>
        <td id="LC4018" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_pathCentroid <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4019" class="blob-num js-line-number" data-line-number="4019"></td>
        <td id="LC4019" class="blob-code blob-code-inner js-file-line">    point<span class="pl-k">:</span> d3_geo_pathCentroidPoint,</td>
      </tr>
      <tr>
        <td id="L4020" class="blob-num js-line-number" data-line-number="4020"></td>
        <td id="LC4020" class="blob-code blob-code-inner js-file-line">    lineStart<span class="pl-k">:</span> d3_geo_pathCentroidLineStart,</td>
      </tr>
      <tr>
        <td id="L4021" class="blob-num js-line-number" data-line-number="4021"></td>
        <td id="LC4021" class="blob-code blob-code-inner js-file-line">    lineEnd<span class="pl-k">:</span> d3_geo_pathCentroidLineEnd,</td>
      </tr>
      <tr>
        <td id="L4022" class="blob-num js-line-number" data-line-number="4022"></td>
        <td id="LC4022" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4023" class="blob-num js-line-number" data-line-number="4023"></td>
        <td id="LC4023" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroid.lineStart <span class="pl-k">=</span> d3_geo_pathCentroidRingStart;</td>
      </tr>
      <tr>
        <td id="L4024" class="blob-num js-line-number" data-line-number="4024"></td>
        <td id="LC4024" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4025" class="blob-num js-line-number" data-line-number="4025"></td>
        <td id="LC4025" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4026" class="blob-num js-line-number" data-line-number="4026"></td>
        <td id="LC4026" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroid.point <span class="pl-k">=</span> d3_geo_pathCentroidPoint;</td>
      </tr>
      <tr>
        <td id="L4027" class="blob-num js-line-number" data-line-number="4027"></td>
        <td id="LC4027" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroid.lineStart <span class="pl-k">=</span> d3_geo_pathCentroidLineStart;</td>
      </tr>
      <tr>
        <td id="L4028" class="blob-num js-line-number" data-line-number="4028"></td>
        <td id="LC4028" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroid.lineEnd <span class="pl-k">=</span> d3_geo_pathCentroidLineEnd;</td>
      </tr>
      <tr>
        <td id="L4029" class="blob-num js-line-number" data-line-number="4029"></td>
        <td id="LC4029" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4030" class="blob-num js-line-number" data-line-number="4030"></td>
        <td id="LC4030" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4031" class="blob-num js-line-number" data-line-number="4031"></td>
        <td id="LC4031" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathCentroidPoint</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4032" class="blob-num js-line-number" data-line-number="4032"></td>
        <td id="LC4032" class="blob-code blob-code-inner js-file-line">    d3_geo_centroidX0 <span class="pl-k">+=</span> x;</td>
      </tr>
      <tr>
        <td id="L4033" class="blob-num js-line-number" data-line-number="4033"></td>
        <td id="LC4033" class="blob-code blob-code-inner js-file-line">    d3_geo_centroidY0 <span class="pl-k">+=</span> y;</td>
      </tr>
      <tr>
        <td id="L4034" class="blob-num js-line-number" data-line-number="4034"></td>
        <td id="LC4034" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">++</span>d3_geo_centroidZ0;</td>
      </tr>
      <tr>
        <td id="L4035" class="blob-num js-line-number" data-line-number="4035"></td>
        <td id="LC4035" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4036" class="blob-num js-line-number" data-line-number="4036"></td>
        <td id="LC4036" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathCentroidLineStart</span>() {</td>
      </tr>
      <tr>
        <td id="L4037" class="blob-num js-line-number" data-line-number="4037"></td>
        <td id="LC4037" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x0, y0;</td>
      </tr>
      <tr>
        <td id="L4038" class="blob-num js-line-number" data-line-number="4038"></td>
        <td id="LC4038" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_pathCentroid</span>.<span class="pl-en">point</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4039" class="blob-num js-line-number" data-line-number="4039"></td>
        <td id="LC4039" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroid.point <span class="pl-k">=</span> nextPoint;</td>
      </tr>
      <tr>
        <td id="L4040" class="blob-num js-line-number" data-line-number="4040"></td>
        <td id="LC4040" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroidPoint(x0 <span class="pl-k">=</span> x, y0 <span class="pl-k">=</span> y);</td>
      </tr>
      <tr>
        <td id="L4041" class="blob-num js-line-number" data-line-number="4041"></td>
        <td id="LC4041" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4042" class="blob-num js-line-number" data-line-number="4042"></td>
        <td id="LC4042" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nextPoint</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4043" class="blob-num js-line-number" data-line-number="4043"></td>
        <td id="LC4043" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> dx <span class="pl-k">=</span> x <span class="pl-k">-</span> x0, dy <span class="pl-k">=</span> y <span class="pl-k">-</span> y0, z <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy);</td>
      </tr>
      <tr>
        <td id="L4044" class="blob-num js-line-number" data-line-number="4044"></td>
        <td id="LC4044" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidX1 <span class="pl-k">+=</span> z <span class="pl-k">*</span> (x0 <span class="pl-k">+</span> x) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L4045" class="blob-num js-line-number" data-line-number="4045"></td>
        <td id="LC4045" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidY1 <span class="pl-k">+=</span> z <span class="pl-k">*</span> (y0 <span class="pl-k">+</span> y) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L4046" class="blob-num js-line-number" data-line-number="4046"></td>
        <td id="LC4046" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidZ1 <span class="pl-k">+=</span> z;</td>
      </tr>
      <tr>
        <td id="L4047" class="blob-num js-line-number" data-line-number="4047"></td>
        <td id="LC4047" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroidPoint(x0 <span class="pl-k">=</span> x, y0 <span class="pl-k">=</span> y);</td>
      </tr>
      <tr>
        <td id="L4048" class="blob-num js-line-number" data-line-number="4048"></td>
        <td id="LC4048" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4049" class="blob-num js-line-number" data-line-number="4049"></td>
        <td id="LC4049" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4050" class="blob-num js-line-number" data-line-number="4050"></td>
        <td id="LC4050" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathCentroidLineEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L4051" class="blob-num js-line-number" data-line-number="4051"></td>
        <td id="LC4051" class="blob-code blob-code-inner js-file-line">    d3_geo_pathCentroid.point <span class="pl-k">=</span> d3_geo_pathCentroidPoint;</td>
      </tr>
      <tr>
        <td id="L4052" class="blob-num js-line-number" data-line-number="4052"></td>
        <td id="LC4052" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4053" class="blob-num js-line-number" data-line-number="4053"></td>
        <td id="LC4053" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathCentroidRingStart</span>() {</td>
      </tr>
      <tr>
        <td id="L4054" class="blob-num js-line-number" data-line-number="4054"></td>
        <td id="LC4054" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x00, y00, x0, y0;</td>
      </tr>
      <tr>
        <td id="L4055" class="blob-num js-line-number" data-line-number="4055"></td>
        <td id="LC4055" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_pathCentroid</span>.<span class="pl-en">point</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4056" class="blob-num js-line-number" data-line-number="4056"></td>
        <td id="LC4056" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroid.point <span class="pl-k">=</span> nextPoint;</td>
      </tr>
      <tr>
        <td id="L4057" class="blob-num js-line-number" data-line-number="4057"></td>
        <td id="LC4057" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroidPoint(x00 <span class="pl-k">=</span> x0 <span class="pl-k">=</span> x, y00 <span class="pl-k">=</span> y0 <span class="pl-k">=</span> y);</td>
      </tr>
      <tr>
        <td id="L4058" class="blob-num js-line-number" data-line-number="4058"></td>
        <td id="LC4058" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4059" class="blob-num js-line-number" data-line-number="4059"></td>
        <td id="LC4059" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nextPoint</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4060" class="blob-num js-line-number" data-line-number="4060"></td>
        <td id="LC4060" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> dx <span class="pl-k">=</span> x <span class="pl-k">-</span> x0, dy <span class="pl-k">=</span> y <span class="pl-k">-</span> y0, z <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy);</td>
      </tr>
      <tr>
        <td id="L4061" class="blob-num js-line-number" data-line-number="4061"></td>
        <td id="LC4061" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidX1 <span class="pl-k">+=</span> z <span class="pl-k">*</span> (x0 <span class="pl-k">+</span> x) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L4062" class="blob-num js-line-number" data-line-number="4062"></td>
        <td id="LC4062" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidY1 <span class="pl-k">+=</span> z <span class="pl-k">*</span> (y0 <span class="pl-k">+</span> y) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L4063" class="blob-num js-line-number" data-line-number="4063"></td>
        <td id="LC4063" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidZ1 <span class="pl-k">+=</span> z;</td>
      </tr>
      <tr>
        <td id="L4064" class="blob-num js-line-number" data-line-number="4064"></td>
        <td id="LC4064" class="blob-code blob-code-inner js-file-line">      z <span class="pl-k">=</span> y0 <span class="pl-k">*</span> x <span class="pl-k">-</span> x0 <span class="pl-k">*</span> y;</td>
      </tr>
      <tr>
        <td id="L4065" class="blob-num js-line-number" data-line-number="4065"></td>
        <td id="LC4065" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidX2 <span class="pl-k">+=</span> z <span class="pl-k">*</span> (x0 <span class="pl-k">+</span> x);</td>
      </tr>
      <tr>
        <td id="L4066" class="blob-num js-line-number" data-line-number="4066"></td>
        <td id="LC4066" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidY2 <span class="pl-k">+=</span> z <span class="pl-k">*</span> (y0 <span class="pl-k">+</span> y);</td>
      </tr>
      <tr>
        <td id="L4067" class="blob-num js-line-number" data-line-number="4067"></td>
        <td id="LC4067" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidZ2 <span class="pl-k">+=</span> z <span class="pl-k">*</span> <span class="pl-c1">3</span>;</td>
      </tr>
      <tr>
        <td id="L4068" class="blob-num js-line-number" data-line-number="4068"></td>
        <td id="LC4068" class="blob-code blob-code-inner js-file-line">      d3_geo_pathCentroidPoint(x0 <span class="pl-k">=</span> x, y0 <span class="pl-k">=</span> y);</td>
      </tr>
      <tr>
        <td id="L4069" class="blob-num js-line-number" data-line-number="4069"></td>
        <td id="LC4069" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4070" class="blob-num js-line-number" data-line-number="4070"></td>
        <td id="LC4070" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_pathCentroid</span>.<span class="pl-en">lineEnd</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4071" class="blob-num js-line-number" data-line-number="4071"></td>
        <td id="LC4071" class="blob-code blob-code-inner js-file-line">      nextPoint(x00, y00);</td>
      </tr>
      <tr>
        <td id="L4072" class="blob-num js-line-number" data-line-number="4072"></td>
        <td id="LC4072" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4073" class="blob-num js-line-number" data-line-number="4073"></td>
        <td id="LC4073" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4074" class="blob-num js-line-number" data-line-number="4074"></td>
        <td id="LC4074" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathContext</span>(<span class="pl-smi">context</span>) {</td>
      </tr>
      <tr>
        <td id="L4075" class="blob-num js-line-number" data-line-number="4075"></td>
        <td id="LC4075" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> pointRadius <span class="pl-k">=</span> <span class="pl-c1">4.5</span>;</td>
      </tr>
      <tr>
        <td id="L4076" class="blob-num js-line-number" data-line-number="4076"></td>
        <td id="LC4076" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> stream <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4077" class="blob-num js-line-number" data-line-number="4077"></td>
        <td id="LC4077" class="blob-code blob-code-inner js-file-line">      point<span class="pl-k">:</span> point,</td>
      </tr>
      <tr>
        <td id="L4078" class="blob-num js-line-number" data-line-number="4078"></td>
        <td id="LC4078" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">lineStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4079" class="blob-num js-line-number" data-line-number="4079"></td>
        <td id="LC4079" class="blob-code blob-code-inner js-file-line">        stream.point <span class="pl-k">=</span> pointLineStart;</td>
      </tr>
      <tr>
        <td id="L4080" class="blob-num js-line-number" data-line-number="4080"></td>
        <td id="LC4080" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L4081" class="blob-num js-line-number" data-line-number="4081"></td>
        <td id="LC4081" class="blob-code blob-code-inner js-file-line">      lineEnd<span class="pl-k">:</span> lineEnd,</td>
      </tr>
      <tr>
        <td id="L4082" class="blob-num js-line-number" data-line-number="4082"></td>
        <td id="LC4082" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4083" class="blob-num js-line-number" data-line-number="4083"></td>
        <td id="LC4083" class="blob-code blob-code-inner js-file-line">        stream.lineEnd <span class="pl-k">=</span> lineEndPolygon;</td>
      </tr>
      <tr>
        <td id="L4084" class="blob-num js-line-number" data-line-number="4084"></td>
        <td id="LC4084" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L4085" class="blob-num js-line-number" data-line-number="4085"></td>
        <td id="LC4085" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4086" class="blob-num js-line-number" data-line-number="4086"></td>
        <td id="LC4086" class="blob-code blob-code-inner js-file-line">        stream.lineEnd <span class="pl-k">=</span> lineEnd;</td>
      </tr>
      <tr>
        <td id="L4087" class="blob-num js-line-number" data-line-number="4087"></td>
        <td id="LC4087" class="blob-code blob-code-inner js-file-line">        stream.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L4088" class="blob-num js-line-number" data-line-number="4088"></td>
        <td id="LC4088" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L4089" class="blob-num js-line-number" data-line-number="4089"></td>
        <td id="LC4089" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">pointRadius</span>: <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4090" class="blob-num js-line-number" data-line-number="4090"></td>
        <td id="LC4090" class="blob-code blob-code-inner js-file-line">        pointRadius <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L4091" class="blob-num js-line-number" data-line-number="4091"></td>
        <td id="LC4091" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> stream;</td>
      </tr>
      <tr>
        <td id="L4092" class="blob-num js-line-number" data-line-number="4092"></td>
        <td id="LC4092" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L4093" class="blob-num js-line-number" data-line-number="4093"></td>
        <td id="LC4093" class="blob-code blob-code-inner js-file-line">      result<span class="pl-k">:</span> d3_noop</td>
      </tr>
      <tr>
        <td id="L4094" class="blob-num js-line-number" data-line-number="4094"></td>
        <td id="LC4094" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4095" class="blob-num js-line-number" data-line-number="4095"></td>
        <td id="LC4095" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">point</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4096" class="blob-num js-line-number" data-line-number="4096"></td>
        <td id="LC4096" class="blob-code blob-code-inner js-file-line">      context.<span class="pl-c1">moveTo</span>(x <span class="pl-k">+</span> pointRadius, y);</td>
      </tr>
      <tr>
        <td id="L4097" class="blob-num js-line-number" data-line-number="4097"></td>
        <td id="LC4097" class="blob-code blob-code-inner js-file-line">      context.arc(x, y, pointRadius, <span class="pl-c1">0</span>, Ï);</td>
      </tr>
      <tr>
        <td id="L4098" class="blob-num js-line-number" data-line-number="4098"></td>
        <td id="LC4098" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4099" class="blob-num js-line-number" data-line-number="4099"></td>
        <td id="LC4099" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pointLineStart</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4100" class="blob-num js-line-number" data-line-number="4100"></td>
        <td id="LC4100" class="blob-code blob-code-inner js-file-line">      context.<span class="pl-c1">moveTo</span>(x, y);</td>
      </tr>
      <tr>
        <td id="L4101" class="blob-num js-line-number" data-line-number="4101"></td>
        <td id="LC4101" class="blob-code blob-code-inner js-file-line">      stream.point <span class="pl-k">=</span> pointLine;</td>
      </tr>
      <tr>
        <td id="L4102" class="blob-num js-line-number" data-line-number="4102"></td>
        <td id="LC4102" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4103" class="blob-num js-line-number" data-line-number="4103"></td>
        <td id="LC4103" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pointLine</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4104" class="blob-num js-line-number" data-line-number="4104"></td>
        <td id="LC4104" class="blob-code blob-code-inner js-file-line">      context.lineTo(x, y);</td>
      </tr>
      <tr>
        <td id="L4105" class="blob-num js-line-number" data-line-number="4105"></td>
        <td id="LC4105" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4106" class="blob-num js-line-number" data-line-number="4106"></td>
        <td id="LC4106" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">lineEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L4107" class="blob-num js-line-number" data-line-number="4107"></td>
        <td id="LC4107" class="blob-code blob-code-inner js-file-line">      stream.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L4108" class="blob-num js-line-number" data-line-number="4108"></td>
        <td id="LC4108" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4109" class="blob-num js-line-number" data-line-number="4109"></td>
        <td id="LC4109" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">lineEndPolygon</span>() {</td>
      </tr>
      <tr>
        <td id="L4110" class="blob-num js-line-number" data-line-number="4110"></td>
        <td id="LC4110" class="blob-code blob-code-inner js-file-line">      context.closePath();</td>
      </tr>
      <tr>
        <td id="L4111" class="blob-num js-line-number" data-line-number="4111"></td>
        <td id="LC4111" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4112" class="blob-num js-line-number" data-line-number="4112"></td>
        <td id="LC4112" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> stream;</td>
      </tr>
      <tr>
        <td id="L4113" class="blob-num js-line-number" data-line-number="4113"></td>
        <td id="LC4113" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4114" class="blob-num js-line-number" data-line-number="4114"></td>
        <td id="LC4114" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_resample</span>(<span class="pl-smi">project</span>) {</td>
      </tr>
      <tr>
        <td id="L4115" class="blob-num js-line-number" data-line-number="4115"></td>
        <td id="LC4115" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Î´<span class="pl-c1">2</span> <span class="pl-k">=</span> .<span class="pl-c1">5</span>, cosMinDistance <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-c1">30</span> <span class="pl-k">*</span> d3_radians), maxDepth <span class="pl-k">=</span> <span class="pl-c1">16</span>;</td>
      </tr>
      <tr>
        <td id="L4116" class="blob-num js-line-number" data-line-number="4116"></td>
        <td id="LC4116" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">resample</span>(<span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L4117" class="blob-num js-line-number" data-line-number="4117"></td>
        <td id="LC4117" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (maxDepth <span class="pl-k">?</span> resampleRecursive <span class="pl-k">:</span> resampleNone)(stream);</td>
      </tr>
      <tr>
        <td id="L4118" class="blob-num js-line-number" data-line-number="4118"></td>
        <td id="LC4118" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4119" class="blob-num js-line-number" data-line-number="4119"></td>
        <td id="LC4119" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">resampleNone</span>(<span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L4120" class="blob-num js-line-number" data-line-number="4120"></td>
        <td id="LC4120" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_geo_transformPoint(stream, <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4121" class="blob-num js-line-number" data-line-number="4121"></td>
        <td id="LC4121" class="blob-code blob-code-inner js-file-line">        x <span class="pl-k">=</span> project(x, y);</td>
      </tr>
      <tr>
        <td id="L4122" class="blob-num js-line-number" data-line-number="4122"></td>
        <td id="LC4122" class="blob-code blob-code-inner js-file-line">        stream.point(x[<span class="pl-c1">0</span>], x[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4123" class="blob-num js-line-number" data-line-number="4123"></td>
        <td id="LC4123" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L4124" class="blob-num js-line-number" data-line-number="4124"></td>
        <td id="LC4124" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4125" class="blob-num js-line-number" data-line-number="4125"></td>
        <td id="LC4125" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">resampleRecursive</span>(<span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L4126" class="blob-num js-line-number" data-line-number="4126"></td>
        <td id="LC4126" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Î»<span class="pl-c1">00</span>, Ï<span class="pl-c1">00</span>, x00, y00, a00, b00, c00, Î»<span class="pl-c1">0</span>, x0, y0, a0, b0, c0;</td>
      </tr>
      <tr>
        <td id="L4127" class="blob-num js-line-number" data-line-number="4127"></td>
        <td id="LC4127" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> resample <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4128" class="blob-num js-line-number" data-line-number="4128"></td>
        <td id="LC4128" class="blob-code blob-code-inner js-file-line">        point<span class="pl-k">:</span> point,</td>
      </tr>
      <tr>
        <td id="L4129" class="blob-num js-line-number" data-line-number="4129"></td>
        <td id="LC4129" class="blob-code blob-code-inner js-file-line">        lineStart<span class="pl-k">:</span> lineStart,</td>
      </tr>
      <tr>
        <td id="L4130" class="blob-num js-line-number" data-line-number="4130"></td>
        <td id="LC4130" class="blob-code blob-code-inner js-file-line">        lineEnd<span class="pl-k">:</span> lineEnd,</td>
      </tr>
      <tr>
        <td id="L4131" class="blob-num js-line-number" data-line-number="4131"></td>
        <td id="LC4131" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4132" class="blob-num js-line-number" data-line-number="4132"></td>
        <td id="LC4132" class="blob-code blob-code-inner js-file-line">          stream.polygonStart();</td>
      </tr>
      <tr>
        <td id="L4133" class="blob-num js-line-number" data-line-number="4133"></td>
        <td id="LC4133" class="blob-code blob-code-inner js-file-line">          resample.lineStart <span class="pl-k">=</span> ringStart;</td>
      </tr>
      <tr>
        <td id="L4134" class="blob-num js-line-number" data-line-number="4134"></td>
        <td id="LC4134" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L4135" class="blob-num js-line-number" data-line-number="4135"></td>
        <td id="LC4135" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4136" class="blob-num js-line-number" data-line-number="4136"></td>
        <td id="LC4136" class="blob-code blob-code-inner js-file-line">          stream.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L4137" class="blob-num js-line-number" data-line-number="4137"></td>
        <td id="LC4137" class="blob-code blob-code-inner js-file-line">          resample.lineStart <span class="pl-k">=</span> lineStart;</td>
      </tr>
      <tr>
        <td id="L4138" class="blob-num js-line-number" data-line-number="4138"></td>
        <td id="LC4138" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4139" class="blob-num js-line-number" data-line-number="4139"></td>
        <td id="LC4139" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L4140" class="blob-num js-line-number" data-line-number="4140"></td>
        <td id="LC4140" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">point</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4141" class="blob-num js-line-number" data-line-number="4141"></td>
        <td id="LC4141" class="blob-code blob-code-inner js-file-line">        x <span class="pl-k">=</span> project(x, y);</td>
      </tr>
      <tr>
        <td id="L4142" class="blob-num js-line-number" data-line-number="4142"></td>
        <td id="LC4142" class="blob-code blob-code-inner js-file-line">        stream.point(x[<span class="pl-c1">0</span>], x[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4143" class="blob-num js-line-number" data-line-number="4143"></td>
        <td id="LC4143" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4144" class="blob-num js-line-number" data-line-number="4144"></td>
        <td id="LC4144" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">lineStart</span>() {</td>
      </tr>
      <tr>
        <td id="L4145" class="blob-num js-line-number" data-line-number="4145"></td>
        <td id="LC4145" class="blob-code blob-code-inner js-file-line">        x0 <span class="pl-k">=</span> <span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L4146" class="blob-num js-line-number" data-line-number="4146"></td>
        <td id="LC4146" class="blob-code blob-code-inner js-file-line">        resample.point <span class="pl-k">=</span> linePoint;</td>
      </tr>
      <tr>
        <td id="L4147" class="blob-num js-line-number" data-line-number="4147"></td>
        <td id="LC4147" class="blob-code blob-code-inner js-file-line">        stream.lineStart();</td>
      </tr>
      <tr>
        <td id="L4148" class="blob-num js-line-number" data-line-number="4148"></td>
        <td id="LC4148" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4149" class="blob-num js-line-number" data-line-number="4149"></td>
        <td id="LC4149" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">linePoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4150" class="blob-num js-line-number" data-line-number="4150"></td>
        <td id="LC4150" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> c <span class="pl-k">=</span> d3_geo_cartesian([ Î», Ï ]), p <span class="pl-k">=</span> project(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L4151" class="blob-num js-line-number" data-line-number="4151"></td>
        <td id="LC4151" class="blob-code blob-code-inner js-file-line">        resampleLineTo(x0, y0, Î»<span class="pl-c1">0</span>, a0, b0, c0, x0 <span class="pl-k">=</span> p[<span class="pl-c1">0</span>], y0 <span class="pl-k">=</span> p[<span class="pl-c1">1</span>], Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î», a0 <span class="pl-k">=</span> c[<span class="pl-c1">0</span>], b0 <span class="pl-k">=</span> c[<span class="pl-c1">1</span>], c0 <span class="pl-k">=</span> c[<span class="pl-c1">2</span>], maxDepth, stream);</td>
      </tr>
      <tr>
        <td id="L4152" class="blob-num js-line-number" data-line-number="4152"></td>
        <td id="LC4152" class="blob-code blob-code-inner js-file-line">        stream.point(x0, y0);</td>
      </tr>
      <tr>
        <td id="L4153" class="blob-num js-line-number" data-line-number="4153"></td>
        <td id="LC4153" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4154" class="blob-num js-line-number" data-line-number="4154"></td>
        <td id="LC4154" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">lineEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L4155" class="blob-num js-line-number" data-line-number="4155"></td>
        <td id="LC4155" class="blob-code blob-code-inner js-file-line">        resample.point <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L4156" class="blob-num js-line-number" data-line-number="4156"></td>
        <td id="LC4156" class="blob-code blob-code-inner js-file-line">        stream.lineEnd();</td>
      </tr>
      <tr>
        <td id="L4157" class="blob-num js-line-number" data-line-number="4157"></td>
        <td id="LC4157" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4158" class="blob-num js-line-number" data-line-number="4158"></td>
        <td id="LC4158" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">ringStart</span>() {</td>
      </tr>
      <tr>
        <td id="L4159" class="blob-num js-line-number" data-line-number="4159"></td>
        <td id="LC4159" class="blob-code blob-code-inner js-file-line">        lineStart();</td>
      </tr>
      <tr>
        <td id="L4160" class="blob-num js-line-number" data-line-number="4160"></td>
        <td id="LC4160" class="blob-code blob-code-inner js-file-line">        resample.point <span class="pl-k">=</span> ringPoint;</td>
      </tr>
      <tr>
        <td id="L4161" class="blob-num js-line-number" data-line-number="4161"></td>
        <td id="LC4161" class="blob-code blob-code-inner js-file-line">        resample.lineEnd <span class="pl-k">=</span> ringEnd;</td>
      </tr>
      <tr>
        <td id="L4162" class="blob-num js-line-number" data-line-number="4162"></td>
        <td id="LC4162" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4163" class="blob-num js-line-number" data-line-number="4163"></td>
        <td id="LC4163" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">ringPoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4164" class="blob-num js-line-number" data-line-number="4164"></td>
        <td id="LC4164" class="blob-code blob-code-inner js-file-line">        linePoint(Î»<span class="pl-c1">00</span> <span class="pl-k">=</span> Î», Ï<span class="pl-c1">00</span> <span class="pl-k">=</span> Ï), x00 <span class="pl-k">=</span> x0, y00 <span class="pl-k">=</span> y0, a00 <span class="pl-k">=</span> a0, b00 <span class="pl-k">=</span> b0, c00 <span class="pl-k">=</span> c0;</td>
      </tr>
      <tr>
        <td id="L4165" class="blob-num js-line-number" data-line-number="4165"></td>
        <td id="LC4165" class="blob-code blob-code-inner js-file-line">        resample.point <span class="pl-k">=</span> linePoint;</td>
      </tr>
      <tr>
        <td id="L4166" class="blob-num js-line-number" data-line-number="4166"></td>
        <td id="LC4166" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4167" class="blob-num js-line-number" data-line-number="4167"></td>
        <td id="LC4167" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">ringEnd</span>() {</td>
      </tr>
      <tr>
        <td id="L4168" class="blob-num js-line-number" data-line-number="4168"></td>
        <td id="LC4168" class="blob-code blob-code-inner js-file-line">        resampleLineTo(x0, y0, Î»<span class="pl-c1">0</span>, a0, b0, c0, x00, y00, Î»<span class="pl-c1">00</span>, a00, b00, c00, maxDepth, stream);</td>
      </tr>
      <tr>
        <td id="L4169" class="blob-num js-line-number" data-line-number="4169"></td>
        <td id="LC4169" class="blob-code blob-code-inner js-file-line">        resample.lineEnd <span class="pl-k">=</span> lineEnd;</td>
      </tr>
      <tr>
        <td id="L4170" class="blob-num js-line-number" data-line-number="4170"></td>
        <td id="LC4170" class="blob-code blob-code-inner js-file-line">        lineEnd();</td>
      </tr>
      <tr>
        <td id="L4171" class="blob-num js-line-number" data-line-number="4171"></td>
        <td id="LC4171" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4172" class="blob-num js-line-number" data-line-number="4172"></td>
        <td id="LC4172" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> resample;</td>
      </tr>
      <tr>
        <td id="L4173" class="blob-num js-line-number" data-line-number="4173"></td>
        <td id="LC4173" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4174" class="blob-num js-line-number" data-line-number="4174"></td>
        <td id="LC4174" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">resampleLineTo</span>(<span class="pl-smi">x0</span>, <span class="pl-smi">y0</span>, <span class="pl-smi">Î»0</span>, <span class="pl-smi">a0</span>, <span class="pl-smi">b0</span>, <span class="pl-smi">c0</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>, <span class="pl-smi">Î»1</span>, <span class="pl-smi">a1</span>, <span class="pl-smi">b1</span>, <span class="pl-smi">c1</span>, <span class="pl-smi">depth</span>, <span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L4175" class="blob-num js-line-number" data-line-number="4175"></td>
        <td id="LC4175" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> dx <span class="pl-k">=</span> x1 <span class="pl-k">-</span> x0, dy <span class="pl-k">=</span> y1 <span class="pl-k">-</span> y0, d2 <span class="pl-k">=</span> dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy;</td>
      </tr>
      <tr>
        <td id="L4176" class="blob-num js-line-number" data-line-number="4176"></td>
        <td id="LC4176" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (d2 <span class="pl-k">&gt;</span> <span class="pl-c1">4</span> <span class="pl-k">*</span> Î´<span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> depth<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L4177" class="blob-num js-line-number" data-line-number="4177"></td>
        <td id="LC4177" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> a <span class="pl-k">=</span> a0 <span class="pl-k">+</span> a1, b <span class="pl-k">=</span> b0 <span class="pl-k">+</span> b1, c <span class="pl-k">=</span> c0 <span class="pl-k">+</span> c1, m <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(a <span class="pl-k">*</span> a <span class="pl-k">+</span> b <span class="pl-k">*</span> b <span class="pl-k">+</span> c <span class="pl-k">*</span> c), Ï<span class="pl-c1">2</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(c <span class="pl-k">/=</span> m), Î»<span class="pl-c1">2</span> <span class="pl-k">=</span> <span class="pl-c1">abs</span>(<span class="pl-c1">abs</span>(c) <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">||</span> <span class="pl-c1">abs</span>(Î»<span class="pl-c1">0</span> <span class="pl-k">-</span> Î»<span class="pl-c1">1</span>) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> (Î»<span class="pl-c1">0</span> <span class="pl-k">+</span> Î»<span class="pl-c1">1</span>) / <span class="pl-c1">2</span> <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(b, a), p <span class="pl-k">=</span> project(Î»<span class="pl-c1">2</span>, Ï<span class="pl-c1">2</span>), x2 <span class="pl-k">=</span> p[<span class="pl-c1">0</span>], y2 <span class="pl-k">=</span> p[<span class="pl-c1">1</span>], dx2 <span class="pl-k">=</span> x2 <span class="pl-k">-</span> x0, dy2 <span class="pl-k">=</span> y2 <span class="pl-k">-</span> y0, dz <span class="pl-k">=</span> dy <span class="pl-k">*</span> dx2 <span class="pl-k">-</span> dx <span class="pl-k">*</span> dy2;</td>
      </tr>
      <tr>
        <td id="L4178" class="blob-num js-line-number" data-line-number="4178"></td>
        <td id="LC4178" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (dz <span class="pl-k">*</span> dz / d2 <span class="pl-k">&gt;</span> Î´<span class="pl-c1">2</span> <span class="pl-k">||</span> <span class="pl-c1">abs</span>((dx <span class="pl-k">*</span> dx2 <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy2) / d2 <span class="pl-k">-</span> .<span class="pl-c1">5</span>) <span class="pl-k">&gt;</span> .<span class="pl-c1">3</span> <span class="pl-k">||</span> a0 <span class="pl-k">*</span> a1 <span class="pl-k">+</span> b0 <span class="pl-k">*</span> b1 <span class="pl-k">+</span> c0 <span class="pl-k">*</span> c1 <span class="pl-k">&lt;</span> cosMinDistance) {</td>
      </tr>
      <tr>
        <td id="L4179" class="blob-num js-line-number" data-line-number="4179"></td>
        <td id="LC4179" class="blob-code blob-code-inner js-file-line">          resampleLineTo(x0, y0, Î»<span class="pl-c1">0</span>, a0, b0, c0, x2, y2, Î»<span class="pl-c1">2</span>, a <span class="pl-k">/=</span> m, b <span class="pl-k">/=</span> m, c, depth, stream);</td>
      </tr>
      <tr>
        <td id="L4180" class="blob-num js-line-number" data-line-number="4180"></td>
        <td id="LC4180" class="blob-code blob-code-inner js-file-line">          stream.point(x2, y2);</td>
      </tr>
      <tr>
        <td id="L4181" class="blob-num js-line-number" data-line-number="4181"></td>
        <td id="LC4181" class="blob-code blob-code-inner js-file-line">          resampleLineTo(x2, y2, Î»<span class="pl-c1">2</span>, a, b, c, x1, y1, Î»<span class="pl-c1">1</span>, a1, b1, c1, depth, stream);</td>
      </tr>
      <tr>
        <td id="L4182" class="blob-num js-line-number" data-line-number="4182"></td>
        <td id="LC4182" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4183" class="blob-num js-line-number" data-line-number="4183"></td>
        <td id="LC4183" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4184" class="blob-num js-line-number" data-line-number="4184"></td>
        <td id="LC4184" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4185" class="blob-num js-line-number" data-line-number="4185"></td>
        <td id="LC4185" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">resample</span>.<span class="pl-en">precision</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4186" class="blob-num js-line-number" data-line-number="4186"></td>
        <td id="LC4186" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(Î´<span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L4187" class="blob-num js-line-number" data-line-number="4187"></td>
        <td id="LC4187" class="blob-code blob-code-inner js-file-line">      maxDepth <span class="pl-k">=</span> (Î´<span class="pl-c1">2</span> <span class="pl-k">=</span> _ <span class="pl-k">*</span> _) <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">16</span>;</td>
      </tr>
      <tr>
        <td id="L4188" class="blob-num js-line-number" data-line-number="4188"></td>
        <td id="LC4188" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> resample;</td>
      </tr>
      <tr>
        <td id="L4189" class="blob-num js-line-number" data-line-number="4189"></td>
        <td id="LC4189" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4190" class="blob-num js-line-number" data-line-number="4190"></td>
        <td id="LC4190" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> resample;</td>
      </tr>
      <tr>
        <td id="L4191" class="blob-num js-line-number" data-line-number="4191"></td>
        <td id="LC4191" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4192" class="blob-num js-line-number" data-line-number="4192"></td>
        <td id="LC4192" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">path</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4193" class="blob-num js-line-number" data-line-number="4193"></td>
        <td id="LC4193" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> pointRadius <span class="pl-k">=</span> <span class="pl-c1">4.5</span>, projection, context, projectStream, contextStream, cacheStream;</td>
      </tr>
      <tr>
        <td id="L4194" class="blob-num js-line-number" data-line-number="4194"></td>
        <td id="LC4194" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">path</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L4195" class="blob-num js-line-number" data-line-number="4195"></td>
        <td id="LC4195" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (object) {</td>
      </tr>
      <tr>
        <td id="L4196" class="blob-num js-line-number" data-line-number="4196"></td>
        <td id="LC4196" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> pointRadius <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) contextStream.pointRadius(<span class="pl-k">+</span>pointRadius.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments));</td>
      </tr>
      <tr>
        <td id="L4197" class="blob-num js-line-number" data-line-number="4197"></td>
        <td id="LC4197" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>cacheStream <span class="pl-k">||</span> <span class="pl-k">!</span>cacheStream.valid) cacheStream <span class="pl-k">=</span> projectStream(contextStream);</td>
      </tr>
      <tr>
        <td id="L4198" class="blob-num js-line-number" data-line-number="4198"></td>
        <td id="LC4198" class="blob-code blob-code-inner js-file-line">        d3.geo.stream(object, cacheStream);</td>
      </tr>
      <tr>
        <td id="L4199" class="blob-num js-line-number" data-line-number="4199"></td>
        <td id="LC4199" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4200" class="blob-num js-line-number" data-line-number="4200"></td>
        <td id="LC4200" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> contextStream.result();</td>
      </tr>
      <tr>
        <td id="L4201" class="blob-num js-line-number" data-line-number="4201"></td>
        <td id="LC4201" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4202" class="blob-num js-line-number" data-line-number="4202"></td>
        <td id="LC4202" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">path</span>.<span class="pl-en">area</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L4203" class="blob-num js-line-number" data-line-number="4203"></td>
        <td id="LC4203" class="blob-code blob-code-inner js-file-line">      d3_geo_pathAreaSum <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4204" class="blob-num js-line-number" data-line-number="4204"></td>
        <td id="LC4204" class="blob-code blob-code-inner js-file-line">      d3.geo.stream(object, projectStream(d3_geo_pathArea));</td>
      </tr>
      <tr>
        <td id="L4205" class="blob-num js-line-number" data-line-number="4205"></td>
        <td id="LC4205" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_geo_pathAreaSum;</td>
      </tr>
      <tr>
        <td id="L4206" class="blob-num js-line-number" data-line-number="4206"></td>
        <td id="LC4206" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4207" class="blob-num js-line-number" data-line-number="4207"></td>
        <td id="LC4207" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">path</span>.<span class="pl-en">centroid</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L4208" class="blob-num js-line-number" data-line-number="4208"></td>
        <td id="LC4208" class="blob-code blob-code-inner js-file-line">      d3_geo_centroidX0 <span class="pl-k">=</span> d3_geo_centroidY0 <span class="pl-k">=</span> d3_geo_centroidZ0 <span class="pl-k">=</span> d3_geo_centroidX1 <span class="pl-k">=</span> d3_geo_centroidY1 <span class="pl-k">=</span> d3_geo_centroidZ1 <span class="pl-k">=</span> d3_geo_centroidX2 <span class="pl-k">=</span> d3_geo_centroidY2 <span class="pl-k">=</span> d3_geo_centroidZ2 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4209" class="blob-num js-line-number" data-line-number="4209"></td>
        <td id="LC4209" class="blob-code blob-code-inner js-file-line">      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));</td>
      </tr>
      <tr>
        <td id="L4210" class="blob-num js-line-number" data-line-number="4210"></td>
        <td id="LC4210" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_geo_centroidZ2 <span class="pl-k">?</span> [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] <span class="pl-k">:</span> d3_geo_centroidZ1 <span class="pl-k">?</span> [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] <span class="pl-k">:</span> d3_geo_centroidZ0 <span class="pl-k">?</span> [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] <span class="pl-k">:</span> [ <span class="pl-c1">NaN</span>, <span class="pl-c1">NaN</span> ];</td>
      </tr>
      <tr>
        <td id="L4211" class="blob-num js-line-number" data-line-number="4211"></td>
        <td id="LC4211" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4212" class="blob-num js-line-number" data-line-number="4212"></td>
        <td id="LC4212" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">path</span>.<span class="pl-en">bounds</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L4213" class="blob-num js-line-number" data-line-number="4213"></td>
        <td id="LC4213" class="blob-code blob-code-inner js-file-line">      d3_geo_pathBoundsX1 <span class="pl-k">=</span> d3_geo_pathBoundsY1 <span class="pl-k">=</span> <span class="pl-k">-</span>(d3_geo_pathBoundsX0 <span class="pl-k">=</span> d3_geo_pathBoundsY0 <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>);</td>
      </tr>
      <tr>
        <td id="L4214" class="blob-num js-line-number" data-line-number="4214"></td>
        <td id="LC4214" class="blob-code blob-code-inner js-file-line">      d3.geo.stream(object, projectStream(d3_geo_pathBounds));</td>
      </tr>
      <tr>
        <td id="L4215" class="blob-num js-line-number" data-line-number="4215"></td>
        <td id="LC4215" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];</td>
      </tr>
      <tr>
        <td id="L4216" class="blob-num js-line-number" data-line-number="4216"></td>
        <td id="LC4216" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4217" class="blob-num js-line-number" data-line-number="4217"></td>
        <td id="LC4217" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">path</span>.<span class="pl-en">projection</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4218" class="blob-num js-line-number" data-line-number="4218"></td>
        <td id="LC4218" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> projection;</td>
      </tr>
      <tr>
        <td id="L4219" class="blob-num js-line-number" data-line-number="4219"></td>
        <td id="LC4219" class="blob-code blob-code-inner js-file-line">      projectStream <span class="pl-k">=</span> (projection <span class="pl-k">=</span> _) <span class="pl-k">?</span> _.stream <span class="pl-k">||</span> d3_geo_pathProjectStream(_) <span class="pl-k">:</span> d3_identity;</td>
      </tr>
      <tr>
        <td id="L4220" class="blob-num js-line-number" data-line-number="4220"></td>
        <td id="LC4220" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L4221" class="blob-num js-line-number" data-line-number="4221"></td>
        <td id="LC4221" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4222" class="blob-num js-line-number" data-line-number="4222"></td>
        <td id="LC4222" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">path</span>.<span class="pl-en">context</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4223" class="blob-num js-line-number" data-line-number="4223"></td>
        <td id="LC4223" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> context;</td>
      </tr>
      <tr>
        <td id="L4224" class="blob-num js-line-number" data-line-number="4224"></td>
        <td id="LC4224" class="blob-code blob-code-inner js-file-line">      contextStream <span class="pl-k">=</span> (context <span class="pl-k">=</span> _) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-k">new</span> <span class="pl-en">d3_geo_pathBuffer</span>() <span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">d3_geo_pathContext</span>(_);</td>
      </tr>
      <tr>
        <td id="L4225" class="blob-num js-line-number" data-line-number="4225"></td>
        <td id="LC4225" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> pointRadius <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) contextStream.pointRadius(pointRadius);</td>
      </tr>
      <tr>
        <td id="L4226" class="blob-num js-line-number" data-line-number="4226"></td>
        <td id="LC4226" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L4227" class="blob-num js-line-number" data-line-number="4227"></td>
        <td id="LC4227" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4228" class="blob-num js-line-number" data-line-number="4228"></td>
        <td id="LC4228" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">path</span>.<span class="pl-en">pointRadius</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4229" class="blob-num js-line-number" data-line-number="4229"></td>
        <td id="LC4229" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> pointRadius;</td>
      </tr>
      <tr>
        <td id="L4230" class="blob-num js-line-number" data-line-number="4230"></td>
        <td id="LC4230" class="blob-code blob-code-inner js-file-line">      pointRadius <span class="pl-k">=</span> <span class="pl-k">typeof</span> _ <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> _ <span class="pl-k">:</span> (contextStream.pointRadius(<span class="pl-k">+</span>_), <span class="pl-k">+</span>_);</td>
      </tr>
      <tr>
        <td id="L4231" class="blob-num js-line-number" data-line-number="4231"></td>
        <td id="LC4231" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> path;</td>
      </tr>
      <tr>
        <td id="L4232" class="blob-num js-line-number" data-line-number="4232"></td>
        <td id="LC4232" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4233" class="blob-num js-line-number" data-line-number="4233"></td>
        <td id="LC4233" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">reset</span>() {</td>
      </tr>
      <tr>
        <td id="L4234" class="blob-num js-line-number" data-line-number="4234"></td>
        <td id="LC4234" class="blob-code blob-code-inner js-file-line">      cacheStream <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4235" class="blob-num js-line-number" data-line-number="4235"></td>
        <td id="LC4235" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> path;</td>
      </tr>
      <tr>
        <td id="L4236" class="blob-num js-line-number" data-line-number="4236"></td>
        <td id="LC4236" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4237" class="blob-num js-line-number" data-line-number="4237"></td>
        <td id="LC4237" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path.projection(d3.geo.albersUsa()).context(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L4238" class="blob-num js-line-number" data-line-number="4238"></td>
        <td id="LC4238" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4239" class="blob-num js-line-number" data-line-number="4239"></td>
        <td id="LC4239" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_pathProjectStream</span>(<span class="pl-smi">project</span>) {</td>
      </tr>
      <tr>
        <td id="L4240" class="blob-num js-line-number" data-line-number="4240"></td>
        <td id="LC4240" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> resample <span class="pl-k">=</span> d3_geo_resample(<span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4241" class="blob-num js-line-number" data-line-number="4241"></td>
        <td id="LC4241" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> project([ x <span class="pl-k">*</span> d3_degrees, y <span class="pl-k">*</span> d3_degrees ]);</td>
      </tr>
      <tr>
        <td id="L4242" class="blob-num js-line-number" data-line-number="4242"></td>
        <td id="LC4242" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L4243" class="blob-num js-line-number" data-line-number="4243"></td>
        <td id="LC4243" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L4244" class="blob-num js-line-number" data-line-number="4244"></td>
        <td id="LC4244" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_geo_projectionRadians(resample(stream));</td>
      </tr>
      <tr>
        <td id="L4245" class="blob-num js-line-number" data-line-number="4245"></td>
        <td id="LC4245" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4246" class="blob-num js-line-number" data-line-number="4246"></td>
        <td id="LC4246" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4247" class="blob-num js-line-number" data-line-number="4247"></td>
        <td id="LC4247" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">transform</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">methods</span>) {</td>
      </tr>
      <tr>
        <td id="L4248" class="blob-num js-line-number" data-line-number="4248"></td>
        <td id="LC4248" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4249" class="blob-num js-line-number" data-line-number="4249"></td>
        <td id="LC4249" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">stream</span>: <span class="pl-k">function</span>(<span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L4250" class="blob-num js-line-number" data-line-number="4250"></td>
        <td id="LC4250" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> transform <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geo_transform</span>(stream);</td>
      </tr>
      <tr>
        <td id="L4251" class="blob-num js-line-number" data-line-number="4251"></td>
        <td id="LC4251" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> k <span class="pl-k">in</span> methods) transform[k] <span class="pl-k">=</span> methods[k];</td>
      </tr>
      <tr>
        <td id="L4252" class="blob-num js-line-number" data-line-number="4252"></td>
        <td id="LC4252" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> transform;</td>
      </tr>
      <tr>
        <td id="L4253" class="blob-num js-line-number" data-line-number="4253"></td>
        <td id="LC4253" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4254" class="blob-num js-line-number" data-line-number="4254"></td>
        <td id="LC4254" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4255" class="blob-num js-line-number" data-line-number="4255"></td>
        <td id="LC4255" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4256" class="blob-num js-line-number" data-line-number="4256"></td>
        <td id="LC4256" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_transform</span>(<span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L4257" class="blob-num js-line-number" data-line-number="4257"></td>
        <td id="LC4257" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.stream <span class="pl-k">=</span> stream;</td>
      </tr>
      <tr>
        <td id="L4258" class="blob-num js-line-number" data-line-number="4258"></td>
        <td id="LC4258" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4259" class="blob-num js-line-number" data-line-number="4259"></td>
        <td id="LC4259" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geo_transform</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4260" class="blob-num js-line-number" data-line-number="4260"></td>
        <td id="LC4260" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">point</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4261" class="blob-num js-line-number" data-line-number="4261"></td>
        <td id="LC4261" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.stream.point(x, y);</td>
      </tr>
      <tr>
        <td id="L4262" class="blob-num js-line-number" data-line-number="4262"></td>
        <td id="LC4262" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4263" class="blob-num js-line-number" data-line-number="4263"></td>
        <td id="LC4263" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">sphere</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4264" class="blob-num js-line-number" data-line-number="4264"></td>
        <td id="LC4264" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.stream.sphere();</td>
      </tr>
      <tr>
        <td id="L4265" class="blob-num js-line-number" data-line-number="4265"></td>
        <td id="LC4265" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4266" class="blob-num js-line-number" data-line-number="4266"></td>
        <td id="LC4266" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">lineStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4267" class="blob-num js-line-number" data-line-number="4267"></td>
        <td id="LC4267" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.stream.lineStart();</td>
      </tr>
      <tr>
        <td id="L4268" class="blob-num js-line-number" data-line-number="4268"></td>
        <td id="LC4268" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4269" class="blob-num js-line-number" data-line-number="4269"></td>
        <td id="LC4269" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">lineEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4270" class="blob-num js-line-number" data-line-number="4270"></td>
        <td id="LC4270" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.stream.lineEnd();</td>
      </tr>
      <tr>
        <td id="L4271" class="blob-num js-line-number" data-line-number="4271"></td>
        <td id="LC4271" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4272" class="blob-num js-line-number" data-line-number="4272"></td>
        <td id="LC4272" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4273" class="blob-num js-line-number" data-line-number="4273"></td>
        <td id="LC4273" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.stream.polygonStart();</td>
      </tr>
      <tr>
        <td id="L4274" class="blob-num js-line-number" data-line-number="4274"></td>
        <td id="LC4274" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L4275" class="blob-num js-line-number" data-line-number="4275"></td>
        <td id="LC4275" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4276" class="blob-num js-line-number" data-line-number="4276"></td>
        <td id="LC4276" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.stream.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L4277" class="blob-num js-line-number" data-line-number="4277"></td>
        <td id="LC4277" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4278" class="blob-num js-line-number" data-line-number="4278"></td>
        <td id="LC4278" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4279" class="blob-num js-line-number" data-line-number="4279"></td>
        <td id="LC4279" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_transformPoint</span>(<span class="pl-smi">stream</span>, <span class="pl-smi">point</span>) {</td>
      </tr>
      <tr>
        <td id="L4280" class="blob-num js-line-number" data-line-number="4280"></td>
        <td id="LC4280" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4281" class="blob-num js-line-number" data-line-number="4281"></td>
        <td id="LC4281" class="blob-code blob-code-inner js-file-line">      point<span class="pl-k">:</span> point,</td>
      </tr>
      <tr>
        <td id="L4282" class="blob-num js-line-number" data-line-number="4282"></td>
        <td id="LC4282" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">sphere</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4283" class="blob-num js-line-number" data-line-number="4283"></td>
        <td id="LC4283" class="blob-code blob-code-inner js-file-line">        stream.sphere();</td>
      </tr>
      <tr>
        <td id="L4284" class="blob-num js-line-number" data-line-number="4284"></td>
        <td id="LC4284" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L4285" class="blob-num js-line-number" data-line-number="4285"></td>
        <td id="LC4285" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">lineStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4286" class="blob-num js-line-number" data-line-number="4286"></td>
        <td id="LC4286" class="blob-code blob-code-inner js-file-line">        stream.lineStart();</td>
      </tr>
      <tr>
        <td id="L4287" class="blob-num js-line-number" data-line-number="4287"></td>
        <td id="LC4287" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L4288" class="blob-num js-line-number" data-line-number="4288"></td>
        <td id="LC4288" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">lineEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4289" class="blob-num js-line-number" data-line-number="4289"></td>
        <td id="LC4289" class="blob-code blob-code-inner js-file-line">        stream.lineEnd();</td>
      </tr>
      <tr>
        <td id="L4290" class="blob-num js-line-number" data-line-number="4290"></td>
        <td id="LC4290" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L4291" class="blob-num js-line-number" data-line-number="4291"></td>
        <td id="LC4291" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">polygonStart</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4292" class="blob-num js-line-number" data-line-number="4292"></td>
        <td id="LC4292" class="blob-code blob-code-inner js-file-line">        stream.polygonStart();</td>
      </tr>
      <tr>
        <td id="L4293" class="blob-num js-line-number" data-line-number="4293"></td>
        <td id="LC4293" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L4294" class="blob-num js-line-number" data-line-number="4294"></td>
        <td id="LC4294" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">polygonEnd</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4295" class="blob-num js-line-number" data-line-number="4295"></td>
        <td id="LC4295" class="blob-code blob-code-inner js-file-line">        stream.polygonEnd();</td>
      </tr>
      <tr>
        <td id="L4296" class="blob-num js-line-number" data-line-number="4296"></td>
        <td id="LC4296" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4297" class="blob-num js-line-number" data-line-number="4297"></td>
        <td id="LC4297" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4298" class="blob-num js-line-number" data-line-number="4298"></td>
        <td id="LC4298" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4299" class="blob-num js-line-number" data-line-number="4299"></td>
        <td id="LC4299" class="blob-code blob-code-inner js-file-line">  d3.geo.projection <span class="pl-k">=</span> d3_geo_projection;</td>
      </tr>
      <tr>
        <td id="L4300" class="blob-num js-line-number" data-line-number="4300"></td>
        <td id="LC4300" class="blob-code blob-code-inner js-file-line">  d3.geo.projectionMutator <span class="pl-k">=</span> d3_geo_projectionMutator;</td>
      </tr>
      <tr>
        <td id="L4301" class="blob-num js-line-number" data-line-number="4301"></td>
        <td id="LC4301" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_projection</span>(<span class="pl-smi">project</span>) {</td>
      </tr>
      <tr>
        <td id="L4302" class="blob-num js-line-number" data-line-number="4302"></td>
        <td id="LC4302" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_projectionMutator(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4303" class="blob-num js-line-number" data-line-number="4303"></td>
        <td id="LC4303" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> project;</td>
      </tr>
      <tr>
        <td id="L4304" class="blob-num js-line-number" data-line-number="4304"></td>
        <td id="LC4304" class="blob-code blob-code-inner js-file-line">    })();</td>
      </tr>
      <tr>
        <td id="L4305" class="blob-num js-line-number" data-line-number="4305"></td>
        <td id="LC4305" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4306" class="blob-num js-line-number" data-line-number="4306"></td>
        <td id="LC4306" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_projectionMutator</span>(<span class="pl-smi">projectAt</span>) {</td>
      </tr>
      <tr>
        <td id="L4307" class="blob-num js-line-number" data-line-number="4307"></td>
        <td id="LC4307" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> project, rotate, projectRotate, projectResample <span class="pl-k">=</span> d3_geo_resample(<span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4308" class="blob-num js-line-number" data-line-number="4308"></td>
        <td id="LC4308" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> project(x, y);</td>
      </tr>
      <tr>
        <td id="L4309" class="blob-num js-line-number" data-line-number="4309"></td>
        <td id="LC4309" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ x[<span class="pl-c1">0</span>] <span class="pl-k">*</span> k <span class="pl-k">+</span> Î´x, Î´y <span class="pl-k">-</span> x[<span class="pl-c1">1</span>] <span class="pl-k">*</span> k ];</td>
      </tr>
      <tr>
        <td id="L4310" class="blob-num js-line-number" data-line-number="4310"></td>
        <td id="LC4310" class="blob-code blob-code-inner js-file-line">    }), k <span class="pl-k">=</span> <span class="pl-c1">150</span>, x <span class="pl-k">=</span> <span class="pl-c1">480</span>, y <span class="pl-k">=</span> <span class="pl-c1">250</span>, Î» <span class="pl-k">=</span> <span class="pl-c1">0</span>, Ï <span class="pl-k">=</span> <span class="pl-c1">0</span>, Î´Î» <span class="pl-k">=</span> <span class="pl-c1">0</span>, Î´Ï <span class="pl-k">=</span> <span class="pl-c1">0</span>, Î´Î³ <span class="pl-k">=</span> <span class="pl-c1">0</span>, Î´x, Î´y, preclip <span class="pl-k">=</span> d3_geo_clipAntimeridian, postclip <span class="pl-k">=</span> d3_identity, clipAngle <span class="pl-k">=</span> <span class="pl-c1">null</span>, clipExtent <span class="pl-k">=</span> <span class="pl-c1">null</span>, stream;</td>
      </tr>
      <tr>
        <td id="L4311" class="blob-num js-line-number" data-line-number="4311"></td>
        <td id="LC4311" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">projection</span>(<span class="pl-smi">point</span>) {</td>
      </tr>
      <tr>
        <td id="L4312" class="blob-num js-line-number" data-line-number="4312"></td>
        <td id="LC4312" class="blob-code blob-code-inner js-file-line">      point <span class="pl-k">=</span> projectRotate(point[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d3_radians, point[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L4313" class="blob-num js-line-number" data-line-number="4313"></td>
        <td id="LC4313" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ point[<span class="pl-c1">0</span>] <span class="pl-k">*</span> k <span class="pl-k">+</span> Î´x, Î´y <span class="pl-k">-</span> point[<span class="pl-c1">1</span>] <span class="pl-k">*</span> k ];</td>
      </tr>
      <tr>
        <td id="L4314" class="blob-num js-line-number" data-line-number="4314"></td>
        <td id="LC4314" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4315" class="blob-num js-line-number" data-line-number="4315"></td>
        <td id="LC4315" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">invert</span>(<span class="pl-smi">point</span>) {</td>
      </tr>
      <tr>
        <td id="L4316" class="blob-num js-line-number" data-line-number="4316"></td>
        <td id="LC4316" class="blob-code blob-code-inner js-file-line">      point <span class="pl-k">=</span> projectRotate.invert((point[<span class="pl-c1">0</span>] <span class="pl-k">-</span> Î´x) / k, (Î´y <span class="pl-k">-</span> point[<span class="pl-c1">1</span>]) / k);</td>
      </tr>
      <tr>
        <td id="L4317" class="blob-num js-line-number" data-line-number="4317"></td>
        <td id="LC4317" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> point <span class="pl-k">&amp;&amp;</span> [ point[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d3_degrees, point[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_degrees ];</td>
      </tr>
      <tr>
        <td id="L4318" class="blob-num js-line-number" data-line-number="4318"></td>
        <td id="LC4318" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4319" class="blob-num js-line-number" data-line-number="4319"></td>
        <td id="LC4319" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">stream</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">output</span>) {</td>
      </tr>
      <tr>
        <td id="L4320" class="blob-num js-line-number" data-line-number="4320"></td>
        <td id="LC4320" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (stream) stream.valid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4321" class="blob-num js-line-number" data-line-number="4321"></td>
        <td id="LC4321" class="blob-code blob-code-inner js-file-line">      stream <span class="pl-k">=</span> d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));</td>
      </tr>
      <tr>
        <td id="L4322" class="blob-num js-line-number" data-line-number="4322"></td>
        <td id="LC4322" class="blob-code blob-code-inner js-file-line">      stream.valid <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4323" class="blob-num js-line-number" data-line-number="4323"></td>
        <td id="LC4323" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> stream;</td>
      </tr>
      <tr>
        <td id="L4324" class="blob-num js-line-number" data-line-number="4324"></td>
        <td id="LC4324" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4325" class="blob-num js-line-number" data-line-number="4325"></td>
        <td id="LC4325" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">clipAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4326" class="blob-num js-line-number" data-line-number="4326"></td>
        <td id="LC4326" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> clipAngle;</td>
      </tr>
      <tr>
        <td id="L4327" class="blob-num js-line-number" data-line-number="4327"></td>
        <td id="LC4327" class="blob-code blob-code-inner js-file-line">      preclip <span class="pl-k">=</span> _ <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> (clipAngle <span class="pl-k">=</span> _, d3_geo_clipAntimeridian) <span class="pl-k">:</span> d3_geo_clipCircle((clipAngle <span class="pl-k">=</span> <span class="pl-k">+</span>_) <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L4328" class="blob-num js-line-number" data-line-number="4328"></td>
        <td id="LC4328" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> invalidate();</td>
      </tr>
      <tr>
        <td id="L4329" class="blob-num js-line-number" data-line-number="4329"></td>
        <td id="LC4329" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4330" class="blob-num js-line-number" data-line-number="4330"></td>
        <td id="LC4330" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">clipExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4331" class="blob-num js-line-number" data-line-number="4331"></td>
        <td id="LC4331" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> clipExtent;</td>
      </tr>
      <tr>
        <td id="L4332" class="blob-num js-line-number" data-line-number="4332"></td>
        <td id="LC4332" class="blob-code blob-code-inner js-file-line">      clipExtent <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L4333" class="blob-num js-line-number" data-line-number="4333"></td>
        <td id="LC4333" class="blob-code blob-code-inner js-file-line">      postclip <span class="pl-k">=</span> _ <span class="pl-k">?</span> d3_geo_clipExtent(_[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], _[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], _[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], _[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]) <span class="pl-k">:</span> d3_identity;</td>
      </tr>
      <tr>
        <td id="L4334" class="blob-num js-line-number" data-line-number="4334"></td>
        <td id="LC4334" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> invalidate();</td>
      </tr>
      <tr>
        <td id="L4335" class="blob-num js-line-number" data-line-number="4335"></td>
        <td id="LC4335" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4336" class="blob-num js-line-number" data-line-number="4336"></td>
        <td id="LC4336" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">scale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4337" class="blob-num js-line-number" data-line-number="4337"></td>
        <td id="LC4337" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> k;</td>
      </tr>
      <tr>
        <td id="L4338" class="blob-num js-line-number" data-line-number="4338"></td>
        <td id="LC4338" class="blob-code blob-code-inner js-file-line">      k <span class="pl-k">=</span> <span class="pl-k">+</span>_;</td>
      </tr>
      <tr>
        <td id="L4339" class="blob-num js-line-number" data-line-number="4339"></td>
        <td id="LC4339" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L4340" class="blob-num js-line-number" data-line-number="4340"></td>
        <td id="LC4340" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4341" class="blob-num js-line-number" data-line-number="4341"></td>
        <td id="LC4341" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">translate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4342" class="blob-num js-line-number" data-line-number="4342"></td>
        <td id="LC4342" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ x, y ];</td>
      </tr>
      <tr>
        <td id="L4343" class="blob-num js-line-number" data-line-number="4343"></td>
        <td id="LC4343" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4344" class="blob-num js-line-number" data-line-number="4344"></td>
        <td id="LC4344" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4345" class="blob-num js-line-number" data-line-number="4345"></td>
        <td id="LC4345" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L4346" class="blob-num js-line-number" data-line-number="4346"></td>
        <td id="LC4346" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4347" class="blob-num js-line-number" data-line-number="4347"></td>
        <td id="LC4347" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">center</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4348" class="blob-num js-line-number" data-line-number="4348"></td>
        <td id="LC4348" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ Î» <span class="pl-k">*</span> d3_degrees, Ï <span class="pl-k">*</span> d3_degrees ];</td>
      </tr>
      <tr>
        <td id="L4349" class="blob-num js-line-number" data-line-number="4349"></td>
        <td id="LC4349" class="blob-code blob-code-inner js-file-line">      Î» <span class="pl-k">=</span> _[<span class="pl-c1">0</span>] <span class="pl-k">%</span> <span class="pl-c1">360</span> <span class="pl-k">*</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L4350" class="blob-num js-line-number" data-line-number="4350"></td>
        <td id="LC4350" class="blob-code blob-code-inner js-file-line">      Ï <span class="pl-k">=</span> _[<span class="pl-c1">1</span>] <span class="pl-k">%</span> <span class="pl-c1">360</span> <span class="pl-k">*</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L4351" class="blob-num js-line-number" data-line-number="4351"></td>
        <td id="LC4351" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L4352" class="blob-num js-line-number" data-line-number="4352"></td>
        <td id="LC4352" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4353" class="blob-num js-line-number" data-line-number="4353"></td>
        <td id="LC4353" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">rotate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4354" class="blob-num js-line-number" data-line-number="4354"></td>
        <td id="LC4354" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ Î´Î» <span class="pl-k">*</span> d3_degrees, Î´Ï <span class="pl-k">*</span> d3_degrees, Î´Î³ <span class="pl-k">*</span> d3_degrees ];</td>
      </tr>
      <tr>
        <td id="L4355" class="blob-num js-line-number" data-line-number="4355"></td>
        <td id="LC4355" class="blob-code blob-code-inner js-file-line">      Î´Î» <span class="pl-k">=</span> _[<span class="pl-c1">0</span>] <span class="pl-k">%</span> <span class="pl-c1">360</span> <span class="pl-k">*</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L4356" class="blob-num js-line-number" data-line-number="4356"></td>
        <td id="LC4356" class="blob-code blob-code-inner js-file-line">      Î´Ï <span class="pl-k">=</span> _[<span class="pl-c1">1</span>] <span class="pl-k">%</span> <span class="pl-c1">360</span> <span class="pl-k">*</span> d3_radians;</td>
      </tr>
      <tr>
        <td id="L4357" class="blob-num js-line-number" data-line-number="4357"></td>
        <td id="LC4357" class="blob-code blob-code-inner js-file-line">      Î´Î³ <span class="pl-k">=</span> _.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> _[<span class="pl-c1">2</span>] <span class="pl-k">%</span> <span class="pl-c1">360</span> <span class="pl-k">*</span> d3_radians <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4358" class="blob-num js-line-number" data-line-number="4358"></td>
        <td id="LC4358" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L4359" class="blob-num js-line-number" data-line-number="4359"></td>
        <td id="LC4359" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4360" class="blob-num js-line-number" data-line-number="4360"></td>
        <td id="LC4360" class="blob-code blob-code-inner js-file-line">    d3.rebind(projection, projectResample, <span class="pl-s"><span class="pl-pds">&quot;</span>precision<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4361" class="blob-num js-line-number" data-line-number="4361"></td>
        <td id="LC4361" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">reset</span>() {</td>
      </tr>
      <tr>
        <td id="L4362" class="blob-num js-line-number" data-line-number="4362"></td>
        <td id="LC4362" class="blob-code blob-code-inner js-file-line">      projectRotate <span class="pl-k">=</span> d3_geo_compose(rotate <span class="pl-k">=</span> d3_geo_rotation(Î´Î», Î´Ï, Î´Î³), project);</td>
      </tr>
      <tr>
        <td id="L4363" class="blob-num js-line-number" data-line-number="4363"></td>
        <td id="LC4363" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> center <span class="pl-k">=</span> project(Î», Ï);</td>
      </tr>
      <tr>
        <td id="L4364" class="blob-num js-line-number" data-line-number="4364"></td>
        <td id="LC4364" class="blob-code blob-code-inner js-file-line">      Î´x <span class="pl-k">=</span> x <span class="pl-k">-</span> center[<span class="pl-c1">0</span>] <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L4365" class="blob-num js-line-number" data-line-number="4365"></td>
        <td id="LC4365" class="blob-code blob-code-inner js-file-line">      Î´y <span class="pl-k">=</span> y <span class="pl-k">+</span> center[<span class="pl-c1">1</span>] <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L4366" class="blob-num js-line-number" data-line-number="4366"></td>
        <td id="LC4366" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> invalidate();</td>
      </tr>
      <tr>
        <td id="L4367" class="blob-num js-line-number" data-line-number="4367"></td>
        <td id="LC4367" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4368" class="blob-num js-line-number" data-line-number="4368"></td>
        <td id="LC4368" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">invalidate</span>() {</td>
      </tr>
      <tr>
        <td id="L4369" class="blob-num js-line-number" data-line-number="4369"></td>
        <td id="LC4369" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (stream) stream.valid <span class="pl-k">=</span> <span class="pl-c1">false</span>, stream <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4370" class="blob-num js-line-number" data-line-number="4370"></td>
        <td id="LC4370" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> projection;</td>
      </tr>
      <tr>
        <td id="L4371" class="blob-num js-line-number" data-line-number="4371"></td>
        <td id="LC4371" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4372" class="blob-num js-line-number" data-line-number="4372"></td>
        <td id="LC4372" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4373" class="blob-num js-line-number" data-line-number="4373"></td>
        <td id="LC4373" class="blob-code blob-code-inner js-file-line">      project <span class="pl-k">=</span> projectAt.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L4374" class="blob-num js-line-number" data-line-number="4374"></td>
        <td id="LC4374" class="blob-code blob-code-inner js-file-line">      projection.invert <span class="pl-k">=</span> project.invert <span class="pl-k">&amp;&amp;</span> invert;</td>
      </tr>
      <tr>
        <td id="L4375" class="blob-num js-line-number" data-line-number="4375"></td>
        <td id="LC4375" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">reset</span>();</td>
      </tr>
      <tr>
        <td id="L4376" class="blob-num js-line-number" data-line-number="4376"></td>
        <td id="LC4376" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4377" class="blob-num js-line-number" data-line-number="4377"></td>
        <td id="LC4377" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4378" class="blob-num js-line-number" data-line-number="4378"></td>
        <td id="LC4378" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_projectionRadians</span>(<span class="pl-smi">stream</span>) {</td>
      </tr>
      <tr>
        <td id="L4379" class="blob-num js-line-number" data-line-number="4379"></td>
        <td id="LC4379" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_transformPoint(stream, <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4380" class="blob-num js-line-number" data-line-number="4380"></td>
        <td id="LC4380" class="blob-code blob-code-inner js-file-line">      stream.point(x <span class="pl-k">*</span> d3_radians, y <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L4381" class="blob-num js-line-number" data-line-number="4381"></td>
        <td id="LC4381" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L4382" class="blob-num js-line-number" data-line-number="4382"></td>
        <td id="LC4382" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4383" class="blob-num js-line-number" data-line-number="4383"></td>
        <td id="LC4383" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_equirectangular</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4384" class="blob-num js-line-number" data-line-number="4384"></td>
        <td id="LC4384" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ Î», Ï ];</td>
      </tr>
      <tr>
        <td id="L4385" class="blob-num js-line-number" data-line-number="4385"></td>
        <td id="LC4385" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4386" class="blob-num js-line-number" data-line-number="4386"></td>
        <td id="LC4386" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">equirectangular</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4387" class="blob-num js-line-number" data-line-number="4387"></td>
        <td id="LC4387" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_projection(d3_geo_equirectangular);</td>
      </tr>
      <tr>
        <td id="L4388" class="blob-num js-line-number" data-line-number="4388"></td>
        <td id="LC4388" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_equirectangular.invert <span class="pl-k">=</span> d3_geo_equirectangular;</td>
      </tr>
      <tr>
        <td id="L4389" class="blob-num js-line-number" data-line-number="4389"></td>
        <td id="LC4389" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">rotation</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">rotate</span>) {</td>
      </tr>
      <tr>
        <td id="L4390" class="blob-num js-line-number" data-line-number="4390"></td>
        <td id="LC4390" class="blob-code blob-code-inner js-file-line">    rotate <span class="pl-k">=</span> d3_geo_rotation(rotate[<span class="pl-c1">0</span>] <span class="pl-k">%</span> <span class="pl-c1">360</span> <span class="pl-k">*</span> d3_radians, rotate[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians, rotate.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> rotate[<span class="pl-c1">2</span>] <span class="pl-k">*</span> d3_radians <span class="pl-k">:</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L4391" class="blob-num js-line-number" data-line-number="4391"></td>
        <td id="LC4391" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">forward</span>(<span class="pl-smi">coordinates</span>) {</td>
      </tr>
      <tr>
        <td id="L4392" class="blob-num js-line-number" data-line-number="4392"></td>
        <td id="LC4392" class="blob-code blob-code-inner js-file-line">      coordinates <span class="pl-k">=</span> rotate(coordinates[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d3_radians, coordinates[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L4393" class="blob-num js-line-number" data-line-number="4393"></td>
        <td id="LC4393" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> coordinates[<span class="pl-c1">0</span>] <span class="pl-k">*=</span> d3_degrees, coordinates[<span class="pl-c1">1</span>] <span class="pl-k">*=</span> d3_degrees, coordinates;</td>
      </tr>
      <tr>
        <td id="L4394" class="blob-num js-line-number" data-line-number="4394"></td>
        <td id="LC4394" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4395" class="blob-num js-line-number" data-line-number="4395"></td>
        <td id="LC4395" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">forward</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">coordinates</span>) {</td>
      </tr>
      <tr>
        <td id="L4396" class="blob-num js-line-number" data-line-number="4396"></td>
        <td id="LC4396" class="blob-code blob-code-inner js-file-line">      coordinates <span class="pl-k">=</span> rotate.invert(coordinates[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d3_radians, coordinates[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L4397" class="blob-num js-line-number" data-line-number="4397"></td>
        <td id="LC4397" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> coordinates[<span class="pl-c1">0</span>] <span class="pl-k">*=</span> d3_degrees, coordinates[<span class="pl-c1">1</span>] <span class="pl-k">*=</span> d3_degrees, coordinates;</td>
      </tr>
      <tr>
        <td id="L4398" class="blob-num js-line-number" data-line-number="4398"></td>
        <td id="LC4398" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4399" class="blob-num js-line-number" data-line-number="4399"></td>
        <td id="LC4399" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> forward;</td>
      </tr>
      <tr>
        <td id="L4400" class="blob-num js-line-number" data-line-number="4400"></td>
        <td id="LC4400" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4401" class="blob-num js-line-number" data-line-number="4401"></td>
        <td id="LC4401" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_identityRotation</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4402" class="blob-num js-line-number" data-line-number="4402"></td>
        <td id="LC4402" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ Î» <span class="pl-k">&gt;</span> Ï <span class="pl-k">?</span> Î» <span class="pl-k">-</span> Ï <span class="pl-k">:</span> Î» <span class="pl-k">&lt;</span> <span class="pl-k">-</span>Ï <span class="pl-k">?</span> Î» <span class="pl-k">+</span> Ï <span class="pl-k">:</span> Î», Ï ];</td>
      </tr>
      <tr>
        <td id="L4403" class="blob-num js-line-number" data-line-number="4403"></td>
        <td id="LC4403" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4404" class="blob-num js-line-number" data-line-number="4404"></td>
        <td id="LC4404" class="blob-code blob-code-inner js-file-line">  d3_geo_identityRotation.invert <span class="pl-k">=</span> d3_geo_equirectangular;</td>
      </tr>
      <tr>
        <td id="L4405" class="blob-num js-line-number" data-line-number="4405"></td>
        <td id="LC4405" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_rotation</span>(<span class="pl-smi">Î´Î»</span>, <span class="pl-smi">Î´Ï</span>, <span class="pl-smi">Î´Î³</span>) {</td>
      </tr>
      <tr>
        <td id="L4406" class="blob-num js-line-number" data-line-number="4406"></td>
        <td id="LC4406" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> Î´Î» <span class="pl-k">?</span> Î´Ï <span class="pl-k">||</span> Î´Î³ <span class="pl-k">?</span> d3_geo_compose(d3_geo_rotationÎ»(Î´Î»), d3_geo_rotationÏÎ³(Î´Ï, Î´Î³)) <span class="pl-k">:</span> d3_geo_rotationÎ»(Î´Î») <span class="pl-k">:</span> Î´Ï <span class="pl-k">||</span> Î´Î³ <span class="pl-k">?</span> d3_geo_rotationÏÎ³(Î´Ï, Î´Î³) <span class="pl-k">:</span> d3_geo_identityRotation;</td>
      </tr>
      <tr>
        <td id="L4407" class="blob-num js-line-number" data-line-number="4407"></td>
        <td id="LC4407" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4408" class="blob-num js-line-number" data-line-number="4408"></td>
        <td id="LC4408" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> d3_geo_forwardRotationÎ»(Î´Î») {</td>
      </tr>
      <tr>
        <td id="L4409" class="blob-num js-line-number" data-line-number="4409"></td>
        <td id="LC4409" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4410" class="blob-num js-line-number" data-line-number="4410"></td>
        <td id="LC4410" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> Î» <span class="pl-k">+=</span> Î´Î», [ Î» <span class="pl-k">&gt;</span> Ï <span class="pl-k">?</span> Î» <span class="pl-k">-</span> Ï <span class="pl-k">:</span> Î» <span class="pl-k">&lt;</span> <span class="pl-k">-</span>Ï <span class="pl-k">?</span> Î» <span class="pl-k">+</span> Ï <span class="pl-k">:</span> Î», Ï ];</td>
      </tr>
      <tr>
        <td id="L4411" class="blob-num js-line-number" data-line-number="4411"></td>
        <td id="LC4411" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4412" class="blob-num js-line-number" data-line-number="4412"></td>
        <td id="LC4412" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4413" class="blob-num js-line-number" data-line-number="4413"></td>
        <td id="LC4413" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> d3_geo_rotationÎ»(Î´Î») {</td>
      </tr>
      <tr>
        <td id="L4414" class="blob-num js-line-number" data-line-number="4414"></td>
        <td id="LC4414" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> rotation <span class="pl-k">=</span> d3_geo_forwardRotationÎ»(Î´Î»);</td>
      </tr>
      <tr>
        <td id="L4415" class="blob-num js-line-number" data-line-number="4415"></td>
        <td id="LC4415" class="blob-code blob-code-inner js-file-line">    rotation.invert <span class="pl-k">=</span> d3_geo_forwardRotationÎ»(<span class="pl-k">-</span>Î´Î»);</td>
      </tr>
      <tr>
        <td id="L4416" class="blob-num js-line-number" data-line-number="4416"></td>
        <td id="LC4416" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> rotation;</td>
      </tr>
      <tr>
        <td id="L4417" class="blob-num js-line-number" data-line-number="4417"></td>
        <td id="LC4417" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4418" class="blob-num js-line-number" data-line-number="4418"></td>
        <td id="LC4418" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> d3_geo_rotationÏÎ³(Î´Ï, Î´Î³) {</td>
      </tr>
      <tr>
        <td id="L4419" class="blob-num js-line-number" data-line-number="4419"></td>
        <td id="LC4419" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cosÎ´Ï <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î´Ï), sinÎ´Ï <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î´Ï), cosÎ´Î³ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î´Î³), sinÎ´Î³ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î´Î³);</td>
      </tr>
      <tr>
        <td id="L4420" class="blob-num js-line-number" data-line-number="4420"></td>
        <td id="LC4420" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">rotation</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4421" class="blob-num js-line-number" data-line-number="4421"></td>
        <td id="LC4421" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï), x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î») <span class="pl-k">*</span> cosÏ, y <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î») <span class="pl-k">*</span> cosÏ, z <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï), k <span class="pl-k">=</span> z <span class="pl-k">*</span> cosÎ´Ï <span class="pl-k">+</span> x <span class="pl-k">*</span> sinÎ´Ï;</td>
      </tr>
      <tr>
        <td id="L4422" class="blob-num js-line-number" data-line-number="4422"></td>
        <td id="LC4422" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(y <span class="pl-k">*</span> cosÎ´Î³ <span class="pl-k">-</span> k <span class="pl-k">*</span> sinÎ´Î³, x <span class="pl-k">*</span> cosÎ´Ï <span class="pl-k">-</span> z <span class="pl-k">*</span> sinÎ´Ï), d3_asin(k <span class="pl-k">*</span> cosÎ´Î³ <span class="pl-k">+</span> y <span class="pl-k">*</span> sinÎ´Î³) ];</td>
      </tr>
      <tr>
        <td id="L4423" class="blob-num js-line-number" data-line-number="4423"></td>
        <td id="LC4423" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4424" class="blob-num js-line-number" data-line-number="4424"></td>
        <td id="LC4424" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">rotation</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4425" class="blob-num js-line-number" data-line-number="4425"></td>
        <td id="LC4425" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï), x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î») <span class="pl-k">*</span> cosÏ, y <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î») <span class="pl-k">*</span> cosÏ, z <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï), k <span class="pl-k">=</span> z <span class="pl-k">*</span> cosÎ´Î³ <span class="pl-k">-</span> y <span class="pl-k">*</span> sinÎ´Î³;</td>
      </tr>
      <tr>
        <td id="L4426" class="blob-num js-line-number" data-line-number="4426"></td>
        <td id="LC4426" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(y <span class="pl-k">*</span> cosÎ´Î³ <span class="pl-k">+</span> z <span class="pl-k">*</span> sinÎ´Î³, x <span class="pl-k">*</span> cosÎ´Ï <span class="pl-k">+</span> k <span class="pl-k">*</span> sinÎ´Ï), d3_asin(k <span class="pl-k">*</span> cosÎ´Ï <span class="pl-k">-</span> x <span class="pl-k">*</span> sinÎ´Ï) ];</td>
      </tr>
      <tr>
        <td id="L4427" class="blob-num js-line-number" data-line-number="4427"></td>
        <td id="LC4427" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4428" class="blob-num js-line-number" data-line-number="4428"></td>
        <td id="LC4428" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> rotation;</td>
      </tr>
      <tr>
        <td id="L4429" class="blob-num js-line-number" data-line-number="4429"></td>
        <td id="LC4429" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4430" class="blob-num js-line-number" data-line-number="4430"></td>
        <td id="LC4430" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">circle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4431" class="blob-num js-line-number" data-line-number="4431"></td>
        <td id="LC4431" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> origin <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ], angle, precision <span class="pl-k">=</span> <span class="pl-c1">6</span>, interpolate;</td>
      </tr>
      <tr>
        <td id="L4432" class="blob-num js-line-number" data-line-number="4432"></td>
        <td id="LC4432" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">circle</span>() {</td>
      </tr>
      <tr>
        <td id="L4433" class="blob-num js-line-number" data-line-number="4433"></td>
        <td id="LC4433" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> center <span class="pl-k">=</span> <span class="pl-k">typeof</span> origin <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> origin.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">:</span> origin, rotate <span class="pl-k">=</span> d3_geo_rotation(<span class="pl-k">-</span>center[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d3_radians, <span class="pl-k">-</span>center[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians, <span class="pl-c1">0</span>).invert, ring <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4434" class="blob-num js-line-number" data-line-number="4434"></td>
        <td id="LC4434" class="blob-code blob-code-inner js-file-line">      interpolate(<span class="pl-c1">null</span>, <span class="pl-c1">null</span>, <span class="pl-c1">1</span>, {</td>
      </tr>
      <tr>
        <td id="L4435" class="blob-num js-line-number" data-line-number="4435"></td>
        <td id="LC4435" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">point</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4436" class="blob-num js-line-number" data-line-number="4436"></td>
        <td id="LC4436" class="blob-code blob-code-inner js-file-line">          ring.<span class="pl-c1">push</span>(x <span class="pl-k">=</span> rotate(x, y));</td>
      </tr>
      <tr>
        <td id="L4437" class="blob-num js-line-number" data-line-number="4437"></td>
        <td id="LC4437" class="blob-code blob-code-inner js-file-line">          x[<span class="pl-c1">0</span>] <span class="pl-k">*=</span> d3_degrees, x[<span class="pl-c1">1</span>] <span class="pl-k">*=</span> d3_degrees;</td>
      </tr>
      <tr>
        <td id="L4438" class="blob-num js-line-number" data-line-number="4438"></td>
        <td id="LC4438" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4439" class="blob-num js-line-number" data-line-number="4439"></td>
        <td id="LC4439" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L4440" class="blob-num js-line-number" data-line-number="4440"></td>
        <td id="LC4440" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4441" class="blob-num js-line-number" data-line-number="4441"></td>
        <td id="LC4441" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Polygon<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4442" class="blob-num js-line-number" data-line-number="4442"></td>
        <td id="LC4442" class="blob-code blob-code-inner js-file-line">        coordinates<span class="pl-k">:</span> [ ring ]</td>
      </tr>
      <tr>
        <td id="L4443" class="blob-num js-line-number" data-line-number="4443"></td>
        <td id="LC4443" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L4444" class="blob-num js-line-number" data-line-number="4444"></td>
        <td id="LC4444" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4445" class="blob-num js-line-number" data-line-number="4445"></td>
        <td id="LC4445" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">circle</span>.<span class="pl-en">origin</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4446" class="blob-num js-line-number" data-line-number="4446"></td>
        <td id="LC4446" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> origin;</td>
      </tr>
      <tr>
        <td id="L4447" class="blob-num js-line-number" data-line-number="4447"></td>
        <td id="LC4447" class="blob-code blob-code-inner js-file-line">      origin <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L4448" class="blob-num js-line-number" data-line-number="4448"></td>
        <td id="LC4448" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> circle;</td>
      </tr>
      <tr>
        <td id="L4449" class="blob-num js-line-number" data-line-number="4449"></td>
        <td id="LC4449" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4450" class="blob-num js-line-number" data-line-number="4450"></td>
        <td id="LC4450" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">circle</span>.<span class="pl-en">angle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4451" class="blob-num js-line-number" data-line-number="4451"></td>
        <td id="LC4451" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> angle;</td>
      </tr>
      <tr>
        <td id="L4452" class="blob-num js-line-number" data-line-number="4452"></td>
        <td id="LC4452" class="blob-code blob-code-inner js-file-line">      interpolate <span class="pl-k">=</span> d3_geo_circleInterpolate((angle <span class="pl-k">=</span> <span class="pl-k">+</span>x) <span class="pl-k">*</span> d3_radians, precision <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L4453" class="blob-num js-line-number" data-line-number="4453"></td>
        <td id="LC4453" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> circle;</td>
      </tr>
      <tr>
        <td id="L4454" class="blob-num js-line-number" data-line-number="4454"></td>
        <td id="LC4454" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4455" class="blob-num js-line-number" data-line-number="4455"></td>
        <td id="LC4455" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">circle</span>.<span class="pl-en">precision</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4456" class="blob-num js-line-number" data-line-number="4456"></td>
        <td id="LC4456" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> precision;</td>
      </tr>
      <tr>
        <td id="L4457" class="blob-num js-line-number" data-line-number="4457"></td>
        <td id="LC4457" class="blob-code blob-code-inner js-file-line">      interpolate <span class="pl-k">=</span> d3_geo_circleInterpolate(angle <span class="pl-k">*</span> d3_radians, (precision <span class="pl-k">=</span> <span class="pl-k">+</span>_) <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L4458" class="blob-num js-line-number" data-line-number="4458"></td>
        <td id="LC4458" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> circle;</td>
      </tr>
      <tr>
        <td id="L4459" class="blob-num js-line-number" data-line-number="4459"></td>
        <td id="LC4459" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4460" class="blob-num js-line-number" data-line-number="4460"></td>
        <td id="LC4460" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> circle.angle(<span class="pl-c1">90</span>);</td>
      </tr>
      <tr>
        <td id="L4461" class="blob-num js-line-number" data-line-number="4461"></td>
        <td id="LC4461" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4462" class="blob-num js-line-number" data-line-number="4462"></td>
        <td id="LC4462" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_circleInterpolate</span>(<span class="pl-smi">radius</span>, <span class="pl-smi">precision</span>) {</td>
      </tr>
      <tr>
        <td id="L4463" class="blob-num js-line-number" data-line-number="4463"></td>
        <td id="LC4463" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cr <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(radius), sr <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(radius);</td>
      </tr>
      <tr>
        <td id="L4464" class="blob-num js-line-number" data-line-number="4464"></td>
        <td id="LC4464" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">from</span>, <span class="pl-smi">to</span>, <span class="pl-smi">direction</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L4465" class="blob-num js-line-number" data-line-number="4465"></td>
        <td id="LC4465" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> step <span class="pl-k">=</span> direction <span class="pl-k">*</span> precision;</td>
      </tr>
      <tr>
        <td id="L4466" class="blob-num js-line-number" data-line-number="4466"></td>
        <td id="LC4466" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">from</span> <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4467" class="blob-num js-line-number" data-line-number="4467"></td>
        <td id="LC4467" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">from</span> <span class="pl-k">=</span> d3_geo_circleAngle(cr, <span class="pl-k">from</span>);</td>
      </tr>
      <tr>
        <td id="L4468" class="blob-num js-line-number" data-line-number="4468"></td>
        <td id="LC4468" class="blob-code blob-code-inner js-file-line">        to <span class="pl-k">=</span> d3_geo_circleAngle(cr, to);</td>
      </tr>
      <tr>
        <td id="L4469" class="blob-num js-line-number" data-line-number="4469"></td>
        <td id="LC4469" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (direction <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">from</span> <span class="pl-k">&lt;</span> to <span class="pl-k">:</span> <span class="pl-k">from</span> <span class="pl-k">&gt;</span> to) <span class="pl-k">from</span> <span class="pl-k">+=</span> direction <span class="pl-k">*</span> Ï;</td>
      </tr>
      <tr>
        <td id="L4470" class="blob-num js-line-number" data-line-number="4470"></td>
        <td id="LC4470" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4471" class="blob-num js-line-number" data-line-number="4471"></td>
        <td id="LC4471" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">from</span> <span class="pl-k">=</span> radius <span class="pl-k">+</span> direction <span class="pl-k">*</span> Ï;</td>
      </tr>
      <tr>
        <td id="L4472" class="blob-num js-line-number" data-line-number="4472"></td>
        <td id="LC4472" class="blob-code blob-code-inner js-file-line">        to <span class="pl-k">=</span> radius <span class="pl-k">-</span> .<span class="pl-c1">5</span> <span class="pl-k">*</span> step;</td>
      </tr>
      <tr>
        <td id="L4473" class="blob-num js-line-number" data-line-number="4473"></td>
        <td id="LC4473" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4474" class="blob-num js-line-number" data-line-number="4474"></td>
        <td id="LC4474" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> point, t <span class="pl-k">=</span> <span class="pl-k">from</span>; direction <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> t <span class="pl-k">&gt;</span> to <span class="pl-k">:</span> t <span class="pl-k">&lt;</span> to; t <span class="pl-k">-=</span> step) {</td>
      </tr>
      <tr>
        <td id="L4475" class="blob-num js-line-number" data-line-number="4475"></td>
        <td id="LC4475" class="blob-code blob-code-inner js-file-line">        listener.point((point <span class="pl-k">=</span> d3_geo_spherical([ cr, <span class="pl-k">-</span>sr <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t), <span class="pl-k">-</span>sr <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t) ]))[<span class="pl-c1">0</span>], point[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4476" class="blob-num js-line-number" data-line-number="4476"></td>
        <td id="LC4476" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4477" class="blob-num js-line-number" data-line-number="4477"></td>
        <td id="LC4477" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4478" class="blob-num js-line-number" data-line-number="4478"></td>
        <td id="LC4478" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4479" class="blob-num js-line-number" data-line-number="4479"></td>
        <td id="LC4479" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_circleAngle</span>(<span class="pl-smi">cr</span>, <span class="pl-smi">point</span>) {</td>
      </tr>
      <tr>
        <td id="L4480" class="blob-num js-line-number" data-line-number="4480"></td>
        <td id="LC4480" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> a <span class="pl-k">=</span> d3_geo_cartesian(point);</td>
      </tr>
      <tr>
        <td id="L4481" class="blob-num js-line-number" data-line-number="4481"></td>
        <td id="LC4481" class="blob-code blob-code-inner js-file-line">    a[<span class="pl-c1">0</span>] <span class="pl-k">-=</span> cr;</td>
      </tr>
      <tr>
        <td id="L4482" class="blob-num js-line-number" data-line-number="4482"></td>
        <td id="LC4482" class="blob-code blob-code-inner js-file-line">    d3_geo_cartesianNormalize(a);</td>
      </tr>
      <tr>
        <td id="L4483" class="blob-num js-line-number" data-line-number="4483"></td>
        <td id="LC4483" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> angle <span class="pl-k">=</span> d3_acos(<span class="pl-k">-</span>a[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4484" class="blob-num js-line-number" data-line-number="4484"></td>
        <td id="LC4484" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ((<span class="pl-k">-</span>a[<span class="pl-c1">2</span>] <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">-</span>angle <span class="pl-k">:</span> angle) <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">-</span> Îµ) <span class="pl-k">%</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>);</td>
      </tr>
      <tr>
        <td id="L4485" class="blob-num js-line-number" data-line-number="4485"></td>
        <td id="LC4485" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4486" class="blob-num js-line-number" data-line-number="4486"></td>
        <td id="LC4486" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">distance</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L4487" class="blob-num js-line-number" data-line-number="4487"></td>
        <td id="LC4487" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ÎÎ» <span class="pl-k">=</span> (b[<span class="pl-c1">0</span>] <span class="pl-k">-</span> a[<span class="pl-c1">0</span>]) <span class="pl-k">*</span> d3_radians, Ï<span class="pl-c1">0</span> <span class="pl-k">=</span> a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians, Ï<span class="pl-c1">1</span> <span class="pl-k">=</span> b[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians, sinÎÎ» <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(ÎÎ»), cosÎÎ» <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(ÎÎ»), sinÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">0</span>), cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">0</span>), sinÏ<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">1</span>), cosÏ<span class="pl-c1">1</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">1</span>), t;</td>
      </tr>
      <tr>
        <td id="L4488" class="blob-num js-line-number" data-line-number="4488"></td>
        <td id="LC4488" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>((t <span class="pl-k">=</span> cosÏ<span class="pl-c1">1</span> <span class="pl-k">*</span> sinÎÎ») <span class="pl-k">*</span> t <span class="pl-k">+</span> (t <span class="pl-k">=</span> cosÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> sinÏ<span class="pl-c1">1</span> <span class="pl-k">-</span> sinÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> cosÏ<span class="pl-c1">1</span> <span class="pl-k">*</span> cosÎÎ») <span class="pl-k">*</span> t), sinÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> sinÏ<span class="pl-c1">1</span> <span class="pl-k">+</span> cosÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> cosÏ<span class="pl-c1">1</span> <span class="pl-k">*</span> cosÎÎ»);</td>
      </tr>
      <tr>
        <td id="L4489" class="blob-num js-line-number" data-line-number="4489"></td>
        <td id="LC4489" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4490" class="blob-num js-line-number" data-line-number="4490"></td>
        <td id="LC4490" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">graticule</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4491" class="blob-num js-line-number" data-line-number="4491"></td>
        <td id="LC4491" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x1, x0, <span class="pl-c1">X1</span>, <span class="pl-c1">X0</span>, y1, y0, <span class="pl-c1">Y1</span>, <span class="pl-c1">Y0</span>, dx <span class="pl-k">=</span> <span class="pl-c1">10</span>, dy <span class="pl-k">=</span> dx, <span class="pl-c1">DX</span> <span class="pl-k">=</span> <span class="pl-c1">90</span>, <span class="pl-c1">DY</span> <span class="pl-k">=</span> <span class="pl-c1">360</span>, x, y, X, Y, precision <span class="pl-k">=</span> <span class="pl-c1">2.5</span>;</td>
      </tr>
      <tr>
        <td id="L4492" class="blob-num js-line-number" data-line-number="4492"></td>
        <td id="LC4492" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">graticule</span>() {</td>
      </tr>
      <tr>
        <td id="L4493" class="blob-num js-line-number" data-line-number="4493"></td>
        <td id="LC4493" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4494" class="blob-num js-line-number" data-line-number="4494"></td>
        <td id="LC4494" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>MultiLineString<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4495" class="blob-num js-line-number" data-line-number="4495"></td>
        <td id="LC4495" class="blob-code blob-code-inner js-file-line">        coordinates<span class="pl-k">:</span> lines()</td>
      </tr>
      <tr>
        <td id="L4496" class="blob-num js-line-number" data-line-number="4496"></td>
        <td id="LC4496" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L4497" class="blob-num js-line-number" data-line-number="4497"></td>
        <td id="LC4497" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4498" class="blob-num js-line-number" data-line-number="4498"></td>
        <td id="LC4498" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">lines</span>() {</td>
      </tr>
      <tr>
        <td id="L4499" class="blob-num js-line-number" data-line-number="4499"></td>
        <td id="LC4499" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3.range(<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">X0</span> / <span class="pl-c1">DX</span>) <span class="pl-k">*</span> <span class="pl-c1">DX</span>, <span class="pl-c1">X1</span>, <span class="pl-c1">DX</span>).map(X).<span class="pl-c1">concat</span>(d3.range(<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">Y0</span> / <span class="pl-c1">DY</span>) <span class="pl-k">*</span> <span class="pl-c1">DY</span>, <span class="pl-c1">Y1</span>, <span class="pl-c1">DY</span>).map(Y)).<span class="pl-c1">concat</span>(d3.range(<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(x0 / dx) <span class="pl-k">*</span> dx, x1, dx).filter(<span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4500" class="blob-num js-line-number" data-line-number="4500"></td>
        <td id="LC4500" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">abs</span>(x <span class="pl-k">%</span> <span class="pl-c1">DX</span>) <span class="pl-k">&gt;</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L4501" class="blob-num js-line-number" data-line-number="4501"></td>
        <td id="LC4501" class="blob-code blob-code-inner js-file-line">      }).map(x)).<span class="pl-c1">concat</span>(d3.range(<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(y0 / dy) <span class="pl-k">*</span> dy, y1, dy).filter(<span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4502" class="blob-num js-line-number" data-line-number="4502"></td>
        <td id="LC4502" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">abs</span>(y <span class="pl-k">%</span> <span class="pl-c1">DY</span>) <span class="pl-k">&gt;</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L4503" class="blob-num js-line-number" data-line-number="4503"></td>
        <td id="LC4503" class="blob-code blob-code-inner js-file-line">      }).map(y));</td>
      </tr>
      <tr>
        <td id="L4504" class="blob-num js-line-number" data-line-number="4504"></td>
        <td id="LC4504" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4505" class="blob-num js-line-number" data-line-number="4505"></td>
        <td id="LC4505" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">lines</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4506" class="blob-num js-line-number" data-line-number="4506"></td>
        <td id="LC4506" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> lines().map(<span class="pl-k">function</span>(<span class="pl-smi">coordinates</span>) {</td>
      </tr>
      <tr>
        <td id="L4507" class="blob-num js-line-number" data-line-number="4507"></td>
        <td id="LC4507" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4508" class="blob-num js-line-number" data-line-number="4508"></td>
        <td id="LC4508" class="blob-code blob-code-inner js-file-line">          type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>LineString<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4509" class="blob-num js-line-number" data-line-number="4509"></td>
        <td id="LC4509" class="blob-code blob-code-inner js-file-line">          coordinates<span class="pl-k">:</span> coordinates</td>
      </tr>
      <tr>
        <td id="L4510" class="blob-num js-line-number" data-line-number="4510"></td>
        <td id="LC4510" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4511" class="blob-num js-line-number" data-line-number="4511"></td>
        <td id="LC4511" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L4512" class="blob-num js-line-number" data-line-number="4512"></td>
        <td id="LC4512" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4513" class="blob-num js-line-number" data-line-number="4513"></td>
        <td id="LC4513" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">outline</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4514" class="blob-num js-line-number" data-line-number="4514"></td>
        <td id="LC4514" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4515" class="blob-num js-line-number" data-line-number="4515"></td>
        <td id="LC4515" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Polygon<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4516" class="blob-num js-line-number" data-line-number="4516"></td>
        <td id="LC4516" class="blob-code blob-code-inner js-file-line">        coordinates<span class="pl-k">:</span> [ X(<span class="pl-c1">X0</span>).<span class="pl-c1">concat</span>(Y(<span class="pl-c1">Y1</span>).<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>), X(<span class="pl-c1">X1</span>).<span class="pl-c1">reverse</span>().<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>), Y(<span class="pl-c1">Y0</span>).<span class="pl-c1">reverse</span>().<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>)) ]</td>
      </tr>
      <tr>
        <td id="L4517" class="blob-num js-line-number" data-line-number="4517"></td>
        <td id="LC4517" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L4518" class="blob-num js-line-number" data-line-number="4518"></td>
        <td id="LC4518" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4519" class="blob-num js-line-number" data-line-number="4519"></td>
        <td id="LC4519" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">extent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4520" class="blob-num js-line-number" data-line-number="4520"></td>
        <td id="LC4520" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> graticule.minorExtent();</td>
      </tr>
      <tr>
        <td id="L4521" class="blob-num js-line-number" data-line-number="4521"></td>
        <td id="LC4521" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> graticule.majorExtent(_).minorExtent(_);</td>
      </tr>
      <tr>
        <td id="L4522" class="blob-num js-line-number" data-line-number="4522"></td>
        <td id="LC4522" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4523" class="blob-num js-line-number" data-line-number="4523"></td>
        <td id="LC4523" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">majorExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4524" class="blob-num js-line-number" data-line-number="4524"></td>
        <td id="LC4524" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ [ <span class="pl-c1">X0</span>, <span class="pl-c1">Y0</span> ], [ <span class="pl-c1">X1</span>, <span class="pl-c1">Y1</span> ] ];</td>
      </tr>
      <tr>
        <td id="L4525" class="blob-num js-line-number" data-line-number="4525"></td>
        <td id="LC4525" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">X0</span> <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], <span class="pl-c1">X1</span> <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4526" class="blob-num js-line-number" data-line-number="4526"></td>
        <td id="LC4526" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">Y0</span> <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], <span class="pl-c1">Y1</span> <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4527" class="blob-num js-line-number" data-line-number="4527"></td>
        <td id="LC4527" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">X0</span> <span class="pl-k">&gt;</span> <span class="pl-c1">X1</span>) _ <span class="pl-k">=</span> <span class="pl-c1">X0</span>, <span class="pl-c1">X0</span> <span class="pl-k">=</span> <span class="pl-c1">X1</span>, <span class="pl-c1">X1</span> <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L4528" class="blob-num js-line-number" data-line-number="4528"></td>
        <td id="LC4528" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">Y0</span> <span class="pl-k">&gt;</span> <span class="pl-c1">Y1</span>) _ <span class="pl-k">=</span> <span class="pl-c1">Y0</span>, <span class="pl-c1">Y0</span> <span class="pl-k">=</span> <span class="pl-c1">Y1</span>, <span class="pl-c1">Y1</span> <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L4529" class="blob-num js-line-number" data-line-number="4529"></td>
        <td id="LC4529" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> graticule.precision(precision);</td>
      </tr>
      <tr>
        <td id="L4530" class="blob-num js-line-number" data-line-number="4530"></td>
        <td id="LC4530" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4531" class="blob-num js-line-number" data-line-number="4531"></td>
        <td id="LC4531" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">minorExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4532" class="blob-num js-line-number" data-line-number="4532"></td>
        <td id="LC4532" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ [ x0, y0 ], [ x1, y1 ] ];</td>
      </tr>
      <tr>
        <td id="L4533" class="blob-num js-line-number" data-line-number="4533"></td>
        <td id="LC4533" class="blob-code blob-code-inner js-file-line">      x0 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4534" class="blob-num js-line-number" data-line-number="4534"></td>
        <td id="LC4534" class="blob-code blob-code-inner js-file-line">      y0 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], y1 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4535" class="blob-num js-line-number" data-line-number="4535"></td>
        <td id="LC4535" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x0 <span class="pl-k">&gt;</span> x1) _ <span class="pl-k">=</span> x0, x0 <span class="pl-k">=</span> x1, x1 <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L4536" class="blob-num js-line-number" data-line-number="4536"></td>
        <td id="LC4536" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (y0 <span class="pl-k">&gt;</span> y1) _ <span class="pl-k">=</span> y0, y0 <span class="pl-k">=</span> y1, y1 <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L4537" class="blob-num js-line-number" data-line-number="4537"></td>
        <td id="LC4537" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> graticule.precision(precision);</td>
      </tr>
      <tr>
        <td id="L4538" class="blob-num js-line-number" data-line-number="4538"></td>
        <td id="LC4538" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4539" class="blob-num js-line-number" data-line-number="4539"></td>
        <td id="LC4539" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">step</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4540" class="blob-num js-line-number" data-line-number="4540"></td>
        <td id="LC4540" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> graticule.minorStep();</td>
      </tr>
      <tr>
        <td id="L4541" class="blob-num js-line-number" data-line-number="4541"></td>
        <td id="LC4541" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> graticule.majorStep(_).minorStep(_);</td>
      </tr>
      <tr>
        <td id="L4542" class="blob-num js-line-number" data-line-number="4542"></td>
        <td id="LC4542" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4543" class="blob-num js-line-number" data-line-number="4543"></td>
        <td id="LC4543" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">majorStep</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4544" class="blob-num js-line-number" data-line-number="4544"></td>
        <td id="LC4544" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ <span class="pl-c1">DX</span>, <span class="pl-c1">DY</span> ];</td>
      </tr>
      <tr>
        <td id="L4545" class="blob-num js-line-number" data-line-number="4545"></td>
        <td id="LC4545" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">DX</span> <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>], <span class="pl-c1">DY</span> <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4546" class="blob-num js-line-number" data-line-number="4546"></td>
        <td id="LC4546" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> graticule;</td>
      </tr>
      <tr>
        <td id="L4547" class="blob-num js-line-number" data-line-number="4547"></td>
        <td id="LC4547" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4548" class="blob-num js-line-number" data-line-number="4548"></td>
        <td id="LC4548" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">minorStep</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4549" class="blob-num js-line-number" data-line-number="4549"></td>
        <td id="LC4549" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ dx, dy ];</td>
      </tr>
      <tr>
        <td id="L4550" class="blob-num js-line-number" data-line-number="4550"></td>
        <td id="LC4550" class="blob-code blob-code-inner js-file-line">      dx <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>], dy <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4551" class="blob-num js-line-number" data-line-number="4551"></td>
        <td id="LC4551" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> graticule;</td>
      </tr>
      <tr>
        <td id="L4552" class="blob-num js-line-number" data-line-number="4552"></td>
        <td id="LC4552" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4553" class="blob-num js-line-number" data-line-number="4553"></td>
        <td id="LC4553" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">graticule</span>.<span class="pl-en">precision</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4554" class="blob-num js-line-number" data-line-number="4554"></td>
        <td id="LC4554" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> precision;</td>
      </tr>
      <tr>
        <td id="L4555" class="blob-num js-line-number" data-line-number="4555"></td>
        <td id="LC4555" class="blob-code blob-code-inner js-file-line">      precision <span class="pl-k">=</span> <span class="pl-k">+</span>_;</td>
      </tr>
      <tr>
        <td id="L4556" class="blob-num js-line-number" data-line-number="4556"></td>
        <td id="LC4556" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> d3_geo_graticuleX(y0, y1, <span class="pl-c1">90</span>);</td>
      </tr>
      <tr>
        <td id="L4557" class="blob-num js-line-number" data-line-number="4557"></td>
        <td id="LC4557" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> d3_geo_graticuleY(x0, x1, precision);</td>
      </tr>
      <tr>
        <td id="L4558" class="blob-num js-line-number" data-line-number="4558"></td>
        <td id="LC4558" class="blob-code blob-code-inner js-file-line">      X <span class="pl-k">=</span> d3_geo_graticuleX(<span class="pl-c1">Y0</span>, <span class="pl-c1">Y1</span>, <span class="pl-c1">90</span>);</td>
      </tr>
      <tr>
        <td id="L4559" class="blob-num js-line-number" data-line-number="4559"></td>
        <td id="LC4559" class="blob-code blob-code-inner js-file-line">      Y <span class="pl-k">=</span> d3_geo_graticuleY(<span class="pl-c1">X0</span>, <span class="pl-c1">X1</span>, precision);</td>
      </tr>
      <tr>
        <td id="L4560" class="blob-num js-line-number" data-line-number="4560"></td>
        <td id="LC4560" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> graticule;</td>
      </tr>
      <tr>
        <td id="L4561" class="blob-num js-line-number" data-line-number="4561"></td>
        <td id="LC4561" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4562" class="blob-num js-line-number" data-line-number="4562"></td>
        <td id="LC4562" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> graticule.majorExtent([ [ <span class="pl-k">-</span><span class="pl-c1">180</span>, <span class="pl-k">-</span><span class="pl-c1">90</span> <span class="pl-k">+</span> Îµ ], [ <span class="pl-c1">180</span>, <span class="pl-c1">90</span> <span class="pl-k">-</span> Îµ ] ]).minorExtent([ [ <span class="pl-k">-</span><span class="pl-c1">180</span>, <span class="pl-k">-</span><span class="pl-c1">80</span> <span class="pl-k">-</span> Îµ ], [ <span class="pl-c1">180</span>, <span class="pl-c1">80</span> <span class="pl-k">+</span> Îµ ] ]);</td>
      </tr>
      <tr>
        <td id="L4563" class="blob-num js-line-number" data-line-number="4563"></td>
        <td id="LC4563" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4564" class="blob-num js-line-number" data-line-number="4564"></td>
        <td id="LC4564" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_graticuleX</span>(<span class="pl-smi">y0</span>, <span class="pl-smi">y1</span>, <span class="pl-smi">dy</span>) {</td>
      </tr>
      <tr>
        <td id="L4565" class="blob-num js-line-number" data-line-number="4565"></td>
        <td id="LC4565" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> y <span class="pl-k">=</span> d3.range(y0, y1 <span class="pl-k">-</span> Îµ, dy).<span class="pl-c1">concat</span>(y1);</td>
      </tr>
      <tr>
        <td id="L4566" class="blob-num js-line-number" data-line-number="4566"></td>
        <td id="LC4566" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4567" class="blob-num js-line-number" data-line-number="4567"></td>
        <td id="LC4567" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> y.map(<span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4568" class="blob-num js-line-number" data-line-number="4568"></td>
        <td id="LC4568" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> [ x, y ];</td>
      </tr>
      <tr>
        <td id="L4569" class="blob-num js-line-number" data-line-number="4569"></td>
        <td id="LC4569" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L4570" class="blob-num js-line-number" data-line-number="4570"></td>
        <td id="LC4570" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4571" class="blob-num js-line-number" data-line-number="4571"></td>
        <td id="LC4571" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4572" class="blob-num js-line-number" data-line-number="4572"></td>
        <td id="LC4572" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_graticuleY</span>(<span class="pl-smi">x0</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">dx</span>) {</td>
      </tr>
      <tr>
        <td id="L4573" class="blob-num js-line-number" data-line-number="4573"></td>
        <td id="LC4573" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> d3.range(x0, x1 <span class="pl-k">-</span> Îµ, dx).<span class="pl-c1">concat</span>(x1);</td>
      </tr>
      <tr>
        <td id="L4574" class="blob-num js-line-number" data-line-number="4574"></td>
        <td id="LC4574" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4575" class="blob-num js-line-number" data-line-number="4575"></td>
        <td id="LC4575" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x.map(<span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L4576" class="blob-num js-line-number" data-line-number="4576"></td>
        <td id="LC4576" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> [ x, y ];</td>
      </tr>
      <tr>
        <td id="L4577" class="blob-num js-line-number" data-line-number="4577"></td>
        <td id="LC4577" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L4578" class="blob-num js-line-number" data-line-number="4578"></td>
        <td id="LC4578" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4579" class="blob-num js-line-number" data-line-number="4579"></td>
        <td id="LC4579" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4580" class="blob-num js-line-number" data-line-number="4580"></td>
        <td id="LC4580" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_source</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L4581" class="blob-num js-line-number" data-line-number="4581"></td>
        <td id="LC4581" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">source</span>;</td>
      </tr>
      <tr>
        <td id="L4582" class="blob-num js-line-number" data-line-number="4582"></td>
        <td id="LC4582" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4583" class="blob-num js-line-number" data-line-number="4583"></td>
        <td id="LC4583" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_target</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L4584" class="blob-num js-line-number" data-line-number="4584"></td>
        <td id="LC4584" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">target</span>;</td>
      </tr>
      <tr>
        <td id="L4585" class="blob-num js-line-number" data-line-number="4585"></td>
        <td id="LC4585" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4586" class="blob-num js-line-number" data-line-number="4586"></td>
        <td id="LC4586" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">greatArc</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4587" class="blob-num js-line-number" data-line-number="4587"></td>
        <td id="LC4587" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> source <span class="pl-k">=</span> d3_source, source_, target <span class="pl-k">=</span> d3_target, target_;</td>
      </tr>
      <tr>
        <td id="L4588" class="blob-num js-line-number" data-line-number="4588"></td>
        <td id="LC4588" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">greatArc</span>() {</td>
      </tr>
      <tr>
        <td id="L4589" class="blob-num js-line-number" data-line-number="4589"></td>
        <td id="LC4589" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L4590" class="blob-num js-line-number" data-line-number="4590"></td>
        <td id="LC4590" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>LineString<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4591" class="blob-num js-line-number" data-line-number="4591"></td>
        <td id="LC4591" class="blob-code blob-code-inner js-file-line">        coordinates<span class="pl-k">:</span> [ source_ <span class="pl-k">||</span> source.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments), target_ <span class="pl-k">||</span> target.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) ]</td>
      </tr>
      <tr>
        <td id="L4592" class="blob-num js-line-number" data-line-number="4592"></td>
        <td id="LC4592" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L4593" class="blob-num js-line-number" data-line-number="4593"></td>
        <td id="LC4593" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4594" class="blob-num js-line-number" data-line-number="4594"></td>
        <td id="LC4594" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">greatArc</span>.<span class="pl-en">distance</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4595" class="blob-num js-line-number" data-line-number="4595"></td>
        <td id="LC4595" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3.geo.distance(source_ <span class="pl-k">||</span> source.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments), target_ <span class="pl-k">||</span> target.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments));</td>
      </tr>
      <tr>
        <td id="L4596" class="blob-num js-line-number" data-line-number="4596"></td>
        <td id="LC4596" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4597" class="blob-num js-line-number" data-line-number="4597"></td>
        <td id="LC4597" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">greatArc</span>.<span class="pl-en">source</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4598" class="blob-num js-line-number" data-line-number="4598"></td>
        <td id="LC4598" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> source;</td>
      </tr>
      <tr>
        <td id="L4599" class="blob-num js-line-number" data-line-number="4599"></td>
        <td id="LC4599" class="blob-code blob-code-inner js-file-line">      source <span class="pl-k">=</span> _, source_ <span class="pl-k">=</span> <span class="pl-k">typeof</span> _ <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> null <span class="pl-k">:</span> _;</td>
      </tr>
      <tr>
        <td id="L4600" class="blob-num js-line-number" data-line-number="4600"></td>
        <td id="LC4600" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> greatArc;</td>
      </tr>
      <tr>
        <td id="L4601" class="blob-num js-line-number" data-line-number="4601"></td>
        <td id="LC4601" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4602" class="blob-num js-line-number" data-line-number="4602"></td>
        <td id="LC4602" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">greatArc</span>.<span class="pl-en">target</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4603" class="blob-num js-line-number" data-line-number="4603"></td>
        <td id="LC4603" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> target;</td>
      </tr>
      <tr>
        <td id="L4604" class="blob-num js-line-number" data-line-number="4604"></td>
        <td id="LC4604" class="blob-code blob-code-inner js-file-line">      target <span class="pl-k">=</span> _, target_ <span class="pl-k">=</span> <span class="pl-k">typeof</span> _ <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> null <span class="pl-k">:</span> _;</td>
      </tr>
      <tr>
        <td id="L4605" class="blob-num js-line-number" data-line-number="4605"></td>
        <td id="LC4605" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> greatArc;</td>
      </tr>
      <tr>
        <td id="L4606" class="blob-num js-line-number" data-line-number="4606"></td>
        <td id="LC4606" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4607" class="blob-num js-line-number" data-line-number="4607"></td>
        <td id="LC4607" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">greatArc</span>.<span class="pl-en">precision</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4608" class="blob-num js-line-number" data-line-number="4608"></td>
        <td id="LC4608" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> greatArc <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4609" class="blob-num js-line-number" data-line-number="4609"></td>
        <td id="LC4609" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4610" class="blob-num js-line-number" data-line-number="4610"></td>
        <td id="LC4610" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> greatArc;</td>
      </tr>
      <tr>
        <td id="L4611" class="blob-num js-line-number" data-line-number="4611"></td>
        <td id="LC4611" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4612" class="blob-num js-line-number" data-line-number="4612"></td>
        <td id="LC4612" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">interpolate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">source</span>, <span class="pl-smi">target</span>) {</td>
      </tr>
      <tr>
        <td id="L4613" class="blob-num js-line-number" data-line-number="4613"></td>
        <td id="LC4613" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_interpolate(source[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d3_radians, source[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians, target[<span class="pl-c1">0</span>] <span class="pl-k">*</span> d3_radians, target[<span class="pl-c1">1</span>] <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L4614" class="blob-num js-line-number" data-line-number="4614"></td>
        <td id="LC4614" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4615" class="blob-num js-line-number" data-line-number="4615"></td>
        <td id="LC4615" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_interpolate</span>(<span class="pl-smi">x0</span>, <span class="pl-smi">y0</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>) {</td>
      </tr>
      <tr>
        <td id="L4616" class="blob-num js-line-number" data-line-number="4616"></td>
        <td id="LC4616" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cy0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(y0), sy0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(y0), cy1 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(y1), sy1 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(y1), kx0 <span class="pl-k">=</span> cy0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(x0), ky0 <span class="pl-k">=</span> cy0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(x0), kx1 <span class="pl-k">=</span> cy1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(x1), ky1 <span class="pl-k">=</span> cy1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(x1), d <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(d3_haversin(y1 <span class="pl-k">-</span> y0) <span class="pl-k">+</span> cy0 <span class="pl-k">*</span> cy1 <span class="pl-k">*</span> d3_haversin(x1 <span class="pl-k">-</span> x0))), k <span class="pl-k">=</span> <span class="pl-c1">1</span> / <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(d);</td>
      </tr>
      <tr>
        <td id="L4617" class="blob-num js-line-number" data-line-number="4617"></td>
        <td id="LC4617" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> interpolate <span class="pl-k">=</span> d <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L4618" class="blob-num js-line-number" data-line-number="4618"></td>
        <td id="LC4618" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> B <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t <span class="pl-k">*=</span> d) <span class="pl-k">*</span> k, A <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(d <span class="pl-k">-</span> t) <span class="pl-k">*</span> k, x <span class="pl-k">=</span> A <span class="pl-k">*</span> kx0 <span class="pl-k">+</span> B <span class="pl-k">*</span> kx1, y <span class="pl-k">=</span> A <span class="pl-k">*</span> ky0 <span class="pl-k">+</span> B <span class="pl-k">*</span> ky1, z <span class="pl-k">=</span> A <span class="pl-k">*</span> sy0 <span class="pl-k">+</span> B <span class="pl-k">*</span> sy1;</td>
      </tr>
      <tr>
        <td id="L4619" class="blob-num js-line-number" data-line-number="4619"></td>
        <td id="LC4619" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(y, x) <span class="pl-k">*</span> d3_degrees, <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(z, <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(x <span class="pl-k">*</span> x <span class="pl-k">+</span> y <span class="pl-k">*</span> y)) <span class="pl-k">*</span> d3_degrees ];</td>
      </tr>
      <tr>
        <td id="L4620" class="blob-num js-line-number" data-line-number="4620"></td>
        <td id="LC4620" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4621" class="blob-num js-line-number" data-line-number="4621"></td>
        <td id="LC4621" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ x0 <span class="pl-k">*</span> d3_degrees, y0 <span class="pl-k">*</span> d3_degrees ];</td>
      </tr>
      <tr>
        <td id="L4622" class="blob-num js-line-number" data-line-number="4622"></td>
        <td id="LC4622" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4623" class="blob-num js-line-number" data-line-number="4623"></td>
        <td id="LC4623" class="blob-code blob-code-inner js-file-line">    interpolate.distance <span class="pl-k">=</span> d;</td>
      </tr>
      <tr>
        <td id="L4624" class="blob-num js-line-number" data-line-number="4624"></td>
        <td id="LC4624" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> interpolate;</td>
      </tr>
      <tr>
        <td id="L4625" class="blob-num js-line-number" data-line-number="4625"></td>
        <td id="LC4625" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4626" class="blob-num js-line-number" data-line-number="4626"></td>
        <td id="LC4626" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geo</span>.<span class="pl-en">length</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L4627" class="blob-num js-line-number" data-line-number="4627"></td>
        <td id="LC4627" class="blob-code blob-code-inner js-file-line">    d3_geo_lengthSum <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4628" class="blob-num js-line-number" data-line-number="4628"></td>
        <td id="LC4628" class="blob-code blob-code-inner js-file-line">    d3.geo.stream(object, d3_geo_length);</td>
      </tr>
      <tr>
        <td id="L4629" class="blob-num js-line-number" data-line-number="4629"></td>
        <td id="LC4629" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_lengthSum;</td>
      </tr>
      <tr>
        <td id="L4630" class="blob-num js-line-number" data-line-number="4630"></td>
        <td id="LC4630" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4631" class="blob-num js-line-number" data-line-number="4631"></td>
        <td id="LC4631" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_lengthSum;</td>
      </tr>
      <tr>
        <td id="L4632" class="blob-num js-line-number" data-line-number="4632"></td>
        <td id="LC4632" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_length <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4633" class="blob-num js-line-number" data-line-number="4633"></td>
        <td id="LC4633" class="blob-code blob-code-inner js-file-line">    sphere<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L4634" class="blob-num js-line-number" data-line-number="4634"></td>
        <td id="LC4634" class="blob-code blob-code-inner js-file-line">    point<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L4635" class="blob-num js-line-number" data-line-number="4635"></td>
        <td id="LC4635" class="blob-code blob-code-inner js-file-line">    lineStart<span class="pl-k">:</span> d3_geo_lengthLineStart,</td>
      </tr>
      <tr>
        <td id="L4636" class="blob-num js-line-number" data-line-number="4636"></td>
        <td id="LC4636" class="blob-code blob-code-inner js-file-line">    lineEnd<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L4637" class="blob-num js-line-number" data-line-number="4637"></td>
        <td id="LC4637" class="blob-code blob-code-inner js-file-line">    polygonStart<span class="pl-k">:</span> d3_noop,</td>
      </tr>
      <tr>
        <td id="L4638" class="blob-num js-line-number" data-line-number="4638"></td>
        <td id="LC4638" class="blob-code blob-code-inner js-file-line">    polygonEnd<span class="pl-k">:</span> d3_noop</td>
      </tr>
      <tr>
        <td id="L4639" class="blob-num js-line-number" data-line-number="4639"></td>
        <td id="LC4639" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4640" class="blob-num js-line-number" data-line-number="4640"></td>
        <td id="LC4640" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_lengthLineStart</span>() {</td>
      </tr>
      <tr>
        <td id="L4641" class="blob-num js-line-number" data-line-number="4641"></td>
        <td id="LC4641" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> Î»<span class="pl-c1">0</span>, sinÏ<span class="pl-c1">0</span>, cosÏ<span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4642" class="blob-num js-line-number" data-line-number="4642"></td>
        <td id="LC4642" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_length</span>.<span class="pl-en">point</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4643" class="blob-num js-line-number" data-line-number="4643"></td>
        <td id="LC4643" class="blob-code blob-code-inner js-file-line">      Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î» <span class="pl-k">*</span> d3_radians, sinÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï <span class="pl-k">*=</span> d3_radians), cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï);</td>
      </tr>
      <tr>
        <td id="L4644" class="blob-num js-line-number" data-line-number="4644"></td>
        <td id="LC4644" class="blob-code blob-code-inner js-file-line">      d3_geo_length.point <span class="pl-k">=</span> nextPoint;</td>
      </tr>
      <tr>
        <td id="L4645" class="blob-num js-line-number" data-line-number="4645"></td>
        <td id="LC4645" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4646" class="blob-num js-line-number" data-line-number="4646"></td>
        <td id="LC4646" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">d3_geo_length</span>.<span class="pl-en">lineEnd</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4647" class="blob-num js-line-number" data-line-number="4647"></td>
        <td id="LC4647" class="blob-code blob-code-inner js-file-line">      d3_geo_length.point <span class="pl-k">=</span> d3_geo_length.lineEnd <span class="pl-k">=</span> d3_noop;</td>
      </tr>
      <tr>
        <td id="L4648" class="blob-num js-line-number" data-line-number="4648"></td>
        <td id="LC4648" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4649" class="blob-num js-line-number" data-line-number="4649"></td>
        <td id="LC4649" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">nextPoint</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4650" class="blob-num js-line-number" data-line-number="4650"></td>
        <td id="LC4650" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> sinÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï <span class="pl-k">*=</span> d3_radians), cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï), t <span class="pl-k">=</span> <span class="pl-c1">abs</span>((Î» <span class="pl-k">*=</span> d3_radians) <span class="pl-k">-</span> Î»<span class="pl-c1">0</span>), cosÎÎ» <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t);</td>
      </tr>
      <tr>
        <td id="L4651" class="blob-num js-line-number" data-line-number="4651"></td>
        <td id="LC4651" class="blob-code blob-code-inner js-file-line">      d3_geo_lengthSum <span class="pl-k">+=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>((t <span class="pl-k">=</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t)) <span class="pl-k">*</span> t <span class="pl-k">+</span> (t <span class="pl-k">=</span> cosÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> sinÏ <span class="pl-k">-</span> sinÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> cosÏ <span class="pl-k">*</span> cosÎÎ») <span class="pl-k">*</span> t), sinÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> sinÏ <span class="pl-k">+</span> cosÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> cosÏ <span class="pl-k">*</span> cosÎÎ»);</td>
      </tr>
      <tr>
        <td id="L4652" class="blob-num js-line-number" data-line-number="4652"></td>
        <td id="LC4652" class="blob-code blob-code-inner js-file-line">      Î»<span class="pl-c1">0</span> <span class="pl-k">=</span> Î», sinÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> sinÏ, cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> cosÏ;</td>
      </tr>
      <tr>
        <td id="L4653" class="blob-num js-line-number" data-line-number="4653"></td>
        <td id="LC4653" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4654" class="blob-num js-line-number" data-line-number="4654"></td>
        <td id="LC4654" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4655" class="blob-num js-line-number" data-line-number="4655"></td>
        <td id="LC4655" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_azimuthal</span>(<span class="pl-smi">scale</span>, <span class="pl-smi">angle</span>) {</td>
      </tr>
      <tr>
        <td id="L4656" class="blob-num js-line-number" data-line-number="4656"></td>
        <td id="LC4656" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">azimuthal</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4657" class="blob-num js-line-number" data-line-number="4657"></td>
        <td id="LC4657" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> cosÎ» <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Î»), cosÏ <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï), k <span class="pl-k">=</span> scale(cosÎ» <span class="pl-k">*</span> cosÏ);</td>
      </tr>
      <tr>
        <td id="L4658" class="blob-num js-line-number" data-line-number="4658"></td>
        <td id="LC4658" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ k <span class="pl-k">*</span> cosÏ <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Î»), k <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï) ];</td>
      </tr>
      <tr>
        <td id="L4659" class="blob-num js-line-number" data-line-number="4659"></td>
        <td id="LC4659" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4660" class="blob-num js-line-number" data-line-number="4660"></td>
        <td id="LC4660" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">azimuthal</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4661" class="blob-num js-line-number" data-line-number="4661"></td>
        <td id="LC4661" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Ï <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(x <span class="pl-k">*</span> x <span class="pl-k">+</span> y <span class="pl-k">*</span> y), c <span class="pl-k">=</span> angle(Ï), sinc <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(c), cosc <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(c);</td>
      </tr>
      <tr>
        <td id="L4662" class="blob-num js-line-number" data-line-number="4662"></td>
        <td id="LC4662" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(x <span class="pl-k">*</span> sinc, Ï <span class="pl-k">*</span> cosc), <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(Ï <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">*</span> sinc / Ï) ];</td>
      </tr>
      <tr>
        <td id="L4663" class="blob-num js-line-number" data-line-number="4663"></td>
        <td id="LC4663" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4664" class="blob-num js-line-number" data-line-number="4664"></td>
        <td id="LC4664" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> azimuthal;</td>
      </tr>
      <tr>
        <td id="L4665" class="blob-num js-line-number" data-line-number="4665"></td>
        <td id="LC4665" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4666" class="blob-num js-line-number" data-line-number="4666"></td>
        <td id="LC4666" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_azimuthalEqualArea <span class="pl-k">=</span> d3_geo_azimuthal(<span class="pl-k">function</span>(<span class="pl-smi">cosÎ»cosÏ</span>) {</td>
      </tr>
      <tr>
        <td id="L4667" class="blob-num js-line-number" data-line-number="4667"></td>
        <td id="LC4667" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">2</span> / (<span class="pl-c1">1</span> <span class="pl-k">+</span> cosÎ»cosÏ));</td>
      </tr>
      <tr>
        <td id="L4668" class="blob-num js-line-number" data-line-number="4668"></td>
        <td id="LC4668" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4669" class="blob-num js-line-number" data-line-number="4669"></td>
        <td id="LC4669" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(Ï / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L4670" class="blob-num js-line-number" data-line-number="4670"></td>
        <td id="LC4670" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L4671" class="blob-num js-line-number" data-line-number="4671"></td>
        <td id="LC4671" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">azimuthalEqualArea</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4672" class="blob-num js-line-number" data-line-number="4672"></td>
        <td id="LC4672" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_projection(d3_geo_azimuthalEqualArea);</td>
      </tr>
      <tr>
        <td id="L4673" class="blob-num js-line-number" data-line-number="4673"></td>
        <td id="LC4673" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_azimuthalEqualArea;</td>
      </tr>
      <tr>
        <td id="L4674" class="blob-num js-line-number" data-line-number="4674"></td>
        <td id="LC4674" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_azimuthalEquidistant <span class="pl-k">=</span> d3_geo_azimuthal(<span class="pl-k">function</span>(<span class="pl-smi">cosÎ»cosÏ</span>) {</td>
      </tr>
      <tr>
        <td id="L4675" class="blob-num js-line-number" data-line-number="4675"></td>
        <td id="LC4675" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> c <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(cosÎ»cosÏ);</td>
      </tr>
      <tr>
        <td id="L4676" class="blob-num js-line-number" data-line-number="4676"></td>
        <td id="LC4676" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> c <span class="pl-k">&amp;&amp;</span> c / <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(c);</td>
      </tr>
      <tr>
        <td id="L4677" class="blob-num js-line-number" data-line-number="4677"></td>
        <td id="LC4677" class="blob-code blob-code-inner js-file-line">  }, d3_identity);</td>
      </tr>
      <tr>
        <td id="L4678" class="blob-num js-line-number" data-line-number="4678"></td>
        <td id="LC4678" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">azimuthalEquidistant</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4679" class="blob-num js-line-number" data-line-number="4679"></td>
        <td id="LC4679" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_projection(d3_geo_azimuthalEquidistant);</td>
      </tr>
      <tr>
        <td id="L4680" class="blob-num js-line-number" data-line-number="4680"></td>
        <td id="LC4680" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_azimuthalEquidistant;</td>
      </tr>
      <tr>
        <td id="L4681" class="blob-num js-line-number" data-line-number="4681"></td>
        <td id="LC4681" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_conicConformal</span>(<span class="pl-smi">Ï0</span>, <span class="pl-smi">Ï1</span>) {</td>
      </tr>
      <tr>
        <td id="L4682" class="blob-num js-line-number" data-line-number="4682"></td>
        <td id="LC4682" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">0</span>), <span class="pl-en">t</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4683" class="blob-num js-line-number" data-line-number="4683"></td>
        <td id="LC4683" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(Ï / <span class="pl-c1">4</span> <span class="pl-k">+</span> Ï / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L4684" class="blob-num js-line-number" data-line-number="4684"></td>
        <td id="LC4684" class="blob-code blob-code-inner js-file-line">    }, n <span class="pl-k">=</span> Ï<span class="pl-c1">0</span> <span class="pl-k">===</span> Ï<span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">0</span>) <span class="pl-k">:</span> <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(cosÏ<span class="pl-c1">0</span> / <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">1</span>)) / <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(t(Ï<span class="pl-c1">1</span>) / t(Ï<span class="pl-c1">0</span>)), F <span class="pl-k">=</span> cosÏ<span class="pl-c1">0</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(t(Ï<span class="pl-c1">0</span>), n) / n;</td>
      </tr>
      <tr>
        <td id="L4685" class="blob-num js-line-number" data-line-number="4685"></td>
        <td id="LC4685" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>n) <span class="pl-k">return</span> d3_geo_mercator;</td>
      </tr>
      <tr>
        <td id="L4686" class="blob-num js-line-number" data-line-number="4686"></td>
        <td id="LC4686" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">forward</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4687" class="blob-num js-line-number" data-line-number="4687"></td>
        <td id="LC4687" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (F <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4688" class="blob-num js-line-number" data-line-number="4688"></td>
        <td id="LC4688" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (Ï <span class="pl-k">&lt;</span> <span class="pl-k">-</span>halfÏ <span class="pl-k">+</span> Îµ) Ï <span class="pl-k">=</span> <span class="pl-k">-</span>halfÏ <span class="pl-k">+</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L4689" class="blob-num js-line-number" data-line-number="4689"></td>
        <td id="LC4689" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4690" class="blob-num js-line-number" data-line-number="4690"></td>
        <td id="LC4690" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (Ï <span class="pl-k">&gt;</span> halfÏ <span class="pl-k">-</span> Îµ) Ï <span class="pl-k">=</span> halfÏ <span class="pl-k">-</span> Îµ;</td>
      </tr>
      <tr>
        <td id="L4691" class="blob-num js-line-number" data-line-number="4691"></td>
        <td id="LC4691" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4692" class="blob-num js-line-number" data-line-number="4692"></td>
        <td id="LC4692" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Ï <span class="pl-k">=</span> F / <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(t(Ï), n);</td>
      </tr>
      <tr>
        <td id="L4693" class="blob-num js-line-number" data-line-number="4693"></td>
        <td id="LC4693" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ Ï <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(n <span class="pl-k">*</span> Î»), F <span class="pl-k">-</span> Ï <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(n <span class="pl-k">*</span> Î») ];</td>
      </tr>
      <tr>
        <td id="L4694" class="blob-num js-line-number" data-line-number="4694"></td>
        <td id="LC4694" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4695" class="blob-num js-line-number" data-line-number="4695"></td>
        <td id="LC4695" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">forward</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4696" class="blob-num js-line-number" data-line-number="4696"></td>
        <td id="LC4696" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Ï0_y <span class="pl-k">=</span> F <span class="pl-k">-</span> y, Ï <span class="pl-k">=</span> d3_sgn(n) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(x <span class="pl-k">*</span> x <span class="pl-k">+</span> Ï0_y <span class="pl-k">*</span> Ï0_y);</td>
      </tr>
      <tr>
        <td id="L4697" class="blob-num js-line-number" data-line-number="4697"></td>
        <td id="LC4697" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(x, Ï0_y) / n, <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(F / Ï, <span class="pl-c1">1</span> / n)) <span class="pl-k">-</span> halfÏ ];</td>
      </tr>
      <tr>
        <td id="L4698" class="blob-num js-line-number" data-line-number="4698"></td>
        <td id="LC4698" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4699" class="blob-num js-line-number" data-line-number="4699"></td>
        <td id="LC4699" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> forward;</td>
      </tr>
      <tr>
        <td id="L4700" class="blob-num js-line-number" data-line-number="4700"></td>
        <td id="LC4700" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4701" class="blob-num js-line-number" data-line-number="4701"></td>
        <td id="LC4701" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">conicConformal</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4702" class="blob-num js-line-number" data-line-number="4702"></td>
        <td id="LC4702" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_conic(d3_geo_conicConformal);</td>
      </tr>
      <tr>
        <td id="L4703" class="blob-num js-line-number" data-line-number="4703"></td>
        <td id="LC4703" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_conicConformal;</td>
      </tr>
      <tr>
        <td id="L4704" class="blob-num js-line-number" data-line-number="4704"></td>
        <td id="LC4704" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_conicEquidistant</span>(<span class="pl-smi">Ï0</span>, <span class="pl-smi">Ï1</span>) {</td>
      </tr>
      <tr>
        <td id="L4705" class="blob-num js-line-number" data-line-number="4705"></td>
        <td id="LC4705" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cosÏ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">0</span>), n <span class="pl-k">=</span> Ï<span class="pl-c1">0</span> <span class="pl-k">===</span> Ï<span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(Ï<span class="pl-c1">0</span>) <span class="pl-k">:</span> (cosÏ<span class="pl-c1">0</span> <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(Ï<span class="pl-c1">1</span>)) / (Ï<span class="pl-c1">1</span> <span class="pl-k">-</span> Ï<span class="pl-c1">0</span>), G <span class="pl-k">=</span> cosÏ<span class="pl-c1">0</span> / n <span class="pl-k">+</span> Ï<span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4706" class="blob-num js-line-number" data-line-number="4706"></td>
        <td id="LC4706" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(n) <span class="pl-k">&lt;</span> Îµ) <span class="pl-k">return</span> d3_geo_equirectangular;</td>
      </tr>
      <tr>
        <td id="L4707" class="blob-num js-line-number" data-line-number="4707"></td>
        <td id="LC4707" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">forward</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4708" class="blob-num js-line-number" data-line-number="4708"></td>
        <td id="LC4708" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Ï <span class="pl-k">=</span> G <span class="pl-k">-</span> Ï;</td>
      </tr>
      <tr>
        <td id="L4709" class="blob-num js-line-number" data-line-number="4709"></td>
        <td id="LC4709" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ Ï <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(n <span class="pl-k">*</span> Î»), G <span class="pl-k">-</span> Ï <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(n <span class="pl-k">*</span> Î») ];</td>
      </tr>
      <tr>
        <td id="L4710" class="blob-num js-line-number" data-line-number="4710"></td>
        <td id="LC4710" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4711" class="blob-num js-line-number" data-line-number="4711"></td>
        <td id="LC4711" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">forward</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4712" class="blob-num js-line-number" data-line-number="4712"></td>
        <td id="LC4712" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> Ï0_y <span class="pl-k">=</span> G <span class="pl-k">-</span> y;</td>
      </tr>
      <tr>
        <td id="L4713" class="blob-num js-line-number" data-line-number="4713"></td>
        <td id="LC4713" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(x, Ï0_y) / n, G <span class="pl-k">-</span> d3_sgn(n) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(x <span class="pl-k">*</span> x <span class="pl-k">+</span> Ï0_y <span class="pl-k">*</span> Ï0_y) ];</td>
      </tr>
      <tr>
        <td id="L4714" class="blob-num js-line-number" data-line-number="4714"></td>
        <td id="LC4714" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4715" class="blob-num js-line-number" data-line-number="4715"></td>
        <td id="LC4715" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> forward;</td>
      </tr>
      <tr>
        <td id="L4716" class="blob-num js-line-number" data-line-number="4716"></td>
        <td id="LC4716" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4717" class="blob-num js-line-number" data-line-number="4717"></td>
        <td id="LC4717" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">conicEquidistant</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4718" class="blob-num js-line-number" data-line-number="4718"></td>
        <td id="LC4718" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_conic(d3_geo_conicEquidistant);</td>
      </tr>
      <tr>
        <td id="L4719" class="blob-num js-line-number" data-line-number="4719"></td>
        <td id="LC4719" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_conicEquidistant;</td>
      </tr>
      <tr>
        <td id="L4720" class="blob-num js-line-number" data-line-number="4720"></td>
        <td id="LC4720" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_gnomonic <span class="pl-k">=</span> d3_geo_azimuthal(<span class="pl-k">function</span>(<span class="pl-smi">cosÎ»cosÏ</span>) {</td>
      </tr>
      <tr>
        <td id="L4721" class="blob-num js-line-number" data-line-number="4721"></td>
        <td id="LC4721" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span> / cosÎ»cosÏ;</td>
      </tr>
      <tr>
        <td id="L4722" class="blob-num js-line-number" data-line-number="4722"></td>
        <td id="LC4722" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-c1">Math</span>.atan);</td>
      </tr>
      <tr>
        <td id="L4723" class="blob-num js-line-number" data-line-number="4723"></td>
        <td id="LC4723" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">gnomonic</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4724" class="blob-num js-line-number" data-line-number="4724"></td>
        <td id="LC4724" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_projection(d3_geo_gnomonic);</td>
      </tr>
      <tr>
        <td id="L4725" class="blob-num js-line-number" data-line-number="4725"></td>
        <td id="LC4725" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_gnomonic;</td>
      </tr>
      <tr>
        <td id="L4726" class="blob-num js-line-number" data-line-number="4726"></td>
        <td id="LC4726" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_mercator</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4727" class="blob-num js-line-number" data-line-number="4727"></td>
        <td id="LC4727" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ Î», <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(Ï / <span class="pl-c1">4</span> <span class="pl-k">+</span> Ï / <span class="pl-c1">2</span>)) ];</td>
      </tr>
      <tr>
        <td id="L4728" class="blob-num js-line-number" data-line-number="4728"></td>
        <td id="LC4728" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4729" class="blob-num js-line-number" data-line-number="4729"></td>
        <td id="LC4729" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geo_mercator</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4730" class="blob-num js-line-number" data-line-number="4730"></td>
        <td id="LC4730" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ x, <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(y)) <span class="pl-k">-</span> halfÏ ];</td>
      </tr>
      <tr>
        <td id="L4731" class="blob-num js-line-number" data-line-number="4731"></td>
        <td id="LC4731" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4732" class="blob-num js-line-number" data-line-number="4732"></td>
        <td id="LC4732" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_mercatorProjection</span>(<span class="pl-smi">project</span>) {</td>
      </tr>
      <tr>
        <td id="L4733" class="blob-num js-line-number" data-line-number="4733"></td>
        <td id="LC4733" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> m <span class="pl-k">=</span> d3_geo_projection(project), scale <span class="pl-k">=</span> m.scale, translate <span class="pl-k">=</span> m.translate, clipExtent <span class="pl-k">=</span> m.clipExtent, clipAuto;</td>
      </tr>
      <tr>
        <td id="L4734" class="blob-num js-line-number" data-line-number="4734"></td>
        <td id="LC4734" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">m</span>.<span class="pl-en">scale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4735" class="blob-num js-line-number" data-line-number="4735"></td>
        <td id="LC4735" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> v <span class="pl-k">=</span> scale.<span class="pl-c1">apply</span>(m, arguments);</td>
      </tr>
      <tr>
        <td id="L4736" class="blob-num js-line-number" data-line-number="4736"></td>
        <td id="LC4736" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> v <span class="pl-k">===</span> m <span class="pl-k">?</span> clipAuto <span class="pl-k">?</span> m.clipExtent(<span class="pl-c1">null</span>) <span class="pl-k">:</span> m <span class="pl-k">:</span> v;</td>
      </tr>
      <tr>
        <td id="L4737" class="blob-num js-line-number" data-line-number="4737"></td>
        <td id="LC4737" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4738" class="blob-num js-line-number" data-line-number="4738"></td>
        <td id="LC4738" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">m</span>.<span class="pl-en">translate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4739" class="blob-num js-line-number" data-line-number="4739"></td>
        <td id="LC4739" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> v <span class="pl-k">=</span> translate.<span class="pl-c1">apply</span>(m, arguments);</td>
      </tr>
      <tr>
        <td id="L4740" class="blob-num js-line-number" data-line-number="4740"></td>
        <td id="LC4740" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> v <span class="pl-k">===</span> m <span class="pl-k">?</span> clipAuto <span class="pl-k">?</span> m.clipExtent(<span class="pl-c1">null</span>) <span class="pl-k">:</span> m <span class="pl-k">:</span> v;</td>
      </tr>
      <tr>
        <td id="L4741" class="blob-num js-line-number" data-line-number="4741"></td>
        <td id="LC4741" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4742" class="blob-num js-line-number" data-line-number="4742"></td>
        <td id="LC4742" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">m</span>.<span class="pl-en">clipExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4743" class="blob-num js-line-number" data-line-number="4743"></td>
        <td id="LC4743" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> v <span class="pl-k">=</span> clipExtent.<span class="pl-c1">apply</span>(m, arguments);</td>
      </tr>
      <tr>
        <td id="L4744" class="blob-num js-line-number" data-line-number="4744"></td>
        <td id="LC4744" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (v <span class="pl-k">===</span> m) {</td>
      </tr>
      <tr>
        <td id="L4745" class="blob-num js-line-number" data-line-number="4745"></td>
        <td id="LC4745" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (clipAuto <span class="pl-k">=</span> _ <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4746" class="blob-num js-line-number" data-line-number="4746"></td>
        <td id="LC4746" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> k <span class="pl-k">=</span> Ï <span class="pl-k">*</span> scale(), t <span class="pl-k">=</span> translate();</td>
      </tr>
      <tr>
        <td id="L4747" class="blob-num js-line-number" data-line-number="4747"></td>
        <td id="LC4747" class="blob-code blob-code-inner js-file-line">          clipExtent([ [ t[<span class="pl-c1">0</span>] <span class="pl-k">-</span> k, t[<span class="pl-c1">1</span>] <span class="pl-k">-</span> k ], [ t[<span class="pl-c1">0</span>] <span class="pl-k">+</span> k, t[<span class="pl-c1">1</span>] <span class="pl-k">+</span> k ] ]);</td>
      </tr>
      <tr>
        <td id="L4748" class="blob-num js-line-number" data-line-number="4748"></td>
        <td id="LC4748" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4749" class="blob-num js-line-number" data-line-number="4749"></td>
        <td id="LC4749" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (clipAuto) {</td>
      </tr>
      <tr>
        <td id="L4750" class="blob-num js-line-number" data-line-number="4750"></td>
        <td id="LC4750" class="blob-code blob-code-inner js-file-line">        v <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4751" class="blob-num js-line-number" data-line-number="4751"></td>
        <td id="LC4751" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4752" class="blob-num js-line-number" data-line-number="4752"></td>
        <td id="LC4752" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> v;</td>
      </tr>
      <tr>
        <td id="L4753" class="blob-num js-line-number" data-line-number="4753"></td>
        <td id="LC4753" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4754" class="blob-num js-line-number" data-line-number="4754"></td>
        <td id="LC4754" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m.clipExtent(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L4755" class="blob-num js-line-number" data-line-number="4755"></td>
        <td id="LC4755" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4756" class="blob-num js-line-number" data-line-number="4756"></td>
        <td id="LC4756" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">mercator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4757" class="blob-num js-line-number" data-line-number="4757"></td>
        <td id="LC4757" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_mercatorProjection(d3_geo_mercator);</td>
      </tr>
      <tr>
        <td id="L4758" class="blob-num js-line-number" data-line-number="4758"></td>
        <td id="LC4758" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_mercator;</td>
      </tr>
      <tr>
        <td id="L4759" class="blob-num js-line-number" data-line-number="4759"></td>
        <td id="LC4759" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_orthographic <span class="pl-k">=</span> d3_geo_azimuthal(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4760" class="blob-num js-line-number" data-line-number="4760"></td>
        <td id="LC4760" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L4761" class="blob-num js-line-number" data-line-number="4761"></td>
        <td id="LC4761" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-c1">Math</span>.asin);</td>
      </tr>
      <tr>
        <td id="L4762" class="blob-num js-line-number" data-line-number="4762"></td>
        <td id="LC4762" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">orthographic</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4763" class="blob-num js-line-number" data-line-number="4763"></td>
        <td id="LC4763" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_projection(d3_geo_orthographic);</td>
      </tr>
      <tr>
        <td id="L4764" class="blob-num js-line-number" data-line-number="4764"></td>
        <td id="LC4764" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_orthographic;</td>
      </tr>
      <tr>
        <td id="L4765" class="blob-num js-line-number" data-line-number="4765"></td>
        <td id="LC4765" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geo_stereographic <span class="pl-k">=</span> d3_geo_azimuthal(<span class="pl-k">function</span>(<span class="pl-smi">cosÎ»cosÏ</span>) {</td>
      </tr>
      <tr>
        <td id="L4766" class="blob-num js-line-number" data-line-number="4766"></td>
        <td id="LC4766" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span> / (<span class="pl-c1">1</span> <span class="pl-k">+</span> cosÎ»cosÏ);</td>
      </tr>
      <tr>
        <td id="L4767" class="blob-num js-line-number" data-line-number="4767"></td>
        <td id="LC4767" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4768" class="blob-num js-line-number" data-line-number="4768"></td>
        <td id="LC4768" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan</span>(Ï);</td>
      </tr>
      <tr>
        <td id="L4769" class="blob-num js-line-number" data-line-number="4769"></td>
        <td id="LC4769" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L4770" class="blob-num js-line-number" data-line-number="4770"></td>
        <td id="LC4770" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">stereographic</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4771" class="blob-num js-line-number" data-line-number="4771"></td>
        <td id="LC4771" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_geo_projection(d3_geo_stereographic);</td>
      </tr>
      <tr>
        <td id="L4772" class="blob-num js-line-number" data-line-number="4772"></td>
        <td id="LC4772" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_stereographic;</td>
      </tr>
      <tr>
        <td id="L4773" class="blob-num js-line-number" data-line-number="4773"></td>
        <td id="LC4773" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geo_transverseMercator</span>(<span class="pl-smi">Î»</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L4774" class="blob-num js-line-number" data-line-number="4774"></td>
        <td id="LC4774" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(Ï / <span class="pl-c1">4</span> <span class="pl-k">+</span> Ï / <span class="pl-c1">2</span>)), <span class="pl-k">-</span>Î» ];</td>
      </tr>
      <tr>
        <td id="L4775" class="blob-num js-line-number" data-line-number="4775"></td>
        <td id="LC4775" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4776" class="blob-num js-line-number" data-line-number="4776"></td>
        <td id="LC4776" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geo_transverseMercator</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L4777" class="blob-num js-line-number" data-line-number="4777"></td>
        <td id="LC4777" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ <span class="pl-k">-</span>y, <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(x)) <span class="pl-k">-</span> halfÏ ];</td>
      </tr>
      <tr>
        <td id="L4778" class="blob-num js-line-number" data-line-number="4778"></td>
        <td id="LC4778" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4779" class="blob-num js-line-number" data-line-number="4779"></td>
        <td id="LC4779" class="blob-code blob-code-inner js-file-line">  (<span class="pl-c1">d3.geo</span>.<span class="pl-en">transverseMercator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4780" class="blob-num js-line-number" data-line-number="4780"></td>
        <td id="LC4780" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> projection <span class="pl-k">=</span> d3_geo_mercatorProjection(d3_geo_transverseMercator), center <span class="pl-k">=</span> projection.center, rotate <span class="pl-k">=</span> projection.rotate;</td>
      </tr>
      <tr>
        <td id="L4781" class="blob-num js-line-number" data-line-number="4781"></td>
        <td id="LC4781" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">center</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4782" class="blob-num js-line-number" data-line-number="4782"></td>
        <td id="LC4782" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> _ <span class="pl-k">?</span> center([ <span class="pl-k">-</span>_[<span class="pl-c1">1</span>], _[<span class="pl-c1">0</span>] ]) <span class="pl-k">:</span> (_ <span class="pl-k">=</span> center(), [ _[<span class="pl-c1">1</span>], <span class="pl-k">-</span>_[<span class="pl-c1">0</span>] ]);</td>
      </tr>
      <tr>
        <td id="L4783" class="blob-num js-line-number" data-line-number="4783"></td>
        <td id="LC4783" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4784" class="blob-num js-line-number" data-line-number="4784"></td>
        <td id="LC4784" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">projection</span>.<span class="pl-en">rotate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4785" class="blob-num js-line-number" data-line-number="4785"></td>
        <td id="LC4785" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> _ <span class="pl-k">?</span> rotate([ _[<span class="pl-c1">0</span>], _[<span class="pl-c1">1</span>], _.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> _[<span class="pl-c1">2</span>] <span class="pl-k">+</span> <span class="pl-c1">90</span> <span class="pl-k">:</span> <span class="pl-c1">90</span> ]) <span class="pl-k">:</span> (_ <span class="pl-k">=</span> rotate(), </td>
      </tr>
      <tr>
        <td id="L4786" class="blob-num js-line-number" data-line-number="4786"></td>
        <td id="LC4786" class="blob-code blob-code-inner js-file-line">      [ _[<span class="pl-c1">0</span>], _[<span class="pl-c1">1</span>], _[<span class="pl-c1">2</span>] <span class="pl-k">-</span> <span class="pl-c1">90</span> ]);</td>
      </tr>
      <tr>
        <td id="L4787" class="blob-num js-line-number" data-line-number="4787"></td>
        <td id="LC4787" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4788" class="blob-num js-line-number" data-line-number="4788"></td>
        <td id="LC4788" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> rotate([ <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">90</span> ]);</td>
      </tr>
      <tr>
        <td id="L4789" class="blob-num js-line-number" data-line-number="4789"></td>
        <td id="LC4789" class="blob-code blob-code-inner js-file-line">  }).raw <span class="pl-k">=</span> d3_geo_transverseMercator;</td>
      </tr>
      <tr>
        <td id="L4790" class="blob-num js-line-number" data-line-number="4790"></td>
        <td id="LC4790" class="blob-code blob-code-inner js-file-line">  d3.geom <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4791" class="blob-num js-line-number" data-line-number="4791"></td>
        <td id="LC4791" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_pointX</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L4792" class="blob-num js-line-number" data-line-number="4792"></td>
        <td id="LC4792" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4793" class="blob-num js-line-number" data-line-number="4793"></td>
        <td id="LC4793" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4794" class="blob-num js-line-number" data-line-number="4794"></td>
        <td id="LC4794" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_pointY</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L4795" class="blob-num js-line-number" data-line-number="4795"></td>
        <td id="LC4795" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4796" class="blob-num js-line-number" data-line-number="4796"></td>
        <td id="LC4796" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4797" class="blob-num js-line-number" data-line-number="4797"></td>
        <td id="LC4797" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geom</span>.<span class="pl-en">hull</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">vertices</span>) {</td>
      </tr>
      <tr>
        <td id="L4798" class="blob-num js-line-number" data-line-number="4798"></td>
        <td id="LC4798" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> d3_geom_pointX, y <span class="pl-k">=</span> d3_geom_pointY;</td>
      </tr>
      <tr>
        <td id="L4799" class="blob-num js-line-number" data-line-number="4799"></td>
        <td id="LC4799" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> hull(vertices);</td>
      </tr>
      <tr>
        <td id="L4800" class="blob-num js-line-number" data-line-number="4800"></td>
        <td id="LC4800" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">hull</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L4801" class="blob-num js-line-number" data-line-number="4801"></td>
        <td id="LC4801" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (data.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) <span class="pl-k">return</span> [];</td>
      </tr>
      <tr>
        <td id="L4802" class="blob-num js-line-number" data-line-number="4802"></td>
        <td id="LC4802" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> fx <span class="pl-k">=</span> d3_functor(x), fy <span class="pl-k">=</span> d3_functor(y), i, n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>, points <span class="pl-k">=</span> [], flippedPoints <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4803" class="blob-num js-line-number" data-line-number="4803"></td>
        <td id="LC4803" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4804" class="blob-num js-line-number" data-line-number="4804"></td>
        <td id="LC4804" class="blob-code blob-code-inner js-file-line">        points.<span class="pl-c1">push</span>([ <span class="pl-k">+</span>fx.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, data[i], i), <span class="pl-k">+</span>fy.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, data[i], i), i ]);</td>
      </tr>
      <tr>
        <td id="L4805" class="blob-num js-line-number" data-line-number="4805"></td>
        <td id="LC4805" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4806" class="blob-num js-line-number" data-line-number="4806"></td>
        <td id="LC4806" class="blob-code blob-code-inner js-file-line">      points.<span class="pl-c1">sort</span>(d3_geom_hullOrder);</td>
      </tr>
      <tr>
        <td id="L4807" class="blob-num js-line-number" data-line-number="4807"></td>
        <td id="LC4807" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) flippedPoints.<span class="pl-c1">push</span>([ points[i][<span class="pl-c1">0</span>], <span class="pl-k">-</span>points[i][<span class="pl-c1">1</span>] ]);</td>
      </tr>
      <tr>
        <td id="L4808" class="blob-num js-line-number" data-line-number="4808"></td>
        <td id="LC4808" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> upper <span class="pl-k">=</span> d3_geom_hullUpper(points), lower <span class="pl-k">=</span> d3_geom_hullUpper(flippedPoints);</td>
      </tr>
      <tr>
        <td id="L4809" class="blob-num js-line-number" data-line-number="4809"></td>
        <td id="LC4809" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> skipLeft <span class="pl-k">=</span> lower[<span class="pl-c1">0</span>] <span class="pl-k">===</span> upper[<span class="pl-c1">0</span>], skipRight <span class="pl-k">=</span> lower[lower.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">===</span> upper[upper.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>], polygon <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4810" class="blob-num js-line-number" data-line-number="4810"></td>
        <td id="LC4810" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> upper.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; <span class="pl-k">--</span>i) polygon.<span class="pl-c1">push</span>(data[points[upper[i]][<span class="pl-c1">2</span>]]);</td>
      </tr>
      <tr>
        <td id="L4811" class="blob-num js-line-number" data-line-number="4811"></td>
        <td id="LC4811" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-k">+</span>skipLeft; i <span class="pl-k">&lt;</span> lower.<span class="pl-c1">length</span> <span class="pl-k">-</span> skipRight; <span class="pl-k">++</span>i) polygon.<span class="pl-c1">push</span>(data[points[lower[i]][<span class="pl-c1">2</span>]]);</td>
      </tr>
      <tr>
        <td id="L4812" class="blob-num js-line-number" data-line-number="4812"></td>
        <td id="LC4812" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> polygon;</td>
      </tr>
      <tr>
        <td id="L4813" class="blob-num js-line-number" data-line-number="4813"></td>
        <td id="LC4813" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4814" class="blob-num js-line-number" data-line-number="4814"></td>
        <td id="LC4814" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">hull</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4815" class="blob-num js-line-number" data-line-number="4815"></td>
        <td id="LC4815" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> (x <span class="pl-k">=</span> _, hull) <span class="pl-k">:</span> x;</td>
      </tr>
      <tr>
        <td id="L4816" class="blob-num js-line-number" data-line-number="4816"></td>
        <td id="LC4816" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4817" class="blob-num js-line-number" data-line-number="4817"></td>
        <td id="LC4817" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">hull</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L4818" class="blob-num js-line-number" data-line-number="4818"></td>
        <td id="LC4818" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> (y <span class="pl-k">=</span> _, hull) <span class="pl-k">:</span> y;</td>
      </tr>
      <tr>
        <td id="L4819" class="blob-num js-line-number" data-line-number="4819"></td>
        <td id="LC4819" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4820" class="blob-num js-line-number" data-line-number="4820"></td>
        <td id="LC4820" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> hull;</td>
      </tr>
      <tr>
        <td id="L4821" class="blob-num js-line-number" data-line-number="4821"></td>
        <td id="LC4821" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4822" class="blob-num js-line-number" data-line-number="4822"></td>
        <td id="LC4822" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_hullUpper</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L4823" class="blob-num js-line-number" data-line-number="4823"></td>
        <td id="LC4823" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>, hull <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> ], hs <span class="pl-k">=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L4824" class="blob-num js-line-number" data-line-number="4824"></td>
        <td id="LC4824" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">2</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4825" class="blob-num js-line-number" data-line-number="4825"></td>
        <td id="LC4825" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (hs <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> d3_cross2d(points[hull[hs <span class="pl-k">-</span> <span class="pl-c1">2</span>]], points[hull[hs <span class="pl-k">-</span> <span class="pl-c1">1</span>]], points[i]) <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span>) <span class="pl-k">--</span>hs;</td>
      </tr>
      <tr>
        <td id="L4826" class="blob-num js-line-number" data-line-number="4826"></td>
        <td id="LC4826" class="blob-code blob-code-inner js-file-line">      hull[hs<span class="pl-k">++</span>] <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L4827" class="blob-num js-line-number" data-line-number="4827"></td>
        <td id="LC4827" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4828" class="blob-num js-line-number" data-line-number="4828"></td>
        <td id="LC4828" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> hull.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, hs);</td>
      </tr>
      <tr>
        <td id="L4829" class="blob-num js-line-number" data-line-number="4829"></td>
        <td id="LC4829" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4830" class="blob-num js-line-number" data-line-number="4830"></td>
        <td id="LC4830" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_hullOrder</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L4831" class="blob-num js-line-number" data-line-number="4831"></td>
        <td id="LC4831" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a[<span class="pl-c1">0</span>] <span class="pl-k">-</span> b[<span class="pl-c1">0</span>] <span class="pl-k">||</span> a[<span class="pl-c1">1</span>] <span class="pl-k">-</span> b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4832" class="blob-num js-line-number" data-line-number="4832"></td>
        <td id="LC4832" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4833" class="blob-num js-line-number" data-line-number="4833"></td>
        <td id="LC4833" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geom</span>.<span class="pl-en">polygon</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">coordinates</span>) {</td>
      </tr>
      <tr>
        <td id="L4834" class="blob-num js-line-number" data-line-number="4834"></td>
        <td id="LC4834" class="blob-code blob-code-inner js-file-line">    d3_subclass(coordinates, d3_geom_polygonPrototype);</td>
      </tr>
      <tr>
        <td id="L4835" class="blob-num js-line-number" data-line-number="4835"></td>
        <td id="LC4835" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> coordinates;</td>
      </tr>
      <tr>
        <td id="L4836" class="blob-num js-line-number" data-line-number="4836"></td>
        <td id="LC4836" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4837" class="blob-num js-line-number" data-line-number="4837"></td>
        <td id="LC4837" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geom_polygonPrototype <span class="pl-k">=</span> <span class="pl-c1">d3.geom.polygon</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4838" class="blob-num js-line-number" data-line-number="4838"></td>
        <td id="LC4838" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geom_polygonPrototype</span>.<span class="pl-en">area</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4839" class="blob-num js-line-number" data-line-number="4839"></td>
        <td id="LC4839" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>, a, b <span class="pl-k">=</span> <span class="pl-v">this</span>[n <span class="pl-k">-</span> <span class="pl-c1">1</span>], area <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4840" class="blob-num js-line-number" data-line-number="4840"></td>
        <td id="LC4840" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L4841" class="blob-num js-line-number" data-line-number="4841"></td>
        <td id="LC4841" class="blob-code blob-code-inner js-file-line">      a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L4842" class="blob-num js-line-number" data-line-number="4842"></td>
        <td id="LC4842" class="blob-code blob-code-inner js-file-line">      b <span class="pl-k">=</span> <span class="pl-v">this</span>[i];</td>
      </tr>
      <tr>
        <td id="L4843" class="blob-num js-line-number" data-line-number="4843"></td>
        <td id="LC4843" class="blob-code blob-code-inner js-file-line">      area <span class="pl-k">+=</span> a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> b[<span class="pl-c1">0</span>] <span class="pl-k">-</span> a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4844" class="blob-num js-line-number" data-line-number="4844"></td>
        <td id="LC4844" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4845" class="blob-num js-line-number" data-line-number="4845"></td>
        <td id="LC4845" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> area <span class="pl-k">*</span> .<span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L4846" class="blob-num js-line-number" data-line-number="4846"></td>
        <td id="LC4846" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4847" class="blob-num js-line-number" data-line-number="4847"></td>
        <td id="LC4847" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geom_polygonPrototype</span>.<span class="pl-en">centroid</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L4848" class="blob-num js-line-number" data-line-number="4848"></td>
        <td id="LC4848" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>, x <span class="pl-k">=</span> <span class="pl-c1">0</span>, y <span class="pl-k">=</span> <span class="pl-c1">0</span>, a, b <span class="pl-k">=</span> <span class="pl-v">this</span>[n <span class="pl-k">-</span> <span class="pl-c1">1</span>], c;</td>
      </tr>
      <tr>
        <td id="L4849" class="blob-num js-line-number" data-line-number="4849"></td>
        <td id="LC4849" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) k <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span> / (<span class="pl-c1">6</span> <span class="pl-k">*</span> <span class="pl-v">this</span>.area());</td>
      </tr>
      <tr>
        <td id="L4850" class="blob-num js-line-number" data-line-number="4850"></td>
        <td id="LC4850" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L4851" class="blob-num js-line-number" data-line-number="4851"></td>
        <td id="LC4851" class="blob-code blob-code-inner js-file-line">      a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L4852" class="blob-num js-line-number" data-line-number="4852"></td>
        <td id="LC4852" class="blob-code blob-code-inner js-file-line">      b <span class="pl-k">=</span> <span class="pl-v">this</span>[i];</td>
      </tr>
      <tr>
        <td id="L4853" class="blob-num js-line-number" data-line-number="4853"></td>
        <td id="LC4853" class="blob-code blob-code-inner js-file-line">      c <span class="pl-k">=</span> a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>] <span class="pl-k">-</span> b[<span class="pl-c1">0</span>] <span class="pl-k">*</span> a[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4854" class="blob-num js-line-number" data-line-number="4854"></td>
        <td id="LC4854" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">+=</span> (a[<span class="pl-c1">0</span>] <span class="pl-k">+</span> b[<span class="pl-c1">0</span>]) <span class="pl-k">*</span> c;</td>
      </tr>
      <tr>
        <td id="L4855" class="blob-num js-line-number" data-line-number="4855"></td>
        <td id="LC4855" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">+=</span> (a[<span class="pl-c1">1</span>] <span class="pl-k">+</span> b[<span class="pl-c1">1</span>]) <span class="pl-k">*</span> c;</td>
      </tr>
      <tr>
        <td id="L4856" class="blob-num js-line-number" data-line-number="4856"></td>
        <td id="LC4856" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4857" class="blob-num js-line-number" data-line-number="4857"></td>
        <td id="LC4857" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ x <span class="pl-k">*</span> k, y <span class="pl-k">*</span> k ];</td>
      </tr>
      <tr>
        <td id="L4858" class="blob-num js-line-number" data-line-number="4858"></td>
        <td id="LC4858" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4859" class="blob-num js-line-number" data-line-number="4859"></td>
        <td id="LC4859" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geom_polygonPrototype</span>.<span class="pl-en">clip</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">subject</span>) {</td>
      </tr>
      <tr>
        <td id="L4860" class="blob-num js-line-number" data-line-number="4860"></td>
        <td id="LC4860" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> input, closed <span class="pl-k">=</span> d3_geom_polygonClosed(subject), i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> d3_geom_polygonClosed(<span class="pl-v">this</span>), j, m, a <span class="pl-k">=</span> <span class="pl-v">this</span>[n <span class="pl-k">-</span> <span class="pl-c1">1</span>], b, c, d;</td>
      </tr>
      <tr>
        <td id="L4861" class="blob-num js-line-number" data-line-number="4861"></td>
        <td id="LC4861" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L4862" class="blob-num js-line-number" data-line-number="4862"></td>
        <td id="LC4862" class="blob-code blob-code-inner js-file-line">      input <span class="pl-k">=</span> subject.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L4863" class="blob-num js-line-number" data-line-number="4863"></td>
        <td id="LC4863" class="blob-code blob-code-inner js-file-line">      subject.<span class="pl-c1">length</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L4864" class="blob-num js-line-number" data-line-number="4864"></td>
        <td id="LC4864" class="blob-code blob-code-inner js-file-line">      b <span class="pl-k">=</span> <span class="pl-v">this</span>[i];</td>
      </tr>
      <tr>
        <td id="L4865" class="blob-num js-line-number" data-line-number="4865"></td>
        <td id="LC4865" class="blob-code blob-code-inner js-file-line">      c <span class="pl-k">=</span> input[(m <span class="pl-k">=</span> input.<span class="pl-c1">length</span> <span class="pl-k">-</span> closed) <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4866" class="blob-num js-line-number" data-line-number="4866"></td>
        <td id="LC4866" class="blob-code blob-code-inner js-file-line">      j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L4867" class="blob-num js-line-number" data-line-number="4867"></td>
        <td id="LC4867" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m) {</td>
      </tr>
      <tr>
        <td id="L4868" class="blob-num js-line-number" data-line-number="4868"></td>
        <td id="LC4868" class="blob-code blob-code-inner js-file-line">        d <span class="pl-k">=</span> input[j];</td>
      </tr>
      <tr>
        <td id="L4869" class="blob-num js-line-number" data-line-number="4869"></td>
        <td id="LC4869" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3_geom_polygonInside(d, a, b)) {</td>
      </tr>
      <tr>
        <td id="L4870" class="blob-num js-line-number" data-line-number="4870"></td>
        <td id="LC4870" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_geom_polygonInside(c, a, b)) {</td>
      </tr>
      <tr>
        <td id="L4871" class="blob-num js-line-number" data-line-number="4871"></td>
        <td id="LC4871" class="blob-code blob-code-inner js-file-line">            subject.<span class="pl-c1">push</span>(d3_geom_polygonIntersect(c, d, a, b));</td>
      </tr>
      <tr>
        <td id="L4872" class="blob-num js-line-number" data-line-number="4872"></td>
        <td id="LC4872" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4873" class="blob-num js-line-number" data-line-number="4873"></td>
        <td id="LC4873" class="blob-code blob-code-inner js-file-line">          subject.<span class="pl-c1">push</span>(d);</td>
      </tr>
      <tr>
        <td id="L4874" class="blob-num js-line-number" data-line-number="4874"></td>
        <td id="LC4874" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (d3_geom_polygonInside(c, a, b)) {</td>
      </tr>
      <tr>
        <td id="L4875" class="blob-num js-line-number" data-line-number="4875"></td>
        <td id="LC4875" class="blob-code blob-code-inner js-file-line">          subject.<span class="pl-c1">push</span>(d3_geom_polygonIntersect(c, d, a, b));</td>
      </tr>
      <tr>
        <td id="L4876" class="blob-num js-line-number" data-line-number="4876"></td>
        <td id="LC4876" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4877" class="blob-num js-line-number" data-line-number="4877"></td>
        <td id="LC4877" class="blob-code blob-code-inner js-file-line">        c <span class="pl-k">=</span> d;</td>
      </tr>
      <tr>
        <td id="L4878" class="blob-num js-line-number" data-line-number="4878"></td>
        <td id="LC4878" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4879" class="blob-num js-line-number" data-line-number="4879"></td>
        <td id="LC4879" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (closed) subject.<span class="pl-c1">push</span>(subject[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L4880" class="blob-num js-line-number" data-line-number="4880"></td>
        <td id="LC4880" class="blob-code blob-code-inner js-file-line">      a <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L4881" class="blob-num js-line-number" data-line-number="4881"></td>
        <td id="LC4881" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4882" class="blob-num js-line-number" data-line-number="4882"></td>
        <td id="LC4882" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> subject;</td>
      </tr>
      <tr>
        <td id="L4883" class="blob-num js-line-number" data-line-number="4883"></td>
        <td id="LC4883" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4884" class="blob-num js-line-number" data-line-number="4884"></td>
        <td id="LC4884" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_polygonInside</span>(<span class="pl-smi">p</span>, <span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L4885" class="blob-num js-line-number" data-line-number="4885"></td>
        <td id="LC4885" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (b[<span class="pl-c1">0</span>] <span class="pl-k">-</span> a[<span class="pl-c1">0</span>]) <span class="pl-k">*</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> a[<span class="pl-c1">1</span>]) <span class="pl-k">&lt;</span> (b[<span class="pl-c1">1</span>] <span class="pl-k">-</span> a[<span class="pl-c1">1</span>]) <span class="pl-k">*</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> a[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L4886" class="blob-num js-line-number" data-line-number="4886"></td>
        <td id="LC4886" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4887" class="blob-num js-line-number" data-line-number="4887"></td>
        <td id="LC4887" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_polygonIntersect</span>(<span class="pl-smi">c</span>, <span class="pl-smi">d</span>, <span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L4888" class="blob-num js-line-number" data-line-number="4888"></td>
        <td id="LC4888" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x1 <span class="pl-k">=</span> c[<span class="pl-c1">0</span>], x3 <span class="pl-k">=</span> a[<span class="pl-c1">0</span>], x21 <span class="pl-k">=</span> d[<span class="pl-c1">0</span>] <span class="pl-k">-</span> x1, x43 <span class="pl-k">=</span> b[<span class="pl-c1">0</span>] <span class="pl-k">-</span> x3, y1 <span class="pl-k">=</span> c[<span class="pl-c1">1</span>], y3 <span class="pl-k">=</span> a[<span class="pl-c1">1</span>], y21 <span class="pl-k">=</span> d[<span class="pl-c1">1</span>] <span class="pl-k">-</span> y1, y43 <span class="pl-k">=</span> b[<span class="pl-c1">1</span>] <span class="pl-k">-</span> y3, ua <span class="pl-k">=</span> (x43 <span class="pl-k">*</span> (y1 <span class="pl-k">-</span> y3) <span class="pl-k">-</span> y43 <span class="pl-k">*</span> (x1 <span class="pl-k">-</span> x3)) / (y43 <span class="pl-k">*</span> x21 <span class="pl-k">-</span> x43 <span class="pl-k">*</span> y21);</td>
      </tr>
      <tr>
        <td id="L4889" class="blob-num js-line-number" data-line-number="4889"></td>
        <td id="LC4889" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ x1 <span class="pl-k">+</span> ua <span class="pl-k">*</span> x21, y1 <span class="pl-k">+</span> ua <span class="pl-k">*</span> y21 ];</td>
      </tr>
      <tr>
        <td id="L4890" class="blob-num js-line-number" data-line-number="4890"></td>
        <td id="LC4890" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4891" class="blob-num js-line-number" data-line-number="4891"></td>
        <td id="LC4891" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_polygonClosed</span>(<span class="pl-smi">coordinates</span>) {</td>
      </tr>
      <tr>
        <td id="L4892" class="blob-num js-line-number" data-line-number="4892"></td>
        <td id="LC4892" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> a <span class="pl-k">=</span> coordinates[<span class="pl-c1">0</span>], b <span class="pl-k">=</span> coordinates[coordinates.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4893" class="blob-num js-line-number" data-line-number="4893"></td>
        <td id="LC4893" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">!</span>(a[<span class="pl-c1">0</span>] <span class="pl-k">-</span> b[<span class="pl-c1">0</span>] <span class="pl-k">||</span> a[<span class="pl-c1">1</span>] <span class="pl-k">-</span> b[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4894" class="blob-num js-line-number" data-line-number="4894"></td>
        <td id="LC4894" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4895" class="blob-num js-line-number" data-line-number="4895"></td>
        <td id="LC4895" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool <span class="pl-k">=</span> [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4896" class="blob-num js-line-number" data-line-number="4896"></td>
        <td id="LC4896" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiBeach</span>() {</td>
      </tr>
      <tr>
        <td id="L4897" class="blob-num js-line-number" data-line-number="4897"></td>
        <td id="LC4897" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiRedBlackNode(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L4898" class="blob-num js-line-number" data-line-number="4898"></td>
        <td id="LC4898" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.edge <span class="pl-k">=</span> <span class="pl-v">this</span>.site <span class="pl-k">=</span> <span class="pl-v">this</span>.circle <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4899" class="blob-num js-line-number" data-line-number="4899"></td>
        <td id="LC4899" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4900" class="blob-num js-line-number" data-line-number="4900"></td>
        <td id="LC4900" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiCreateBeach</span>(<span class="pl-smi">site</span>) {</td>
      </tr>
      <tr>
        <td id="L4901" class="blob-num js-line-number" data-line-number="4901"></td>
        <td id="LC4901" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> beach <span class="pl-k">=</span> d3_geom_voronoiBeachPool.<span class="pl-c1">pop</span>() <span class="pl-k">||</span> <span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiBeach</span>();</td>
      </tr>
      <tr>
        <td id="L4902" class="blob-num js-line-number" data-line-number="4902"></td>
        <td id="LC4902" class="blob-code blob-code-inner js-file-line">    beach.site <span class="pl-k">=</span> site;</td>
      </tr>
      <tr>
        <td id="L4903" class="blob-num js-line-number" data-line-number="4903"></td>
        <td id="LC4903" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> beach;</td>
      </tr>
      <tr>
        <td id="L4904" class="blob-num js-line-number" data-line-number="4904"></td>
        <td id="LC4904" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4905" class="blob-num js-line-number" data-line-number="4905"></td>
        <td id="LC4905" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiDetachBeach</span>(<span class="pl-smi">beach</span>) {</td>
      </tr>
      <tr>
        <td id="L4906" class="blob-num js-line-number" data-line-number="4906"></td>
        <td id="LC4906" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiDetachCircle(beach);</td>
      </tr>
      <tr>
        <td id="L4907" class="blob-num js-line-number" data-line-number="4907"></td>
        <td id="LC4907" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiBeaches.<span class="pl-c1">remove</span>(beach);</td>
      </tr>
      <tr>
        <td id="L4908" class="blob-num js-line-number" data-line-number="4908"></td>
        <td id="LC4908" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiBeachPool.<span class="pl-c1">push</span>(beach);</td>
      </tr>
      <tr>
        <td id="L4909" class="blob-num js-line-number" data-line-number="4909"></td>
        <td id="LC4909" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiRedBlackNode(beach);</td>
      </tr>
      <tr>
        <td id="L4910" class="blob-num js-line-number" data-line-number="4910"></td>
        <td id="LC4910" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4911" class="blob-num js-line-number" data-line-number="4911"></td>
        <td id="LC4911" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiRemoveBeach</span>(<span class="pl-smi">beach</span>) {</td>
      </tr>
      <tr>
        <td id="L4912" class="blob-num js-line-number" data-line-number="4912"></td>
        <td id="LC4912" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> circle <span class="pl-k">=</span> beach.circle, x <span class="pl-k">=</span> circle.<span class="pl-c1">x</span>, y <span class="pl-k">=</span> circle.cy, vertex <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4913" class="blob-num js-line-number" data-line-number="4913"></td>
        <td id="LC4913" class="blob-code blob-code-inner js-file-line">      x<span class="pl-k">:</span> x,</td>
      </tr>
      <tr>
        <td id="L4914" class="blob-num js-line-number" data-line-number="4914"></td>
        <td id="LC4914" class="blob-code blob-code-inner js-file-line">      y<span class="pl-k">:</span> y</td>
      </tr>
      <tr>
        <td id="L4915" class="blob-num js-line-number" data-line-number="4915"></td>
        <td id="LC4915" class="blob-code blob-code-inner js-file-line">    }, previous <span class="pl-k">=</span> beach.P, next <span class="pl-k">=</span> beach.N, disappearing <span class="pl-k">=</span> [ beach ];</td>
      </tr>
      <tr>
        <td id="L4916" class="blob-num js-line-number" data-line-number="4916"></td>
        <td id="LC4916" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiDetachBeach(beach);</td>
      </tr>
      <tr>
        <td id="L4917" class="blob-num js-line-number" data-line-number="4917"></td>
        <td id="LC4917" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lArc <span class="pl-k">=</span> previous;</td>
      </tr>
      <tr>
        <td id="L4918" class="blob-num js-line-number" data-line-number="4918"></td>
        <td id="LC4918" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (lArc.circle <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">abs</span>(x <span class="pl-k">-</span> lArc.circle.<span class="pl-c1">x</span>) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">abs</span>(y <span class="pl-k">-</span> lArc.circle.cy) <span class="pl-k">&lt;</span> Îµ) {</td>
      </tr>
      <tr>
        <td id="L4919" class="blob-num js-line-number" data-line-number="4919"></td>
        <td id="LC4919" class="blob-code blob-code-inner js-file-line">      previous <span class="pl-k">=</span> lArc.P;</td>
      </tr>
      <tr>
        <td id="L4920" class="blob-num js-line-number" data-line-number="4920"></td>
        <td id="LC4920" class="blob-code blob-code-inner js-file-line">      disappearing.<span class="pl-c1">unshift</span>(lArc);</td>
      </tr>
      <tr>
        <td id="L4921" class="blob-num js-line-number" data-line-number="4921"></td>
        <td id="LC4921" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiDetachBeach(lArc);</td>
      </tr>
      <tr>
        <td id="L4922" class="blob-num js-line-number" data-line-number="4922"></td>
        <td id="LC4922" class="blob-code blob-code-inner js-file-line">      lArc <span class="pl-k">=</span> previous;</td>
      </tr>
      <tr>
        <td id="L4923" class="blob-num js-line-number" data-line-number="4923"></td>
        <td id="LC4923" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4924" class="blob-num js-line-number" data-line-number="4924"></td>
        <td id="LC4924" class="blob-code blob-code-inner js-file-line">    disappearing.<span class="pl-c1">unshift</span>(lArc);</td>
      </tr>
      <tr>
        <td id="L4925" class="blob-num js-line-number" data-line-number="4925"></td>
        <td id="LC4925" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiDetachCircle(lArc);</td>
      </tr>
      <tr>
        <td id="L4926" class="blob-num js-line-number" data-line-number="4926"></td>
        <td id="LC4926" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> rArc <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L4927" class="blob-num js-line-number" data-line-number="4927"></td>
        <td id="LC4927" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (rArc.circle <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">abs</span>(x <span class="pl-k">-</span> rArc.circle.<span class="pl-c1">x</span>) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">abs</span>(y <span class="pl-k">-</span> rArc.circle.cy) <span class="pl-k">&lt;</span> Îµ) {</td>
      </tr>
      <tr>
        <td id="L4928" class="blob-num js-line-number" data-line-number="4928"></td>
        <td id="LC4928" class="blob-code blob-code-inner js-file-line">      next <span class="pl-k">=</span> rArc.N;</td>
      </tr>
      <tr>
        <td id="L4929" class="blob-num js-line-number" data-line-number="4929"></td>
        <td id="LC4929" class="blob-code blob-code-inner js-file-line">      disappearing.<span class="pl-c1">push</span>(rArc);</td>
      </tr>
      <tr>
        <td id="L4930" class="blob-num js-line-number" data-line-number="4930"></td>
        <td id="LC4930" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiDetachBeach(rArc);</td>
      </tr>
      <tr>
        <td id="L4931" class="blob-num js-line-number" data-line-number="4931"></td>
        <td id="LC4931" class="blob-code blob-code-inner js-file-line">      rArc <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L4932" class="blob-num js-line-number" data-line-number="4932"></td>
        <td id="LC4932" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4933" class="blob-num js-line-number" data-line-number="4933"></td>
        <td id="LC4933" class="blob-code blob-code-inner js-file-line">    disappearing.<span class="pl-c1">push</span>(rArc);</td>
      </tr>
      <tr>
        <td id="L4934" class="blob-num js-line-number" data-line-number="4934"></td>
        <td id="LC4934" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiDetachCircle(rArc);</td>
      </tr>
      <tr>
        <td id="L4935" class="blob-num js-line-number" data-line-number="4935"></td>
        <td id="LC4935" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> nArcs <span class="pl-k">=</span> disappearing.<span class="pl-c1">length</span>, iArc;</td>
      </tr>
      <tr>
        <td id="L4936" class="blob-num js-line-number" data-line-number="4936"></td>
        <td id="LC4936" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (iArc <span class="pl-k">=</span> <span class="pl-c1">1</span>; iArc <span class="pl-k">&lt;</span> nArcs; <span class="pl-k">++</span>iArc) {</td>
      </tr>
      <tr>
        <td id="L4937" class="blob-num js-line-number" data-line-number="4937"></td>
        <td id="LC4937" class="blob-code blob-code-inner js-file-line">      rArc <span class="pl-k">=</span> disappearing[iArc];</td>
      </tr>
      <tr>
        <td id="L4938" class="blob-num js-line-number" data-line-number="4938"></td>
        <td id="LC4938" class="blob-code blob-code-inner js-file-line">      lArc <span class="pl-k">=</span> disappearing[iArc <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4939" class="blob-num js-line-number" data-line-number="4939"></td>
        <td id="LC4939" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);</td>
      </tr>
      <tr>
        <td id="L4940" class="blob-num js-line-number" data-line-number="4940"></td>
        <td id="LC4940" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4941" class="blob-num js-line-number" data-line-number="4941"></td>
        <td id="LC4941" class="blob-code blob-code-inner js-file-line">    lArc <span class="pl-k">=</span> disappearing[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4942" class="blob-num js-line-number" data-line-number="4942"></td>
        <td id="LC4942" class="blob-code blob-code-inner js-file-line">    rArc <span class="pl-k">=</span> disappearing[nArcs <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L4943" class="blob-num js-line-number" data-line-number="4943"></td>
        <td id="LC4943" class="blob-code blob-code-inner js-file-line">    rArc.edge <span class="pl-k">=</span> d3_geom_voronoiCreateEdge(lArc.site, rArc.site, <span class="pl-c1">null</span>, vertex);</td>
      </tr>
      <tr>
        <td id="L4944" class="blob-num js-line-number" data-line-number="4944"></td>
        <td id="LC4944" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiAttachCircle(lArc);</td>
      </tr>
      <tr>
        <td id="L4945" class="blob-num js-line-number" data-line-number="4945"></td>
        <td id="LC4945" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiAttachCircle(rArc);</td>
      </tr>
      <tr>
        <td id="L4946" class="blob-num js-line-number" data-line-number="4946"></td>
        <td id="LC4946" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4947" class="blob-num js-line-number" data-line-number="4947"></td>
        <td id="LC4947" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiAddBeach</span>(<span class="pl-smi">site</span>) {</td>
      </tr>
      <tr>
        <td id="L4948" class="blob-num js-line-number" data-line-number="4948"></td>
        <td id="LC4948" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> site.<span class="pl-c1">x</span>, directrix <span class="pl-k">=</span> site.<span class="pl-c1">y</span>, lArc, rArc, dxl, dxr, node <span class="pl-k">=</span> d3_geom_voronoiBeaches._;</td>
      </tr>
      <tr>
        <td id="L4949" class="blob-num js-line-number" data-line-number="4949"></td>
        <td id="LC4949" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (node) {</td>
      </tr>
      <tr>
        <td id="L4950" class="blob-num js-line-number" data-line-number="4950"></td>
        <td id="LC4950" class="blob-code blob-code-inner js-file-line">      dxl <span class="pl-k">=</span> d3_geom_voronoiLeftBreakPoint(node, directrix) <span class="pl-k">-</span> x;</td>
      </tr>
      <tr>
        <td id="L4951" class="blob-num js-line-number" data-line-number="4951"></td>
        <td id="LC4951" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dxl <span class="pl-k">&gt;</span> Îµ) node <span class="pl-k">=</span> node.L; <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4952" class="blob-num js-line-number" data-line-number="4952"></td>
        <td id="LC4952" class="blob-code blob-code-inner js-file-line">        dxr <span class="pl-k">=</span> x <span class="pl-k">-</span> d3_geom_voronoiRightBreakPoint(node, directrix);</td>
      </tr>
      <tr>
        <td id="L4953" class="blob-num js-line-number" data-line-number="4953"></td>
        <td id="LC4953" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (dxr <span class="pl-k">&gt;</span> Îµ) {</td>
      </tr>
      <tr>
        <td id="L4954" class="blob-num js-line-number" data-line-number="4954"></td>
        <td id="LC4954" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>node.R) {</td>
      </tr>
      <tr>
        <td id="L4955" class="blob-num js-line-number" data-line-number="4955"></td>
        <td id="LC4955" class="blob-code blob-code-inner js-file-line">            lArc <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L4956" class="blob-num js-line-number" data-line-number="4956"></td>
        <td id="LC4956" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4957" class="blob-num js-line-number" data-line-number="4957"></td>
        <td id="LC4957" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4958" class="blob-num js-line-number" data-line-number="4958"></td>
        <td id="LC4958" class="blob-code blob-code-inner js-file-line">          node <span class="pl-k">=</span> node.R;</td>
      </tr>
      <tr>
        <td id="L4959" class="blob-num js-line-number" data-line-number="4959"></td>
        <td id="LC4959" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4960" class="blob-num js-line-number" data-line-number="4960"></td>
        <td id="LC4960" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (dxl <span class="pl-k">&gt;</span> <span class="pl-k">-</span>Îµ) {</td>
      </tr>
      <tr>
        <td id="L4961" class="blob-num js-line-number" data-line-number="4961"></td>
        <td id="LC4961" class="blob-code blob-code-inner js-file-line">            lArc <span class="pl-k">=</span> node.P;</td>
      </tr>
      <tr>
        <td id="L4962" class="blob-num js-line-number" data-line-number="4962"></td>
        <td id="LC4962" class="blob-code blob-code-inner js-file-line">            rArc <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L4963" class="blob-num js-line-number" data-line-number="4963"></td>
        <td id="LC4963" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (dxr <span class="pl-k">&gt;</span> <span class="pl-k">-</span>Îµ) {</td>
      </tr>
      <tr>
        <td id="L4964" class="blob-num js-line-number" data-line-number="4964"></td>
        <td id="LC4964" class="blob-code blob-code-inner js-file-line">            lArc <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L4965" class="blob-num js-line-number" data-line-number="4965"></td>
        <td id="LC4965" class="blob-code blob-code-inner js-file-line">            rArc <span class="pl-k">=</span> node.N;</td>
      </tr>
      <tr>
        <td id="L4966" class="blob-num js-line-number" data-line-number="4966"></td>
        <td id="LC4966" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4967" class="blob-num js-line-number" data-line-number="4967"></td>
        <td id="LC4967" class="blob-code blob-code-inner js-file-line">            lArc <span class="pl-k">=</span> rArc <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L4968" class="blob-num js-line-number" data-line-number="4968"></td>
        <td id="LC4968" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4969" class="blob-num js-line-number" data-line-number="4969"></td>
        <td id="LC4969" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L4970" class="blob-num js-line-number" data-line-number="4970"></td>
        <td id="LC4970" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4971" class="blob-num js-line-number" data-line-number="4971"></td>
        <td id="LC4971" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4972" class="blob-num js-line-number" data-line-number="4972"></td>
        <td id="LC4972" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4973" class="blob-num js-line-number" data-line-number="4973"></td>
        <td id="LC4973" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> newArc <span class="pl-k">=</span> d3_geom_voronoiCreateBeach(site);</td>
      </tr>
      <tr>
        <td id="L4974" class="blob-num js-line-number" data-line-number="4974"></td>
        <td id="LC4974" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiBeaches.insert(lArc, newArc);</td>
      </tr>
      <tr>
        <td id="L4975" class="blob-num js-line-number" data-line-number="4975"></td>
        <td id="LC4975" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>lArc <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>rArc) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L4976" class="blob-num js-line-number" data-line-number="4976"></td>
        <td id="LC4976" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (lArc <span class="pl-k">===</span> rArc) {</td>
      </tr>
      <tr>
        <td id="L4977" class="blob-num js-line-number" data-line-number="4977"></td>
        <td id="LC4977" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiDetachCircle(lArc);</td>
      </tr>
      <tr>
        <td id="L4978" class="blob-num js-line-number" data-line-number="4978"></td>
        <td id="LC4978" class="blob-code blob-code-inner js-file-line">      rArc <span class="pl-k">=</span> d3_geom_voronoiCreateBeach(lArc.site);</td>
      </tr>
      <tr>
        <td id="L4979" class="blob-num js-line-number" data-line-number="4979"></td>
        <td id="LC4979" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiBeaches.insert(newArc, rArc);</td>
      </tr>
      <tr>
        <td id="L4980" class="blob-num js-line-number" data-line-number="4980"></td>
        <td id="LC4980" class="blob-code blob-code-inner js-file-line">      newArc.edge <span class="pl-k">=</span> rArc.edge <span class="pl-k">=</span> d3_geom_voronoiCreateEdge(lArc.site, newArc.site);</td>
      </tr>
      <tr>
        <td id="L4981" class="blob-num js-line-number" data-line-number="4981"></td>
        <td id="LC4981" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiAttachCircle(lArc);</td>
      </tr>
      <tr>
        <td id="L4982" class="blob-num js-line-number" data-line-number="4982"></td>
        <td id="LC4982" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiAttachCircle(rArc);</td>
      </tr>
      <tr>
        <td id="L4983" class="blob-num js-line-number" data-line-number="4983"></td>
        <td id="LC4983" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L4984" class="blob-num js-line-number" data-line-number="4984"></td>
        <td id="LC4984" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4985" class="blob-num js-line-number" data-line-number="4985"></td>
        <td id="LC4985" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>rArc) {</td>
      </tr>
      <tr>
        <td id="L4986" class="blob-num js-line-number" data-line-number="4986"></td>
        <td id="LC4986" class="blob-code blob-code-inner js-file-line">      newArc.edge <span class="pl-k">=</span> d3_geom_voronoiCreateEdge(lArc.site, newArc.site);</td>
      </tr>
      <tr>
        <td id="L4987" class="blob-num js-line-number" data-line-number="4987"></td>
        <td id="LC4987" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L4988" class="blob-num js-line-number" data-line-number="4988"></td>
        <td id="LC4988" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4989" class="blob-num js-line-number" data-line-number="4989"></td>
        <td id="LC4989" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiDetachCircle(lArc);</td>
      </tr>
      <tr>
        <td id="L4990" class="blob-num js-line-number" data-line-number="4990"></td>
        <td id="LC4990" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiDetachCircle(rArc);</td>
      </tr>
      <tr>
        <td id="L4991" class="blob-num js-line-number" data-line-number="4991"></td>
        <td id="LC4991" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lSite <span class="pl-k">=</span> lArc.site, ax <span class="pl-k">=</span> lSite.<span class="pl-c1">x</span>, ay <span class="pl-k">=</span> lSite.<span class="pl-c1">y</span>, bx <span class="pl-k">=</span> site.<span class="pl-c1">x</span> <span class="pl-k">-</span> ax, by <span class="pl-k">=</span> site.<span class="pl-c1">y</span> <span class="pl-k">-</span> ay, rSite <span class="pl-k">=</span> rArc.site, cx <span class="pl-k">=</span> rSite.<span class="pl-c1">x</span> <span class="pl-k">-</span> ax, cy <span class="pl-k">=</span> rSite.<span class="pl-c1">y</span> <span class="pl-k">-</span> ay, d <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> (bx <span class="pl-k">*</span> cy <span class="pl-k">-</span> by <span class="pl-k">*</span> cx), hb <span class="pl-k">=</span> bx <span class="pl-k">*</span> bx <span class="pl-k">+</span> by <span class="pl-k">*</span> by, hc <span class="pl-k">=</span> cx <span class="pl-k">*</span> cx <span class="pl-k">+</span> cy <span class="pl-k">*</span> cy, vertex <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4992" class="blob-num js-line-number" data-line-number="4992"></td>
        <td id="LC4992" class="blob-code blob-code-inner js-file-line">      x<span class="pl-k">:</span> (cy <span class="pl-k">*</span> hb <span class="pl-k">-</span> by <span class="pl-k">*</span> hc) / d <span class="pl-k">+</span> ax,</td>
      </tr>
      <tr>
        <td id="L4993" class="blob-num js-line-number" data-line-number="4993"></td>
        <td id="LC4993" class="blob-code blob-code-inner js-file-line">      y<span class="pl-k">:</span> (bx <span class="pl-k">*</span> hc <span class="pl-k">-</span> cx <span class="pl-k">*</span> hb) / d <span class="pl-k">+</span> ay</td>
      </tr>
      <tr>
        <td id="L4994" class="blob-num js-line-number" data-line-number="4994"></td>
        <td id="LC4994" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4995" class="blob-num js-line-number" data-line-number="4995"></td>
        <td id="LC4995" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);</td>
      </tr>
      <tr>
        <td id="L4996" class="blob-num js-line-number" data-line-number="4996"></td>
        <td id="LC4996" class="blob-code blob-code-inner js-file-line">    newArc.edge <span class="pl-k">=</span> d3_geom_voronoiCreateEdge(lSite, site, <span class="pl-c1">null</span>, vertex);</td>
      </tr>
      <tr>
        <td id="L4997" class="blob-num js-line-number" data-line-number="4997"></td>
        <td id="LC4997" class="blob-code blob-code-inner js-file-line">    rArc.edge <span class="pl-k">=</span> d3_geom_voronoiCreateEdge(site, rSite, <span class="pl-c1">null</span>, vertex);</td>
      </tr>
      <tr>
        <td id="L4998" class="blob-num js-line-number" data-line-number="4998"></td>
        <td id="LC4998" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiAttachCircle(lArc);</td>
      </tr>
      <tr>
        <td id="L4999" class="blob-num js-line-number" data-line-number="4999"></td>
        <td id="LC4999" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiAttachCircle(rArc);</td>
      </tr>
      <tr>
        <td id="L5000" class="blob-num js-line-number" data-line-number="5000"></td>
        <td id="LC5000" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5001" class="blob-num js-line-number" data-line-number="5001"></td>
        <td id="LC5001" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiLeftBreakPoint</span>(<span class="pl-smi">arc</span>, <span class="pl-smi">directrix</span>) {</td>
      </tr>
      <tr>
        <td id="L5002" class="blob-num js-line-number" data-line-number="5002"></td>
        <td id="LC5002" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> site <span class="pl-k">=</span> arc.site, rfocx <span class="pl-k">=</span> site.<span class="pl-c1">x</span>, rfocy <span class="pl-k">=</span> site.<span class="pl-c1">y</span>, pby2 <span class="pl-k">=</span> rfocy <span class="pl-k">-</span> directrix;</td>
      </tr>
      <tr>
        <td id="L5003" class="blob-num js-line-number" data-line-number="5003"></td>
        <td id="LC5003" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>pby2) <span class="pl-k">return</span> rfocx;</td>
      </tr>
      <tr>
        <td id="L5004" class="blob-num js-line-number" data-line-number="5004"></td>
        <td id="LC5004" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lArc <span class="pl-k">=</span> arc.P;</td>
      </tr>
      <tr>
        <td id="L5005" class="blob-num js-line-number" data-line-number="5005"></td>
        <td id="LC5005" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>lArc) <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L5006" class="blob-num js-line-number" data-line-number="5006"></td>
        <td id="LC5006" class="blob-code blob-code-inner js-file-line">    site <span class="pl-k">=</span> lArc.site;</td>
      </tr>
      <tr>
        <td id="L5007" class="blob-num js-line-number" data-line-number="5007"></td>
        <td id="LC5007" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lfocx <span class="pl-k">=</span> site.<span class="pl-c1">x</span>, lfocy <span class="pl-k">=</span> site.<span class="pl-c1">y</span>, plby2 <span class="pl-k">=</span> lfocy <span class="pl-k">-</span> directrix;</td>
      </tr>
      <tr>
        <td id="L5008" class="blob-num js-line-number" data-line-number="5008"></td>
        <td id="LC5008" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>plby2) <span class="pl-k">return</span> lfocx;</td>
      </tr>
      <tr>
        <td id="L5009" class="blob-num js-line-number" data-line-number="5009"></td>
        <td id="LC5009" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> hl <span class="pl-k">=</span> lfocx <span class="pl-k">-</span> rfocx, aby2 <span class="pl-k">=</span> <span class="pl-c1">1</span> / pby2 <span class="pl-k">-</span> <span class="pl-c1">1</span> / plby2, b <span class="pl-k">=</span> hl / plby2;</td>
      </tr>
      <tr>
        <td id="L5010" class="blob-num js-line-number" data-line-number="5010"></td>
        <td id="LC5010" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (aby2) <span class="pl-k">return</span> (<span class="pl-k">-</span>b <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(b <span class="pl-k">*</span> b <span class="pl-k">-</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> aby2 <span class="pl-k">*</span> (hl <span class="pl-k">*</span> hl / (<span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-k">*</span> plby2) <span class="pl-k">-</span> lfocy <span class="pl-k">+</span> plby2 / <span class="pl-c1">2</span> <span class="pl-k">+</span> rfocy <span class="pl-k">-</span> pby2 / <span class="pl-c1">2</span>))) / aby2 <span class="pl-k">+</span> rfocx;</td>
      </tr>
      <tr>
        <td id="L5011" class="blob-num js-line-number" data-line-number="5011"></td>
        <td id="LC5011" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (rfocx <span class="pl-k">+</span> lfocx) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L5012" class="blob-num js-line-number" data-line-number="5012"></td>
        <td id="LC5012" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5013" class="blob-num js-line-number" data-line-number="5013"></td>
        <td id="LC5013" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiRightBreakPoint</span>(<span class="pl-smi">arc</span>, <span class="pl-smi">directrix</span>) {</td>
      </tr>
      <tr>
        <td id="L5014" class="blob-num js-line-number" data-line-number="5014"></td>
        <td id="LC5014" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> rArc <span class="pl-k">=</span> arc.N;</td>
      </tr>
      <tr>
        <td id="L5015" class="blob-num js-line-number" data-line-number="5015"></td>
        <td id="LC5015" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (rArc) <span class="pl-k">return</span> d3_geom_voronoiLeftBreakPoint(rArc, directrix);</td>
      </tr>
      <tr>
        <td id="L5016" class="blob-num js-line-number" data-line-number="5016"></td>
        <td id="LC5016" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> site <span class="pl-k">=</span> arc.site;</td>
      </tr>
      <tr>
        <td id="L5017" class="blob-num js-line-number" data-line-number="5017"></td>
        <td id="LC5017" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> site.<span class="pl-c1">y</span> <span class="pl-k">===</span> directrix <span class="pl-k">?</span> site.<span class="pl-c1">x</span> <span class="pl-k">:</span> <span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L5018" class="blob-num js-line-number" data-line-number="5018"></td>
        <td id="LC5018" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5019" class="blob-num js-line-number" data-line-number="5019"></td>
        <td id="LC5019" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiCell</span>(<span class="pl-smi">site</span>) {</td>
      </tr>
      <tr>
        <td id="L5020" class="blob-num js-line-number" data-line-number="5020"></td>
        <td id="LC5020" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.site <span class="pl-k">=</span> site;</td>
      </tr>
      <tr>
        <td id="L5021" class="blob-num js-line-number" data-line-number="5021"></td>
        <td id="LC5021" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.edges <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5022" class="blob-num js-line-number" data-line-number="5022"></td>
        <td id="LC5022" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5023" class="blob-num js-line-number" data-line-number="5023"></td>
        <td id="LC5023" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geom_voronoiCell</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">prepare</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5024" class="blob-num js-line-number" data-line-number="5024"></td>
        <td id="LC5024" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> halfEdges <span class="pl-k">=</span> <span class="pl-v">this</span>.edges, iHalfEdge <span class="pl-k">=</span> halfEdges.<span class="pl-c1">length</span>, edge;</td>
      </tr>
      <tr>
        <td id="L5025" class="blob-num js-line-number" data-line-number="5025"></td>
        <td id="LC5025" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (iHalfEdge<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L5026" class="blob-num js-line-number" data-line-number="5026"></td>
        <td id="LC5026" class="blob-code blob-code-inner js-file-line">      edge <span class="pl-k">=</span> halfEdges[iHalfEdge].edge;</td>
      </tr>
      <tr>
        <td id="L5027" class="blob-num js-line-number" data-line-number="5027"></td>
        <td id="LC5027" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>edge.b <span class="pl-k">||</span> <span class="pl-k">!</span>edge.a) halfEdges.<span class="pl-c1">splice</span>(iHalfEdge, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L5028" class="blob-num js-line-number" data-line-number="5028"></td>
        <td id="LC5028" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5029" class="blob-num js-line-number" data-line-number="5029"></td>
        <td id="LC5029" class="blob-code blob-code-inner js-file-line">    halfEdges.<span class="pl-c1">sort</span>(d3_geom_voronoiHalfEdgeOrder);</td>
      </tr>
      <tr>
        <td id="L5030" class="blob-num js-line-number" data-line-number="5030"></td>
        <td id="LC5030" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> halfEdges.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L5031" class="blob-num js-line-number" data-line-number="5031"></td>
        <td id="LC5031" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5032" class="blob-num js-line-number" data-line-number="5032"></td>
        <td id="LC5032" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiCloseCells</span>(<span class="pl-smi">extent</span>) {</td>
      </tr>
      <tr>
        <td id="L5033" class="blob-num js-line-number" data-line-number="5033"></td>
        <td id="LC5033" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x0 <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], y0 <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], y1 <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>], x2, y2, x3, y3, cells <span class="pl-k">=</span> d3_geom_voronoiCells, iCell <span class="pl-k">=</span> cells.<span class="pl-c1">length</span>, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;</td>
      </tr>
      <tr>
        <td id="L5034" class="blob-num js-line-number" data-line-number="5034"></td>
        <td id="LC5034" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (iCell<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L5035" class="blob-num js-line-number" data-line-number="5035"></td>
        <td id="LC5035" class="blob-code blob-code-inner js-file-line">      cell <span class="pl-k">=</span> cells[iCell];</td>
      </tr>
      <tr>
        <td id="L5036" class="blob-num js-line-number" data-line-number="5036"></td>
        <td id="LC5036" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>cell <span class="pl-k">||</span> <span class="pl-k">!</span>cell.prepare()) <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L5037" class="blob-num js-line-number" data-line-number="5037"></td>
        <td id="LC5037" class="blob-code blob-code-inner js-file-line">      halfEdges <span class="pl-k">=</span> cell.edges;</td>
      </tr>
      <tr>
        <td id="L5038" class="blob-num js-line-number" data-line-number="5038"></td>
        <td id="LC5038" class="blob-code blob-code-inner js-file-line">      nHalfEdges <span class="pl-k">=</span> halfEdges.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L5039" class="blob-num js-line-number" data-line-number="5039"></td>
        <td id="LC5039" class="blob-code blob-code-inner js-file-line">      iHalfEdge <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5040" class="blob-num js-line-number" data-line-number="5040"></td>
        <td id="LC5040" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (iHalfEdge <span class="pl-k">&lt;</span> nHalfEdges) {</td>
      </tr>
      <tr>
        <td id="L5041" class="blob-num js-line-number" data-line-number="5041"></td>
        <td id="LC5041" class="blob-code blob-code-inner js-file-line">        end <span class="pl-k">=</span> halfEdges[iHalfEdge].end(), x3 <span class="pl-k">=</span> end.<span class="pl-c1">x</span>, y3 <span class="pl-k">=</span> end.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L5042" class="blob-num js-line-number" data-line-number="5042"></td>
        <td id="LC5042" class="blob-code blob-code-inner js-file-line">        start <span class="pl-k">=</span> halfEdges[<span class="pl-k">++</span>iHalfEdge <span class="pl-k">%</span> nHalfEdges].<span class="pl-c1">start</span>(), x2 <span class="pl-k">=</span> start.<span class="pl-c1">x</span>, y2 <span class="pl-k">=</span> start.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L5043" class="blob-num js-line-number" data-line-number="5043"></td>
        <td id="LC5043" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(x3 <span class="pl-k">-</span> x2) <span class="pl-k">&gt;</span> Îµ <span class="pl-k">||</span> <span class="pl-c1">abs</span>(y3 <span class="pl-k">-</span> y2) <span class="pl-k">&gt;</span> Îµ) {</td>
      </tr>
      <tr>
        <td id="L5044" class="blob-num js-line-number" data-line-number="5044"></td>
        <td id="LC5044" class="blob-code blob-code-inner js-file-line">          halfEdges.<span class="pl-c1">splice</span>(iHalfEdge, <span class="pl-c1">0</span>, <span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiHalfEdge</span>(d3_geom_voronoiCreateBorderEdge(cell.site, end, <span class="pl-c1">abs</span>(x3 <span class="pl-k">-</span> x0) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> y1 <span class="pl-k">-</span> y3 <span class="pl-k">&gt;</span> Îµ <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L5045" class="blob-num js-line-number" data-line-number="5045"></td>
        <td id="LC5045" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> x0,</td>
      </tr>
      <tr>
        <td id="L5046" class="blob-num js-line-number" data-line-number="5046"></td>
        <td id="LC5046" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> <span class="pl-c1">abs</span>(x2 <span class="pl-k">-</span> x0) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> y2 <span class="pl-k">:</span> y1</td>
      </tr>
      <tr>
        <td id="L5047" class="blob-num js-line-number" data-line-number="5047"></td>
        <td id="LC5047" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">:</span> <span class="pl-c1">abs</span>(y3 <span class="pl-k">-</span> y1) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> x1 <span class="pl-k">-</span> x3 <span class="pl-k">&gt;</span> Îµ <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L5048" class="blob-num js-line-number" data-line-number="5048"></td>
        <td id="LC5048" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> <span class="pl-c1">abs</span>(y2 <span class="pl-k">-</span> y1) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> x2 <span class="pl-k">:</span> x1,</td>
      </tr>
      <tr>
        <td id="L5049" class="blob-num js-line-number" data-line-number="5049"></td>
        <td id="LC5049" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> y1</td>
      </tr>
      <tr>
        <td id="L5050" class="blob-num js-line-number" data-line-number="5050"></td>
        <td id="LC5050" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">:</span> <span class="pl-c1">abs</span>(x3 <span class="pl-k">-</span> x1) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> y3 <span class="pl-k">-</span> y0 <span class="pl-k">&gt;</span> Îµ <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L5051" class="blob-num js-line-number" data-line-number="5051"></td>
        <td id="LC5051" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> x1,</td>
      </tr>
      <tr>
        <td id="L5052" class="blob-num js-line-number" data-line-number="5052"></td>
        <td id="LC5052" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> <span class="pl-c1">abs</span>(x2 <span class="pl-k">-</span> x1) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> y2 <span class="pl-k">:</span> y0</td>
      </tr>
      <tr>
        <td id="L5053" class="blob-num js-line-number" data-line-number="5053"></td>
        <td id="LC5053" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">:</span> <span class="pl-c1">abs</span>(y3 <span class="pl-k">-</span> y0) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> x3 <span class="pl-k">-</span> x0 <span class="pl-k">&gt;</span> Îµ <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L5054" class="blob-num js-line-number" data-line-number="5054"></td>
        <td id="LC5054" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> <span class="pl-c1">abs</span>(y2 <span class="pl-k">-</span> y0) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">?</span> x2 <span class="pl-k">:</span> x0,</td>
      </tr>
      <tr>
        <td id="L5055" class="blob-num js-line-number" data-line-number="5055"></td>
        <td id="LC5055" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> y0</td>
      </tr>
      <tr>
        <td id="L5056" class="blob-num js-line-number" data-line-number="5056"></td>
        <td id="LC5056" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">:</span> <span class="pl-c1">null</span>), cell.site, <span class="pl-c1">null</span>));</td>
      </tr>
      <tr>
        <td id="L5057" class="blob-num js-line-number" data-line-number="5057"></td>
        <td id="LC5057" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">++</span>nHalfEdges;</td>
      </tr>
      <tr>
        <td id="L5058" class="blob-num js-line-number" data-line-number="5058"></td>
        <td id="LC5058" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5059" class="blob-num js-line-number" data-line-number="5059"></td>
        <td id="LC5059" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5060" class="blob-num js-line-number" data-line-number="5060"></td>
        <td id="LC5060" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5061" class="blob-num js-line-number" data-line-number="5061"></td>
        <td id="LC5061" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5062" class="blob-num js-line-number" data-line-number="5062"></td>
        <td id="LC5062" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiHalfEdgeOrder</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5063" class="blob-num js-line-number" data-line-number="5063"></td>
        <td id="LC5063" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> b.angle <span class="pl-k">-</span> a.angle;</td>
      </tr>
      <tr>
        <td id="L5064" class="blob-num js-line-number" data-line-number="5064"></td>
        <td id="LC5064" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5065" class="blob-num js-line-number" data-line-number="5065"></td>
        <td id="LC5065" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiCircle</span>() {</td>
      </tr>
      <tr>
        <td id="L5066" class="blob-num js-line-number" data-line-number="5066"></td>
        <td id="LC5066" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiRedBlackNode(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L5067" class="blob-num js-line-number" data-line-number="5067"></td>
        <td id="LC5067" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.arc <span class="pl-k">=</span> <span class="pl-v">this</span>.site <span class="pl-k">=</span> <span class="pl-v">this</span>.cy <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5068" class="blob-num js-line-number" data-line-number="5068"></td>
        <td id="LC5068" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5069" class="blob-num js-line-number" data-line-number="5069"></td>
        <td id="LC5069" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiAttachCircle</span>(<span class="pl-smi">arc</span>) {</td>
      </tr>
      <tr>
        <td id="L5070" class="blob-num js-line-number" data-line-number="5070"></td>
        <td id="LC5070" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lArc <span class="pl-k">=</span> arc.P, rArc <span class="pl-k">=</span> arc.N;</td>
      </tr>
      <tr>
        <td id="L5071" class="blob-num js-line-number" data-line-number="5071"></td>
        <td id="LC5071" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>lArc <span class="pl-k">||</span> <span class="pl-k">!</span>rArc) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5072" class="blob-num js-line-number" data-line-number="5072"></td>
        <td id="LC5072" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lSite <span class="pl-k">=</span> lArc.site, cSite <span class="pl-k">=</span> arc.site, rSite <span class="pl-k">=</span> rArc.site;</td>
      </tr>
      <tr>
        <td id="L5073" class="blob-num js-line-number" data-line-number="5073"></td>
        <td id="LC5073" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (lSite <span class="pl-k">===</span> rSite) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5074" class="blob-num js-line-number" data-line-number="5074"></td>
        <td id="LC5074" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> bx <span class="pl-k">=</span> cSite.<span class="pl-c1">x</span>, by <span class="pl-k">=</span> cSite.<span class="pl-c1">y</span>, ax <span class="pl-k">=</span> lSite.<span class="pl-c1">x</span> <span class="pl-k">-</span> bx, ay <span class="pl-k">=</span> lSite.<span class="pl-c1">y</span> <span class="pl-k">-</span> by, cx <span class="pl-k">=</span> rSite.<span class="pl-c1">x</span> <span class="pl-k">-</span> bx, cy <span class="pl-k">=</span> rSite.<span class="pl-c1">y</span> <span class="pl-k">-</span> by;</td>
      </tr>
      <tr>
        <td id="L5075" class="blob-num js-line-number" data-line-number="5075"></td>
        <td id="LC5075" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> d <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> (ax <span class="pl-k">*</span> cy <span class="pl-k">-</span> ay <span class="pl-k">*</span> cx);</td>
      </tr>
      <tr>
        <td id="L5076" class="blob-num js-line-number" data-line-number="5076"></td>
        <td id="LC5076" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (d <span class="pl-k">&gt;=</span> <span class="pl-k">-</span>Îµ<span class="pl-c1">2</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5077" class="blob-num js-line-number" data-line-number="5077"></td>
        <td id="LC5077" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ha <span class="pl-k">=</span> ax <span class="pl-k">*</span> ax <span class="pl-k">+</span> ay <span class="pl-k">*</span> ay, hc <span class="pl-k">=</span> cx <span class="pl-k">*</span> cx <span class="pl-k">+</span> cy <span class="pl-k">*</span> cy, x <span class="pl-k">=</span> (cy <span class="pl-k">*</span> ha <span class="pl-k">-</span> ay <span class="pl-k">*</span> hc) / d, y <span class="pl-k">=</span> (ax <span class="pl-k">*</span> hc <span class="pl-k">-</span> cx <span class="pl-k">*</span> ha) / d, cy <span class="pl-k">=</span> y <span class="pl-k">+</span> by;</td>
      </tr>
      <tr>
        <td id="L5078" class="blob-num js-line-number" data-line-number="5078"></td>
        <td id="LC5078" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> circle <span class="pl-k">=</span> d3_geom_voronoiCirclePool.<span class="pl-c1">pop</span>() <span class="pl-k">||</span> <span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiCircle</span>();</td>
      </tr>
      <tr>
        <td id="L5079" class="blob-num js-line-number" data-line-number="5079"></td>
        <td id="LC5079" class="blob-code blob-code-inner js-file-line">    circle.arc <span class="pl-k">=</span> arc;</td>
      </tr>
      <tr>
        <td id="L5080" class="blob-num js-line-number" data-line-number="5080"></td>
        <td id="LC5080" class="blob-code blob-code-inner js-file-line">    circle.site <span class="pl-k">=</span> cSite;</td>
      </tr>
      <tr>
        <td id="L5081" class="blob-num js-line-number" data-line-number="5081"></td>
        <td id="LC5081" class="blob-code blob-code-inner js-file-line">    circle.<span class="pl-c1">x</span> <span class="pl-k">=</span> x <span class="pl-k">+</span> bx;</td>
      </tr>
      <tr>
        <td id="L5082" class="blob-num js-line-number" data-line-number="5082"></td>
        <td id="LC5082" class="blob-code blob-code-inner js-file-line">    circle.<span class="pl-c1">y</span> <span class="pl-k">=</span> cy <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(x <span class="pl-k">*</span> x <span class="pl-k">+</span> y <span class="pl-k">*</span> y);</td>
      </tr>
      <tr>
        <td id="L5083" class="blob-num js-line-number" data-line-number="5083"></td>
        <td id="LC5083" class="blob-code blob-code-inner js-file-line">    circle.cy <span class="pl-k">=</span> cy;</td>
      </tr>
      <tr>
        <td id="L5084" class="blob-num js-line-number" data-line-number="5084"></td>
        <td id="LC5084" class="blob-code blob-code-inner js-file-line">    arc.circle <span class="pl-k">=</span> circle;</td>
      </tr>
      <tr>
        <td id="L5085" class="blob-num js-line-number" data-line-number="5085"></td>
        <td id="LC5085" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> before <span class="pl-k">=</span> <span class="pl-c1">null</span>, node <span class="pl-k">=</span> d3_geom_voronoiCircles._;</td>
      </tr>
      <tr>
        <td id="L5086" class="blob-num js-line-number" data-line-number="5086"></td>
        <td id="LC5086" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (node) {</td>
      </tr>
      <tr>
        <td id="L5087" class="blob-num js-line-number" data-line-number="5087"></td>
        <td id="LC5087" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (circle.<span class="pl-c1">y</span> <span class="pl-k">&lt;</span> node.<span class="pl-c1">y</span> <span class="pl-k">||</span> circle.<span class="pl-c1">y</span> <span class="pl-k">===</span> node.<span class="pl-c1">y</span> <span class="pl-k">&amp;&amp;</span> circle.<span class="pl-c1">x</span> <span class="pl-k">&lt;=</span> node.<span class="pl-c1">x</span>) {</td>
      </tr>
      <tr>
        <td id="L5088" class="blob-num js-line-number" data-line-number="5088"></td>
        <td id="LC5088" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node.L) node <span class="pl-k">=</span> node.L; <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5089" class="blob-num js-line-number" data-line-number="5089"></td>
        <td id="LC5089" class="blob-code blob-code-inner js-file-line">          before <span class="pl-k">=</span> node.P;</td>
      </tr>
      <tr>
        <td id="L5090" class="blob-num js-line-number" data-line-number="5090"></td>
        <td id="LC5090" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5091" class="blob-num js-line-number" data-line-number="5091"></td>
        <td id="LC5091" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5092" class="blob-num js-line-number" data-line-number="5092"></td>
        <td id="LC5092" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5093" class="blob-num js-line-number" data-line-number="5093"></td>
        <td id="LC5093" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node.R) node <span class="pl-k">=</span> node.R; <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5094" class="blob-num js-line-number" data-line-number="5094"></td>
        <td id="LC5094" class="blob-code blob-code-inner js-file-line">          before <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5095" class="blob-num js-line-number" data-line-number="5095"></td>
        <td id="LC5095" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5096" class="blob-num js-line-number" data-line-number="5096"></td>
        <td id="LC5096" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5097" class="blob-num js-line-number" data-line-number="5097"></td>
        <td id="LC5097" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5098" class="blob-num js-line-number" data-line-number="5098"></td>
        <td id="LC5098" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5099" class="blob-num js-line-number" data-line-number="5099"></td>
        <td id="LC5099" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiCircles.insert(before, circle);</td>
      </tr>
      <tr>
        <td id="L5100" class="blob-num js-line-number" data-line-number="5100"></td>
        <td id="LC5100" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>before) d3_geom_voronoiFirstCircle <span class="pl-k">=</span> circle;</td>
      </tr>
      <tr>
        <td id="L5101" class="blob-num js-line-number" data-line-number="5101"></td>
        <td id="LC5101" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5102" class="blob-num js-line-number" data-line-number="5102"></td>
        <td id="LC5102" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiDetachCircle</span>(<span class="pl-smi">arc</span>) {</td>
      </tr>
      <tr>
        <td id="L5103" class="blob-num js-line-number" data-line-number="5103"></td>
        <td id="LC5103" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> circle <span class="pl-k">=</span> arc.circle;</td>
      </tr>
      <tr>
        <td id="L5104" class="blob-num js-line-number" data-line-number="5104"></td>
        <td id="LC5104" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (circle) {</td>
      </tr>
      <tr>
        <td id="L5105" class="blob-num js-line-number" data-line-number="5105"></td>
        <td id="LC5105" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>circle.P) d3_geom_voronoiFirstCircle <span class="pl-k">=</span> circle.N;</td>
      </tr>
      <tr>
        <td id="L5106" class="blob-num js-line-number" data-line-number="5106"></td>
        <td id="LC5106" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiCircles.<span class="pl-c1">remove</span>(circle);</td>
      </tr>
      <tr>
        <td id="L5107" class="blob-num js-line-number" data-line-number="5107"></td>
        <td id="LC5107" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiCirclePool.<span class="pl-c1">push</span>(circle);</td>
      </tr>
      <tr>
        <td id="L5108" class="blob-num js-line-number" data-line-number="5108"></td>
        <td id="LC5108" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoiRedBlackNode(circle);</td>
      </tr>
      <tr>
        <td id="L5109" class="blob-num js-line-number" data-line-number="5109"></td>
        <td id="LC5109" class="blob-code blob-code-inner js-file-line">      arc.circle <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5110" class="blob-num js-line-number" data-line-number="5110"></td>
        <td id="LC5110" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5111" class="blob-num js-line-number" data-line-number="5111"></td>
        <td id="LC5111" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5112" class="blob-num js-line-number" data-line-number="5112"></td>
        <td id="LC5112" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiClipEdges</span>(<span class="pl-smi">extent</span>) {</td>
      </tr>
      <tr>
        <td id="L5113" class="blob-num js-line-number" data-line-number="5113"></td>
        <td id="LC5113" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> edges <span class="pl-k">=</span> d3_geom_voronoiEdges, clip <span class="pl-k">=</span> d3_geom_clipLine(extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]), i <span class="pl-k">=</span> edges.<span class="pl-c1">length</span>, e;</td>
      </tr>
      <tr>
        <td id="L5114" class="blob-num js-line-number" data-line-number="5114"></td>
        <td id="LC5114" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (i<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L5115" class="blob-num js-line-number" data-line-number="5115"></td>
        <td id="LC5115" class="blob-code blob-code-inner js-file-line">      e <span class="pl-k">=</span> edges[i];</td>
      </tr>
      <tr>
        <td id="L5116" class="blob-num js-line-number" data-line-number="5116"></td>
        <td id="LC5116" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>d3_geom_voronoiConnectEdge(e, extent) <span class="pl-k">||</span> <span class="pl-k">!</span>clip(e) <span class="pl-k">||</span> <span class="pl-c1">abs</span>(e.a.<span class="pl-c1">x</span> <span class="pl-k">-</span> e.b.<span class="pl-c1">x</span>) <span class="pl-k">&lt;</span> Îµ <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">abs</span>(e.a.<span class="pl-c1">y</span> <span class="pl-k">-</span> e.b.<span class="pl-c1">y</span>) <span class="pl-k">&lt;</span> Îµ) {</td>
      </tr>
      <tr>
        <td id="L5117" class="blob-num js-line-number" data-line-number="5117"></td>
        <td id="LC5117" class="blob-code blob-code-inner js-file-line">        e.a <span class="pl-k">=</span> e.b <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5118" class="blob-num js-line-number" data-line-number="5118"></td>
        <td id="LC5118" class="blob-code blob-code-inner js-file-line">        edges.<span class="pl-c1">splice</span>(i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L5119" class="blob-num js-line-number" data-line-number="5119"></td>
        <td id="LC5119" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5120" class="blob-num js-line-number" data-line-number="5120"></td>
        <td id="LC5120" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5121" class="blob-num js-line-number" data-line-number="5121"></td>
        <td id="LC5121" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5122" class="blob-num js-line-number" data-line-number="5122"></td>
        <td id="LC5122" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiConnectEdge</span>(<span class="pl-smi">edge</span>, <span class="pl-smi">extent</span>) {</td>
      </tr>
      <tr>
        <td id="L5123" class="blob-num js-line-number" data-line-number="5123"></td>
        <td id="LC5123" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> vb <span class="pl-k">=</span> edge.b;</td>
      </tr>
      <tr>
        <td id="L5124" class="blob-num js-line-number" data-line-number="5124"></td>
        <td id="LC5124" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (vb) <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5125" class="blob-num js-line-number" data-line-number="5125"></td>
        <td id="LC5125" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> va <span class="pl-k">=</span> edge.a, x0 <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], y0 <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], y1 <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>], lSite <span class="pl-k">=</span> edge.l, rSite <span class="pl-k">=</span> edge.r, lx <span class="pl-k">=</span> lSite.<span class="pl-c1">x</span>, ly <span class="pl-k">=</span> lSite.<span class="pl-c1">y</span>, rx <span class="pl-k">=</span> rSite.<span class="pl-c1">x</span>, ry <span class="pl-k">=</span> rSite.<span class="pl-c1">y</span>, fx <span class="pl-k">=</span> (lx <span class="pl-k">+</span> rx) / <span class="pl-c1">2</span>, fy <span class="pl-k">=</span> (ly <span class="pl-k">+</span> ry) / <span class="pl-c1">2</span>, fm, fb;</td>
      </tr>
      <tr>
        <td id="L5126" class="blob-num js-line-number" data-line-number="5126"></td>
        <td id="LC5126" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ry <span class="pl-k">===</span> ly) {</td>
      </tr>
      <tr>
        <td id="L5127" class="blob-num js-line-number" data-line-number="5127"></td>
        <td id="LC5127" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (fx <span class="pl-k">&lt;</span> x0 <span class="pl-k">||</span> fx <span class="pl-k">&gt;=</span> x1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5128" class="blob-num js-line-number" data-line-number="5128"></td>
        <td id="LC5128" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (lx <span class="pl-k">&gt;</span> rx) {</td>
      </tr>
      <tr>
        <td id="L5129" class="blob-num js-line-number" data-line-number="5129"></td>
        <td id="LC5129" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>va) va <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5130" class="blob-num js-line-number" data-line-number="5130"></td>
        <td id="LC5130" class="blob-code blob-code-inner js-file-line">          x<span class="pl-k">:</span> fx,</td>
      </tr>
      <tr>
        <td id="L5131" class="blob-num js-line-number" data-line-number="5131"></td>
        <td id="LC5131" class="blob-code blob-code-inner js-file-line">          y<span class="pl-k">:</span> y0</td>
      </tr>
      <tr>
        <td id="L5132" class="blob-num js-line-number" data-line-number="5132"></td>
        <td id="LC5132" class="blob-code blob-code-inner js-file-line">        }; <span class="pl-k">else</span> <span class="pl-k">if</span> (va.<span class="pl-c1">y</span> <span class="pl-k">&gt;=</span> y1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5133" class="blob-num js-line-number" data-line-number="5133"></td>
        <td id="LC5133" class="blob-code blob-code-inner js-file-line">        vb <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5134" class="blob-num js-line-number" data-line-number="5134"></td>
        <td id="LC5134" class="blob-code blob-code-inner js-file-line">          x<span class="pl-k">:</span> fx,</td>
      </tr>
      <tr>
        <td id="L5135" class="blob-num js-line-number" data-line-number="5135"></td>
        <td id="LC5135" class="blob-code blob-code-inner js-file-line">          y<span class="pl-k">:</span> y1</td>
      </tr>
      <tr>
        <td id="L5136" class="blob-num js-line-number" data-line-number="5136"></td>
        <td id="LC5136" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5137" class="blob-num js-line-number" data-line-number="5137"></td>
        <td id="LC5137" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5138" class="blob-num js-line-number" data-line-number="5138"></td>
        <td id="LC5138" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>va) va <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5139" class="blob-num js-line-number" data-line-number="5139"></td>
        <td id="LC5139" class="blob-code blob-code-inner js-file-line">          x<span class="pl-k">:</span> fx,</td>
      </tr>
      <tr>
        <td id="L5140" class="blob-num js-line-number" data-line-number="5140"></td>
        <td id="LC5140" class="blob-code blob-code-inner js-file-line">          y<span class="pl-k">:</span> y1</td>
      </tr>
      <tr>
        <td id="L5141" class="blob-num js-line-number" data-line-number="5141"></td>
        <td id="LC5141" class="blob-code blob-code-inner js-file-line">        }; <span class="pl-k">else</span> <span class="pl-k">if</span> (va.<span class="pl-c1">y</span> <span class="pl-k">&lt;</span> y0) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5142" class="blob-num js-line-number" data-line-number="5142"></td>
        <td id="LC5142" class="blob-code blob-code-inner js-file-line">        vb <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5143" class="blob-num js-line-number" data-line-number="5143"></td>
        <td id="LC5143" class="blob-code blob-code-inner js-file-line">          x<span class="pl-k">:</span> fx,</td>
      </tr>
      <tr>
        <td id="L5144" class="blob-num js-line-number" data-line-number="5144"></td>
        <td id="LC5144" class="blob-code blob-code-inner js-file-line">          y<span class="pl-k">:</span> y0</td>
      </tr>
      <tr>
        <td id="L5145" class="blob-num js-line-number" data-line-number="5145"></td>
        <td id="LC5145" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5146" class="blob-num js-line-number" data-line-number="5146"></td>
        <td id="LC5146" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5147" class="blob-num js-line-number" data-line-number="5147"></td>
        <td id="LC5147" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5148" class="blob-num js-line-number" data-line-number="5148"></td>
        <td id="LC5148" class="blob-code blob-code-inner js-file-line">      fm <span class="pl-k">=</span> (lx <span class="pl-k">-</span> rx) / (ry <span class="pl-k">-</span> ly);</td>
      </tr>
      <tr>
        <td id="L5149" class="blob-num js-line-number" data-line-number="5149"></td>
        <td id="LC5149" class="blob-code blob-code-inner js-file-line">      fb <span class="pl-k">=</span> fy <span class="pl-k">-</span> fm <span class="pl-k">*</span> fx;</td>
      </tr>
      <tr>
        <td id="L5150" class="blob-num js-line-number" data-line-number="5150"></td>
        <td id="LC5150" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (fm <span class="pl-k">&lt;</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">||</span> fm <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L5151" class="blob-num js-line-number" data-line-number="5151"></td>
        <td id="LC5151" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (lx <span class="pl-k">&gt;</span> rx) {</td>
      </tr>
      <tr>
        <td id="L5152" class="blob-num js-line-number" data-line-number="5152"></td>
        <td id="LC5152" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>va) va <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5153" class="blob-num js-line-number" data-line-number="5153"></td>
        <td id="LC5153" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> (y0 <span class="pl-k">-</span> fb) / fm,</td>
      </tr>
      <tr>
        <td id="L5154" class="blob-num js-line-number" data-line-number="5154"></td>
        <td id="LC5154" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> y0</td>
      </tr>
      <tr>
        <td id="L5155" class="blob-num js-line-number" data-line-number="5155"></td>
        <td id="LC5155" class="blob-code blob-code-inner js-file-line">          }; <span class="pl-k">else</span> <span class="pl-k">if</span> (va.<span class="pl-c1">y</span> <span class="pl-k">&gt;=</span> y1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5156" class="blob-num js-line-number" data-line-number="5156"></td>
        <td id="LC5156" class="blob-code blob-code-inner js-file-line">          vb <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5157" class="blob-num js-line-number" data-line-number="5157"></td>
        <td id="LC5157" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> (y1 <span class="pl-k">-</span> fb) / fm,</td>
      </tr>
      <tr>
        <td id="L5158" class="blob-num js-line-number" data-line-number="5158"></td>
        <td id="LC5158" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> y1</td>
      </tr>
      <tr>
        <td id="L5159" class="blob-num js-line-number" data-line-number="5159"></td>
        <td id="LC5159" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L5160" class="blob-num js-line-number" data-line-number="5160"></td>
        <td id="LC5160" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5161" class="blob-num js-line-number" data-line-number="5161"></td>
        <td id="LC5161" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>va) va <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5162" class="blob-num js-line-number" data-line-number="5162"></td>
        <td id="LC5162" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> (y1 <span class="pl-k">-</span> fb) / fm,</td>
      </tr>
      <tr>
        <td id="L5163" class="blob-num js-line-number" data-line-number="5163"></td>
        <td id="LC5163" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> y1</td>
      </tr>
      <tr>
        <td id="L5164" class="blob-num js-line-number" data-line-number="5164"></td>
        <td id="LC5164" class="blob-code blob-code-inner js-file-line">          }; <span class="pl-k">else</span> <span class="pl-k">if</span> (va.<span class="pl-c1">y</span> <span class="pl-k">&lt;</span> y0) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5165" class="blob-num js-line-number" data-line-number="5165"></td>
        <td id="LC5165" class="blob-code blob-code-inner js-file-line">          vb <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5166" class="blob-num js-line-number" data-line-number="5166"></td>
        <td id="LC5166" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> (y0 <span class="pl-k">-</span> fb) / fm,</td>
      </tr>
      <tr>
        <td id="L5167" class="blob-num js-line-number" data-line-number="5167"></td>
        <td id="LC5167" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> y0</td>
      </tr>
      <tr>
        <td id="L5168" class="blob-num js-line-number" data-line-number="5168"></td>
        <td id="LC5168" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L5169" class="blob-num js-line-number" data-line-number="5169"></td>
        <td id="LC5169" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5170" class="blob-num js-line-number" data-line-number="5170"></td>
        <td id="LC5170" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5171" class="blob-num js-line-number" data-line-number="5171"></td>
        <td id="LC5171" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ly <span class="pl-k">&lt;</span> ry) {</td>
      </tr>
      <tr>
        <td id="L5172" class="blob-num js-line-number" data-line-number="5172"></td>
        <td id="LC5172" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>va) va <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5173" class="blob-num js-line-number" data-line-number="5173"></td>
        <td id="LC5173" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> x0,</td>
      </tr>
      <tr>
        <td id="L5174" class="blob-num js-line-number" data-line-number="5174"></td>
        <td id="LC5174" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> fm <span class="pl-k">*</span> x0 <span class="pl-k">+</span> fb</td>
      </tr>
      <tr>
        <td id="L5175" class="blob-num js-line-number" data-line-number="5175"></td>
        <td id="LC5175" class="blob-code blob-code-inner js-file-line">          }; <span class="pl-k">else</span> <span class="pl-k">if</span> (va.<span class="pl-c1">x</span> <span class="pl-k">&gt;=</span> x1) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5176" class="blob-num js-line-number" data-line-number="5176"></td>
        <td id="LC5176" class="blob-code blob-code-inner js-file-line">          vb <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5177" class="blob-num js-line-number" data-line-number="5177"></td>
        <td id="LC5177" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> x1,</td>
      </tr>
      <tr>
        <td id="L5178" class="blob-num js-line-number" data-line-number="5178"></td>
        <td id="LC5178" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> fm <span class="pl-k">*</span> x1 <span class="pl-k">+</span> fb</td>
      </tr>
      <tr>
        <td id="L5179" class="blob-num js-line-number" data-line-number="5179"></td>
        <td id="LC5179" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L5180" class="blob-num js-line-number" data-line-number="5180"></td>
        <td id="LC5180" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5181" class="blob-num js-line-number" data-line-number="5181"></td>
        <td id="LC5181" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>va) va <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5182" class="blob-num js-line-number" data-line-number="5182"></td>
        <td id="LC5182" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> x1,</td>
      </tr>
      <tr>
        <td id="L5183" class="blob-num js-line-number" data-line-number="5183"></td>
        <td id="LC5183" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> fm <span class="pl-k">*</span> x1 <span class="pl-k">+</span> fb</td>
      </tr>
      <tr>
        <td id="L5184" class="blob-num js-line-number" data-line-number="5184"></td>
        <td id="LC5184" class="blob-code blob-code-inner js-file-line">          }; <span class="pl-k">else</span> <span class="pl-k">if</span> (va.<span class="pl-c1">x</span> <span class="pl-k">&lt;</span> x0) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5185" class="blob-num js-line-number" data-line-number="5185"></td>
        <td id="LC5185" class="blob-code blob-code-inner js-file-line">          vb <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5186" class="blob-num js-line-number" data-line-number="5186"></td>
        <td id="LC5186" class="blob-code blob-code-inner js-file-line">            x<span class="pl-k">:</span> x0,</td>
      </tr>
      <tr>
        <td id="L5187" class="blob-num js-line-number" data-line-number="5187"></td>
        <td id="LC5187" class="blob-code blob-code-inner js-file-line">            y<span class="pl-k">:</span> fm <span class="pl-k">*</span> x0 <span class="pl-k">+</span> fb</td>
      </tr>
      <tr>
        <td id="L5188" class="blob-num js-line-number" data-line-number="5188"></td>
        <td id="LC5188" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L5189" class="blob-num js-line-number" data-line-number="5189"></td>
        <td id="LC5189" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5190" class="blob-num js-line-number" data-line-number="5190"></td>
        <td id="LC5190" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5191" class="blob-num js-line-number" data-line-number="5191"></td>
        <td id="LC5191" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5192" class="blob-num js-line-number" data-line-number="5192"></td>
        <td id="LC5192" class="blob-code blob-code-inner js-file-line">    edge.a <span class="pl-k">=</span> va;</td>
      </tr>
      <tr>
        <td id="L5193" class="blob-num js-line-number" data-line-number="5193"></td>
        <td id="LC5193" class="blob-code blob-code-inner js-file-line">    edge.b <span class="pl-k">=</span> vb;</td>
      </tr>
      <tr>
        <td id="L5194" class="blob-num js-line-number" data-line-number="5194"></td>
        <td id="LC5194" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5195" class="blob-num js-line-number" data-line-number="5195"></td>
        <td id="LC5195" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5196" class="blob-num js-line-number" data-line-number="5196"></td>
        <td id="LC5196" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiEdge</span>(<span class="pl-smi">lSite</span>, <span class="pl-smi">rSite</span>) {</td>
      </tr>
      <tr>
        <td id="L5197" class="blob-num js-line-number" data-line-number="5197"></td>
        <td id="LC5197" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.l <span class="pl-k">=</span> lSite;</td>
      </tr>
      <tr>
        <td id="L5198" class="blob-num js-line-number" data-line-number="5198"></td>
        <td id="LC5198" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.r <span class="pl-k">=</span> rSite;</td>
      </tr>
      <tr>
        <td id="L5199" class="blob-num js-line-number" data-line-number="5199"></td>
        <td id="LC5199" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.a <span class="pl-k">=</span> <span class="pl-v">this</span>.b <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5200" class="blob-num js-line-number" data-line-number="5200"></td>
        <td id="LC5200" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5201" class="blob-num js-line-number" data-line-number="5201"></td>
        <td id="LC5201" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiCreateEdge</span>(<span class="pl-smi">lSite</span>, <span class="pl-smi">rSite</span>, <span class="pl-smi">va</span>, <span class="pl-smi">vb</span>) {</td>
      </tr>
      <tr>
        <td id="L5202" class="blob-num js-line-number" data-line-number="5202"></td>
        <td id="LC5202" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> edge <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiEdge</span>(lSite, rSite);</td>
      </tr>
      <tr>
        <td id="L5203" class="blob-num js-line-number" data-line-number="5203"></td>
        <td id="LC5203" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiEdges.<span class="pl-c1">push</span>(edge);</td>
      </tr>
      <tr>
        <td id="L5204" class="blob-num js-line-number" data-line-number="5204"></td>
        <td id="LC5204" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);</td>
      </tr>
      <tr>
        <td id="L5205" class="blob-num js-line-number" data-line-number="5205"></td>
        <td id="LC5205" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);</td>
      </tr>
      <tr>
        <td id="L5206" class="blob-num js-line-number" data-line-number="5206"></td>
        <td id="LC5206" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiCells[lSite.i].edges.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiHalfEdge</span>(edge, lSite, rSite));</td>
      </tr>
      <tr>
        <td id="L5207" class="blob-num js-line-number" data-line-number="5207"></td>
        <td id="LC5207" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiCells[rSite.i].edges.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiHalfEdge</span>(edge, rSite, lSite));</td>
      </tr>
      <tr>
        <td id="L5208" class="blob-num js-line-number" data-line-number="5208"></td>
        <td id="LC5208" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> edge;</td>
      </tr>
      <tr>
        <td id="L5209" class="blob-num js-line-number" data-line-number="5209"></td>
        <td id="LC5209" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5210" class="blob-num js-line-number" data-line-number="5210"></td>
        <td id="LC5210" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiCreateBorderEdge</span>(<span class="pl-smi">lSite</span>, <span class="pl-smi">va</span>, <span class="pl-smi">vb</span>) {</td>
      </tr>
      <tr>
        <td id="L5211" class="blob-num js-line-number" data-line-number="5211"></td>
        <td id="LC5211" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> edge <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiEdge</span>(lSite, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L5212" class="blob-num js-line-number" data-line-number="5212"></td>
        <td id="LC5212" class="blob-code blob-code-inner js-file-line">    edge.a <span class="pl-k">=</span> va;</td>
      </tr>
      <tr>
        <td id="L5213" class="blob-num js-line-number" data-line-number="5213"></td>
        <td id="LC5213" class="blob-code blob-code-inner js-file-line">    edge.b <span class="pl-k">=</span> vb;</td>
      </tr>
      <tr>
        <td id="L5214" class="blob-num js-line-number" data-line-number="5214"></td>
        <td id="LC5214" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiEdges.<span class="pl-c1">push</span>(edge);</td>
      </tr>
      <tr>
        <td id="L5215" class="blob-num js-line-number" data-line-number="5215"></td>
        <td id="LC5215" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> edge;</td>
      </tr>
      <tr>
        <td id="L5216" class="blob-num js-line-number" data-line-number="5216"></td>
        <td id="LC5216" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5217" class="blob-num js-line-number" data-line-number="5217"></td>
        <td id="LC5217" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiSetEdgeEnd</span>(<span class="pl-smi">edge</span>, <span class="pl-smi">lSite</span>, <span class="pl-smi">rSite</span>, <span class="pl-smi">vertex</span>) {</td>
      </tr>
      <tr>
        <td id="L5218" class="blob-num js-line-number" data-line-number="5218"></td>
        <td id="LC5218" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>edge.a <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>edge.b) {</td>
      </tr>
      <tr>
        <td id="L5219" class="blob-num js-line-number" data-line-number="5219"></td>
        <td id="LC5219" class="blob-code blob-code-inner js-file-line">      edge.a <span class="pl-k">=</span> vertex;</td>
      </tr>
      <tr>
        <td id="L5220" class="blob-num js-line-number" data-line-number="5220"></td>
        <td id="LC5220" class="blob-code blob-code-inner js-file-line">      edge.l <span class="pl-k">=</span> lSite;</td>
      </tr>
      <tr>
        <td id="L5221" class="blob-num js-line-number" data-line-number="5221"></td>
        <td id="LC5221" class="blob-code blob-code-inner js-file-line">      edge.r <span class="pl-k">=</span> rSite;</td>
      </tr>
      <tr>
        <td id="L5222" class="blob-num js-line-number" data-line-number="5222"></td>
        <td id="LC5222" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (edge.l <span class="pl-k">===</span> rSite) {</td>
      </tr>
      <tr>
        <td id="L5223" class="blob-num js-line-number" data-line-number="5223"></td>
        <td id="LC5223" class="blob-code blob-code-inner js-file-line">      edge.b <span class="pl-k">=</span> vertex;</td>
      </tr>
      <tr>
        <td id="L5224" class="blob-num js-line-number" data-line-number="5224"></td>
        <td id="LC5224" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5225" class="blob-num js-line-number" data-line-number="5225"></td>
        <td id="LC5225" class="blob-code blob-code-inner js-file-line">      edge.a <span class="pl-k">=</span> vertex;</td>
      </tr>
      <tr>
        <td id="L5226" class="blob-num js-line-number" data-line-number="5226"></td>
        <td id="LC5226" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5227" class="blob-num js-line-number" data-line-number="5227"></td>
        <td id="LC5227" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5228" class="blob-num js-line-number" data-line-number="5228"></td>
        <td id="LC5228" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiHalfEdge</span>(<span class="pl-smi">edge</span>, <span class="pl-smi">lSite</span>, <span class="pl-smi">rSite</span>) {</td>
      </tr>
      <tr>
        <td id="L5229" class="blob-num js-line-number" data-line-number="5229"></td>
        <td id="LC5229" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> va <span class="pl-k">=</span> edge.a, vb <span class="pl-k">=</span> edge.b;</td>
      </tr>
      <tr>
        <td id="L5230" class="blob-num js-line-number" data-line-number="5230"></td>
        <td id="LC5230" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.edge <span class="pl-k">=</span> edge;</td>
      </tr>
      <tr>
        <td id="L5231" class="blob-num js-line-number" data-line-number="5231"></td>
        <td id="LC5231" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.site <span class="pl-k">=</span> lSite;</td>
      </tr>
      <tr>
        <td id="L5232" class="blob-num js-line-number" data-line-number="5232"></td>
        <td id="LC5232" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.angle <span class="pl-k">=</span> rSite <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(rSite.<span class="pl-c1">y</span> <span class="pl-k">-</span> lSite.<span class="pl-c1">y</span>, rSite.<span class="pl-c1">x</span> <span class="pl-k">-</span> lSite.<span class="pl-c1">x</span>) <span class="pl-k">:</span> edge.l <span class="pl-k">===</span> lSite <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(vb.<span class="pl-c1">x</span> <span class="pl-k">-</span> va.<span class="pl-c1">x</span>, va.<span class="pl-c1">y</span> <span class="pl-k">-</span> vb.<span class="pl-c1">y</span>) <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(va.<span class="pl-c1">x</span> <span class="pl-k">-</span> vb.<span class="pl-c1">x</span>, vb.<span class="pl-c1">y</span> <span class="pl-k">-</span> va.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L5233" class="blob-num js-line-number" data-line-number="5233"></td>
        <td id="LC5233" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5234" class="blob-num js-line-number" data-line-number="5234"></td>
        <td id="LC5234" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geom_voronoiHalfEdge</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5235" class="blob-num js-line-number" data-line-number="5235"></td>
        <td id="LC5235" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">start</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5236" class="blob-num js-line-number" data-line-number="5236"></td>
        <td id="LC5236" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>.edge.l <span class="pl-k">===</span> <span class="pl-v">this</span>.site <span class="pl-k">?</span> <span class="pl-v">this</span>.edge.a <span class="pl-k">:</span> <span class="pl-v">this</span>.edge.b;</td>
      </tr>
      <tr>
        <td id="L5237" class="blob-num js-line-number" data-line-number="5237"></td>
        <td id="LC5237" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L5238" class="blob-num js-line-number" data-line-number="5238"></td>
        <td id="LC5238" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">end</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5239" class="blob-num js-line-number" data-line-number="5239"></td>
        <td id="LC5239" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>.edge.l <span class="pl-k">===</span> <span class="pl-v">this</span>.site <span class="pl-k">?</span> <span class="pl-v">this</span>.edge.b <span class="pl-k">:</span> <span class="pl-v">this</span>.edge.a;</td>
      </tr>
      <tr>
        <td id="L5240" class="blob-num js-line-number" data-line-number="5240"></td>
        <td id="LC5240" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5241" class="blob-num js-line-number" data-line-number="5241"></td>
        <td id="LC5241" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5242" class="blob-num js-line-number" data-line-number="5242"></td>
        <td id="LC5242" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiRedBlackTree</span>() {</td>
      </tr>
      <tr>
        <td id="L5243" class="blob-num js-line-number" data-line-number="5243"></td>
        <td id="LC5243" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>._ <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5244" class="blob-num js-line-number" data-line-number="5244"></td>
        <td id="LC5244" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5245" class="blob-num js-line-number" data-line-number="5245"></td>
        <td id="LC5245" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiRedBlackNode</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L5246" class="blob-num js-line-number" data-line-number="5246"></td>
        <td id="LC5246" class="blob-code blob-code-inner js-file-line">    node.U <span class="pl-k">=</span> node.C <span class="pl-k">=</span> node.L <span class="pl-k">=</span> node.R <span class="pl-k">=</span> node.P <span class="pl-k">=</span> node.N <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5247" class="blob-num js-line-number" data-line-number="5247"></td>
        <td id="LC5247" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5248" class="blob-num js-line-number" data-line-number="5248"></td>
        <td id="LC5248" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_geom_voronoiRedBlackTree</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5249" class="blob-num js-line-number" data-line-number="5249"></td>
        <td id="LC5249" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">insert</span>: <span class="pl-k">function</span>(<span class="pl-smi">after</span>, <span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L5250" class="blob-num js-line-number" data-line-number="5250"></td>
        <td id="LC5250" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> parent, grandpa, uncle;</td>
      </tr>
      <tr>
        <td id="L5251" class="blob-num js-line-number" data-line-number="5251"></td>
        <td id="LC5251" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (after) {</td>
      </tr>
      <tr>
        <td id="L5252" class="blob-num js-line-number" data-line-number="5252"></td>
        <td id="LC5252" class="blob-code blob-code-inner js-file-line">        node.P <span class="pl-k">=</span> after;</td>
      </tr>
      <tr>
        <td id="L5253" class="blob-num js-line-number" data-line-number="5253"></td>
        <td id="LC5253" class="blob-code blob-code-inner js-file-line">        node.N <span class="pl-k">=</span> after.N;</td>
      </tr>
      <tr>
        <td id="L5254" class="blob-num js-line-number" data-line-number="5254"></td>
        <td id="LC5254" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (after.N) after.N.P <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5255" class="blob-num js-line-number" data-line-number="5255"></td>
        <td id="LC5255" class="blob-code blob-code-inner js-file-line">        after.N <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5256" class="blob-num js-line-number" data-line-number="5256"></td>
        <td id="LC5256" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (after.R) {</td>
      </tr>
      <tr>
        <td id="L5257" class="blob-num js-line-number" data-line-number="5257"></td>
        <td id="LC5257" class="blob-code blob-code-inner js-file-line">          after <span class="pl-k">=</span> after.R;</td>
      </tr>
      <tr>
        <td id="L5258" class="blob-num js-line-number" data-line-number="5258"></td>
        <td id="LC5258" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span> (after.L) after <span class="pl-k">=</span> after.L;</td>
      </tr>
      <tr>
        <td id="L5259" class="blob-num js-line-number" data-line-number="5259"></td>
        <td id="LC5259" class="blob-code blob-code-inner js-file-line">          after.L <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5260" class="blob-num js-line-number" data-line-number="5260"></td>
        <td id="LC5260" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5261" class="blob-num js-line-number" data-line-number="5261"></td>
        <td id="LC5261" class="blob-code blob-code-inner js-file-line">          after.R <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5262" class="blob-num js-line-number" data-line-number="5262"></td>
        <td id="LC5262" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5263" class="blob-num js-line-number" data-line-number="5263"></td>
        <td id="LC5263" class="blob-code blob-code-inner js-file-line">        parent <span class="pl-k">=</span> after;</td>
      </tr>
      <tr>
        <td id="L5264" class="blob-num js-line-number" data-line-number="5264"></td>
        <td id="LC5264" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-v">this</span>._) {</td>
      </tr>
      <tr>
        <td id="L5265" class="blob-num js-line-number" data-line-number="5265"></td>
        <td id="LC5265" class="blob-code blob-code-inner js-file-line">        after <span class="pl-k">=</span> d3_geom_voronoiRedBlackFirst(<span class="pl-v">this</span>._);</td>
      </tr>
      <tr>
        <td id="L5266" class="blob-num js-line-number" data-line-number="5266"></td>
        <td id="LC5266" class="blob-code blob-code-inner js-file-line">        node.P <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5267" class="blob-num js-line-number" data-line-number="5267"></td>
        <td id="LC5267" class="blob-code blob-code-inner js-file-line">        node.N <span class="pl-k">=</span> after;</td>
      </tr>
      <tr>
        <td id="L5268" class="blob-num js-line-number" data-line-number="5268"></td>
        <td id="LC5268" class="blob-code blob-code-inner js-file-line">        after.P <span class="pl-k">=</span> after.L <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5269" class="blob-num js-line-number" data-line-number="5269"></td>
        <td id="LC5269" class="blob-code blob-code-inner js-file-line">        parent <span class="pl-k">=</span> after;</td>
      </tr>
      <tr>
        <td id="L5270" class="blob-num js-line-number" data-line-number="5270"></td>
        <td id="LC5270" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5271" class="blob-num js-line-number" data-line-number="5271"></td>
        <td id="LC5271" class="blob-code blob-code-inner js-file-line">        node.P <span class="pl-k">=</span> node.N <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5272" class="blob-num js-line-number" data-line-number="5272"></td>
        <td id="LC5272" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>._ <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5273" class="blob-num js-line-number" data-line-number="5273"></td>
        <td id="LC5273" class="blob-code blob-code-inner js-file-line">        parent <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5274" class="blob-num js-line-number" data-line-number="5274"></td>
        <td id="LC5274" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5275" class="blob-num js-line-number" data-line-number="5275"></td>
        <td id="LC5275" class="blob-code blob-code-inner js-file-line">      node.L <span class="pl-k">=</span> node.R <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5276" class="blob-num js-line-number" data-line-number="5276"></td>
        <td id="LC5276" class="blob-code blob-code-inner js-file-line">      node.U <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L5277" class="blob-num js-line-number" data-line-number="5277"></td>
        <td id="LC5277" class="blob-code blob-code-inner js-file-line">      node.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5278" class="blob-num js-line-number" data-line-number="5278"></td>
        <td id="LC5278" class="blob-code blob-code-inner js-file-line">      after <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5279" class="blob-num js-line-number" data-line-number="5279"></td>
        <td id="LC5279" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (parent <span class="pl-k">&amp;&amp;</span> parent.C) {</td>
      </tr>
      <tr>
        <td id="L5280" class="blob-num js-line-number" data-line-number="5280"></td>
        <td id="LC5280" class="blob-code blob-code-inner js-file-line">        grandpa <span class="pl-k">=</span> parent.U;</td>
      </tr>
      <tr>
        <td id="L5281" class="blob-num js-line-number" data-line-number="5281"></td>
        <td id="LC5281" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (parent <span class="pl-k">===</span> grandpa.L) {</td>
      </tr>
      <tr>
        <td id="L5282" class="blob-num js-line-number" data-line-number="5282"></td>
        <td id="LC5282" class="blob-code blob-code-inner js-file-line">          uncle <span class="pl-k">=</span> grandpa.R;</td>
      </tr>
      <tr>
        <td id="L5283" class="blob-num js-line-number" data-line-number="5283"></td>
        <td id="LC5283" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (uncle <span class="pl-k">&amp;&amp;</span> uncle.C) {</td>
      </tr>
      <tr>
        <td id="L5284" class="blob-num js-line-number" data-line-number="5284"></td>
        <td id="LC5284" class="blob-code blob-code-inner js-file-line">            parent.C <span class="pl-k">=</span> uncle.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5285" class="blob-num js-line-number" data-line-number="5285"></td>
        <td id="LC5285" class="blob-code blob-code-inner js-file-line">            grandpa.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5286" class="blob-num js-line-number" data-line-number="5286"></td>
        <td id="LC5286" class="blob-code blob-code-inner js-file-line">            after <span class="pl-k">=</span> grandpa;</td>
      </tr>
      <tr>
        <td id="L5287" class="blob-num js-line-number" data-line-number="5287"></td>
        <td id="LC5287" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5288" class="blob-num js-line-number" data-line-number="5288"></td>
        <td id="LC5288" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (after <span class="pl-k">===</span> parent.R) {</td>
      </tr>
      <tr>
        <td id="L5289" class="blob-num js-line-number" data-line-number="5289"></td>
        <td id="LC5289" class="blob-code blob-code-inner js-file-line">              d3_geom_voronoiRedBlackRotateLeft(<span class="pl-v">this</span>, parent);</td>
      </tr>
      <tr>
        <td id="L5290" class="blob-num js-line-number" data-line-number="5290"></td>
        <td id="LC5290" class="blob-code blob-code-inner js-file-line">              after <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L5291" class="blob-num js-line-number" data-line-number="5291"></td>
        <td id="LC5291" class="blob-code blob-code-inner js-file-line">              parent <span class="pl-k">=</span> after.U;</td>
      </tr>
      <tr>
        <td id="L5292" class="blob-num js-line-number" data-line-number="5292"></td>
        <td id="LC5292" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5293" class="blob-num js-line-number" data-line-number="5293"></td>
        <td id="LC5293" class="blob-code blob-code-inner js-file-line">            parent.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5294" class="blob-num js-line-number" data-line-number="5294"></td>
        <td id="LC5294" class="blob-code blob-code-inner js-file-line">            grandpa.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5295" class="blob-num js-line-number" data-line-number="5295"></td>
        <td id="LC5295" class="blob-code blob-code-inner js-file-line">            d3_geom_voronoiRedBlackRotateRight(<span class="pl-v">this</span>, grandpa);</td>
      </tr>
      <tr>
        <td id="L5296" class="blob-num js-line-number" data-line-number="5296"></td>
        <td id="LC5296" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5297" class="blob-num js-line-number" data-line-number="5297"></td>
        <td id="LC5297" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5298" class="blob-num js-line-number" data-line-number="5298"></td>
        <td id="LC5298" class="blob-code blob-code-inner js-file-line">          uncle <span class="pl-k">=</span> grandpa.L;</td>
      </tr>
      <tr>
        <td id="L5299" class="blob-num js-line-number" data-line-number="5299"></td>
        <td id="LC5299" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (uncle <span class="pl-k">&amp;&amp;</span> uncle.C) {</td>
      </tr>
      <tr>
        <td id="L5300" class="blob-num js-line-number" data-line-number="5300"></td>
        <td id="LC5300" class="blob-code blob-code-inner js-file-line">            parent.C <span class="pl-k">=</span> uncle.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5301" class="blob-num js-line-number" data-line-number="5301"></td>
        <td id="LC5301" class="blob-code blob-code-inner js-file-line">            grandpa.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5302" class="blob-num js-line-number" data-line-number="5302"></td>
        <td id="LC5302" class="blob-code blob-code-inner js-file-line">            after <span class="pl-k">=</span> grandpa;</td>
      </tr>
      <tr>
        <td id="L5303" class="blob-num js-line-number" data-line-number="5303"></td>
        <td id="LC5303" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5304" class="blob-num js-line-number" data-line-number="5304"></td>
        <td id="LC5304" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (after <span class="pl-k">===</span> parent.L) {</td>
      </tr>
      <tr>
        <td id="L5305" class="blob-num js-line-number" data-line-number="5305"></td>
        <td id="LC5305" class="blob-code blob-code-inner js-file-line">              d3_geom_voronoiRedBlackRotateRight(<span class="pl-v">this</span>, parent);</td>
      </tr>
      <tr>
        <td id="L5306" class="blob-num js-line-number" data-line-number="5306"></td>
        <td id="LC5306" class="blob-code blob-code-inner js-file-line">              after <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L5307" class="blob-num js-line-number" data-line-number="5307"></td>
        <td id="LC5307" class="blob-code blob-code-inner js-file-line">              parent <span class="pl-k">=</span> after.U;</td>
      </tr>
      <tr>
        <td id="L5308" class="blob-num js-line-number" data-line-number="5308"></td>
        <td id="LC5308" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5309" class="blob-num js-line-number" data-line-number="5309"></td>
        <td id="LC5309" class="blob-code blob-code-inner js-file-line">            parent.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5310" class="blob-num js-line-number" data-line-number="5310"></td>
        <td id="LC5310" class="blob-code blob-code-inner js-file-line">            grandpa.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5311" class="blob-num js-line-number" data-line-number="5311"></td>
        <td id="LC5311" class="blob-code blob-code-inner js-file-line">            d3_geom_voronoiRedBlackRotateLeft(<span class="pl-v">this</span>, grandpa);</td>
      </tr>
      <tr>
        <td id="L5312" class="blob-num js-line-number" data-line-number="5312"></td>
        <td id="LC5312" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5313" class="blob-num js-line-number" data-line-number="5313"></td>
        <td id="LC5313" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5314" class="blob-num js-line-number" data-line-number="5314"></td>
        <td id="LC5314" class="blob-code blob-code-inner js-file-line">        parent <span class="pl-k">=</span> after.U;</td>
      </tr>
      <tr>
        <td id="L5315" class="blob-num js-line-number" data-line-number="5315"></td>
        <td id="LC5315" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5316" class="blob-num js-line-number" data-line-number="5316"></td>
        <td id="LC5316" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>._.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5317" class="blob-num js-line-number" data-line-number="5317"></td>
        <td id="LC5317" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L5318" class="blob-num js-line-number" data-line-number="5318"></td>
        <td id="LC5318" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">remove</span>: <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L5319" class="blob-num js-line-number" data-line-number="5319"></td>
        <td id="LC5319" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (node.N) node.N.P <span class="pl-k">=</span> node.P;</td>
      </tr>
      <tr>
        <td id="L5320" class="blob-num js-line-number" data-line-number="5320"></td>
        <td id="LC5320" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (node.P) node.P.N <span class="pl-k">=</span> node.N;</td>
      </tr>
      <tr>
        <td id="L5321" class="blob-num js-line-number" data-line-number="5321"></td>
        <td id="LC5321" class="blob-code blob-code-inner js-file-line">      node.N <span class="pl-k">=</span> node.P <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5322" class="blob-num js-line-number" data-line-number="5322"></td>
        <td id="LC5322" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> parent <span class="pl-k">=</span> node.U, sibling, left <span class="pl-k">=</span> node.L, right <span class="pl-k">=</span> node.R, next, red;</td>
      </tr>
      <tr>
        <td id="L5323" class="blob-num js-line-number" data-line-number="5323"></td>
        <td id="LC5323" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>left) next <span class="pl-k">=</span> right; <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span>right) next <span class="pl-k">=</span> left; <span class="pl-k">else</span> next <span class="pl-k">=</span> d3_geom_voronoiRedBlackFirst(right);</td>
      </tr>
      <tr>
        <td id="L5324" class="blob-num js-line-number" data-line-number="5324"></td>
        <td id="LC5324" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (parent) {</td>
      </tr>
      <tr>
        <td id="L5325" class="blob-num js-line-number" data-line-number="5325"></td>
        <td id="LC5325" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (parent.L <span class="pl-k">===</span> node) parent.L <span class="pl-k">=</span> next; <span class="pl-k">else</span> parent.R <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L5326" class="blob-num js-line-number" data-line-number="5326"></td>
        <td id="LC5326" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5327" class="blob-num js-line-number" data-line-number="5327"></td>
        <td id="LC5327" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>._ <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L5328" class="blob-num js-line-number" data-line-number="5328"></td>
        <td id="LC5328" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5329" class="blob-num js-line-number" data-line-number="5329"></td>
        <td id="LC5329" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (left <span class="pl-k">&amp;&amp;</span> right) {</td>
      </tr>
      <tr>
        <td id="L5330" class="blob-num js-line-number" data-line-number="5330"></td>
        <td id="LC5330" class="blob-code blob-code-inner js-file-line">        red <span class="pl-k">=</span> next.C;</td>
      </tr>
      <tr>
        <td id="L5331" class="blob-num js-line-number" data-line-number="5331"></td>
        <td id="LC5331" class="blob-code blob-code-inner js-file-line">        next.C <span class="pl-k">=</span> node.C;</td>
      </tr>
      <tr>
        <td id="L5332" class="blob-num js-line-number" data-line-number="5332"></td>
        <td id="LC5332" class="blob-code blob-code-inner js-file-line">        next.L <span class="pl-k">=</span> left;</td>
      </tr>
      <tr>
        <td id="L5333" class="blob-num js-line-number" data-line-number="5333"></td>
        <td id="LC5333" class="blob-code blob-code-inner js-file-line">        left.U <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L5334" class="blob-num js-line-number" data-line-number="5334"></td>
        <td id="LC5334" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (next <span class="pl-k">!==</span> right) {</td>
      </tr>
      <tr>
        <td id="L5335" class="blob-num js-line-number" data-line-number="5335"></td>
        <td id="LC5335" class="blob-code blob-code-inner js-file-line">          parent <span class="pl-k">=</span> next.U;</td>
      </tr>
      <tr>
        <td id="L5336" class="blob-num js-line-number" data-line-number="5336"></td>
        <td id="LC5336" class="blob-code blob-code-inner js-file-line">          next.U <span class="pl-k">=</span> node.U;</td>
      </tr>
      <tr>
        <td id="L5337" class="blob-num js-line-number" data-line-number="5337"></td>
        <td id="LC5337" class="blob-code blob-code-inner js-file-line">          node <span class="pl-k">=</span> next.R;</td>
      </tr>
      <tr>
        <td id="L5338" class="blob-num js-line-number" data-line-number="5338"></td>
        <td id="LC5338" class="blob-code blob-code-inner js-file-line">          parent.L <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L5339" class="blob-num js-line-number" data-line-number="5339"></td>
        <td id="LC5339" class="blob-code blob-code-inner js-file-line">          next.R <span class="pl-k">=</span> right;</td>
      </tr>
      <tr>
        <td id="L5340" class="blob-num js-line-number" data-line-number="5340"></td>
        <td id="LC5340" class="blob-code blob-code-inner js-file-line">          right.U <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L5341" class="blob-num js-line-number" data-line-number="5341"></td>
        <td id="LC5341" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5342" class="blob-num js-line-number" data-line-number="5342"></td>
        <td id="LC5342" class="blob-code blob-code-inner js-file-line">          next.U <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L5343" class="blob-num js-line-number" data-line-number="5343"></td>
        <td id="LC5343" class="blob-code blob-code-inner js-file-line">          parent <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L5344" class="blob-num js-line-number" data-line-number="5344"></td>
        <td id="LC5344" class="blob-code blob-code-inner js-file-line">          node <span class="pl-k">=</span> next.R;</td>
      </tr>
      <tr>
        <td id="L5345" class="blob-num js-line-number" data-line-number="5345"></td>
        <td id="LC5345" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5346" class="blob-num js-line-number" data-line-number="5346"></td>
        <td id="LC5346" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5347" class="blob-num js-line-number" data-line-number="5347"></td>
        <td id="LC5347" class="blob-code blob-code-inner js-file-line">        red <span class="pl-k">=</span> node.C;</td>
      </tr>
      <tr>
        <td id="L5348" class="blob-num js-line-number" data-line-number="5348"></td>
        <td id="LC5348" class="blob-code blob-code-inner js-file-line">        node <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L5349" class="blob-num js-line-number" data-line-number="5349"></td>
        <td id="LC5349" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5350" class="blob-num js-line-number" data-line-number="5350"></td>
        <td id="LC5350" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (node) node.U <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L5351" class="blob-num js-line-number" data-line-number="5351"></td>
        <td id="LC5351" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (red) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5352" class="blob-num js-line-number" data-line-number="5352"></td>
        <td id="LC5352" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (node <span class="pl-k">&amp;&amp;</span> node.C) {</td>
      </tr>
      <tr>
        <td id="L5353" class="blob-num js-line-number" data-line-number="5353"></td>
        <td id="LC5353" class="blob-code blob-code-inner js-file-line">        node.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5354" class="blob-num js-line-number" data-line-number="5354"></td>
        <td id="LC5354" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5355" class="blob-num js-line-number" data-line-number="5355"></td>
        <td id="LC5355" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5356" class="blob-num js-line-number" data-line-number="5356"></td>
        <td id="LC5356" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L5357" class="blob-num js-line-number" data-line-number="5357"></td>
        <td id="LC5357" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">===</span> <span class="pl-v">this</span>._) <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5358" class="blob-num js-line-number" data-line-number="5358"></td>
        <td id="LC5358" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">===</span> parent.L) {</td>
      </tr>
      <tr>
        <td id="L5359" class="blob-num js-line-number" data-line-number="5359"></td>
        <td id="LC5359" class="blob-code blob-code-inner js-file-line">          sibling <span class="pl-k">=</span> parent.R;</td>
      </tr>
      <tr>
        <td id="L5360" class="blob-num js-line-number" data-line-number="5360"></td>
        <td id="LC5360" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (sibling.C) {</td>
      </tr>
      <tr>
        <td id="L5361" class="blob-num js-line-number" data-line-number="5361"></td>
        <td id="LC5361" class="blob-code blob-code-inner js-file-line">            sibling.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5362" class="blob-num js-line-number" data-line-number="5362"></td>
        <td id="LC5362" class="blob-code blob-code-inner js-file-line">            parent.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5363" class="blob-num js-line-number" data-line-number="5363"></td>
        <td id="LC5363" class="blob-code blob-code-inner js-file-line">            d3_geom_voronoiRedBlackRotateLeft(<span class="pl-v">this</span>, parent);</td>
      </tr>
      <tr>
        <td id="L5364" class="blob-num js-line-number" data-line-number="5364"></td>
        <td id="LC5364" class="blob-code blob-code-inner js-file-line">            sibling <span class="pl-k">=</span> parent.R;</td>
      </tr>
      <tr>
        <td id="L5365" class="blob-num js-line-number" data-line-number="5365"></td>
        <td id="LC5365" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5366" class="blob-num js-line-number" data-line-number="5366"></td>
        <td id="LC5366" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (sibling.L <span class="pl-k">&amp;&amp;</span> sibling.L.C <span class="pl-k">||</span> sibling.R <span class="pl-k">&amp;&amp;</span> sibling.R.C) {</td>
      </tr>
      <tr>
        <td id="L5367" class="blob-num js-line-number" data-line-number="5367"></td>
        <td id="LC5367" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>sibling.R <span class="pl-k">||</span> <span class="pl-k">!</span>sibling.R.C) {</td>
      </tr>
      <tr>
        <td id="L5368" class="blob-num js-line-number" data-line-number="5368"></td>
        <td id="LC5368" class="blob-code blob-code-inner js-file-line">              sibling.L.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5369" class="blob-num js-line-number" data-line-number="5369"></td>
        <td id="LC5369" class="blob-code blob-code-inner js-file-line">              sibling.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5370" class="blob-num js-line-number" data-line-number="5370"></td>
        <td id="LC5370" class="blob-code blob-code-inner js-file-line">              d3_geom_voronoiRedBlackRotateRight(<span class="pl-v">this</span>, sibling);</td>
      </tr>
      <tr>
        <td id="L5371" class="blob-num js-line-number" data-line-number="5371"></td>
        <td id="LC5371" class="blob-code blob-code-inner js-file-line">              sibling <span class="pl-k">=</span> parent.R;</td>
      </tr>
      <tr>
        <td id="L5372" class="blob-num js-line-number" data-line-number="5372"></td>
        <td id="LC5372" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5373" class="blob-num js-line-number" data-line-number="5373"></td>
        <td id="LC5373" class="blob-code blob-code-inner js-file-line">            sibling.C <span class="pl-k">=</span> parent.C;</td>
      </tr>
      <tr>
        <td id="L5374" class="blob-num js-line-number" data-line-number="5374"></td>
        <td id="LC5374" class="blob-code blob-code-inner js-file-line">            parent.C <span class="pl-k">=</span> sibling.R.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5375" class="blob-num js-line-number" data-line-number="5375"></td>
        <td id="LC5375" class="blob-code blob-code-inner js-file-line">            d3_geom_voronoiRedBlackRotateLeft(<span class="pl-v">this</span>, parent);</td>
      </tr>
      <tr>
        <td id="L5376" class="blob-num js-line-number" data-line-number="5376"></td>
        <td id="LC5376" class="blob-code blob-code-inner js-file-line">            node <span class="pl-k">=</span> <span class="pl-v">this</span>._;</td>
      </tr>
      <tr>
        <td id="L5377" class="blob-num js-line-number" data-line-number="5377"></td>
        <td id="LC5377" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5378" class="blob-num js-line-number" data-line-number="5378"></td>
        <td id="LC5378" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5379" class="blob-num js-line-number" data-line-number="5379"></td>
        <td id="LC5379" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5380" class="blob-num js-line-number" data-line-number="5380"></td>
        <td id="LC5380" class="blob-code blob-code-inner js-file-line">          sibling <span class="pl-k">=</span> parent.L;</td>
      </tr>
      <tr>
        <td id="L5381" class="blob-num js-line-number" data-line-number="5381"></td>
        <td id="LC5381" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (sibling.C) {</td>
      </tr>
      <tr>
        <td id="L5382" class="blob-num js-line-number" data-line-number="5382"></td>
        <td id="LC5382" class="blob-code blob-code-inner js-file-line">            sibling.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5383" class="blob-num js-line-number" data-line-number="5383"></td>
        <td id="LC5383" class="blob-code blob-code-inner js-file-line">            parent.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5384" class="blob-num js-line-number" data-line-number="5384"></td>
        <td id="LC5384" class="blob-code blob-code-inner js-file-line">            d3_geom_voronoiRedBlackRotateRight(<span class="pl-v">this</span>, parent);</td>
      </tr>
      <tr>
        <td id="L5385" class="blob-num js-line-number" data-line-number="5385"></td>
        <td id="LC5385" class="blob-code blob-code-inner js-file-line">            sibling <span class="pl-k">=</span> parent.L;</td>
      </tr>
      <tr>
        <td id="L5386" class="blob-num js-line-number" data-line-number="5386"></td>
        <td id="LC5386" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5387" class="blob-num js-line-number" data-line-number="5387"></td>
        <td id="LC5387" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (sibling.L <span class="pl-k">&amp;&amp;</span> sibling.L.C <span class="pl-k">||</span> sibling.R <span class="pl-k">&amp;&amp;</span> sibling.R.C) {</td>
      </tr>
      <tr>
        <td id="L5388" class="blob-num js-line-number" data-line-number="5388"></td>
        <td id="LC5388" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>sibling.L <span class="pl-k">||</span> <span class="pl-k">!</span>sibling.L.C) {</td>
      </tr>
      <tr>
        <td id="L5389" class="blob-num js-line-number" data-line-number="5389"></td>
        <td id="LC5389" class="blob-code blob-code-inner js-file-line">              sibling.R.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5390" class="blob-num js-line-number" data-line-number="5390"></td>
        <td id="LC5390" class="blob-code blob-code-inner js-file-line">              sibling.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5391" class="blob-num js-line-number" data-line-number="5391"></td>
        <td id="LC5391" class="blob-code blob-code-inner js-file-line">              d3_geom_voronoiRedBlackRotateLeft(<span class="pl-v">this</span>, sibling);</td>
      </tr>
      <tr>
        <td id="L5392" class="blob-num js-line-number" data-line-number="5392"></td>
        <td id="LC5392" class="blob-code blob-code-inner js-file-line">              sibling <span class="pl-k">=</span> parent.L;</td>
      </tr>
      <tr>
        <td id="L5393" class="blob-num js-line-number" data-line-number="5393"></td>
        <td id="LC5393" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5394" class="blob-num js-line-number" data-line-number="5394"></td>
        <td id="LC5394" class="blob-code blob-code-inner js-file-line">            sibling.C <span class="pl-k">=</span> parent.C;</td>
      </tr>
      <tr>
        <td id="L5395" class="blob-num js-line-number" data-line-number="5395"></td>
        <td id="LC5395" class="blob-code blob-code-inner js-file-line">            parent.C <span class="pl-k">=</span> sibling.L.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5396" class="blob-num js-line-number" data-line-number="5396"></td>
        <td id="LC5396" class="blob-code blob-code-inner js-file-line">            d3_geom_voronoiRedBlackRotateRight(<span class="pl-v">this</span>, parent);</td>
      </tr>
      <tr>
        <td id="L5397" class="blob-num js-line-number" data-line-number="5397"></td>
        <td id="LC5397" class="blob-code blob-code-inner js-file-line">            node <span class="pl-k">=</span> <span class="pl-v">this</span>._;</td>
      </tr>
      <tr>
        <td id="L5398" class="blob-num js-line-number" data-line-number="5398"></td>
        <td id="LC5398" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5399" class="blob-num js-line-number" data-line-number="5399"></td>
        <td id="LC5399" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5400" class="blob-num js-line-number" data-line-number="5400"></td>
        <td id="LC5400" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5401" class="blob-num js-line-number" data-line-number="5401"></td>
        <td id="LC5401" class="blob-code blob-code-inner js-file-line">        sibling.C <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5402" class="blob-num js-line-number" data-line-number="5402"></td>
        <td id="LC5402" class="blob-code blob-code-inner js-file-line">        node <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L5403" class="blob-num js-line-number" data-line-number="5403"></td>
        <td id="LC5403" class="blob-code blob-code-inner js-file-line">        parent <span class="pl-k">=</span> parent.U;</td>
      </tr>
      <tr>
        <td id="L5404" class="blob-num js-line-number" data-line-number="5404"></td>
        <td id="LC5404" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">while</span> (<span class="pl-k">!</span>node.C);</td>
      </tr>
      <tr>
        <td id="L5405" class="blob-num js-line-number" data-line-number="5405"></td>
        <td id="LC5405" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (node) node.C <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5406" class="blob-num js-line-number" data-line-number="5406"></td>
        <td id="LC5406" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5407" class="blob-num js-line-number" data-line-number="5407"></td>
        <td id="LC5407" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5408" class="blob-num js-line-number" data-line-number="5408"></td>
        <td id="LC5408" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiRedBlackRotateLeft</span>(<span class="pl-smi">tree</span>, <span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L5409" class="blob-num js-line-number" data-line-number="5409"></td>
        <td id="LC5409" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> p <span class="pl-k">=</span> node, q <span class="pl-k">=</span> node.R, parent <span class="pl-k">=</span> p.U;</td>
      </tr>
      <tr>
        <td id="L5410" class="blob-num js-line-number" data-line-number="5410"></td>
        <td id="LC5410" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (parent) {</td>
      </tr>
      <tr>
        <td id="L5411" class="blob-num js-line-number" data-line-number="5411"></td>
        <td id="LC5411" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (parent.L <span class="pl-k">===</span> p) parent.L <span class="pl-k">=</span> q; <span class="pl-k">else</span> parent.R <span class="pl-k">=</span> q;</td>
      </tr>
      <tr>
        <td id="L5412" class="blob-num js-line-number" data-line-number="5412"></td>
        <td id="LC5412" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5413" class="blob-num js-line-number" data-line-number="5413"></td>
        <td id="LC5413" class="blob-code blob-code-inner js-file-line">      tree._ <span class="pl-k">=</span> q;</td>
      </tr>
      <tr>
        <td id="L5414" class="blob-num js-line-number" data-line-number="5414"></td>
        <td id="LC5414" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5415" class="blob-num js-line-number" data-line-number="5415"></td>
        <td id="LC5415" class="blob-code blob-code-inner js-file-line">    q.U <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L5416" class="blob-num js-line-number" data-line-number="5416"></td>
        <td id="LC5416" class="blob-code blob-code-inner js-file-line">    p.U <span class="pl-k">=</span> q;</td>
      </tr>
      <tr>
        <td id="L5417" class="blob-num js-line-number" data-line-number="5417"></td>
        <td id="LC5417" class="blob-code blob-code-inner js-file-line">    p.R <span class="pl-k">=</span> q.L;</td>
      </tr>
      <tr>
        <td id="L5418" class="blob-num js-line-number" data-line-number="5418"></td>
        <td id="LC5418" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (p.R) p.R.U <span class="pl-k">=</span> p;</td>
      </tr>
      <tr>
        <td id="L5419" class="blob-num js-line-number" data-line-number="5419"></td>
        <td id="LC5419" class="blob-code blob-code-inner js-file-line">    q.L <span class="pl-k">=</span> p;</td>
      </tr>
      <tr>
        <td id="L5420" class="blob-num js-line-number" data-line-number="5420"></td>
        <td id="LC5420" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5421" class="blob-num js-line-number" data-line-number="5421"></td>
        <td id="LC5421" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiRedBlackRotateRight</span>(<span class="pl-smi">tree</span>, <span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L5422" class="blob-num js-line-number" data-line-number="5422"></td>
        <td id="LC5422" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> p <span class="pl-k">=</span> node, q <span class="pl-k">=</span> node.L, parent <span class="pl-k">=</span> p.U;</td>
      </tr>
      <tr>
        <td id="L5423" class="blob-num js-line-number" data-line-number="5423"></td>
        <td id="LC5423" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (parent) {</td>
      </tr>
      <tr>
        <td id="L5424" class="blob-num js-line-number" data-line-number="5424"></td>
        <td id="LC5424" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (parent.L <span class="pl-k">===</span> p) parent.L <span class="pl-k">=</span> q; <span class="pl-k">else</span> parent.R <span class="pl-k">=</span> q;</td>
      </tr>
      <tr>
        <td id="L5425" class="blob-num js-line-number" data-line-number="5425"></td>
        <td id="LC5425" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5426" class="blob-num js-line-number" data-line-number="5426"></td>
        <td id="LC5426" class="blob-code blob-code-inner js-file-line">      tree._ <span class="pl-k">=</span> q;</td>
      </tr>
      <tr>
        <td id="L5427" class="blob-num js-line-number" data-line-number="5427"></td>
        <td id="LC5427" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5428" class="blob-num js-line-number" data-line-number="5428"></td>
        <td id="LC5428" class="blob-code blob-code-inner js-file-line">    q.U <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L5429" class="blob-num js-line-number" data-line-number="5429"></td>
        <td id="LC5429" class="blob-code blob-code-inner js-file-line">    p.U <span class="pl-k">=</span> q;</td>
      </tr>
      <tr>
        <td id="L5430" class="blob-num js-line-number" data-line-number="5430"></td>
        <td id="LC5430" class="blob-code blob-code-inner js-file-line">    p.L <span class="pl-k">=</span> q.R;</td>
      </tr>
      <tr>
        <td id="L5431" class="blob-num js-line-number" data-line-number="5431"></td>
        <td id="LC5431" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (p.L) p.L.U <span class="pl-k">=</span> p;</td>
      </tr>
      <tr>
        <td id="L5432" class="blob-num js-line-number" data-line-number="5432"></td>
        <td id="LC5432" class="blob-code blob-code-inner js-file-line">    q.R <span class="pl-k">=</span> p;</td>
      </tr>
      <tr>
        <td id="L5433" class="blob-num js-line-number" data-line-number="5433"></td>
        <td id="LC5433" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5434" class="blob-num js-line-number" data-line-number="5434"></td>
        <td id="LC5434" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiRedBlackFirst</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L5435" class="blob-num js-line-number" data-line-number="5435"></td>
        <td id="LC5435" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (node.L) node <span class="pl-k">=</span> node.L;</td>
      </tr>
      <tr>
        <td id="L5436" class="blob-num js-line-number" data-line-number="5436"></td>
        <td id="LC5436" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> node;</td>
      </tr>
      <tr>
        <td id="L5437" class="blob-num js-line-number" data-line-number="5437"></td>
        <td id="LC5437" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5438" class="blob-num js-line-number" data-line-number="5438"></td>
        <td id="LC5438" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoi</span>(<span class="pl-smi">sites</span>, <span class="pl-smi">bbox</span>) {</td>
      </tr>
      <tr>
        <td id="L5439" class="blob-num js-line-number" data-line-number="5439"></td>
        <td id="LC5439" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> site <span class="pl-k">=</span> sites.<span class="pl-c1">sort</span>(d3_geom_voronoiVertexOrder).<span class="pl-c1">pop</span>(), x0, y0, circle;</td>
      </tr>
      <tr>
        <td id="L5440" class="blob-num js-line-number" data-line-number="5440"></td>
        <td id="LC5440" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiEdges <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5441" class="blob-num js-line-number" data-line-number="5441"></td>
        <td id="LC5441" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiCells <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(sites.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L5442" class="blob-num js-line-number" data-line-number="5442"></td>
        <td id="LC5442" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiBeaches <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiRedBlackTree</span>();</td>
      </tr>
      <tr>
        <td id="L5443" class="blob-num js-line-number" data-line-number="5443"></td>
        <td id="LC5443" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiCircles <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiRedBlackTree</span>();</td>
      </tr>
      <tr>
        <td id="L5444" class="blob-num js-line-number" data-line-number="5444"></td>
        <td id="LC5444" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L5445" class="blob-num js-line-number" data-line-number="5445"></td>
        <td id="LC5445" class="blob-code blob-code-inner js-file-line">      circle <span class="pl-k">=</span> d3_geom_voronoiFirstCircle;</td>
      </tr>
      <tr>
        <td id="L5446" class="blob-num js-line-number" data-line-number="5446"></td>
        <td id="LC5446" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (site <span class="pl-k">&amp;&amp;</span> (<span class="pl-k">!</span>circle <span class="pl-k">||</span> site.<span class="pl-c1">y</span> <span class="pl-k">&lt;</span> circle.<span class="pl-c1">y</span> <span class="pl-k">||</span> site.<span class="pl-c1">y</span> <span class="pl-k">===</span> circle.<span class="pl-c1">y</span> <span class="pl-k">&amp;&amp;</span> site.<span class="pl-c1">x</span> <span class="pl-k">&lt;</span> circle.<span class="pl-c1">x</span>)) {</td>
      </tr>
      <tr>
        <td id="L5447" class="blob-num js-line-number" data-line-number="5447"></td>
        <td id="LC5447" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (site.<span class="pl-c1">x</span> <span class="pl-k">!==</span> x0 <span class="pl-k">||</span> site.<span class="pl-c1">y</span> <span class="pl-k">!==</span> y0) {</td>
      </tr>
      <tr>
        <td id="L5448" class="blob-num js-line-number" data-line-number="5448"></td>
        <td id="LC5448" class="blob-code blob-code-inner js-file-line">          d3_geom_voronoiCells[site.i] <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_geom_voronoiCell</span>(site);</td>
      </tr>
      <tr>
        <td id="L5449" class="blob-num js-line-number" data-line-number="5449"></td>
        <td id="LC5449" class="blob-code blob-code-inner js-file-line">          d3_geom_voronoiAddBeach(site);</td>
      </tr>
      <tr>
        <td id="L5450" class="blob-num js-line-number" data-line-number="5450"></td>
        <td id="LC5450" class="blob-code blob-code-inner js-file-line">          x0 <span class="pl-k">=</span> site.<span class="pl-c1">x</span>, y0 <span class="pl-k">=</span> site.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L5451" class="blob-num js-line-number" data-line-number="5451"></td>
        <td id="LC5451" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5452" class="blob-num js-line-number" data-line-number="5452"></td>
        <td id="LC5452" class="blob-code blob-code-inner js-file-line">        site <span class="pl-k">=</span> sites.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L5453" class="blob-num js-line-number" data-line-number="5453"></td>
        <td id="LC5453" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (circle) {</td>
      </tr>
      <tr>
        <td id="L5454" class="blob-num js-line-number" data-line-number="5454"></td>
        <td id="LC5454" class="blob-code blob-code-inner js-file-line">        d3_geom_voronoiRemoveBeach(circle.arc);</td>
      </tr>
      <tr>
        <td id="L5455" class="blob-num js-line-number" data-line-number="5455"></td>
        <td id="LC5455" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5456" class="blob-num js-line-number" data-line-number="5456"></td>
        <td id="LC5456" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5457" class="blob-num js-line-number" data-line-number="5457"></td>
        <td id="LC5457" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5458" class="blob-num js-line-number" data-line-number="5458"></td>
        <td id="LC5458" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5459" class="blob-num js-line-number" data-line-number="5459"></td>
        <td id="LC5459" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);</td>
      </tr>
      <tr>
        <td id="L5460" class="blob-num js-line-number" data-line-number="5460"></td>
        <td id="LC5460" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> diagram <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5461" class="blob-num js-line-number" data-line-number="5461"></td>
        <td id="LC5461" class="blob-code blob-code-inner js-file-line">      cells<span class="pl-k">:</span> d3_geom_voronoiCells,</td>
      </tr>
      <tr>
        <td id="L5462" class="blob-num js-line-number" data-line-number="5462"></td>
        <td id="LC5462" class="blob-code blob-code-inner js-file-line">      edges<span class="pl-k">:</span> d3_geom_voronoiEdges</td>
      </tr>
      <tr>
        <td id="L5463" class="blob-num js-line-number" data-line-number="5463"></td>
        <td id="LC5463" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5464" class="blob-num js-line-number" data-line-number="5464"></td>
        <td id="LC5464" class="blob-code blob-code-inner js-file-line">    d3_geom_voronoiBeaches <span class="pl-k">=</span> d3_geom_voronoiCircles <span class="pl-k">=</span> d3_geom_voronoiEdges <span class="pl-k">=</span> d3_geom_voronoiCells <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5465" class="blob-num js-line-number" data-line-number="5465"></td>
        <td id="LC5465" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> diagram;</td>
      </tr>
      <tr>
        <td id="L5466" class="blob-num js-line-number" data-line-number="5466"></td>
        <td id="LC5466" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5467" class="blob-num js-line-number" data-line-number="5467"></td>
        <td id="LC5467" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiVertexOrder</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5468" class="blob-num js-line-number" data-line-number="5468"></td>
        <td id="LC5468" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> b.<span class="pl-c1">y</span> <span class="pl-k">-</span> a.<span class="pl-c1">y</span> <span class="pl-k">||</span> b.<span class="pl-c1">x</span> <span class="pl-k">-</span> a.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L5469" class="blob-num js-line-number" data-line-number="5469"></td>
        <td id="LC5469" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5470" class="blob-num js-line-number" data-line-number="5470"></td>
        <td id="LC5470" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geom</span>.<span class="pl-en">voronoi</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L5471" class="blob-num js-line-number" data-line-number="5471"></td>
        <td id="LC5471" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> d3_geom_pointX, y <span class="pl-k">=</span> d3_geom_pointY, fx <span class="pl-k">=</span> x, fy <span class="pl-k">=</span> y, clipExtent <span class="pl-k">=</span> d3_geom_voronoiClipExtent;</td>
      </tr>
      <tr>
        <td id="L5472" class="blob-num js-line-number" data-line-number="5472"></td>
        <td id="LC5472" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (points) <span class="pl-k">return</span> voronoi(points);</td>
      </tr>
      <tr>
        <td id="L5473" class="blob-num js-line-number" data-line-number="5473"></td>
        <td id="LC5473" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">voronoi</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L5474" class="blob-num js-line-number" data-line-number="5474"></td>
        <td id="LC5474" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> polygons <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(data.<span class="pl-c1">length</span>), x0 <span class="pl-k">=</span> clipExtent[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], y0 <span class="pl-k">=</span> clipExtent[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], x1 <span class="pl-k">=</span> clipExtent[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], y1 <span class="pl-k">=</span> clipExtent[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5475" class="blob-num js-line-number" data-line-number="5475"></td>
        <td id="LC5475" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoi(sites(data), clipExtent).<span class="pl-c1">cells</span>.forEach(<span class="pl-k">function</span>(<span class="pl-smi">cell</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L5476" class="blob-num js-line-number" data-line-number="5476"></td>
        <td id="LC5476" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> edges <span class="pl-k">=</span> cell.edges, site <span class="pl-k">=</span> cell.site, polygon <span class="pl-k">=</span> polygons[i] <span class="pl-k">=</span> edges.<span class="pl-c1">length</span> <span class="pl-k">?</span> edges.map(<span class="pl-k">function</span>(<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L5477" class="blob-num js-line-number" data-line-number="5477"></td>
        <td id="LC5477" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> s <span class="pl-k">=</span> e.<span class="pl-c1">start</span>();</td>
      </tr>
      <tr>
        <td id="L5478" class="blob-num js-line-number" data-line-number="5478"></td>
        <td id="LC5478" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> [ s.<span class="pl-c1">x</span>, s.<span class="pl-c1">y</span> ];</td>
      </tr>
      <tr>
        <td id="L5479" class="blob-num js-line-number" data-line-number="5479"></td>
        <td id="LC5479" class="blob-code blob-code-inner js-file-line">        }) <span class="pl-k">:</span> site.<span class="pl-c1">x</span> <span class="pl-k">&gt;=</span> x0 <span class="pl-k">&amp;&amp;</span> site.<span class="pl-c1">x</span> <span class="pl-k">&lt;=</span> x1 <span class="pl-k">&amp;&amp;</span> site.<span class="pl-c1">y</span> <span class="pl-k">&gt;=</span> y0 <span class="pl-k">&amp;&amp;</span> site.<span class="pl-c1">y</span> <span class="pl-k">&lt;=</span> y1 <span class="pl-k">?</span> [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] <span class="pl-k">:</span> [];</td>
      </tr>
      <tr>
        <td id="L5480" class="blob-num js-line-number" data-line-number="5480"></td>
        <td id="LC5480" class="blob-code blob-code-inner js-file-line">        polygon.point <span class="pl-k">=</span> data[i];</td>
      </tr>
      <tr>
        <td id="L5481" class="blob-num js-line-number" data-line-number="5481"></td>
        <td id="LC5481" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5482" class="blob-num js-line-number" data-line-number="5482"></td>
        <td id="LC5482" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> polygons;</td>
      </tr>
      <tr>
        <td id="L5483" class="blob-num js-line-number" data-line-number="5483"></td>
        <td id="LC5483" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5484" class="blob-num js-line-number" data-line-number="5484"></td>
        <td id="LC5484" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">sites</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L5485" class="blob-num js-line-number" data-line-number="5485"></td>
        <td id="LC5485" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> data.map(<span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L5486" class="blob-num js-line-number" data-line-number="5486"></td>
        <td id="LC5486" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L5487" class="blob-num js-line-number" data-line-number="5487"></td>
        <td id="LC5487" class="blob-code blob-code-inner js-file-line">          x<span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(fx(d, i) / Îµ) <span class="pl-k">*</span> Îµ,</td>
      </tr>
      <tr>
        <td id="L5488" class="blob-num js-line-number" data-line-number="5488"></td>
        <td id="LC5488" class="blob-code blob-code-inner js-file-line">          y<span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(fy(d, i) / Îµ) <span class="pl-k">*</span> Îµ,</td>
      </tr>
      <tr>
        <td id="L5489" class="blob-num js-line-number" data-line-number="5489"></td>
        <td id="LC5489" class="blob-code blob-code-inner js-file-line">          i<span class="pl-k">:</span> i</td>
      </tr>
      <tr>
        <td id="L5490" class="blob-num js-line-number" data-line-number="5490"></td>
        <td id="LC5490" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5491" class="blob-num js-line-number" data-line-number="5491"></td>
        <td id="LC5491" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5492" class="blob-num js-line-number" data-line-number="5492"></td>
        <td id="LC5492" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5493" class="blob-num js-line-number" data-line-number="5493"></td>
        <td id="LC5493" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">voronoi</span>.<span class="pl-en">links</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L5494" class="blob-num js-line-number" data-line-number="5494"></td>
        <td id="LC5494" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_geom_voronoi(sites(data)).edges.filter(<span class="pl-k">function</span>(<span class="pl-smi">edge</span>) {</td>
      </tr>
      <tr>
        <td id="L5495" class="blob-num js-line-number" data-line-number="5495"></td>
        <td id="LC5495" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> edge.l <span class="pl-k">&amp;&amp;</span> edge.r;</td>
      </tr>
      <tr>
        <td id="L5496" class="blob-num js-line-number" data-line-number="5496"></td>
        <td id="LC5496" class="blob-code blob-code-inner js-file-line">      }).map(<span class="pl-k">function</span>(<span class="pl-smi">edge</span>) {</td>
      </tr>
      <tr>
        <td id="L5497" class="blob-num js-line-number" data-line-number="5497"></td>
        <td id="LC5497" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L5498" class="blob-num js-line-number" data-line-number="5498"></td>
        <td id="LC5498" class="blob-code blob-code-inner js-file-line">          source<span class="pl-k">:</span> data[edge.l.i],</td>
      </tr>
      <tr>
        <td id="L5499" class="blob-num js-line-number" data-line-number="5499"></td>
        <td id="LC5499" class="blob-code blob-code-inner js-file-line">          target<span class="pl-k">:</span> data[edge.r.i]</td>
      </tr>
      <tr>
        <td id="L5500" class="blob-num js-line-number" data-line-number="5500"></td>
        <td id="LC5500" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5501" class="blob-num js-line-number" data-line-number="5501"></td>
        <td id="LC5501" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5502" class="blob-num js-line-number" data-line-number="5502"></td>
        <td id="LC5502" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5503" class="blob-num js-line-number" data-line-number="5503"></td>
        <td id="LC5503" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">voronoi</span>.<span class="pl-en">triangles</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L5504" class="blob-num js-line-number" data-line-number="5504"></td>
        <td id="LC5504" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> triangles <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5505" class="blob-num js-line-number" data-line-number="5505"></td>
        <td id="LC5505" class="blob-code blob-code-inner js-file-line">      d3_geom_voronoi(sites(data)).<span class="pl-c1">cells</span>.forEach(<span class="pl-k">function</span>(<span class="pl-smi">cell</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L5506" class="blob-num js-line-number" data-line-number="5506"></td>
        <td id="LC5506" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> site <span class="pl-k">=</span> cell.site, edges <span class="pl-k">=</span> cell.edges.<span class="pl-c1">sort</span>(d3_geom_voronoiHalfEdgeOrder), j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> edges.<span class="pl-c1">length</span>, e0, s0, e1 <span class="pl-k">=</span> edges[m <span class="pl-k">-</span> <span class="pl-c1">1</span>].edge, s1 <span class="pl-k">=</span> e1.l <span class="pl-k">===</span> site <span class="pl-k">?</span> e1.r <span class="pl-k">:</span> e1.l;</td>
      </tr>
      <tr>
        <td id="L5507" class="blob-num js-line-number" data-line-number="5507"></td>
        <td id="LC5507" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m) {</td>
      </tr>
      <tr>
        <td id="L5508" class="blob-num js-line-number" data-line-number="5508"></td>
        <td id="LC5508" class="blob-code blob-code-inner js-file-line">          e0 <span class="pl-k">=</span> e1;</td>
      </tr>
      <tr>
        <td id="L5509" class="blob-num js-line-number" data-line-number="5509"></td>
        <td id="LC5509" class="blob-code blob-code-inner js-file-line">          s0 <span class="pl-k">=</span> s1;</td>
      </tr>
      <tr>
        <td id="L5510" class="blob-num js-line-number" data-line-number="5510"></td>
        <td id="LC5510" class="blob-code blob-code-inner js-file-line">          e1 <span class="pl-k">=</span> edges[j].edge;</td>
      </tr>
      <tr>
        <td id="L5511" class="blob-num js-line-number" data-line-number="5511"></td>
        <td id="LC5511" class="blob-code blob-code-inner js-file-line">          s1 <span class="pl-k">=</span> e1.l <span class="pl-k">===</span> site <span class="pl-k">?</span> e1.r <span class="pl-k">:</span> e1.l;</td>
      </tr>
      <tr>
        <td id="L5512" class="blob-num js-line-number" data-line-number="5512"></td>
        <td id="LC5512" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (i <span class="pl-k">&lt;</span> s0.i <span class="pl-k">&amp;&amp;</span> i <span class="pl-k">&lt;</span> s1.i <span class="pl-k">&amp;&amp;</span> d3_geom_voronoiTriangleArea(site, s0, s1) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5513" class="blob-num js-line-number" data-line-number="5513"></td>
        <td id="LC5513" class="blob-code blob-code-inner js-file-line">            triangles.<span class="pl-c1">push</span>([ data[i], data[s0.i], data[s1.i] ]);</td>
      </tr>
      <tr>
        <td id="L5514" class="blob-num js-line-number" data-line-number="5514"></td>
        <td id="LC5514" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5515" class="blob-num js-line-number" data-line-number="5515"></td>
        <td id="LC5515" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5516" class="blob-num js-line-number" data-line-number="5516"></td>
        <td id="LC5516" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5517" class="blob-num js-line-number" data-line-number="5517"></td>
        <td id="LC5517" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> triangles;</td>
      </tr>
      <tr>
        <td id="L5518" class="blob-num js-line-number" data-line-number="5518"></td>
        <td id="LC5518" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5519" class="blob-num js-line-number" data-line-number="5519"></td>
        <td id="LC5519" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">voronoi</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L5520" class="blob-num js-line-number" data-line-number="5520"></td>
        <td id="LC5520" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> (fx <span class="pl-k">=</span> d3_functor(x <span class="pl-k">=</span> _), voronoi) <span class="pl-k">:</span> x;</td>
      </tr>
      <tr>
        <td id="L5521" class="blob-num js-line-number" data-line-number="5521"></td>
        <td id="LC5521" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5522" class="blob-num js-line-number" data-line-number="5522"></td>
        <td id="LC5522" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">voronoi</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L5523" class="blob-num js-line-number" data-line-number="5523"></td>
        <td id="LC5523" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> (fy <span class="pl-k">=</span> d3_functor(y <span class="pl-k">=</span> _), voronoi) <span class="pl-k">:</span> y;</td>
      </tr>
      <tr>
        <td id="L5524" class="blob-num js-line-number" data-line-number="5524"></td>
        <td id="LC5524" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5525" class="blob-num js-line-number" data-line-number="5525"></td>
        <td id="LC5525" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">voronoi</span>.<span class="pl-en">clipExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L5526" class="blob-num js-line-number" data-line-number="5526"></td>
        <td id="LC5526" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> clipExtent <span class="pl-k">===</span> d3_geom_voronoiClipExtent <span class="pl-k">?</span> null <span class="pl-k">:</span> clipExtent;</td>
      </tr>
      <tr>
        <td id="L5527" class="blob-num js-line-number" data-line-number="5527"></td>
        <td id="LC5527" class="blob-code blob-code-inner js-file-line">      clipExtent <span class="pl-k">=</span> _ <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> d3_geom_voronoiClipExtent <span class="pl-k">:</span> _;</td>
      </tr>
      <tr>
        <td id="L5528" class="blob-num js-line-number" data-line-number="5528"></td>
        <td id="LC5528" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> voronoi;</td>
      </tr>
      <tr>
        <td id="L5529" class="blob-num js-line-number" data-line-number="5529"></td>
        <td id="LC5529" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5530" class="blob-num js-line-number" data-line-number="5530"></td>
        <td id="LC5530" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">voronoi</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L5531" class="blob-num js-line-number" data-line-number="5531"></td>
        <td id="LC5531" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> clipExtent <span class="pl-k">===</span> d3_geom_voronoiClipExtent <span class="pl-k">?</span> null <span class="pl-k">:</span> clipExtent <span class="pl-k">&amp;&amp;</span> clipExtent[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5532" class="blob-num js-line-number" data-line-number="5532"></td>
        <td id="LC5532" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> voronoi.clipExtent(_ <span class="pl-k">&amp;&amp;</span> [ [ <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ], _ ]);</td>
      </tr>
      <tr>
        <td id="L5533" class="blob-num js-line-number" data-line-number="5533"></td>
        <td id="LC5533" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5534" class="blob-num js-line-number" data-line-number="5534"></td>
        <td id="LC5534" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> voronoi;</td>
      </tr>
      <tr>
        <td id="L5535" class="blob-num js-line-number" data-line-number="5535"></td>
        <td id="LC5535" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5536" class="blob-num js-line-number" data-line-number="5536"></td>
        <td id="LC5536" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_geom_voronoiClipExtent <span class="pl-k">=</span> [ [ <span class="pl-k">-</span><span class="pl-c1">1e6</span>, <span class="pl-k">-</span><span class="pl-c1">1e6</span> ], [ <span class="pl-c1">1e6</span>, <span class="pl-c1">1e6</span> ] ];</td>
      </tr>
      <tr>
        <td id="L5537" class="blob-num js-line-number" data-line-number="5537"></td>
        <td id="LC5537" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_voronoiTriangleArea</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">c</span>) {</td>
      </tr>
      <tr>
        <td id="L5538" class="blob-num js-line-number" data-line-number="5538"></td>
        <td id="LC5538" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (a.<span class="pl-c1">x</span> <span class="pl-k">-</span> c.<span class="pl-c1">x</span>) <span class="pl-k">*</span> (b.<span class="pl-c1">y</span> <span class="pl-k">-</span> a.<span class="pl-c1">y</span>) <span class="pl-k">-</span> (a.<span class="pl-c1">x</span> <span class="pl-k">-</span> b.<span class="pl-c1">x</span>) <span class="pl-k">*</span> (c.<span class="pl-c1">y</span> <span class="pl-k">-</span> a.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L5539" class="blob-num js-line-number" data-line-number="5539"></td>
        <td id="LC5539" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5540" class="blob-num js-line-number" data-line-number="5540"></td>
        <td id="LC5540" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geom</span>.<span class="pl-en">delaunay</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">vertices</span>) {</td>
      </tr>
      <tr>
        <td id="L5541" class="blob-num js-line-number" data-line-number="5541"></td>
        <td id="LC5541" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.geom.voronoi().triangles(vertices);</td>
      </tr>
      <tr>
        <td id="L5542" class="blob-num js-line-number" data-line-number="5542"></td>
        <td id="LC5542" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5543" class="blob-num js-line-number" data-line-number="5543"></td>
        <td id="LC5543" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.geom</span>.<span class="pl-en">quadtree</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">points</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>, <span class="pl-smi">x2</span>, <span class="pl-smi">y2</span>) {</td>
      </tr>
      <tr>
        <td id="L5544" class="blob-num js-line-number" data-line-number="5544"></td>
        <td id="LC5544" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> d3_geom_pointX, y <span class="pl-k">=</span> d3_geom_pointY, compat;</td>
      </tr>
      <tr>
        <td id="L5545" class="blob-num js-line-number" data-line-number="5545"></td>
        <td id="LC5545" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (compat <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5546" class="blob-num js-line-number" data-line-number="5546"></td>
        <td id="LC5546" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> d3_geom_quadtreeCompatX;</td>
      </tr>
      <tr>
        <td id="L5547" class="blob-num js-line-number" data-line-number="5547"></td>
        <td id="LC5547" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> d3_geom_quadtreeCompatY;</td>
      </tr>
      <tr>
        <td id="L5548" class="blob-num js-line-number" data-line-number="5548"></td>
        <td id="LC5548" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (compat <span class="pl-k">===</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L5549" class="blob-num js-line-number" data-line-number="5549"></td>
        <td id="LC5549" class="blob-code blob-code-inner js-file-line">        y2 <span class="pl-k">=</span> y1;</td>
      </tr>
      <tr>
        <td id="L5550" class="blob-num js-line-number" data-line-number="5550"></td>
        <td id="LC5550" class="blob-code blob-code-inner js-file-line">        x2 <span class="pl-k">=</span> x1;</td>
      </tr>
      <tr>
        <td id="L5551" class="blob-num js-line-number" data-line-number="5551"></td>
        <td id="LC5551" class="blob-code blob-code-inner js-file-line">        y1 <span class="pl-k">=</span> x1 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5552" class="blob-num js-line-number" data-line-number="5552"></td>
        <td id="LC5552" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5553" class="blob-num js-line-number" data-line-number="5553"></td>
        <td id="LC5553" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> quadtree(points);</td>
      </tr>
      <tr>
        <td id="L5554" class="blob-num js-line-number" data-line-number="5554"></td>
        <td id="LC5554" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5555" class="blob-num js-line-number" data-line-number="5555"></td>
        <td id="LC5555" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">quadtree</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L5556" class="blob-num js-line-number" data-line-number="5556"></td>
        <td id="LC5556" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> d, fx <span class="pl-k">=</span> d3_functor(x), fy <span class="pl-k">=</span> d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;</td>
      </tr>
      <tr>
        <td id="L5557" class="blob-num js-line-number" data-line-number="5557"></td>
        <td id="LC5557" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x1 <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L5558" class="blob-num js-line-number" data-line-number="5558"></td>
        <td id="LC5558" class="blob-code blob-code-inner js-file-line">        x1_ <span class="pl-k">=</span> x1, y1_ <span class="pl-k">=</span> y1, x2_ <span class="pl-k">=</span> x2, y2_ <span class="pl-k">=</span> y2;</td>
      </tr>
      <tr>
        <td id="L5559" class="blob-num js-line-number" data-line-number="5559"></td>
        <td id="LC5559" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5560" class="blob-num js-line-number" data-line-number="5560"></td>
        <td id="LC5560" class="blob-code blob-code-inner js-file-line">        x2_ <span class="pl-k">=</span> y2_ <span class="pl-k">=</span> <span class="pl-k">-</span>(x1_ <span class="pl-k">=</span> y1_ <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>);</td>
      </tr>
      <tr>
        <td id="L5561" class="blob-num js-line-number" data-line-number="5561"></td>
        <td id="LC5561" class="blob-code blob-code-inner js-file-line">        xs <span class="pl-k">=</span> [], ys <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5562" class="blob-num js-line-number" data-line-number="5562"></td>
        <td id="LC5562" class="blob-code blob-code-inner js-file-line">        n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L5563" class="blob-num js-line-number" data-line-number="5563"></td>
        <td id="LC5563" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (compat) <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L5564" class="blob-num js-line-number" data-line-number="5564"></td>
        <td id="LC5564" class="blob-code blob-code-inner js-file-line">          d <span class="pl-k">=</span> data[i];</td>
      </tr>
      <tr>
        <td id="L5565" class="blob-num js-line-number" data-line-number="5565"></td>
        <td id="LC5565" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (d.<span class="pl-c1">x</span> <span class="pl-k">&lt;</span> x1_) x1_ <span class="pl-k">=</span> d.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L5566" class="blob-num js-line-number" data-line-number="5566"></td>
        <td id="LC5566" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (d.<span class="pl-c1">y</span> <span class="pl-k">&lt;</span> y1_) y1_ <span class="pl-k">=</span> d.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L5567" class="blob-num js-line-number" data-line-number="5567"></td>
        <td id="LC5567" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (d.<span class="pl-c1">x</span> <span class="pl-k">&gt;</span> x2_) x2_ <span class="pl-k">=</span> d.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L5568" class="blob-num js-line-number" data-line-number="5568"></td>
        <td id="LC5568" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (d.<span class="pl-c1">y</span> <span class="pl-k">&gt;</span> y2_) y2_ <span class="pl-k">=</span> d.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L5569" class="blob-num js-line-number" data-line-number="5569"></td>
        <td id="LC5569" class="blob-code blob-code-inner js-file-line">          xs.<span class="pl-c1">push</span>(d.<span class="pl-c1">x</span>);</td>
      </tr>
      <tr>
        <td id="L5570" class="blob-num js-line-number" data-line-number="5570"></td>
        <td id="LC5570" class="blob-code blob-code-inner js-file-line">          ys.<span class="pl-c1">push</span>(d.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L5571" class="blob-num js-line-number" data-line-number="5571"></td>
        <td id="LC5571" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L5572" class="blob-num js-line-number" data-line-number="5572"></td>
        <td id="LC5572" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> x_ <span class="pl-k">=</span> <span class="pl-k">+</span>fx(d <span class="pl-k">=</span> data[i], i), y_ <span class="pl-k">=</span> <span class="pl-k">+</span>fy(d, i);</td>
      </tr>
      <tr>
        <td id="L5573" class="blob-num js-line-number" data-line-number="5573"></td>
        <td id="LC5573" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (x_ <span class="pl-k">&lt;</span> x1_) x1_ <span class="pl-k">=</span> x_;</td>
      </tr>
      <tr>
        <td id="L5574" class="blob-num js-line-number" data-line-number="5574"></td>
        <td id="LC5574" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (y_ <span class="pl-k">&lt;</span> y1_) y1_ <span class="pl-k">=</span> y_;</td>
      </tr>
      <tr>
        <td id="L5575" class="blob-num js-line-number" data-line-number="5575"></td>
        <td id="LC5575" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (x_ <span class="pl-k">&gt;</span> x2_) x2_ <span class="pl-k">=</span> x_;</td>
      </tr>
      <tr>
        <td id="L5576" class="blob-num js-line-number" data-line-number="5576"></td>
        <td id="LC5576" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (y_ <span class="pl-k">&gt;</span> y2_) y2_ <span class="pl-k">=</span> y_;</td>
      </tr>
      <tr>
        <td id="L5577" class="blob-num js-line-number" data-line-number="5577"></td>
        <td id="LC5577" class="blob-code blob-code-inner js-file-line">          xs.<span class="pl-c1">push</span>(x_);</td>
      </tr>
      <tr>
        <td id="L5578" class="blob-num js-line-number" data-line-number="5578"></td>
        <td id="LC5578" class="blob-code blob-code-inner js-file-line">          ys.<span class="pl-c1">push</span>(y_);</td>
      </tr>
      <tr>
        <td id="L5579" class="blob-num js-line-number" data-line-number="5579"></td>
        <td id="LC5579" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5580" class="blob-num js-line-number" data-line-number="5580"></td>
        <td id="LC5580" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5581" class="blob-num js-line-number" data-line-number="5581"></td>
        <td id="LC5581" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> dx <span class="pl-k">=</span> x2_ <span class="pl-k">-</span> x1_, dy <span class="pl-k">=</span> y2_ <span class="pl-k">-</span> y1_;</td>
      </tr>
      <tr>
        <td id="L5582" class="blob-num js-line-number" data-line-number="5582"></td>
        <td id="LC5582" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dx <span class="pl-k">&gt;</span> dy) y2_ <span class="pl-k">=</span> y1_ <span class="pl-k">+</span> dx; <span class="pl-k">else</span> x2_ <span class="pl-k">=</span> x1_ <span class="pl-k">+</span> dy;</td>
      </tr>
      <tr>
        <td id="L5583" class="blob-num js-line-number" data-line-number="5583"></td>
        <td id="LC5583" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">insert</span>(<span class="pl-smi">n</span>, <span class="pl-smi">d</span>, <span class="pl-smi">x</span>, <span class="pl-smi">y</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>, <span class="pl-smi">x2</span>, <span class="pl-smi">y2</span>) {</td>
      </tr>
      <tr>
        <td id="L5584" class="blob-num js-line-number" data-line-number="5584"></td>
        <td id="LC5584" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(x) <span class="pl-k">||</span> <span class="pl-c1">isNaN</span>(y)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5585" class="blob-num js-line-number" data-line-number="5585"></td>
        <td id="LC5585" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (n.leaf) {</td>
      </tr>
      <tr>
        <td id="L5586" class="blob-num js-line-number" data-line-number="5586"></td>
        <td id="LC5586" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> nx <span class="pl-k">=</span> n.<span class="pl-c1">x</span>, ny <span class="pl-k">=</span> n.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L5587" class="blob-num js-line-number" data-line-number="5587"></td>
        <td id="LC5587" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (nx <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L5588" class="blob-num js-line-number" data-line-number="5588"></td>
        <td id="LC5588" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(nx <span class="pl-k">-</span> x) <span class="pl-k">+</span> <span class="pl-c1">abs</span>(ny <span class="pl-k">-</span> y) <span class="pl-k">&lt;</span> .<span class="pl-c1">01</span>) {</td>
      </tr>
      <tr>
        <td id="L5589" class="blob-num js-line-number" data-line-number="5589"></td>
        <td id="LC5589" class="blob-code blob-code-inner js-file-line">              insertChild(n, d, x, y, x1, y1, x2, y2);</td>
      </tr>
      <tr>
        <td id="L5590" class="blob-num js-line-number" data-line-number="5590"></td>
        <td id="LC5590" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5591" class="blob-num js-line-number" data-line-number="5591"></td>
        <td id="LC5591" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> nPoint <span class="pl-k">=</span> n.point;</td>
      </tr>
      <tr>
        <td id="L5592" class="blob-num js-line-number" data-line-number="5592"></td>
        <td id="LC5592" class="blob-code blob-code-inner js-file-line">              n.<span class="pl-c1">x</span> <span class="pl-k">=</span> n.<span class="pl-c1">y</span> <span class="pl-k">=</span> n.point <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5593" class="blob-num js-line-number" data-line-number="5593"></td>
        <td id="LC5593" class="blob-code blob-code-inner js-file-line">              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);</td>
      </tr>
      <tr>
        <td id="L5594" class="blob-num js-line-number" data-line-number="5594"></td>
        <td id="LC5594" class="blob-code blob-code-inner js-file-line">              insertChild(n, d, x, y, x1, y1, x2, y2);</td>
      </tr>
      <tr>
        <td id="L5595" class="blob-num js-line-number" data-line-number="5595"></td>
        <td id="LC5595" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5596" class="blob-num js-line-number" data-line-number="5596"></td>
        <td id="LC5596" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5597" class="blob-num js-line-number" data-line-number="5597"></td>
        <td id="LC5597" class="blob-code blob-code-inner js-file-line">            n.<span class="pl-c1">x</span> <span class="pl-k">=</span> x, n.<span class="pl-c1">y</span> <span class="pl-k">=</span> y, n.point <span class="pl-k">=</span> d;</td>
      </tr>
      <tr>
        <td id="L5598" class="blob-num js-line-number" data-line-number="5598"></td>
        <td id="LC5598" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5599" class="blob-num js-line-number" data-line-number="5599"></td>
        <td id="LC5599" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5600" class="blob-num js-line-number" data-line-number="5600"></td>
        <td id="LC5600" class="blob-code blob-code-inner js-file-line">          insertChild(n, d, x, y, x1, y1, x2, y2);</td>
      </tr>
      <tr>
        <td id="L5601" class="blob-num js-line-number" data-line-number="5601"></td>
        <td id="LC5601" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5602" class="blob-num js-line-number" data-line-number="5602"></td>
        <td id="LC5602" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5603" class="blob-num js-line-number" data-line-number="5603"></td>
        <td id="LC5603" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">insertChild</span>(<span class="pl-smi">n</span>, <span class="pl-smi">d</span>, <span class="pl-smi">x</span>, <span class="pl-smi">y</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>, <span class="pl-smi">x2</span>, <span class="pl-smi">y2</span>) {</td>
      </tr>
      <tr>
        <td id="L5604" class="blob-num js-line-number" data-line-number="5604"></td>
        <td id="LC5604" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> xm <span class="pl-k">=</span> (x1 <span class="pl-k">+</span> x2) <span class="pl-k">*</span> .<span class="pl-c1">5</span>, ym <span class="pl-k">=</span> (y1 <span class="pl-k">+</span> y2) <span class="pl-k">*</span> .<span class="pl-c1">5</span>, right <span class="pl-k">=</span> x <span class="pl-k">&gt;=</span> xm, below <span class="pl-k">=</span> y <span class="pl-k">&gt;=</span> ym, i <span class="pl-k">=</span> below <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">1</span> | right;</td>
      </tr>
      <tr>
        <td id="L5605" class="blob-num js-line-number" data-line-number="5605"></td>
        <td id="LC5605" class="blob-code blob-code-inner js-file-line">        n.leaf <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5606" class="blob-num js-line-number" data-line-number="5606"></td>
        <td id="LC5606" class="blob-code blob-code-inner js-file-line">        n <span class="pl-k">=</span> n.nodes[i] <span class="pl-k">||</span> (n.nodes[i] <span class="pl-k">=</span> d3_geom_quadtreeNode());</td>
      </tr>
      <tr>
        <td id="L5607" class="blob-num js-line-number" data-line-number="5607"></td>
        <td id="LC5607" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (right) x1 <span class="pl-k">=</span> xm; <span class="pl-k">else</span> x2 <span class="pl-k">=</span> xm;</td>
      </tr>
      <tr>
        <td id="L5608" class="blob-num js-line-number" data-line-number="5608"></td>
        <td id="LC5608" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (below) y1 <span class="pl-k">=</span> ym; <span class="pl-k">else</span> y2 <span class="pl-k">=</span> ym;</td>
      </tr>
      <tr>
        <td id="L5609" class="blob-num js-line-number" data-line-number="5609"></td>
        <td id="LC5609" class="blob-code blob-code-inner js-file-line">        insert(n, d, x, y, x1, y1, x2, y2);</td>
      </tr>
      <tr>
        <td id="L5610" class="blob-num js-line-number" data-line-number="5610"></td>
        <td id="LC5610" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5611" class="blob-num js-line-number" data-line-number="5611"></td>
        <td id="LC5611" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> root <span class="pl-k">=</span> d3_geom_quadtreeNode();</td>
      </tr>
      <tr>
        <td id="L5612" class="blob-num js-line-number" data-line-number="5612"></td>
        <td id="LC5612" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">root</span>.<span class="pl-en">add</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L5613" class="blob-num js-line-number" data-line-number="5613"></td>
        <td id="LC5613" class="blob-code blob-code-inner js-file-line">        insert(root, d, <span class="pl-k">+</span>fx(d, <span class="pl-k">++</span>i), <span class="pl-k">+</span>fy(d, i), x1_, y1_, x2_, y2_);</td>
      </tr>
      <tr>
        <td id="L5614" class="blob-num js-line-number" data-line-number="5614"></td>
        <td id="LC5614" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L5615" class="blob-num js-line-number" data-line-number="5615"></td>
        <td id="LC5615" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">root</span>.<span class="pl-en">visit</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L5616" class="blob-num js-line-number" data-line-number="5616"></td>
        <td id="LC5616" class="blob-code blob-code-inner js-file-line">        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);</td>
      </tr>
      <tr>
        <td id="L5617" class="blob-num js-line-number" data-line-number="5617"></td>
        <td id="LC5617" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L5618" class="blob-num js-line-number" data-line-number="5618"></td>
        <td id="LC5618" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">root</span>.<span class="pl-en">find</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">point</span>) {</td>
      </tr>
      <tr>
        <td id="L5619" class="blob-num js-line-number" data-line-number="5619"></td>
        <td id="LC5619" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_geom_quadtreeFind(root, point[<span class="pl-c1">0</span>], point[<span class="pl-c1">1</span>], x1_, y1_, x2_, y2_);</td>
      </tr>
      <tr>
        <td id="L5620" class="blob-num js-line-number" data-line-number="5620"></td>
        <td id="LC5620" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L5621" class="blob-num js-line-number" data-line-number="5621"></td>
        <td id="LC5621" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5622" class="blob-num js-line-number" data-line-number="5622"></td>
        <td id="LC5622" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x1 <span class="pl-k">==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L5623" class="blob-num js-line-number" data-line-number="5623"></td>
        <td id="LC5623" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L5624" class="blob-num js-line-number" data-line-number="5624"></td>
        <td id="LC5624" class="blob-code blob-code-inner js-file-line">          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);</td>
      </tr>
      <tr>
        <td id="L5625" class="blob-num js-line-number" data-line-number="5625"></td>
        <td id="LC5625" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5626" class="blob-num js-line-number" data-line-number="5626"></td>
        <td id="LC5626" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">--</span>i;</td>
      </tr>
      <tr>
        <td id="L5627" class="blob-num js-line-number" data-line-number="5627"></td>
        <td id="LC5627" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> data.forEach(root.add);</td>
      </tr>
      <tr>
        <td id="L5628" class="blob-num js-line-number" data-line-number="5628"></td>
        <td id="LC5628" class="blob-code blob-code-inner js-file-line">      xs <span class="pl-k">=</span> ys <span class="pl-k">=</span> data <span class="pl-k">=</span> d <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5629" class="blob-num js-line-number" data-line-number="5629"></td>
        <td id="LC5629" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> root;</td>
      </tr>
      <tr>
        <td id="L5630" class="blob-num js-line-number" data-line-number="5630"></td>
        <td id="LC5630" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5631" class="blob-num js-line-number" data-line-number="5631"></td>
        <td id="LC5631" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">quadtree</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L5632" class="blob-num js-line-number" data-line-number="5632"></td>
        <td id="LC5632" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> (x <span class="pl-k">=</span> _, quadtree) <span class="pl-k">:</span> x;</td>
      </tr>
      <tr>
        <td id="L5633" class="blob-num js-line-number" data-line-number="5633"></td>
        <td id="LC5633" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5634" class="blob-num js-line-number" data-line-number="5634"></td>
        <td id="LC5634" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">quadtree</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L5635" class="blob-num js-line-number" data-line-number="5635"></td>
        <td id="LC5635" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> (y <span class="pl-k">=</span> _, quadtree) <span class="pl-k">:</span> y;</td>
      </tr>
      <tr>
        <td id="L5636" class="blob-num js-line-number" data-line-number="5636"></td>
        <td id="LC5636" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5637" class="blob-num js-line-number" data-line-number="5637"></td>
        <td id="LC5637" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">quadtree</span>.<span class="pl-en">extent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L5638" class="blob-num js-line-number" data-line-number="5638"></td>
        <td id="LC5638" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x1 <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> null <span class="pl-k">:</span> [ [ x1, y1 ], [ x2, y2 ] ];</td>
      </tr>
      <tr>
        <td id="L5639" class="blob-num js-line-number" data-line-number="5639"></td>
        <td id="LC5639" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (_ <span class="pl-k">==</span> <span class="pl-c1">null</span>) x1 <span class="pl-k">=</span> y1 <span class="pl-k">=</span> x2 <span class="pl-k">=</span> y2 <span class="pl-k">=</span> <span class="pl-c1">null</span>; <span class="pl-k">else</span> x1 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], y1 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], x2 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], </td>
      </tr>
      <tr>
        <td id="L5640" class="blob-num js-line-number" data-line-number="5640"></td>
        <td id="LC5640" class="blob-code blob-code-inner js-file-line">      y2 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5641" class="blob-num js-line-number" data-line-number="5641"></td>
        <td id="LC5641" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> quadtree;</td>
      </tr>
      <tr>
        <td id="L5642" class="blob-num js-line-number" data-line-number="5642"></td>
        <td id="LC5642" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5643" class="blob-num js-line-number" data-line-number="5643"></td>
        <td id="LC5643" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">quadtree</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L5644" class="blob-num js-line-number" data-line-number="5644"></td>
        <td id="LC5644" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x1 <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> null <span class="pl-k">:</span> [ x2 <span class="pl-k">-</span> x1, y2 <span class="pl-k">-</span> y1 ];</td>
      </tr>
      <tr>
        <td id="L5645" class="blob-num js-line-number" data-line-number="5645"></td>
        <td id="LC5645" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (_ <span class="pl-k">==</span> <span class="pl-c1">null</span>) x1 <span class="pl-k">=</span> y1 <span class="pl-k">=</span> x2 <span class="pl-k">=</span> y2 <span class="pl-k">=</span> <span class="pl-c1">null</span>; <span class="pl-k">else</span> x1 <span class="pl-k">=</span> y1 <span class="pl-k">=</span> <span class="pl-c1">0</span>, x2 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">0</span>], y2 <span class="pl-k">=</span> <span class="pl-k">+</span>_[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5646" class="blob-num js-line-number" data-line-number="5646"></td>
        <td id="LC5646" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> quadtree;</td>
      </tr>
      <tr>
        <td id="L5647" class="blob-num js-line-number" data-line-number="5647"></td>
        <td id="LC5647" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5648" class="blob-num js-line-number" data-line-number="5648"></td>
        <td id="LC5648" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> quadtree;</td>
      </tr>
      <tr>
        <td id="L5649" class="blob-num js-line-number" data-line-number="5649"></td>
        <td id="LC5649" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5650" class="blob-num js-line-number" data-line-number="5650"></td>
        <td id="LC5650" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_quadtreeCompatX</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L5651" class="blob-num js-line-number" data-line-number="5651"></td>
        <td id="LC5651" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L5652" class="blob-num js-line-number" data-line-number="5652"></td>
        <td id="LC5652" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5653" class="blob-num js-line-number" data-line-number="5653"></td>
        <td id="LC5653" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_quadtreeCompatY</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L5654" class="blob-num js-line-number" data-line-number="5654"></td>
        <td id="LC5654" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L5655" class="blob-num js-line-number" data-line-number="5655"></td>
        <td id="LC5655" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5656" class="blob-num js-line-number" data-line-number="5656"></td>
        <td id="LC5656" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_quadtreeNode</span>() {</td>
      </tr>
      <tr>
        <td id="L5657" class="blob-num js-line-number" data-line-number="5657"></td>
        <td id="LC5657" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L5658" class="blob-num js-line-number" data-line-number="5658"></td>
        <td id="LC5658" class="blob-code blob-code-inner js-file-line">      leaf<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5659" class="blob-num js-line-number" data-line-number="5659"></td>
        <td id="LC5659" class="blob-code blob-code-inner js-file-line">      nodes<span class="pl-k">:</span> [],</td>
      </tr>
      <tr>
        <td id="L5660" class="blob-num js-line-number" data-line-number="5660"></td>
        <td id="LC5660" class="blob-code blob-code-inner js-file-line">      point<span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L5661" class="blob-num js-line-number" data-line-number="5661"></td>
        <td id="LC5661" class="blob-code blob-code-inner js-file-line">      x<span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L5662" class="blob-num js-line-number" data-line-number="5662"></td>
        <td id="LC5662" class="blob-code blob-code-inner js-file-line">      y<span class="pl-k">:</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L5663" class="blob-num js-line-number" data-line-number="5663"></td>
        <td id="LC5663" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5664" class="blob-num js-line-number" data-line-number="5664"></td>
        <td id="LC5664" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5665" class="blob-num js-line-number" data-line-number="5665"></td>
        <td id="LC5665" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_quadtreeVisit</span>(<span class="pl-smi">f</span>, <span class="pl-smi">node</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>, <span class="pl-smi">x2</span>, <span class="pl-smi">y2</span>) {</td>
      </tr>
      <tr>
        <td id="L5666" class="blob-num js-line-number" data-line-number="5666"></td>
        <td id="LC5666" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>f(node, x1, y1, x2, y2)) {</td>
      </tr>
      <tr>
        <td id="L5667" class="blob-num js-line-number" data-line-number="5667"></td>
        <td id="LC5667" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> sx <span class="pl-k">=</span> (x1 <span class="pl-k">+</span> x2) <span class="pl-k">*</span> .<span class="pl-c1">5</span>, sy <span class="pl-k">=</span> (y1 <span class="pl-k">+</span> y2) <span class="pl-k">*</span> .<span class="pl-c1">5</span>, children <span class="pl-k">=</span> node.nodes;</td>
      </tr>
      <tr>
        <td id="L5668" class="blob-num js-line-number" data-line-number="5668"></td>
        <td id="LC5668" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children[<span class="pl-c1">0</span>]) d3_geom_quadtreeVisit(f, children[<span class="pl-c1">0</span>], x1, y1, sx, sy);</td>
      </tr>
      <tr>
        <td id="L5669" class="blob-num js-line-number" data-line-number="5669"></td>
        <td id="LC5669" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children[<span class="pl-c1">1</span>]) d3_geom_quadtreeVisit(f, children[<span class="pl-c1">1</span>], sx, y1, x2, sy);</td>
      </tr>
      <tr>
        <td id="L5670" class="blob-num js-line-number" data-line-number="5670"></td>
        <td id="LC5670" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children[<span class="pl-c1">2</span>]) d3_geom_quadtreeVisit(f, children[<span class="pl-c1">2</span>], x1, sy, sx, y2);</td>
      </tr>
      <tr>
        <td id="L5671" class="blob-num js-line-number" data-line-number="5671"></td>
        <td id="LC5671" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children[<span class="pl-c1">3</span>]) d3_geom_quadtreeVisit(f, children[<span class="pl-c1">3</span>], sx, sy, x2, y2);</td>
      </tr>
      <tr>
        <td id="L5672" class="blob-num js-line-number" data-line-number="5672"></td>
        <td id="LC5672" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5673" class="blob-num js-line-number" data-line-number="5673"></td>
        <td id="LC5673" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5674" class="blob-num js-line-number" data-line-number="5674"></td>
        <td id="LC5674" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_geom_quadtreeFind</span>(<span class="pl-smi">root</span>, <span class="pl-smi">x</span>, <span class="pl-smi">y</span>, <span class="pl-smi">x0</span>, <span class="pl-smi">y0</span>, <span class="pl-smi">x3</span>, <span class="pl-smi">y3</span>) {</td>
      </tr>
      <tr>
        <td id="L5675" class="blob-num js-line-number" data-line-number="5675"></td>
        <td id="LC5675" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> minDistance2 <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>, closestPoint;</td>
      </tr>
      <tr>
        <td id="L5676" class="blob-num js-line-number" data-line-number="5676"></td>
        <td id="LC5676" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span> <span class="pl-en">find</span>(<span class="pl-smi">node</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>, <span class="pl-smi">x2</span>, <span class="pl-smi">y2</span>) {</td>
      </tr>
      <tr>
        <td id="L5677" class="blob-num js-line-number" data-line-number="5677"></td>
        <td id="LC5677" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x1 <span class="pl-k">&gt;</span> x3 <span class="pl-k">||</span> y1 <span class="pl-k">&gt;</span> y3 <span class="pl-k">||</span> x2 <span class="pl-k">&lt;</span> x0 <span class="pl-k">||</span> y2 <span class="pl-k">&lt;</span> y0) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5678" class="blob-num js-line-number" data-line-number="5678"></td>
        <td id="LC5678" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (point <span class="pl-k">=</span> node.point) {</td>
      </tr>
      <tr>
        <td id="L5679" class="blob-num js-line-number" data-line-number="5679"></td>
        <td id="LC5679" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> point, dx <span class="pl-k">=</span> x <span class="pl-k">-</span> node.<span class="pl-c1">x</span>, dy <span class="pl-k">=</span> y <span class="pl-k">-</span> node.<span class="pl-c1">y</span>, distance2 <span class="pl-k">=</span> dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy;</td>
      </tr>
      <tr>
        <td id="L5680" class="blob-num js-line-number" data-line-number="5680"></td>
        <td id="LC5680" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (distance2 <span class="pl-k">&lt;</span> minDistance2) {</td>
      </tr>
      <tr>
        <td id="L5681" class="blob-num js-line-number" data-line-number="5681"></td>
        <td id="LC5681" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> distance <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(minDistance2 <span class="pl-k">=</span> distance2);</td>
      </tr>
      <tr>
        <td id="L5682" class="blob-num js-line-number" data-line-number="5682"></td>
        <td id="LC5682" class="blob-code blob-code-inner js-file-line">          x0 <span class="pl-k">=</span> x <span class="pl-k">-</span> distance, y0 <span class="pl-k">=</span> y <span class="pl-k">-</span> distance;</td>
      </tr>
      <tr>
        <td id="L5683" class="blob-num js-line-number" data-line-number="5683"></td>
        <td id="LC5683" class="blob-code blob-code-inner js-file-line">          x3 <span class="pl-k">=</span> x <span class="pl-k">+</span> distance, y3 <span class="pl-k">=</span> y <span class="pl-k">+</span> distance;</td>
      </tr>
      <tr>
        <td id="L5684" class="blob-num js-line-number" data-line-number="5684"></td>
        <td id="LC5684" class="blob-code blob-code-inner js-file-line">          closestPoint <span class="pl-k">=</span> point;</td>
      </tr>
      <tr>
        <td id="L5685" class="blob-num js-line-number" data-line-number="5685"></td>
        <td id="LC5685" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5686" class="blob-num js-line-number" data-line-number="5686"></td>
        <td id="LC5686" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5687" class="blob-num js-line-number" data-line-number="5687"></td>
        <td id="LC5687" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> children <span class="pl-k">=</span> node.nodes, xm <span class="pl-k">=</span> (x1 <span class="pl-k">+</span> x2) <span class="pl-k">*</span> .<span class="pl-c1">5</span>, ym <span class="pl-k">=</span> (y1 <span class="pl-k">+</span> y2) <span class="pl-k">*</span> .<span class="pl-c1">5</span>, right <span class="pl-k">=</span> x <span class="pl-k">&gt;=</span> xm, below <span class="pl-k">=</span> y <span class="pl-k">&gt;=</span> ym;</td>
      </tr>
      <tr>
        <td id="L5688" class="blob-num js-line-number" data-line-number="5688"></td>
        <td id="LC5688" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> below <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">1</span> | right, j <span class="pl-k">=</span> i <span class="pl-k">+</span> <span class="pl-c1">4</span>; i <span class="pl-k">&lt;</span> j; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L5689" class="blob-num js-line-number" data-line-number="5689"></td>
        <td id="LC5689" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> children[i <span class="pl-k">&amp;</span> <span class="pl-c1">3</span>]) <span class="pl-k">switch</span> (i <span class="pl-k">&amp;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L5690" class="blob-num js-line-number" data-line-number="5690"></td>
        <td id="LC5690" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L5691" class="blob-num js-line-number" data-line-number="5691"></td>
        <td id="LC5691" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">find</span>(node, x1, y1, xm, ym);</td>
      </tr>
      <tr>
        <td id="L5692" class="blob-num js-line-number" data-line-number="5692"></td>
        <td id="LC5692" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5693" class="blob-num js-line-number" data-line-number="5693"></td>
        <td id="LC5693" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5694" class="blob-num js-line-number" data-line-number="5694"></td>
        <td id="LC5694" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L5695" class="blob-num js-line-number" data-line-number="5695"></td>
        <td id="LC5695" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">find</span>(node, xm, y1, x2, ym);</td>
      </tr>
      <tr>
        <td id="L5696" class="blob-num js-line-number" data-line-number="5696"></td>
        <td id="LC5696" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5697" class="blob-num js-line-number" data-line-number="5697"></td>
        <td id="LC5697" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5698" class="blob-num js-line-number" data-line-number="5698"></td>
        <td id="LC5698" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L5699" class="blob-num js-line-number" data-line-number="5699"></td>
        <td id="LC5699" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">find</span>(node, x1, ym, xm, y2);</td>
      </tr>
      <tr>
        <td id="L5700" class="blob-num js-line-number" data-line-number="5700"></td>
        <td id="LC5700" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5701" class="blob-num js-line-number" data-line-number="5701"></td>
        <td id="LC5701" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5702" class="blob-num js-line-number" data-line-number="5702"></td>
        <td id="LC5702" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L5703" class="blob-num js-line-number" data-line-number="5703"></td>
        <td id="LC5703" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">find</span>(node, xm, ym, x2, y2);</td>
      </tr>
      <tr>
        <td id="L5704" class="blob-num js-line-number" data-line-number="5704"></td>
        <td id="LC5704" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5705" class="blob-num js-line-number" data-line-number="5705"></td>
        <td id="LC5705" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5706" class="blob-num js-line-number" data-line-number="5706"></td>
        <td id="LC5706" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5707" class="blob-num js-line-number" data-line-number="5707"></td>
        <td id="LC5707" class="blob-code blob-code-inner js-file-line">    })(root, x0, y0, x3, y3);</td>
      </tr>
      <tr>
        <td id="L5708" class="blob-num js-line-number" data-line-number="5708"></td>
        <td id="LC5708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> closestPoint;</td>
      </tr>
      <tr>
        <td id="L5709" class="blob-num js-line-number" data-line-number="5709"></td>
        <td id="LC5709" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5710" class="blob-num js-line-number" data-line-number="5710"></td>
        <td id="LC5710" class="blob-code blob-code-inner js-file-line">  d3.interpolateRgb <span class="pl-k">=</span> d3_interpolateRgb;</td>
      </tr>
      <tr>
        <td id="L5711" class="blob-num js-line-number" data-line-number="5711"></td>
        <td id="LC5711" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateRgb</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5712" class="blob-num js-line-number" data-line-number="5712"></td>
        <td id="LC5712" class="blob-code blob-code-inner js-file-line">    a <span class="pl-k">=</span> d3.rgb(a);</td>
      </tr>
      <tr>
        <td id="L5713" class="blob-num js-line-number" data-line-number="5713"></td>
        <td id="LC5713" class="blob-code blob-code-inner js-file-line">    b <span class="pl-k">=</span> d3.rgb(b);</td>
      </tr>
      <tr>
        <td id="L5714" class="blob-num js-line-number" data-line-number="5714"></td>
        <td id="LC5714" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ar <span class="pl-k">=</span> a.r, ag <span class="pl-k">=</span> a.g, ab <span class="pl-k">=</span> a.b, br <span class="pl-k">=</span> b.r <span class="pl-k">-</span> ar, bg <span class="pl-k">=</span> b.g <span class="pl-k">-</span> ag, bb <span class="pl-k">=</span> b.b <span class="pl-k">-</span> ab;</td>
      </tr>
      <tr>
        <td id="L5715" class="blob-num js-line-number" data-line-number="5715"></td>
        <td id="LC5715" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5716" class="blob-num js-line-number" data-line-number="5716"></td>
        <td id="LC5716" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(ar <span class="pl-k">+</span> br <span class="pl-k">*</span> t)) <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(ag <span class="pl-k">+</span> bg <span class="pl-k">*</span> t)) <span class="pl-k">+</span> d3_rgb_hex(<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(ab <span class="pl-k">+</span> bb <span class="pl-k">*</span> t));</td>
      </tr>
      <tr>
        <td id="L5717" class="blob-num js-line-number" data-line-number="5717"></td>
        <td id="LC5717" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5718" class="blob-num js-line-number" data-line-number="5718"></td>
        <td id="LC5718" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5719" class="blob-num js-line-number" data-line-number="5719"></td>
        <td id="LC5719" class="blob-code blob-code-inner js-file-line">  d3.interpolateObject <span class="pl-k">=</span> d3_interpolateObject;</td>
      </tr>
      <tr>
        <td id="L5720" class="blob-num js-line-number" data-line-number="5720"></td>
        <td id="LC5720" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateObject</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5721" class="blob-num js-line-number" data-line-number="5721"></td>
        <td id="LC5721" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> {}, c <span class="pl-k">=</span> {}, k;</td>
      </tr>
      <tr>
        <td id="L5722" class="blob-num js-line-number" data-line-number="5722"></td>
        <td id="LC5722" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (k <span class="pl-k">in</span> a) {</td>
      </tr>
      <tr>
        <td id="L5723" class="blob-num js-line-number" data-line-number="5723"></td>
        <td id="LC5723" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (k <span class="pl-k">in</span> b) {</td>
      </tr>
      <tr>
        <td id="L5724" class="blob-num js-line-number" data-line-number="5724"></td>
        <td id="LC5724" class="blob-code blob-code-inner js-file-line">        i[k] <span class="pl-k">=</span> d3_interpolate(a[k], b[k]);</td>
      </tr>
      <tr>
        <td id="L5725" class="blob-num js-line-number" data-line-number="5725"></td>
        <td id="LC5725" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5726" class="blob-num js-line-number" data-line-number="5726"></td>
        <td id="LC5726" class="blob-code blob-code-inner js-file-line">        c[k] <span class="pl-k">=</span> a[k];</td>
      </tr>
      <tr>
        <td id="L5727" class="blob-num js-line-number" data-line-number="5727"></td>
        <td id="LC5727" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5728" class="blob-num js-line-number" data-line-number="5728"></td>
        <td id="LC5728" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5729" class="blob-num js-line-number" data-line-number="5729"></td>
        <td id="LC5729" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (k <span class="pl-k">in</span> b) {</td>
      </tr>
      <tr>
        <td id="L5730" class="blob-num js-line-number" data-line-number="5730"></td>
        <td id="LC5730" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>(k <span class="pl-k">in</span> a)) {</td>
      </tr>
      <tr>
        <td id="L5731" class="blob-num js-line-number" data-line-number="5731"></td>
        <td id="LC5731" class="blob-code blob-code-inner js-file-line">        c[k] <span class="pl-k">=</span> b[k];</td>
      </tr>
      <tr>
        <td id="L5732" class="blob-num js-line-number" data-line-number="5732"></td>
        <td id="LC5732" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5733" class="blob-num js-line-number" data-line-number="5733"></td>
        <td id="LC5733" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5734" class="blob-num js-line-number" data-line-number="5734"></td>
        <td id="LC5734" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5735" class="blob-num js-line-number" data-line-number="5735"></td>
        <td id="LC5735" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (k <span class="pl-k">in</span> i) c[k] <span class="pl-k">=</span> i[k](t);</td>
      </tr>
      <tr>
        <td id="L5736" class="blob-num js-line-number" data-line-number="5736"></td>
        <td id="LC5736" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> c;</td>
      </tr>
      <tr>
        <td id="L5737" class="blob-num js-line-number" data-line-number="5737"></td>
        <td id="LC5737" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5738" class="blob-num js-line-number" data-line-number="5738"></td>
        <td id="LC5738" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5739" class="blob-num js-line-number" data-line-number="5739"></td>
        <td id="LC5739" class="blob-code blob-code-inner js-file-line">  d3.interpolateNumber <span class="pl-k">=</span> d3_interpolateNumber;</td>
      </tr>
      <tr>
        <td id="L5740" class="blob-num js-line-number" data-line-number="5740"></td>
        <td id="LC5740" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateNumber</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5741" class="blob-num js-line-number" data-line-number="5741"></td>
        <td id="LC5741" class="blob-code blob-code-inner js-file-line">    a <span class="pl-k">=</span> <span class="pl-k">+</span>a, b <span class="pl-k">=</span> <span class="pl-k">+</span>b;</td>
      </tr>
      <tr>
        <td id="L5742" class="blob-num js-line-number" data-line-number="5742"></td>
        <td id="LC5742" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5743" class="blob-num js-line-number" data-line-number="5743"></td>
        <td id="LC5743" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> a <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> t) <span class="pl-k">+</span> b <span class="pl-k">*</span> t;</td>
      </tr>
      <tr>
        <td id="L5744" class="blob-num js-line-number" data-line-number="5744"></td>
        <td id="LC5744" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5745" class="blob-num js-line-number" data-line-number="5745"></td>
        <td id="LC5745" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5746" class="blob-num js-line-number" data-line-number="5746"></td>
        <td id="LC5746" class="blob-code blob-code-inner js-file-line">  d3.interpolateString <span class="pl-k">=</span> d3_interpolateString;</td>
      </tr>
      <tr>
        <td id="L5747" class="blob-num js-line-number" data-line-number="5747"></td>
        <td id="LC5747" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateString</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5748" class="blob-num js-line-number" data-line-number="5748"></td>
        <td id="LC5748" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> bi <span class="pl-k">=</span> d3_interpolate_numberA.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> d3_interpolate_numberB.<span class="pl-c1">lastIndex</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>, am, bm, bs, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, s <span class="pl-k">=</span> [], q <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5749" class="blob-num js-line-number" data-line-number="5749"></td>
        <td id="LC5749" class="blob-code blob-code-inner js-file-line">    a <span class="pl-k">=</span> a <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, b <span class="pl-k">=</span> b <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5750" class="blob-num js-line-number" data-line-number="5750"></td>
        <td id="LC5750" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ((am <span class="pl-k">=</span> d3_interpolate_numberA.<span class="pl-c1">exec</span>(a)) <span class="pl-k">&amp;&amp;</span> (bm <span class="pl-k">=</span> d3_interpolate_numberB.<span class="pl-c1">exec</span>(b))) {</td>
      </tr>
      <tr>
        <td id="L5751" class="blob-num js-line-number" data-line-number="5751"></td>
        <td id="LC5751" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((bs <span class="pl-k">=</span> bm.<span class="pl-c1">index</span>) <span class="pl-k">&gt;</span> bi) {</td>
      </tr>
      <tr>
        <td id="L5752" class="blob-num js-line-number" data-line-number="5752"></td>
        <td id="LC5752" class="blob-code blob-code-inner js-file-line">        bs <span class="pl-k">=</span> b.<span class="pl-c1">slice</span>(bi, bs);</td>
      </tr>
      <tr>
        <td id="L5753" class="blob-num js-line-number" data-line-number="5753"></td>
        <td id="LC5753" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (s[i]) s[i] <span class="pl-k">+=</span> bs; <span class="pl-k">else</span> s[<span class="pl-k">++</span>i] <span class="pl-k">=</span> bs;</td>
      </tr>
      <tr>
        <td id="L5754" class="blob-num js-line-number" data-line-number="5754"></td>
        <td id="LC5754" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5755" class="blob-num js-line-number" data-line-number="5755"></td>
        <td id="LC5755" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((am <span class="pl-k">=</span> am[<span class="pl-c1">0</span>]) <span class="pl-k">===</span> (bm <span class="pl-k">=</span> bm[<span class="pl-c1">0</span>])) {</td>
      </tr>
      <tr>
        <td id="L5756" class="blob-num js-line-number" data-line-number="5756"></td>
        <td id="LC5756" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (s[i]) s[i] <span class="pl-k">+=</span> bm; <span class="pl-k">else</span> s[<span class="pl-k">++</span>i] <span class="pl-k">=</span> bm;</td>
      </tr>
      <tr>
        <td id="L5757" class="blob-num js-line-number" data-line-number="5757"></td>
        <td id="LC5757" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5758" class="blob-num js-line-number" data-line-number="5758"></td>
        <td id="LC5758" class="blob-code blob-code-inner js-file-line">        s[<span class="pl-k">++</span>i] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5759" class="blob-num js-line-number" data-line-number="5759"></td>
        <td id="LC5759" class="blob-code blob-code-inner js-file-line">        q.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L5760" class="blob-num js-line-number" data-line-number="5760"></td>
        <td id="LC5760" class="blob-code blob-code-inner js-file-line">          i<span class="pl-k">:</span> i,</td>
      </tr>
      <tr>
        <td id="L5761" class="blob-num js-line-number" data-line-number="5761"></td>
        <td id="LC5761" class="blob-code blob-code-inner js-file-line">          x<span class="pl-k">:</span> d3_interpolateNumber(am, bm)</td>
      </tr>
      <tr>
        <td id="L5762" class="blob-num js-line-number" data-line-number="5762"></td>
        <td id="LC5762" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5763" class="blob-num js-line-number" data-line-number="5763"></td>
        <td id="LC5763" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5764" class="blob-num js-line-number" data-line-number="5764"></td>
        <td id="LC5764" class="blob-code blob-code-inner js-file-line">      bi <span class="pl-k">=</span> d3_interpolate_numberB.<span class="pl-c1">lastIndex</span>;</td>
      </tr>
      <tr>
        <td id="L5765" class="blob-num js-line-number" data-line-number="5765"></td>
        <td id="LC5765" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5766" class="blob-num js-line-number" data-line-number="5766"></td>
        <td id="LC5766" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (bi <span class="pl-k">&lt;</span> b.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5767" class="blob-num js-line-number" data-line-number="5767"></td>
        <td id="LC5767" class="blob-code blob-code-inner js-file-line">      bs <span class="pl-k">=</span> b.<span class="pl-c1">slice</span>(bi);</td>
      </tr>
      <tr>
        <td id="L5768" class="blob-num js-line-number" data-line-number="5768"></td>
        <td id="LC5768" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (s[i]) s[i] <span class="pl-k">+=</span> bs; <span class="pl-k">else</span> s[<span class="pl-k">++</span>i] <span class="pl-k">=</span> bs;</td>
      </tr>
      <tr>
        <td id="L5769" class="blob-num js-line-number" data-line-number="5769"></td>
        <td id="LC5769" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5770" class="blob-num js-line-number" data-line-number="5770"></td>
        <td id="LC5770" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> s.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> q[<span class="pl-c1">0</span>] <span class="pl-k">?</span> (b <span class="pl-k">=</span> q[<span class="pl-c1">0</span>].<span class="pl-c1">x</span>, <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5771" class="blob-num js-line-number" data-line-number="5771"></td>
        <td id="LC5771" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> b(t) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5772" class="blob-num js-line-number" data-line-number="5772"></td>
        <td id="LC5772" class="blob-code blob-code-inner js-file-line">    }) <span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5773" class="blob-num js-line-number" data-line-number="5773"></td>
        <td id="LC5773" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> b;</td>
      </tr>
      <tr>
        <td id="L5774" class="blob-num js-line-number" data-line-number="5774"></td>
        <td id="LC5774" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> (b <span class="pl-k">=</span> q.<span class="pl-c1">length</span>, <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5775" class="blob-num js-line-number" data-line-number="5775"></td>
        <td id="LC5775" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, o; i <span class="pl-k">&lt;</span> b; <span class="pl-k">++</span>i) s[(o <span class="pl-k">=</span> q[i]).i] <span class="pl-k">=</span> o.<span class="pl-c1">x</span>(t);</td>
      </tr>
      <tr>
        <td id="L5776" class="blob-num js-line-number" data-line-number="5776"></td>
        <td id="LC5776" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> s.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5777" class="blob-num js-line-number" data-line-number="5777"></td>
        <td id="LC5777" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L5778" class="blob-num js-line-number" data-line-number="5778"></td>
        <td id="LC5778" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5779" class="blob-num js-line-number" data-line-number="5779"></td>
        <td id="LC5779" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_interpolate_numberA <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[-+]</span><span class="pl-k">?</span>(?:<span class="pl-c1">\d</span><span class="pl-k">+</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">*</span><span class="pl-k">|</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">+</span>)(?:<span class="pl-c1">[eE][-+]</span><span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-k">?</span><span class="pl-pds">/</span>g</span>, d3_interpolate_numberB <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(d3_interpolate_numberA.<span class="pl-c1">source</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5780" class="blob-num js-line-number" data-line-number="5780"></td>
        <td id="LC5780" class="blob-code blob-code-inner js-file-line">  d3.interpolate <span class="pl-k">=</span> d3_interpolate;</td>
      </tr>
      <tr>
        <td id="L5781" class="blob-num js-line-number" data-line-number="5781"></td>
        <td id="LC5781" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolate</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5782" class="blob-num js-line-number" data-line-number="5782"></td>
        <td id="LC5782" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> d3.interpolators.<span class="pl-c1">length</span>, f;</td>
      </tr>
      <tr>
        <td id="L5783" class="blob-num js-line-number" data-line-number="5783"></td>
        <td id="LC5783" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">--</span>i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(f <span class="pl-k">=</span> d3.interpolators[i](a, b))) ;</td>
      </tr>
      <tr>
        <td id="L5784" class="blob-num js-line-number" data-line-number="5784"></td>
        <td id="LC5784" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> f;</td>
      </tr>
      <tr>
        <td id="L5785" class="blob-num js-line-number" data-line-number="5785"></td>
        <td id="LC5785" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5786" class="blob-num js-line-number" data-line-number="5786"></td>
        <td id="LC5786" class="blob-code blob-code-inner js-file-line">  d3.interpolators <span class="pl-k">=</span> [ <span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5787" class="blob-num js-line-number" data-line-number="5787"></td>
        <td id="LC5787" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> t <span class="pl-k">=</span> <span class="pl-k">typeof</span> b;</td>
      </tr>
      <tr>
        <td id="L5788" class="blob-num js-line-number" data-line-number="5788"></td>
        <td id="LC5788" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (t <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> d3_rgb_names.has(b) <span class="pl-k">||</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(#<span class="pl-k">|</span>rgb<span class="pl-cce">\(</span><span class="pl-k">|</span>hsl<span class="pl-cce">\(</span>)<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(b) <span class="pl-k">?</span> d3_interpolateRgb <span class="pl-k">:</span> d3_interpolateString <span class="pl-k">:</span> b <span class="pl-k">instanceof</span> d3_color <span class="pl-k">?</span> d3_interpolateRgb <span class="pl-k">:</span> <span class="pl-c1">Array</span>.isArray(b) <span class="pl-k">?</span> d3_interpolateArray <span class="pl-k">:</span> t <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">isNaN</span>(b) <span class="pl-k">?</span> d3_interpolateObject <span class="pl-k">:</span> d3_interpolateNumber)(a, b);</td>
      </tr>
      <tr>
        <td id="L5789" class="blob-num js-line-number" data-line-number="5789"></td>
        <td id="LC5789" class="blob-code blob-code-inner js-file-line">  } ];</td>
      </tr>
      <tr>
        <td id="L5790" class="blob-num js-line-number" data-line-number="5790"></td>
        <td id="LC5790" class="blob-code blob-code-inner js-file-line">  d3.interpolateArray <span class="pl-k">=</span> d3_interpolateArray;</td>
      </tr>
      <tr>
        <td id="L5791" class="blob-num js-line-number" data-line-number="5791"></td>
        <td id="LC5791" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateArray</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5792" class="blob-num js-line-number" data-line-number="5792"></td>
        <td id="LC5792" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> [], c <span class="pl-k">=</span> [], na <span class="pl-k">=</span> a.<span class="pl-c1">length</span>, nb <span class="pl-k">=</span> b.<span class="pl-c1">length</span>, n0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(a.<span class="pl-c1">length</span>, b.<span class="pl-c1">length</span>), i;</td>
      </tr>
      <tr>
        <td id="L5793" class="blob-num js-line-number" data-line-number="5793"></td>
        <td id="LC5793" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n0; <span class="pl-k">++</span>i) x.<span class="pl-c1">push</span>(d3_interpolate(a[i], b[i]));</td>
      </tr>
      <tr>
        <td id="L5794" class="blob-num js-line-number" data-line-number="5794"></td>
        <td id="LC5794" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (;i <span class="pl-k">&lt;</span> na; <span class="pl-k">++</span>i) c[i] <span class="pl-k">=</span> a[i];</td>
      </tr>
      <tr>
        <td id="L5795" class="blob-num js-line-number" data-line-number="5795"></td>
        <td id="LC5795" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (;i <span class="pl-k">&lt;</span> nb; <span class="pl-k">++</span>i) c[i] <span class="pl-k">=</span> b[i];</td>
      </tr>
      <tr>
        <td id="L5796" class="blob-num js-line-number" data-line-number="5796"></td>
        <td id="LC5796" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5797" class="blob-num js-line-number" data-line-number="5797"></td>
        <td id="LC5797" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n0; <span class="pl-k">++</span>i) c[i] <span class="pl-k">=</span> x[i](t);</td>
      </tr>
      <tr>
        <td id="L5798" class="blob-num js-line-number" data-line-number="5798"></td>
        <td id="LC5798" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> c;</td>
      </tr>
      <tr>
        <td id="L5799" class="blob-num js-line-number" data-line-number="5799"></td>
        <td id="LC5799" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5800" class="blob-num js-line-number" data-line-number="5800"></td>
        <td id="LC5800" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5801" class="blob-num js-line-number" data-line-number="5801"></td>
        <td id="LC5801" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">d3_ease_default</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5802" class="blob-num js-line-number" data-line-number="5802"></td>
        <td id="LC5802" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_identity;</td>
      </tr>
      <tr>
        <td id="L5803" class="blob-num js-line-number" data-line-number="5803"></td>
        <td id="LC5803" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5804" class="blob-num js-line-number" data-line-number="5804"></td>
        <td id="LC5804" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_ease <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L5805" class="blob-num js-line-number" data-line-number="5805"></td>
        <td id="LC5805" class="blob-code blob-code-inner js-file-line">    linear<span class="pl-k">:</span> d3_ease_default,</td>
      </tr>
      <tr>
        <td id="L5806" class="blob-num js-line-number" data-line-number="5806"></td>
        <td id="LC5806" class="blob-code blob-code-inner js-file-line">    poly<span class="pl-k">:</span> d3_ease_poly,</td>
      </tr>
      <tr>
        <td id="L5807" class="blob-num js-line-number" data-line-number="5807"></td>
        <td id="LC5807" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">quad</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5808" class="blob-num js-line-number" data-line-number="5808"></td>
        <td id="LC5808" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_ease_quad;</td>
      </tr>
      <tr>
        <td id="L5809" class="blob-num js-line-number" data-line-number="5809"></td>
        <td id="LC5809" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L5810" class="blob-num js-line-number" data-line-number="5810"></td>
        <td id="LC5810" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">cubic</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5811" class="blob-num js-line-number" data-line-number="5811"></td>
        <td id="LC5811" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_ease_cubic;</td>
      </tr>
      <tr>
        <td id="L5812" class="blob-num js-line-number" data-line-number="5812"></td>
        <td id="LC5812" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L5813" class="blob-num js-line-number" data-line-number="5813"></td>
        <td id="LC5813" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">sin</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5814" class="blob-num js-line-number" data-line-number="5814"></td>
        <td id="LC5814" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_ease_sin;</td>
      </tr>
      <tr>
        <td id="L5815" class="blob-num js-line-number" data-line-number="5815"></td>
        <td id="LC5815" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L5816" class="blob-num js-line-number" data-line-number="5816"></td>
        <td id="LC5816" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">exp</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5817" class="blob-num js-line-number" data-line-number="5817"></td>
        <td id="LC5817" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_ease_exp;</td>
      </tr>
      <tr>
        <td id="L5818" class="blob-num js-line-number" data-line-number="5818"></td>
        <td id="LC5818" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L5819" class="blob-num js-line-number" data-line-number="5819"></td>
        <td id="LC5819" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">circle</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5820" class="blob-num js-line-number" data-line-number="5820"></td>
        <td id="LC5820" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_ease_circle;</td>
      </tr>
      <tr>
        <td id="L5821" class="blob-num js-line-number" data-line-number="5821"></td>
        <td id="LC5821" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L5822" class="blob-num js-line-number" data-line-number="5822"></td>
        <td id="LC5822" class="blob-code blob-code-inner js-file-line">    elastic<span class="pl-k">:</span> d3_ease_elastic,</td>
      </tr>
      <tr>
        <td id="L5823" class="blob-num js-line-number" data-line-number="5823"></td>
        <td id="LC5823" class="blob-code blob-code-inner js-file-line">    back<span class="pl-k">:</span> d3_ease_back,</td>
      </tr>
      <tr>
        <td id="L5824" class="blob-num js-line-number" data-line-number="5824"></td>
        <td id="LC5824" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">bounce</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5825" class="blob-num js-line-number" data-line-number="5825"></td>
        <td id="LC5825" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_ease_bounce;</td>
      </tr>
      <tr>
        <td id="L5826" class="blob-num js-line-number" data-line-number="5826"></td>
        <td id="LC5826" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5827" class="blob-num js-line-number" data-line-number="5827"></td>
        <td id="LC5827" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L5828" class="blob-num js-line-number" data-line-number="5828"></td>
        <td id="LC5828" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_ease_mode <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L5829" class="blob-num js-line-number" data-line-number="5829"></td>
        <td id="LC5829" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_identity,</td>
      </tr>
      <tr>
        <td id="L5830" class="blob-num js-line-number" data-line-number="5830"></td>
        <td id="LC5830" class="blob-code blob-code-inner js-file-line">    out<span class="pl-k">:</span> d3_ease_reverse,</td>
      </tr>
      <tr>
        <td id="L5831" class="blob-num js-line-number" data-line-number="5831"></td>
        <td id="LC5831" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>in-out<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_ease_reflect,</td>
      </tr>
      <tr>
        <td id="L5832" class="blob-num js-line-number" data-line-number="5832"></td>
        <td id="LC5832" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">out-in</span><span class="pl-pds">&quot;</span></span>: <span class="pl-k">function</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L5833" class="blob-num js-line-number" data-line-number="5833"></td>
        <td id="LC5833" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_ease_reflect(d3_ease_reverse(f));</td>
      </tr>
      <tr>
        <td id="L5834" class="blob-num js-line-number" data-line-number="5834"></td>
        <td id="LC5834" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5835" class="blob-num js-line-number" data-line-number="5835"></td>
        <td id="LC5835" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L5836" class="blob-num js-line-number" data-line-number="5836"></td>
        <td id="LC5836" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">ease</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L5837" class="blob-num js-line-number" data-line-number="5837"></td>
        <td id="LC5837" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> name.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>), t <span class="pl-k">=</span> i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> name.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, i) <span class="pl-k">:</span> name, m <span class="pl-k">=</span> i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> name.<span class="pl-c1">slice</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5838" class="blob-num js-line-number" data-line-number="5838"></td>
        <td id="LC5838" class="blob-code blob-code-inner js-file-line">    t <span class="pl-k">=</span> d3_ease.get(t) <span class="pl-k">||</span> d3_ease_default;</td>
      </tr>
      <tr>
        <td id="L5839" class="blob-num js-line-number" data-line-number="5839"></td>
        <td id="LC5839" class="blob-code blob-code-inner js-file-line">    m <span class="pl-k">=</span> d3_ease_mode.get(m) <span class="pl-k">||</span> d3_identity;</td>
      </tr>
      <tr>
        <td id="L5840" class="blob-num js-line-number" data-line-number="5840"></td>
        <td id="LC5840" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_ease_clamp(m(t.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>, d3_arraySlice.<span class="pl-c1">call</span>(arguments, <span class="pl-c1">1</span>))));</td>
      </tr>
      <tr>
        <td id="L5841" class="blob-num js-line-number" data-line-number="5841"></td>
        <td id="LC5841" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5842" class="blob-num js-line-number" data-line-number="5842"></td>
        <td id="LC5842" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_clamp</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L5843" class="blob-num js-line-number" data-line-number="5843"></td>
        <td id="LC5843" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5844" class="blob-num js-line-number" data-line-number="5844"></td>
        <td id="LC5844" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> t <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> t <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> f(t);</td>
      </tr>
      <tr>
        <td id="L5845" class="blob-num js-line-number" data-line-number="5845"></td>
        <td id="LC5845" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5846" class="blob-num js-line-number" data-line-number="5846"></td>
        <td id="LC5846" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5847" class="blob-num js-line-number" data-line-number="5847"></td>
        <td id="LC5847" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_reverse</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L5848" class="blob-num js-line-number" data-line-number="5848"></td>
        <td id="LC5848" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5849" class="blob-num js-line-number" data-line-number="5849"></td>
        <td id="LC5849" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> f(<span class="pl-c1">1</span> <span class="pl-k">-</span> t);</td>
      </tr>
      <tr>
        <td id="L5850" class="blob-num js-line-number" data-line-number="5850"></td>
        <td id="LC5850" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5851" class="blob-num js-line-number" data-line-number="5851"></td>
        <td id="LC5851" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5852" class="blob-num js-line-number" data-line-number="5852"></td>
        <td id="LC5852" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_reflect</span>(<span class="pl-smi">f</span>) {</td>
      </tr>
      <tr>
        <td id="L5853" class="blob-num js-line-number" data-line-number="5853"></td>
        <td id="LC5853" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5854" class="blob-num js-line-number" data-line-number="5854"></td>
        <td id="LC5854" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> .<span class="pl-c1">5</span> <span class="pl-k">*</span> (t <span class="pl-k">&lt;</span> .<span class="pl-c1">5</span> <span class="pl-k">?</span> f(<span class="pl-c1">2</span> <span class="pl-k">*</span> t) <span class="pl-k">:</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> f(<span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> t));</td>
      </tr>
      <tr>
        <td id="L5855" class="blob-num js-line-number" data-line-number="5855"></td>
        <td id="LC5855" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5856" class="blob-num js-line-number" data-line-number="5856"></td>
        <td id="LC5856" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5857" class="blob-num js-line-number" data-line-number="5857"></td>
        <td id="LC5857" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_quad</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5858" class="blob-num js-line-number" data-line-number="5858"></td>
        <td id="LC5858" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> t <span class="pl-k">*</span> t;</td>
      </tr>
      <tr>
        <td id="L5859" class="blob-num js-line-number" data-line-number="5859"></td>
        <td id="LC5859" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5860" class="blob-num js-line-number" data-line-number="5860"></td>
        <td id="LC5860" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_cubic</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5861" class="blob-num js-line-number" data-line-number="5861"></td>
        <td id="LC5861" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t;</td>
      </tr>
      <tr>
        <td id="L5862" class="blob-num js-line-number" data-line-number="5862"></td>
        <td id="LC5862" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5863" class="blob-num js-line-number" data-line-number="5863"></td>
        <td id="LC5863" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_cubicInOut</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5864" class="blob-num js-line-number" data-line-number="5864"></td>
        <td id="LC5864" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (t <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5865" class="blob-num js-line-number" data-line-number="5865"></td>
        <td id="LC5865" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (t <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5866" class="blob-num js-line-number" data-line-number="5866"></td>
        <td id="LC5866" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> t2 <span class="pl-k">=</span> t <span class="pl-k">*</span> t, t3 <span class="pl-k">=</span> t2 <span class="pl-k">*</span> t;</td>
      </tr>
      <tr>
        <td id="L5867" class="blob-num js-line-number" data-line-number="5867"></td>
        <td id="LC5867" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">4</span> <span class="pl-k">*</span> (t <span class="pl-k">&lt;</span> .<span class="pl-c1">5</span> <span class="pl-k">?</span> t3 <span class="pl-k">:</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> (t <span class="pl-k">-</span> t2) <span class="pl-k">+</span> t3 <span class="pl-k">-</span> .<span class="pl-c1">75</span>);</td>
      </tr>
      <tr>
        <td id="L5868" class="blob-num js-line-number" data-line-number="5868"></td>
        <td id="LC5868" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5869" class="blob-num js-line-number" data-line-number="5869"></td>
        <td id="LC5869" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_poly</span>(<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L5870" class="blob-num js-line-number" data-line-number="5870"></td>
        <td id="LC5870" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5871" class="blob-num js-line-number" data-line-number="5871"></td>
        <td id="LC5871" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(t, e);</td>
      </tr>
      <tr>
        <td id="L5872" class="blob-num js-line-number" data-line-number="5872"></td>
        <td id="LC5872" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5873" class="blob-num js-line-number" data-line-number="5873"></td>
        <td id="LC5873" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5874" class="blob-num js-line-number" data-line-number="5874"></td>
        <td id="LC5874" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_sin</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5875" class="blob-num js-line-number" data-line-number="5875"></td>
        <td id="LC5875" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t <span class="pl-k">*</span> halfÏ);</td>
      </tr>
      <tr>
        <td id="L5876" class="blob-num js-line-number" data-line-number="5876"></td>
        <td id="LC5876" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5877" class="blob-num js-line-number" data-line-number="5877"></td>
        <td id="LC5877" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_exp</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5878" class="blob-num js-line-number" data-line-number="5878"></td>
        <td id="LC5878" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> (t <span class="pl-k">-</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L5879" class="blob-num js-line-number" data-line-number="5879"></td>
        <td id="LC5879" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5880" class="blob-num js-line-number" data-line-number="5880"></td>
        <td id="LC5880" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_circle</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5881" class="blob-num js-line-number" data-line-number="5881"></td>
        <td id="LC5881" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span> <span class="pl-k">-</span> t <span class="pl-k">*</span> t);</td>
      </tr>
      <tr>
        <td id="L5882" class="blob-num js-line-number" data-line-number="5882"></td>
        <td id="LC5882" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5883" class="blob-num js-line-number" data-line-number="5883"></td>
        <td id="LC5883" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_elastic</span>(<span class="pl-smi">a</span>, <span class="pl-smi">p</span>) {</td>
      </tr>
      <tr>
        <td id="L5884" class="blob-num js-line-number" data-line-number="5884"></td>
        <td id="LC5884" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> s;</td>
      </tr>
      <tr>
        <td id="L5885" class="blob-num js-line-number" data-line-number="5885"></td>
        <td id="LC5885" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) p <span class="pl-k">=</span> .<span class="pl-c1">45</span>;</td>
      </tr>
      <tr>
        <td id="L5886" class="blob-num js-line-number" data-line-number="5886"></td>
        <td id="LC5886" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span>) s <span class="pl-k">=</span> p / Ï <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-c1">1</span> / a); <span class="pl-k">else</span> a <span class="pl-k">=</span> <span class="pl-c1">1</span>, s <span class="pl-k">=</span> p / <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L5887" class="blob-num js-line-number" data-line-number="5887"></td>
        <td id="LC5887" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5888" class="blob-num js-line-number" data-line-number="5888"></td>
        <td id="LC5888" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> a <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">10</span> <span class="pl-k">*</span> t) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((t <span class="pl-k">-</span> s) <span class="pl-k">*</span> Ï / p);</td>
      </tr>
      <tr>
        <td id="L5889" class="blob-num js-line-number" data-line-number="5889"></td>
        <td id="LC5889" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5890" class="blob-num js-line-number" data-line-number="5890"></td>
        <td id="LC5890" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5891" class="blob-num js-line-number" data-line-number="5891"></td>
        <td id="LC5891" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_back</span>(<span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L5892" class="blob-num js-line-number" data-line-number="5892"></td>
        <td id="LC5892" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>s) s <span class="pl-k">=</span> <span class="pl-c1">1.70158</span>;</td>
      </tr>
      <tr>
        <td id="L5893" class="blob-num js-line-number" data-line-number="5893"></td>
        <td id="LC5893" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5894" class="blob-num js-line-number" data-line-number="5894"></td>
        <td id="LC5894" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> ((s <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">-</span> s);</td>
      </tr>
      <tr>
        <td id="L5895" class="blob-num js-line-number" data-line-number="5895"></td>
        <td id="LC5895" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5896" class="blob-num js-line-number" data-line-number="5896"></td>
        <td id="LC5896" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5897" class="blob-num js-line-number" data-line-number="5897"></td>
        <td id="LC5897" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_ease_bounce</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5898" class="blob-num js-line-number" data-line-number="5898"></td>
        <td id="LC5898" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> t <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> / <span class="pl-c1">2.75</span> <span class="pl-k">?</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">:</span> t <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> / <span class="pl-c1">2.75</span> <span class="pl-k">?</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">1.5</span> / <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> t <span class="pl-k">+</span> .<span class="pl-c1">75</span> <span class="pl-k">:</span> t <span class="pl-k">&lt;</span> <span class="pl-c1">2.5</span> / <span class="pl-c1">2.75</span> <span class="pl-k">?</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">2.25</span> / <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> t <span class="pl-k">+</span> .<span class="pl-c1">9375</span> <span class="pl-k">:</span> <span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">2.625</span> / <span class="pl-c1">2.75</span>) <span class="pl-k">*</span> t <span class="pl-k">+</span> .<span class="pl-c1">984375</span>;</td>
      </tr>
      <tr>
        <td id="L5899" class="blob-num js-line-number" data-line-number="5899"></td>
        <td id="LC5899" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5900" class="blob-num js-line-number" data-line-number="5900"></td>
        <td id="LC5900" class="blob-code blob-code-inner js-file-line">  d3.interpolateHcl <span class="pl-k">=</span> d3_interpolateHcl;</td>
      </tr>
      <tr>
        <td id="L5901" class="blob-num js-line-number" data-line-number="5901"></td>
        <td id="LC5901" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateHcl</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5902" class="blob-num js-line-number" data-line-number="5902"></td>
        <td id="LC5902" class="blob-code blob-code-inner js-file-line">    a <span class="pl-k">=</span> d3.hcl(a);</td>
      </tr>
      <tr>
        <td id="L5903" class="blob-num js-line-number" data-line-number="5903"></td>
        <td id="LC5903" class="blob-code blob-code-inner js-file-line">    b <span class="pl-k">=</span> d3.hcl(b);</td>
      </tr>
      <tr>
        <td id="L5904" class="blob-num js-line-number" data-line-number="5904"></td>
        <td id="LC5904" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ah <span class="pl-k">=</span> a.h, ac <span class="pl-k">=</span> a.c, al <span class="pl-k">=</span> a.l, bh <span class="pl-k">=</span> b.h <span class="pl-k">-</span> ah, bc <span class="pl-k">=</span> b.c <span class="pl-k">-</span> ac, bl <span class="pl-k">=</span> b.l <span class="pl-k">-</span> al;</td>
      </tr>
      <tr>
        <td id="L5905" class="blob-num js-line-number" data-line-number="5905"></td>
        <td id="LC5905" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(bc)) bc <span class="pl-k">=</span> <span class="pl-c1">0</span>, ac <span class="pl-k">=</span> <span class="pl-c1">isNaN</span>(ac) <span class="pl-k">?</span> b.c <span class="pl-k">:</span> ac;</td>
      </tr>
      <tr>
        <td id="L5906" class="blob-num js-line-number" data-line-number="5906"></td>
        <td id="LC5906" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(bh)) bh <span class="pl-k">=</span> <span class="pl-c1">0</span>, ah <span class="pl-k">=</span> <span class="pl-c1">isNaN</span>(ah) <span class="pl-k">?</span> b.h <span class="pl-k">:</span> ah; <span class="pl-k">else</span> <span class="pl-k">if</span> (bh <span class="pl-k">&gt;</span> <span class="pl-c1">180</span>) bh <span class="pl-k">-=</span> <span class="pl-c1">360</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (bh <span class="pl-k">&lt;</span> <span class="pl-k">-</span><span class="pl-c1">180</span>) bh <span class="pl-k">+=</span> <span class="pl-c1">360</span>;</td>
      </tr>
      <tr>
        <td id="L5907" class="blob-num js-line-number" data-line-number="5907"></td>
        <td id="LC5907" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5908" class="blob-num js-line-number" data-line-number="5908"></td>
        <td id="LC5908" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_hcl_lab(ah <span class="pl-k">+</span> bh <span class="pl-k">*</span> t, ac <span class="pl-k">+</span> bc <span class="pl-k">*</span> t, al <span class="pl-k">+</span> bl <span class="pl-k">*</span> t) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5909" class="blob-num js-line-number" data-line-number="5909"></td>
        <td id="LC5909" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5910" class="blob-num js-line-number" data-line-number="5910"></td>
        <td id="LC5910" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5911" class="blob-num js-line-number" data-line-number="5911"></td>
        <td id="LC5911" class="blob-code blob-code-inner js-file-line">  d3.interpolateHsl <span class="pl-k">=</span> d3_interpolateHsl;</td>
      </tr>
      <tr>
        <td id="L5912" class="blob-num js-line-number" data-line-number="5912"></td>
        <td id="LC5912" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateHsl</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5913" class="blob-num js-line-number" data-line-number="5913"></td>
        <td id="LC5913" class="blob-code blob-code-inner js-file-line">    a <span class="pl-k">=</span> d3.hsl(a);</td>
      </tr>
      <tr>
        <td id="L5914" class="blob-num js-line-number" data-line-number="5914"></td>
        <td id="LC5914" class="blob-code blob-code-inner js-file-line">    b <span class="pl-k">=</span> d3.hsl(b);</td>
      </tr>
      <tr>
        <td id="L5915" class="blob-num js-line-number" data-line-number="5915"></td>
        <td id="LC5915" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ah <span class="pl-k">=</span> a.h, as <span class="pl-k">=</span> a.s, al <span class="pl-k">=</span> a.l, bh <span class="pl-k">=</span> b.h <span class="pl-k">-</span> ah, bs <span class="pl-k">=</span> b.s <span class="pl-k">-</span> as, bl <span class="pl-k">=</span> b.l <span class="pl-k">-</span> al;</td>
      </tr>
      <tr>
        <td id="L5916" class="blob-num js-line-number" data-line-number="5916"></td>
        <td id="LC5916" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(bs)) bs <span class="pl-k">=</span> <span class="pl-c1">0</span>, as <span class="pl-k">=</span> <span class="pl-c1">isNaN</span>(as) <span class="pl-k">?</span> b.s <span class="pl-k">:</span> as;</td>
      </tr>
      <tr>
        <td id="L5917" class="blob-num js-line-number" data-line-number="5917"></td>
        <td id="LC5917" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(bh)) bh <span class="pl-k">=</span> <span class="pl-c1">0</span>, ah <span class="pl-k">=</span> <span class="pl-c1">isNaN</span>(ah) <span class="pl-k">?</span> b.h <span class="pl-k">:</span> ah; <span class="pl-k">else</span> <span class="pl-k">if</span> (bh <span class="pl-k">&gt;</span> <span class="pl-c1">180</span>) bh <span class="pl-k">-=</span> <span class="pl-c1">360</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (bh <span class="pl-k">&lt;</span> <span class="pl-k">-</span><span class="pl-c1">180</span>) bh <span class="pl-k">+=</span> <span class="pl-c1">360</span>;</td>
      </tr>
      <tr>
        <td id="L5918" class="blob-num js-line-number" data-line-number="5918"></td>
        <td id="LC5918" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5919" class="blob-num js-line-number" data-line-number="5919"></td>
        <td id="LC5919" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_hsl_rgb(ah <span class="pl-k">+</span> bh <span class="pl-k">*</span> t, as <span class="pl-k">+</span> bs <span class="pl-k">*</span> t, al <span class="pl-k">+</span> bl <span class="pl-k">*</span> t) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5920" class="blob-num js-line-number" data-line-number="5920"></td>
        <td id="LC5920" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5921" class="blob-num js-line-number" data-line-number="5921"></td>
        <td id="LC5921" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5922" class="blob-num js-line-number" data-line-number="5922"></td>
        <td id="LC5922" class="blob-code blob-code-inner js-file-line">  d3.interpolateLab <span class="pl-k">=</span> d3_interpolateLab;</td>
      </tr>
      <tr>
        <td id="L5923" class="blob-num js-line-number" data-line-number="5923"></td>
        <td id="LC5923" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateLab</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5924" class="blob-num js-line-number" data-line-number="5924"></td>
        <td id="LC5924" class="blob-code blob-code-inner js-file-line">    a <span class="pl-k">=</span> d3.lab(a);</td>
      </tr>
      <tr>
        <td id="L5925" class="blob-num js-line-number" data-line-number="5925"></td>
        <td id="LC5925" class="blob-code blob-code-inner js-file-line">    b <span class="pl-k">=</span> d3.lab(b);</td>
      </tr>
      <tr>
        <td id="L5926" class="blob-num js-line-number" data-line-number="5926"></td>
        <td id="LC5926" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> al <span class="pl-k">=</span> a.l, aa <span class="pl-k">=</span> a.a, ab <span class="pl-k">=</span> a.b, bl <span class="pl-k">=</span> b.l <span class="pl-k">-</span> al, ba <span class="pl-k">=</span> b.a <span class="pl-k">-</span> aa, bb <span class="pl-k">=</span> b.b <span class="pl-k">-</span> ab;</td>
      </tr>
      <tr>
        <td id="L5927" class="blob-num js-line-number" data-line-number="5927"></td>
        <td id="LC5927" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5928" class="blob-num js-line-number" data-line-number="5928"></td>
        <td id="LC5928" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_lab_rgb(al <span class="pl-k">+</span> bl <span class="pl-k">*</span> t, aa <span class="pl-k">+</span> ba <span class="pl-k">*</span> t, ab <span class="pl-k">+</span> bb <span class="pl-k">*</span> t) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5929" class="blob-num js-line-number" data-line-number="5929"></td>
        <td id="LC5929" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5930" class="blob-num js-line-number" data-line-number="5930"></td>
        <td id="LC5930" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5931" class="blob-num js-line-number" data-line-number="5931"></td>
        <td id="LC5931" class="blob-code blob-code-inner js-file-line">  d3.interpolateRound <span class="pl-k">=</span> d3_interpolateRound;</td>
      </tr>
      <tr>
        <td id="L5932" class="blob-num js-line-number" data-line-number="5932"></td>
        <td id="LC5932" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateRound</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5933" class="blob-num js-line-number" data-line-number="5933"></td>
        <td id="LC5933" class="blob-code blob-code-inner js-file-line">    b <span class="pl-k">-=</span> a;</td>
      </tr>
      <tr>
        <td id="L5934" class="blob-num js-line-number" data-line-number="5934"></td>
        <td id="LC5934" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L5935" class="blob-num js-line-number" data-line-number="5935"></td>
        <td id="LC5935" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(a <span class="pl-k">+</span> b <span class="pl-k">*</span> t);</td>
      </tr>
      <tr>
        <td id="L5936" class="blob-num js-line-number" data-line-number="5936"></td>
        <td id="LC5936" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5937" class="blob-num js-line-number" data-line-number="5937"></td>
        <td id="LC5937" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5938" class="blob-num js-line-number" data-line-number="5938"></td>
        <td id="LC5938" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">transform</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">string</span>) {</td>
      </tr>
      <tr>
        <td id="L5939" class="blob-num js-line-number" data-line-number="5939"></td>
        <td id="LC5939" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> g <span class="pl-k">=</span> d3_document.createElementNS(d3.ns.<span class="pl-c1">prefix</span>.svg, <span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5940" class="blob-num js-line-number" data-line-number="5940"></td>
        <td id="LC5940" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (<span class="pl-c1">d3</span>.<span class="pl-en">transform</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">string</span>) {</td>
      </tr>
      <tr>
        <td id="L5941" class="blob-num js-line-number" data-line-number="5941"></td>
        <td id="LC5941" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (string <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L5942" class="blob-num js-line-number" data-line-number="5942"></td>
        <td id="LC5942" class="blob-code blob-code-inner js-file-line">        g.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>, string);</td>
      </tr>
      <tr>
        <td id="L5943" class="blob-num js-line-number" data-line-number="5943"></td>
        <td id="LC5943" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> t <span class="pl-k">=</span> g.transform.baseVal.consolidate();</td>
      </tr>
      <tr>
        <td id="L5944" class="blob-num js-line-number" data-line-number="5944"></td>
        <td id="LC5944" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5945" class="blob-num js-line-number" data-line-number="5945"></td>
        <td id="LC5945" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_transform</span>(t <span class="pl-k">?</span> t.matrix <span class="pl-k">:</span> d3_transformIdentity);</td>
      </tr>
      <tr>
        <td id="L5946" class="blob-num js-line-number" data-line-number="5946"></td>
        <td id="LC5946" class="blob-code blob-code-inner js-file-line">    })(string);</td>
      </tr>
      <tr>
        <td id="L5947" class="blob-num js-line-number" data-line-number="5947"></td>
        <td id="LC5947" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5948" class="blob-num js-line-number" data-line-number="5948"></td>
        <td id="LC5948" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transform</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L5949" class="blob-num js-line-number" data-line-number="5949"></td>
        <td id="LC5949" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> r0 <span class="pl-k">=</span> [ m.a, m.b ], r1 <span class="pl-k">=</span> [ m.c, m.d ], kx <span class="pl-k">=</span> d3_transformNormalize(r0), kz <span class="pl-k">=</span> d3_transformDot(r0, r1), ky <span class="pl-k">=</span> d3_transformNormalize(d3_transformCombine(r1, r0, <span class="pl-k">-</span>kz)) <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5950" class="blob-num js-line-number" data-line-number="5950"></td>
        <td id="LC5950" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (r0[<span class="pl-c1">0</span>] <span class="pl-k">*</span> r1[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> r1[<span class="pl-c1">0</span>] <span class="pl-k">*</span> r0[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L5951" class="blob-num js-line-number" data-line-number="5951"></td>
        <td id="LC5951" class="blob-code blob-code-inner js-file-line">      r0[<span class="pl-c1">0</span>] <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5952" class="blob-num js-line-number" data-line-number="5952"></td>
        <td id="LC5952" class="blob-code blob-code-inner js-file-line">      r0[<span class="pl-c1">1</span>] <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5953" class="blob-num js-line-number" data-line-number="5953"></td>
        <td id="LC5953" class="blob-code blob-code-inner js-file-line">      kx <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5954" class="blob-num js-line-number" data-line-number="5954"></td>
        <td id="LC5954" class="blob-code blob-code-inner js-file-line">      kz <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5955" class="blob-num js-line-number" data-line-number="5955"></td>
        <td id="LC5955" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5956" class="blob-num js-line-number" data-line-number="5956"></td>
        <td id="LC5956" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.rotate <span class="pl-k">=</span> (kx <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(r0[<span class="pl-c1">1</span>], r0[<span class="pl-c1">0</span>]) <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>r1[<span class="pl-c1">0</span>], r1[<span class="pl-c1">1</span>])) <span class="pl-k">*</span> d3_degrees;</td>
      </tr>
      <tr>
        <td id="L5957" class="blob-num js-line-number" data-line-number="5957"></td>
        <td id="LC5957" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.translate <span class="pl-k">=</span> [ m.e, m.f ];</td>
      </tr>
      <tr>
        <td id="L5958" class="blob-num js-line-number" data-line-number="5958"></td>
        <td id="LC5958" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.scale <span class="pl-k">=</span> [ kx, ky ];</td>
      </tr>
      <tr>
        <td id="L5959" class="blob-num js-line-number" data-line-number="5959"></td>
        <td id="LC5959" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.skew <span class="pl-k">=</span> ky <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(kz, ky) <span class="pl-k">*</span> d3_degrees <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5960" class="blob-num js-line-number" data-line-number="5960"></td>
        <td id="LC5960" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5961" class="blob-num js-line-number" data-line-number="5961"></td>
        <td id="LC5961" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5962" class="blob-num js-line-number" data-line-number="5962"></td>
        <td id="LC5962" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.translate <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)rotate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.rotate <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)skewX(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.skew <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)scale(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-v">this</span>.scale <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5963" class="blob-num js-line-number" data-line-number="5963"></td>
        <td id="LC5963" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5964" class="blob-num js-line-number" data-line-number="5964"></td>
        <td id="LC5964" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transformDot</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5965" class="blob-num js-line-number" data-line-number="5965"></td>
        <td id="LC5965" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">0</span>] <span class="pl-k">+</span> a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5966" class="blob-num js-line-number" data-line-number="5966"></td>
        <td id="LC5966" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5967" class="blob-num js-line-number" data-line-number="5967"></td>
        <td id="LC5967" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transformNormalize</span>(<span class="pl-smi">a</span>) {</td>
      </tr>
      <tr>
        <td id="L5968" class="blob-num js-line-number" data-line-number="5968"></td>
        <td id="LC5968" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(d3_transformDot(a, a));</td>
      </tr>
      <tr>
        <td id="L5969" class="blob-num js-line-number" data-line-number="5969"></td>
        <td id="LC5969" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (k) {</td>
      </tr>
      <tr>
        <td id="L5970" class="blob-num js-line-number" data-line-number="5970"></td>
        <td id="LC5970" class="blob-code blob-code-inner js-file-line">      a[<span class="pl-c1">0</span>] <span class="pl-k">/=</span> k;</td>
      </tr>
      <tr>
        <td id="L5971" class="blob-num js-line-number" data-line-number="5971"></td>
        <td id="LC5971" class="blob-code blob-code-inner js-file-line">      a[<span class="pl-c1">1</span>] <span class="pl-k">/=</span> k;</td>
      </tr>
      <tr>
        <td id="L5972" class="blob-num js-line-number" data-line-number="5972"></td>
        <td id="LC5972" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5973" class="blob-num js-line-number" data-line-number="5973"></td>
        <td id="LC5973" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> k;</td>
      </tr>
      <tr>
        <td id="L5974" class="blob-num js-line-number" data-line-number="5974"></td>
        <td id="LC5974" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5975" class="blob-num js-line-number" data-line-number="5975"></td>
        <td id="LC5975" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transformCombine</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L5976" class="blob-num js-line-number" data-line-number="5976"></td>
        <td id="LC5976" class="blob-code blob-code-inner js-file-line">    a[<span class="pl-c1">0</span>] <span class="pl-k">+=</span> k <span class="pl-k">*</span> b[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L5977" class="blob-num js-line-number" data-line-number="5977"></td>
        <td id="LC5977" class="blob-code blob-code-inner js-file-line">    a[<span class="pl-c1">1</span>] <span class="pl-k">+=</span> k <span class="pl-k">*</span> b[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L5978" class="blob-num js-line-number" data-line-number="5978"></td>
        <td id="LC5978" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L5979" class="blob-num js-line-number" data-line-number="5979"></td>
        <td id="LC5979" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5980" class="blob-num js-line-number" data-line-number="5980"></td>
        <td id="LC5980" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_transformIdentity <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5981" class="blob-num js-line-number" data-line-number="5981"></td>
        <td id="LC5981" class="blob-code blob-code-inner js-file-line">    a<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L5982" class="blob-num js-line-number" data-line-number="5982"></td>
        <td id="LC5982" class="blob-code blob-code-inner js-file-line">    b<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L5983" class="blob-num js-line-number" data-line-number="5983"></td>
        <td id="LC5983" class="blob-code blob-code-inner js-file-line">    c<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L5984" class="blob-num js-line-number" data-line-number="5984"></td>
        <td id="LC5984" class="blob-code blob-code-inner js-file-line">    d<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L5985" class="blob-num js-line-number" data-line-number="5985"></td>
        <td id="LC5985" class="blob-code blob-code-inner js-file-line">    e<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L5986" class="blob-num js-line-number" data-line-number="5986"></td>
        <td id="LC5986" class="blob-code blob-code-inner js-file-line">    f<span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L5987" class="blob-num js-line-number" data-line-number="5987"></td>
        <td id="LC5987" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5988" class="blob-num js-line-number" data-line-number="5988"></td>
        <td id="LC5988" class="blob-code blob-code-inner js-file-line">  d3.interpolateTransform <span class="pl-k">=</span> d3_interpolateTransform;</td>
      </tr>
      <tr>
        <td id="L5989" class="blob-num js-line-number" data-line-number="5989"></td>
        <td id="LC5989" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_interpolateTransform</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L5990" class="blob-num js-line-number" data-line-number="5990"></td>
        <td id="LC5990" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> s <span class="pl-k">=</span> [], q <span class="pl-k">=</span> [], n, A <span class="pl-k">=</span> d3.transform(a), B <span class="pl-k">=</span> d3.transform(b), ta <span class="pl-k">=</span> A.translate, tb <span class="pl-k">=</span> B.translate, ra <span class="pl-k">=</span> A.rotate, rb <span class="pl-k">=</span> B.rotate, wa <span class="pl-k">=</span> A.skew, wb <span class="pl-k">=</span> B.skew, ka <span class="pl-k">=</span> A.scale, kb <span class="pl-k">=</span> B.scale;</td>
      </tr>
      <tr>
        <td id="L5991" class="blob-num js-line-number" data-line-number="5991"></td>
        <td id="LC5991" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ta[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> tb[<span class="pl-c1">0</span>] <span class="pl-k">||</span> ta[<span class="pl-c1">1</span>] <span class="pl-k">!=</span> tb[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L5992" class="blob-num js-line-number" data-line-number="5992"></td>
        <td id="LC5992" class="blob-code blob-code-inner js-file-line">      s.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5993" class="blob-num js-line-number" data-line-number="5993"></td>
        <td id="LC5993" class="blob-code blob-code-inner js-file-line">      q.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L5994" class="blob-num js-line-number" data-line-number="5994"></td>
        <td id="LC5994" class="blob-code blob-code-inner js-file-line">        i<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L5995" class="blob-num js-line-number" data-line-number="5995"></td>
        <td id="LC5995" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> d3_interpolateNumber(ta[<span class="pl-c1">0</span>], tb[<span class="pl-c1">0</span>])</td>
      </tr>
      <tr>
        <td id="L5996" class="blob-num js-line-number" data-line-number="5996"></td>
        <td id="LC5996" class="blob-code blob-code-inner js-file-line">      }, {</td>
      </tr>
      <tr>
        <td id="L5997" class="blob-num js-line-number" data-line-number="5997"></td>
        <td id="LC5997" class="blob-code blob-code-inner js-file-line">        i<span class="pl-k">:</span> <span class="pl-c1">3</span>,</td>
      </tr>
      <tr>
        <td id="L5998" class="blob-num js-line-number" data-line-number="5998"></td>
        <td id="LC5998" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> d3_interpolateNumber(ta[<span class="pl-c1">1</span>], tb[<span class="pl-c1">1</span>])</td>
      </tr>
      <tr>
        <td id="L5999" class="blob-num js-line-number" data-line-number="5999"></td>
        <td id="LC5999" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6000" class="blob-num js-line-number" data-line-number="6000"></td>
        <td id="LC6000" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (tb[<span class="pl-c1">0</span>] <span class="pl-k">||</span> tb[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L6001" class="blob-num js-line-number" data-line-number="6001"></td>
        <td id="LC6001" class="blob-code blob-code-inner js-file-line">      s.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> tb <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6002" class="blob-num js-line-number" data-line-number="6002"></td>
        <td id="LC6002" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6003" class="blob-num js-line-number" data-line-number="6003"></td>
        <td id="LC6003" class="blob-code blob-code-inner js-file-line">      s.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6004" class="blob-num js-line-number" data-line-number="6004"></td>
        <td id="LC6004" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6005" class="blob-num js-line-number" data-line-number="6005"></td>
        <td id="LC6005" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ra <span class="pl-k">!=</span> rb) {</td>
      </tr>
      <tr>
        <td id="L6006" class="blob-num js-line-number" data-line-number="6006"></td>
        <td id="LC6006" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (ra <span class="pl-k">-</span> rb <span class="pl-k">&gt;</span> <span class="pl-c1">180</span>) rb <span class="pl-k">+=</span> <span class="pl-c1">360</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (rb <span class="pl-k">-</span> ra <span class="pl-k">&gt;</span> <span class="pl-c1">180</span>) ra <span class="pl-k">+=</span> <span class="pl-c1">360</span>;</td>
      </tr>
      <tr>
        <td id="L6007" class="blob-num js-line-number" data-line-number="6007"></td>
        <td id="LC6007" class="blob-code blob-code-inner js-file-line">      q.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L6008" class="blob-num js-line-number" data-line-number="6008"></td>
        <td id="LC6008" class="blob-code blob-code-inner js-file-line">        i<span class="pl-k">:</span> s.<span class="pl-c1">push</span>(s.<span class="pl-c1">pop</span>() <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>) <span class="pl-k">-</span> <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L6009" class="blob-num js-line-number" data-line-number="6009"></td>
        <td id="LC6009" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> d3_interpolateNumber(ra, rb)</td>
      </tr>
      <tr>
        <td id="L6010" class="blob-num js-line-number" data-line-number="6010"></td>
        <td id="LC6010" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6011" class="blob-num js-line-number" data-line-number="6011"></td>
        <td id="LC6011" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (rb) {</td>
      </tr>
      <tr>
        <td id="L6012" class="blob-num js-line-number" data-line-number="6012"></td>
        <td id="LC6012" class="blob-code blob-code-inner js-file-line">      s.<span class="pl-c1">push</span>(s.<span class="pl-c1">pop</span>() <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> rb <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6013" class="blob-num js-line-number" data-line-number="6013"></td>
        <td id="LC6013" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6014" class="blob-num js-line-number" data-line-number="6014"></td>
        <td id="LC6014" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (wa <span class="pl-k">!=</span> wb) {</td>
      </tr>
      <tr>
        <td id="L6015" class="blob-num js-line-number" data-line-number="6015"></td>
        <td id="LC6015" class="blob-code blob-code-inner js-file-line">      q.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L6016" class="blob-num js-line-number" data-line-number="6016"></td>
        <td id="LC6016" class="blob-code blob-code-inner js-file-line">        i<span class="pl-k">:</span> s.<span class="pl-c1">push</span>(s.<span class="pl-c1">pop</span>() <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>skewX(<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>) <span class="pl-k">-</span> <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L6017" class="blob-num js-line-number" data-line-number="6017"></td>
        <td id="LC6017" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> d3_interpolateNumber(wa, wb)</td>
      </tr>
      <tr>
        <td id="L6018" class="blob-num js-line-number" data-line-number="6018"></td>
        <td id="LC6018" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6019" class="blob-num js-line-number" data-line-number="6019"></td>
        <td id="LC6019" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (wb) {</td>
      </tr>
      <tr>
        <td id="L6020" class="blob-num js-line-number" data-line-number="6020"></td>
        <td id="LC6020" class="blob-code blob-code-inner js-file-line">      s.<span class="pl-c1">push</span>(s.<span class="pl-c1">pop</span>() <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>skewX(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> wb <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6021" class="blob-num js-line-number" data-line-number="6021"></td>
        <td id="LC6021" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6022" class="blob-num js-line-number" data-line-number="6022"></td>
        <td id="LC6022" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ka[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> kb[<span class="pl-c1">0</span>] <span class="pl-k">||</span> ka[<span class="pl-c1">1</span>] <span class="pl-k">!=</span> kb[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L6023" class="blob-num js-line-number" data-line-number="6023"></td>
        <td id="LC6023" class="blob-code blob-code-inner js-file-line">      n <span class="pl-k">=</span> s.<span class="pl-c1">push</span>(s.<span class="pl-c1">pop</span>() <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>scale(<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6024" class="blob-num js-line-number" data-line-number="6024"></td>
        <td id="LC6024" class="blob-code blob-code-inner js-file-line">      q.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L6025" class="blob-num js-line-number" data-line-number="6025"></td>
        <td id="LC6025" class="blob-code blob-code-inner js-file-line">        i<span class="pl-k">:</span> n <span class="pl-k">-</span> <span class="pl-c1">4</span>,</td>
      </tr>
      <tr>
        <td id="L6026" class="blob-num js-line-number" data-line-number="6026"></td>
        <td id="LC6026" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> d3_interpolateNumber(ka[<span class="pl-c1">0</span>], kb[<span class="pl-c1">0</span>])</td>
      </tr>
      <tr>
        <td id="L6027" class="blob-num js-line-number" data-line-number="6027"></td>
        <td id="LC6027" class="blob-code blob-code-inner js-file-line">      }, {</td>
      </tr>
      <tr>
        <td id="L6028" class="blob-num js-line-number" data-line-number="6028"></td>
        <td id="LC6028" class="blob-code blob-code-inner js-file-line">        i<span class="pl-k">:</span> n <span class="pl-k">-</span> <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L6029" class="blob-num js-line-number" data-line-number="6029"></td>
        <td id="LC6029" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> d3_interpolateNumber(ka[<span class="pl-c1">1</span>], kb[<span class="pl-c1">1</span>])</td>
      </tr>
      <tr>
        <td id="L6030" class="blob-num js-line-number" data-line-number="6030"></td>
        <td id="LC6030" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6031" class="blob-num js-line-number" data-line-number="6031"></td>
        <td id="LC6031" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (kb[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> <span class="pl-c1">1</span> <span class="pl-k">||</span> kb[<span class="pl-c1">1</span>] <span class="pl-k">!=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L6032" class="blob-num js-line-number" data-line-number="6032"></td>
        <td id="LC6032" class="blob-code blob-code-inner js-file-line">      s.<span class="pl-c1">push</span>(s.<span class="pl-c1">pop</span>() <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>scale(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> kb <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6033" class="blob-num js-line-number" data-line-number="6033"></td>
        <td id="LC6033" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6034" class="blob-num js-line-number" data-line-number="6034"></td>
        <td id="LC6034" class="blob-code blob-code-inner js-file-line">    n <span class="pl-k">=</span> q.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L6035" class="blob-num js-line-number" data-line-number="6035"></td>
        <td id="LC6035" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L6036" class="blob-num js-line-number" data-line-number="6036"></td>
        <td id="LC6036" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, o;</td>
      </tr>
      <tr>
        <td id="L6037" class="blob-num js-line-number" data-line-number="6037"></td>
        <td id="LC6037" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) s[(o <span class="pl-k">=</span> q[i]).i] <span class="pl-k">=</span> o.<span class="pl-c1">x</span>(t);</td>
      </tr>
      <tr>
        <td id="L6038" class="blob-num js-line-number" data-line-number="6038"></td>
        <td id="LC6038" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> s.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6039" class="blob-num js-line-number" data-line-number="6039"></td>
        <td id="LC6039" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6040" class="blob-num js-line-number" data-line-number="6040"></td>
        <td id="LC6040" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6041" class="blob-num js-line-number" data-line-number="6041"></td>
        <td id="LC6041" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_uninterpolateNumber</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6042" class="blob-num js-line-number" data-line-number="6042"></td>
        <td id="LC6042" class="blob-code blob-code-inner js-file-line">    b <span class="pl-k">=</span> (b <span class="pl-k">-=</span> a <span class="pl-k">=</span> <span class="pl-k">+</span>a) <span class="pl-k">||</span> <span class="pl-c1">1</span> / b;</td>
      </tr>
      <tr>
        <td id="L6043" class="blob-num js-line-number" data-line-number="6043"></td>
        <td id="LC6043" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6044" class="blob-num js-line-number" data-line-number="6044"></td>
        <td id="LC6044" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (x <span class="pl-k">-</span> a) / b;</td>
      </tr>
      <tr>
        <td id="L6045" class="blob-num js-line-number" data-line-number="6045"></td>
        <td id="LC6045" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6046" class="blob-num js-line-number" data-line-number="6046"></td>
        <td id="LC6046" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6047" class="blob-num js-line-number" data-line-number="6047"></td>
        <td id="LC6047" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_uninterpolateClamp</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6048" class="blob-num js-line-number" data-line-number="6048"></td>
        <td id="LC6048" class="blob-code blob-code-inner js-file-line">    b <span class="pl-k">=</span> (b <span class="pl-k">-=</span> a <span class="pl-k">=</span> <span class="pl-k">+</span>a) <span class="pl-k">||</span> <span class="pl-c1">1</span> / b;</td>
      </tr>
      <tr>
        <td id="L6049" class="blob-num js-line-number" data-line-number="6049"></td>
        <td id="LC6049" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6050" class="blob-num js-line-number" data-line-number="6050"></td>
        <td id="LC6050" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">1</span>, (x <span class="pl-k">-</span> a) / b));</td>
      </tr>
      <tr>
        <td id="L6051" class="blob-num js-line-number" data-line-number="6051"></td>
        <td id="LC6051" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6052" class="blob-num js-line-number" data-line-number="6052"></td>
        <td id="LC6052" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6053" class="blob-num js-line-number" data-line-number="6053"></td>
        <td id="LC6053" class="blob-code blob-code-inner js-file-line">  d3.layout <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L6054" class="blob-num js-line-number" data-line-number="6054"></td>
        <td id="LC6054" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">bundle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6055" class="blob-num js-line-number" data-line-number="6055"></td>
        <td id="LC6055" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">links</span>) {</td>
      </tr>
      <tr>
        <td id="L6056" class="blob-num js-line-number" data-line-number="6056"></td>
        <td id="LC6056" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> paths <span class="pl-k">=</span> [], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> links.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L6057" class="blob-num js-line-number" data-line-number="6057"></td>
        <td id="LC6057" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) paths.<span class="pl-c1">push</span>(d3_layout_bundlePath(links[i]));</td>
      </tr>
      <tr>
        <td id="L6058" class="blob-num js-line-number" data-line-number="6058"></td>
        <td id="LC6058" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> paths;</td>
      </tr>
      <tr>
        <td id="L6059" class="blob-num js-line-number" data-line-number="6059"></td>
        <td id="LC6059" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6060" class="blob-num js-line-number" data-line-number="6060"></td>
        <td id="LC6060" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6061" class="blob-num js-line-number" data-line-number="6061"></td>
        <td id="LC6061" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_bundlePath</span>(<span class="pl-smi">link</span>) {</td>
      </tr>
      <tr>
        <td id="L6062" class="blob-num js-line-number" data-line-number="6062"></td>
        <td id="LC6062" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> start <span class="pl-k">=</span> link.<span class="pl-c1">source</span>, end <span class="pl-k">=</span> link.<span class="pl-c1">target</span>, lca <span class="pl-k">=</span> d3_layout_bundleLeastCommonAncestor(start, end), points <span class="pl-k">=</span> [ start ];</td>
      </tr>
      <tr>
        <td id="L6063" class="blob-num js-line-number" data-line-number="6063"></td>
        <td id="LC6063" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (start <span class="pl-k">!==</span> lca) {</td>
      </tr>
      <tr>
        <td id="L6064" class="blob-num js-line-number" data-line-number="6064"></td>
        <td id="LC6064" class="blob-code blob-code-inner js-file-line">      start <span class="pl-k">=</span> start.<span class="pl-c1">parent</span>;</td>
      </tr>
      <tr>
        <td id="L6065" class="blob-num js-line-number" data-line-number="6065"></td>
        <td id="LC6065" class="blob-code blob-code-inner js-file-line">      points.<span class="pl-c1">push</span>(start);</td>
      </tr>
      <tr>
        <td id="L6066" class="blob-num js-line-number" data-line-number="6066"></td>
        <td id="LC6066" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6067" class="blob-num js-line-number" data-line-number="6067"></td>
        <td id="LC6067" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> k <span class="pl-k">=</span> points.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L6068" class="blob-num js-line-number" data-line-number="6068"></td>
        <td id="LC6068" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (end <span class="pl-k">!==</span> lca) {</td>
      </tr>
      <tr>
        <td id="L6069" class="blob-num js-line-number" data-line-number="6069"></td>
        <td id="LC6069" class="blob-code blob-code-inner js-file-line">      points.<span class="pl-c1">splice</span>(k, <span class="pl-c1">0</span>, end);</td>
      </tr>
      <tr>
        <td id="L6070" class="blob-num js-line-number" data-line-number="6070"></td>
        <td id="LC6070" class="blob-code blob-code-inner js-file-line">      end <span class="pl-k">=</span> end.<span class="pl-c1">parent</span>;</td>
      </tr>
      <tr>
        <td id="L6071" class="blob-num js-line-number" data-line-number="6071"></td>
        <td id="LC6071" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6072" class="blob-num js-line-number" data-line-number="6072"></td>
        <td id="LC6072" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> points;</td>
      </tr>
      <tr>
        <td id="L6073" class="blob-num js-line-number" data-line-number="6073"></td>
        <td id="LC6073" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6074" class="blob-num js-line-number" data-line-number="6074"></td>
        <td id="LC6074" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_bundleAncestors</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6075" class="blob-num js-line-number" data-line-number="6075"></td>
        <td id="LC6075" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ancestors <span class="pl-k">=</span> [], parent <span class="pl-k">=</span> node.<span class="pl-c1">parent</span>;</td>
      </tr>
      <tr>
        <td id="L6076" class="blob-num js-line-number" data-line-number="6076"></td>
        <td id="LC6076" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (parent <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L6077" class="blob-num js-line-number" data-line-number="6077"></td>
        <td id="LC6077" class="blob-code blob-code-inner js-file-line">      ancestors.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L6078" class="blob-num js-line-number" data-line-number="6078"></td>
        <td id="LC6078" class="blob-code blob-code-inner js-file-line">      node <span class="pl-k">=</span> parent;</td>
      </tr>
      <tr>
        <td id="L6079" class="blob-num js-line-number" data-line-number="6079"></td>
        <td id="LC6079" class="blob-code blob-code-inner js-file-line">      parent <span class="pl-k">=</span> parent.<span class="pl-c1">parent</span>;</td>
      </tr>
      <tr>
        <td id="L6080" class="blob-num js-line-number" data-line-number="6080"></td>
        <td id="LC6080" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6081" class="blob-num js-line-number" data-line-number="6081"></td>
        <td id="LC6081" class="blob-code blob-code-inner js-file-line">    ancestors.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L6082" class="blob-num js-line-number" data-line-number="6082"></td>
        <td id="LC6082" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ancestors;</td>
      </tr>
      <tr>
        <td id="L6083" class="blob-num js-line-number" data-line-number="6083"></td>
        <td id="LC6083" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6084" class="blob-num js-line-number" data-line-number="6084"></td>
        <td id="LC6084" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_bundleLeastCommonAncestor</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6085" class="blob-num js-line-number" data-line-number="6085"></td>
        <td id="LC6085" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (a <span class="pl-k">===</span> b) <span class="pl-k">return</span> a;</td>
      </tr>
      <tr>
        <td id="L6086" class="blob-num js-line-number" data-line-number="6086"></td>
        <td id="LC6086" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> aNodes <span class="pl-k">=</span> d3_layout_bundleAncestors(a), bNodes <span class="pl-k">=</span> d3_layout_bundleAncestors(b), aNode <span class="pl-k">=</span> aNodes.<span class="pl-c1">pop</span>(), bNode <span class="pl-k">=</span> bNodes.<span class="pl-c1">pop</span>(), sharedNode <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L6087" class="blob-num js-line-number" data-line-number="6087"></td>
        <td id="LC6087" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (aNode <span class="pl-k">===</span> bNode) {</td>
      </tr>
      <tr>
        <td id="L6088" class="blob-num js-line-number" data-line-number="6088"></td>
        <td id="LC6088" class="blob-code blob-code-inner js-file-line">      sharedNode <span class="pl-k">=</span> aNode;</td>
      </tr>
      <tr>
        <td id="L6089" class="blob-num js-line-number" data-line-number="6089"></td>
        <td id="LC6089" class="blob-code blob-code-inner js-file-line">      aNode <span class="pl-k">=</span> aNodes.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L6090" class="blob-num js-line-number" data-line-number="6090"></td>
        <td id="LC6090" class="blob-code blob-code-inner js-file-line">      bNode <span class="pl-k">=</span> bNodes.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L6091" class="blob-num js-line-number" data-line-number="6091"></td>
        <td id="LC6091" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6092" class="blob-num js-line-number" data-line-number="6092"></td>
        <td id="LC6092" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> sharedNode;</td>
      </tr>
      <tr>
        <td id="L6093" class="blob-num js-line-number" data-line-number="6093"></td>
        <td id="LC6093" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6094" class="blob-num js-line-number" data-line-number="6094"></td>
        <td id="LC6094" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">chord</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6095" class="blob-num js-line-number" data-line-number="6095"></td>
        <td id="LC6095" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> chord <span class="pl-k">=</span> {}, chords, groups, matrix, n, padding <span class="pl-k">=</span> <span class="pl-c1">0</span>, sortGroups, sortSubgroups, sortChords;</td>
      </tr>
      <tr>
        <td id="L6096" class="blob-num js-line-number" data-line-number="6096"></td>
        <td id="LC6096" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">relayout</span>() {</td>
      </tr>
      <tr>
        <td id="L6097" class="blob-num js-line-number" data-line-number="6097"></td>
        <td id="LC6097" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> subgroups <span class="pl-k">=</span> {}, groupSums <span class="pl-k">=</span> [], groupIndex <span class="pl-k">=</span> d3.range(n), subgroupIndex <span class="pl-k">=</span> [], k, x, x0, i, j;</td>
      </tr>
      <tr>
        <td id="L6098" class="blob-num js-line-number" data-line-number="6098"></td>
        <td id="LC6098" class="blob-code blob-code-inner js-file-line">      chords <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6099" class="blob-num js-line-number" data-line-number="6099"></td>
        <td id="LC6099" class="blob-code blob-code-inner js-file-line">      groups <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6100" class="blob-num js-line-number" data-line-number="6100"></td>
        <td id="LC6100" class="blob-code blob-code-inner js-file-line">      k <span class="pl-k">=</span> <span class="pl-c1">0</span>, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6101" class="blob-num js-line-number" data-line-number="6101"></td>
        <td id="LC6101" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6102" class="blob-num js-line-number" data-line-number="6102"></td>
        <td id="LC6102" class="blob-code blob-code-inner js-file-line">        x <span class="pl-k">=</span> <span class="pl-c1">0</span>, j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6103" class="blob-num js-line-number" data-line-number="6103"></td>
        <td id="LC6103" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6104" class="blob-num js-line-number" data-line-number="6104"></td>
        <td id="LC6104" class="blob-code blob-code-inner js-file-line">          x <span class="pl-k">+=</span> matrix[i][j];</td>
      </tr>
      <tr>
        <td id="L6105" class="blob-num js-line-number" data-line-number="6105"></td>
        <td id="LC6105" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6106" class="blob-num js-line-number" data-line-number="6106"></td>
        <td id="LC6106" class="blob-code blob-code-inner js-file-line">        groupSums.<span class="pl-c1">push</span>(x);</td>
      </tr>
      <tr>
        <td id="L6107" class="blob-num js-line-number" data-line-number="6107"></td>
        <td id="LC6107" class="blob-code blob-code-inner js-file-line">        subgroupIndex.<span class="pl-c1">push</span>(d3.range(n));</td>
      </tr>
      <tr>
        <td id="L6108" class="blob-num js-line-number" data-line-number="6108"></td>
        <td id="LC6108" class="blob-code blob-code-inner js-file-line">        k <span class="pl-k">+=</span> x;</td>
      </tr>
      <tr>
        <td id="L6109" class="blob-num js-line-number" data-line-number="6109"></td>
        <td id="LC6109" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6110" class="blob-num js-line-number" data-line-number="6110"></td>
        <td id="LC6110" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (sortGroups) {</td>
      </tr>
      <tr>
        <td id="L6111" class="blob-num js-line-number" data-line-number="6111"></td>
        <td id="LC6111" class="blob-code blob-code-inner js-file-line">        groupIndex.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6112" class="blob-num js-line-number" data-line-number="6112"></td>
        <td id="LC6112" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> sortGroups(groupSums[a], groupSums[b]);</td>
      </tr>
      <tr>
        <td id="L6113" class="blob-num js-line-number" data-line-number="6113"></td>
        <td id="LC6113" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6114" class="blob-num js-line-number" data-line-number="6114"></td>
        <td id="LC6114" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6115" class="blob-num js-line-number" data-line-number="6115"></td>
        <td id="LC6115" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (sortSubgroups) {</td>
      </tr>
      <tr>
        <td id="L6116" class="blob-num js-line-number" data-line-number="6116"></td>
        <td id="LC6116" class="blob-code blob-code-inner js-file-line">        subgroupIndex.forEach(<span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6117" class="blob-num js-line-number" data-line-number="6117"></td>
        <td id="LC6117" class="blob-code blob-code-inner js-file-line">          d.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6118" class="blob-num js-line-number" data-line-number="6118"></td>
        <td id="LC6118" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> sortSubgroups(matrix[i][a], matrix[i][b]);</td>
      </tr>
      <tr>
        <td id="L6119" class="blob-num js-line-number" data-line-number="6119"></td>
        <td id="LC6119" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L6120" class="blob-num js-line-number" data-line-number="6120"></td>
        <td id="LC6120" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6121" class="blob-num js-line-number" data-line-number="6121"></td>
        <td id="LC6121" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6122" class="blob-num js-line-number" data-line-number="6122"></td>
        <td id="LC6122" class="blob-code blob-code-inner js-file-line">      k <span class="pl-k">=</span> (Ï <span class="pl-k">-</span> padding <span class="pl-k">*</span> n) / k;</td>
      </tr>
      <tr>
        <td id="L6123" class="blob-num js-line-number" data-line-number="6123"></td>
        <td id="LC6123" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> <span class="pl-c1">0</span>, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6124" class="blob-num js-line-number" data-line-number="6124"></td>
        <td id="LC6124" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6125" class="blob-num js-line-number" data-line-number="6125"></td>
        <td id="LC6125" class="blob-code blob-code-inner js-file-line">        x0 <span class="pl-k">=</span> x, j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6126" class="blob-num js-line-number" data-line-number="6126"></td>
        <td id="LC6126" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6127" class="blob-num js-line-number" data-line-number="6127"></td>
        <td id="LC6127" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> di <span class="pl-k">=</span> groupIndex[i], dj <span class="pl-k">=</span> subgroupIndex[di][j], v <span class="pl-k">=</span> matrix[di][dj], a0 <span class="pl-k">=</span> x, a1 <span class="pl-k">=</span> x <span class="pl-k">+=</span> v <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6128" class="blob-num js-line-number" data-line-number="6128"></td>
        <td id="LC6128" class="blob-code blob-code-inner js-file-line">          subgroups[di <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> dj] <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L6129" class="blob-num js-line-number" data-line-number="6129"></td>
        <td id="LC6129" class="blob-code blob-code-inner js-file-line">            index<span class="pl-k">:</span> di,</td>
      </tr>
      <tr>
        <td id="L6130" class="blob-num js-line-number" data-line-number="6130"></td>
        <td id="LC6130" class="blob-code blob-code-inner js-file-line">            subindex<span class="pl-k">:</span> dj,</td>
      </tr>
      <tr>
        <td id="L6131" class="blob-num js-line-number" data-line-number="6131"></td>
        <td id="LC6131" class="blob-code blob-code-inner js-file-line">            startAngle<span class="pl-k">:</span> a0,</td>
      </tr>
      <tr>
        <td id="L6132" class="blob-num js-line-number" data-line-number="6132"></td>
        <td id="LC6132" class="blob-code blob-code-inner js-file-line">            endAngle<span class="pl-k">:</span> a1,</td>
      </tr>
      <tr>
        <td id="L6133" class="blob-num js-line-number" data-line-number="6133"></td>
        <td id="LC6133" class="blob-code blob-code-inner js-file-line">            value<span class="pl-k">:</span> v</td>
      </tr>
      <tr>
        <td id="L6134" class="blob-num js-line-number" data-line-number="6134"></td>
        <td id="LC6134" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L6135" class="blob-num js-line-number" data-line-number="6135"></td>
        <td id="LC6135" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6136" class="blob-num js-line-number" data-line-number="6136"></td>
        <td id="LC6136" class="blob-code blob-code-inner js-file-line">        groups[di] <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L6137" class="blob-num js-line-number" data-line-number="6137"></td>
        <td id="LC6137" class="blob-code blob-code-inner js-file-line">          index<span class="pl-k">:</span> di,</td>
      </tr>
      <tr>
        <td id="L6138" class="blob-num js-line-number" data-line-number="6138"></td>
        <td id="LC6138" class="blob-code blob-code-inner js-file-line">          startAngle<span class="pl-k">:</span> x0,</td>
      </tr>
      <tr>
        <td id="L6139" class="blob-num js-line-number" data-line-number="6139"></td>
        <td id="LC6139" class="blob-code blob-code-inner js-file-line">          endAngle<span class="pl-k">:</span> x,</td>
      </tr>
      <tr>
        <td id="L6140" class="blob-num js-line-number" data-line-number="6140"></td>
        <td id="LC6140" class="blob-code blob-code-inner js-file-line">          value<span class="pl-k">:</span> (x <span class="pl-k">-</span> x0) / k</td>
      </tr>
      <tr>
        <td id="L6141" class="blob-num js-line-number" data-line-number="6141"></td>
        <td id="LC6141" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6142" class="blob-num js-line-number" data-line-number="6142"></td>
        <td id="LC6142" class="blob-code blob-code-inner js-file-line">        x <span class="pl-k">+=</span> padding;</td>
      </tr>
      <tr>
        <td id="L6143" class="blob-num js-line-number" data-line-number="6143"></td>
        <td id="LC6143" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6144" class="blob-num js-line-number" data-line-number="6144"></td>
        <td id="LC6144" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6145" class="blob-num js-line-number" data-line-number="6145"></td>
        <td id="LC6145" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6146" class="blob-num js-line-number" data-line-number="6146"></td>
        <td id="LC6146" class="blob-code blob-code-inner js-file-line">        j <span class="pl-k">=</span> i <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6147" class="blob-num js-line-number" data-line-number="6147"></td>
        <td id="LC6147" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6148" class="blob-num js-line-number" data-line-number="6148"></td>
        <td id="LC6148" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> source <span class="pl-k">=</span> subgroups[i <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> j], target <span class="pl-k">=</span> subgroups[j <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> i];</td>
      </tr>
      <tr>
        <td id="L6149" class="blob-num js-line-number" data-line-number="6149"></td>
        <td id="LC6149" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (source.<span class="pl-c1">value</span> <span class="pl-k">||</span> target.<span class="pl-c1">value</span>) {</td>
      </tr>
      <tr>
        <td id="L6150" class="blob-num js-line-number" data-line-number="6150"></td>
        <td id="LC6150" class="blob-code blob-code-inner js-file-line">            chords.<span class="pl-c1">push</span>(source.<span class="pl-c1">value</span> <span class="pl-k">&lt;</span> target.<span class="pl-c1">value</span> <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L6151" class="blob-num js-line-number" data-line-number="6151"></td>
        <td id="LC6151" class="blob-code blob-code-inner js-file-line">              source<span class="pl-k">:</span> target,</td>
      </tr>
      <tr>
        <td id="L6152" class="blob-num js-line-number" data-line-number="6152"></td>
        <td id="LC6152" class="blob-code blob-code-inner js-file-line">              target<span class="pl-k">:</span> source</td>
      </tr>
      <tr>
        <td id="L6153" class="blob-num js-line-number" data-line-number="6153"></td>
        <td id="LC6153" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L6154" class="blob-num js-line-number" data-line-number="6154"></td>
        <td id="LC6154" class="blob-code blob-code-inner js-file-line">              source<span class="pl-k">:</span> source,</td>
      </tr>
      <tr>
        <td id="L6155" class="blob-num js-line-number" data-line-number="6155"></td>
        <td id="LC6155" class="blob-code blob-code-inner js-file-line">              target<span class="pl-k">:</span> target</td>
      </tr>
      <tr>
        <td id="L6156" class="blob-num js-line-number" data-line-number="6156"></td>
        <td id="LC6156" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6157" class="blob-num js-line-number" data-line-number="6157"></td>
        <td id="LC6157" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6158" class="blob-num js-line-number" data-line-number="6158"></td>
        <td id="LC6158" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6159" class="blob-num js-line-number" data-line-number="6159"></td>
        <td id="LC6159" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6160" class="blob-num js-line-number" data-line-number="6160"></td>
        <td id="LC6160" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (sortChords) resort();</td>
      </tr>
      <tr>
        <td id="L6161" class="blob-num js-line-number" data-line-number="6161"></td>
        <td id="LC6161" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6162" class="blob-num js-line-number" data-line-number="6162"></td>
        <td id="LC6162" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">resort</span>() {</td>
      </tr>
      <tr>
        <td id="L6163" class="blob-num js-line-number" data-line-number="6163"></td>
        <td id="LC6163" class="blob-code blob-code-inner js-file-line">      chords.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6164" class="blob-num js-line-number" data-line-number="6164"></td>
        <td id="LC6164" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> sortChords((a.<span class="pl-c1">source</span>.<span class="pl-c1">value</span> <span class="pl-k">+</span> a.<span class="pl-c1">target</span>.<span class="pl-c1">value</span>) / <span class="pl-c1">2</span>, (b.<span class="pl-c1">source</span>.<span class="pl-c1">value</span> <span class="pl-k">+</span> b.<span class="pl-c1">target</span>.<span class="pl-c1">value</span>) / <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L6165" class="blob-num js-line-number" data-line-number="6165"></td>
        <td id="LC6165" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6166" class="blob-num js-line-number" data-line-number="6166"></td>
        <td id="LC6166" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6167" class="blob-num js-line-number" data-line-number="6167"></td>
        <td id="LC6167" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">matrix</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6168" class="blob-num js-line-number" data-line-number="6168"></td>
        <td id="LC6168" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> matrix;</td>
      </tr>
      <tr>
        <td id="L6169" class="blob-num js-line-number" data-line-number="6169"></td>
        <td id="LC6169" class="blob-code blob-code-inner js-file-line">      n <span class="pl-k">=</span> (matrix <span class="pl-k">=</span> x) <span class="pl-k">&amp;&amp;</span> matrix.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L6170" class="blob-num js-line-number" data-line-number="6170"></td>
        <td id="LC6170" class="blob-code blob-code-inner js-file-line">      chords <span class="pl-k">=</span> groups <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L6171" class="blob-num js-line-number" data-line-number="6171"></td>
        <td id="LC6171" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L6172" class="blob-num js-line-number" data-line-number="6172"></td>
        <td id="LC6172" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6173" class="blob-num js-line-number" data-line-number="6173"></td>
        <td id="LC6173" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">padding</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6174" class="blob-num js-line-number" data-line-number="6174"></td>
        <td id="LC6174" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> padding;</td>
      </tr>
      <tr>
        <td id="L6175" class="blob-num js-line-number" data-line-number="6175"></td>
        <td id="LC6175" class="blob-code blob-code-inner js-file-line">      padding <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6176" class="blob-num js-line-number" data-line-number="6176"></td>
        <td id="LC6176" class="blob-code blob-code-inner js-file-line">      chords <span class="pl-k">=</span> groups <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L6177" class="blob-num js-line-number" data-line-number="6177"></td>
        <td id="LC6177" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L6178" class="blob-num js-line-number" data-line-number="6178"></td>
        <td id="LC6178" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6179" class="blob-num js-line-number" data-line-number="6179"></td>
        <td id="LC6179" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">sortGroups</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6180" class="blob-num js-line-number" data-line-number="6180"></td>
        <td id="LC6180" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> sortGroups;</td>
      </tr>
      <tr>
        <td id="L6181" class="blob-num js-line-number" data-line-number="6181"></td>
        <td id="LC6181" class="blob-code blob-code-inner js-file-line">      sortGroups <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6182" class="blob-num js-line-number" data-line-number="6182"></td>
        <td id="LC6182" class="blob-code blob-code-inner js-file-line">      chords <span class="pl-k">=</span> groups <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L6183" class="blob-num js-line-number" data-line-number="6183"></td>
        <td id="LC6183" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L6184" class="blob-num js-line-number" data-line-number="6184"></td>
        <td id="LC6184" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6185" class="blob-num js-line-number" data-line-number="6185"></td>
        <td id="LC6185" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">sortSubgroups</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6186" class="blob-num js-line-number" data-line-number="6186"></td>
        <td id="LC6186" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> sortSubgroups;</td>
      </tr>
      <tr>
        <td id="L6187" class="blob-num js-line-number" data-line-number="6187"></td>
        <td id="LC6187" class="blob-code blob-code-inner js-file-line">      sortSubgroups <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6188" class="blob-num js-line-number" data-line-number="6188"></td>
        <td id="LC6188" class="blob-code blob-code-inner js-file-line">      chords <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L6189" class="blob-num js-line-number" data-line-number="6189"></td>
        <td id="LC6189" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L6190" class="blob-num js-line-number" data-line-number="6190"></td>
        <td id="LC6190" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6191" class="blob-num js-line-number" data-line-number="6191"></td>
        <td id="LC6191" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">sortChords</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6192" class="blob-num js-line-number" data-line-number="6192"></td>
        <td id="LC6192" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> sortChords;</td>
      </tr>
      <tr>
        <td id="L6193" class="blob-num js-line-number" data-line-number="6193"></td>
        <td id="LC6193" class="blob-code blob-code-inner js-file-line">      sortChords <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6194" class="blob-num js-line-number" data-line-number="6194"></td>
        <td id="LC6194" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (chords) resort();</td>
      </tr>
      <tr>
        <td id="L6195" class="blob-num js-line-number" data-line-number="6195"></td>
        <td id="LC6195" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L6196" class="blob-num js-line-number" data-line-number="6196"></td>
        <td id="LC6196" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6197" class="blob-num js-line-number" data-line-number="6197"></td>
        <td id="LC6197" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">chords</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6198" class="blob-num js-line-number" data-line-number="6198"></td>
        <td id="LC6198" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>chords) relayout();</td>
      </tr>
      <tr>
        <td id="L6199" class="blob-num js-line-number" data-line-number="6199"></td>
        <td id="LC6199" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chords;</td>
      </tr>
      <tr>
        <td id="L6200" class="blob-num js-line-number" data-line-number="6200"></td>
        <td id="LC6200" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6201" class="blob-num js-line-number" data-line-number="6201"></td>
        <td id="LC6201" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">groups</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6202" class="blob-num js-line-number" data-line-number="6202"></td>
        <td id="LC6202" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>groups) relayout();</td>
      </tr>
      <tr>
        <td id="L6203" class="blob-num js-line-number" data-line-number="6203"></td>
        <td id="LC6203" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L6204" class="blob-num js-line-number" data-line-number="6204"></td>
        <td id="LC6204" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6205" class="blob-num js-line-number" data-line-number="6205"></td>
        <td id="LC6205" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L6206" class="blob-num js-line-number" data-line-number="6206"></td>
        <td id="LC6206" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6207" class="blob-num js-line-number" data-line-number="6207"></td>
        <td id="LC6207" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">force</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6208" class="blob-num js-line-number" data-line-number="6208"></td>
        <td id="LC6208" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> force <span class="pl-k">=</span> {}, <span class="pl-c1">event</span> <span class="pl-k">=</span> d3.dispatch(<span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>tick<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>), size <span class="pl-k">=</span> [ <span class="pl-c1">1</span>, <span class="pl-c1">1</span> ], drag, alpha, friction <span class="pl-k">=</span> .<span class="pl-c1">9</span>, linkDistance <span class="pl-k">=</span> d3_layout_forceLinkDistance, linkStrength <span class="pl-k">=</span> d3_layout_forceLinkStrength, charge <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">30</span>, chargeDistance2 <span class="pl-k">=</span> d3_layout_forceChargeDistance2, gravity <span class="pl-k">=</span> .<span class="pl-c1">1</span>, theta2 <span class="pl-k">=</span> .<span class="pl-c1">64</span>, nodes <span class="pl-k">=</span> [], links <span class="pl-k">=</span> [], distances, strengths, charges;</td>
      </tr>
      <tr>
        <td id="L6209" class="blob-num js-line-number" data-line-number="6209"></td>
        <td id="LC6209" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">repulse</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6210" class="blob-num js-line-number" data-line-number="6210"></td>
        <td id="LC6210" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">quad</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">_</span>, <span class="pl-smi">x2</span>) {</td>
      </tr>
      <tr>
        <td id="L6211" class="blob-num js-line-number" data-line-number="6211"></td>
        <td id="LC6211" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (quad.point <span class="pl-k">!==</span> node) {</td>
      </tr>
      <tr>
        <td id="L6212" class="blob-num js-line-number" data-line-number="6212"></td>
        <td id="LC6212" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> dx <span class="pl-k">=</span> quad.cx <span class="pl-k">-</span> node.<span class="pl-c1">x</span>, dy <span class="pl-k">=</span> quad.cy <span class="pl-k">-</span> node.<span class="pl-c1">y</span>, dw <span class="pl-k">=</span> x2 <span class="pl-k">-</span> x1, dn <span class="pl-k">=</span> dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy;</td>
      </tr>
      <tr>
        <td id="L6213" class="blob-num js-line-number" data-line-number="6213"></td>
        <td id="LC6213" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (dw <span class="pl-k">*</span> dw / theta2 <span class="pl-k">&lt;</span> dn) {</td>
      </tr>
      <tr>
        <td id="L6214" class="blob-num js-line-number" data-line-number="6214"></td>
        <td id="LC6214" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (dn <span class="pl-k">&lt;</span> chargeDistance2) {</td>
      </tr>
      <tr>
        <td id="L6215" class="blob-num js-line-number" data-line-number="6215"></td>
        <td id="LC6215" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> k <span class="pl-k">=</span> quad.charge / dn;</td>
      </tr>
      <tr>
        <td id="L6216" class="blob-num js-line-number" data-line-number="6216"></td>
        <td id="LC6216" class="blob-code blob-code-inner js-file-line">              node.px <span class="pl-k">-=</span> dx <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6217" class="blob-num js-line-number" data-line-number="6217"></td>
        <td id="LC6217" class="blob-code blob-code-inner js-file-line">              node.py <span class="pl-k">-=</span> dy <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6218" class="blob-num js-line-number" data-line-number="6218"></td>
        <td id="LC6218" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L6219" class="blob-num js-line-number" data-line-number="6219"></td>
        <td id="LC6219" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L6220" class="blob-num js-line-number" data-line-number="6220"></td>
        <td id="LC6220" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6221" class="blob-num js-line-number" data-line-number="6221"></td>
        <td id="LC6221" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (quad.point <span class="pl-k">&amp;&amp;</span> dn <span class="pl-k">&amp;&amp;</span> dn <span class="pl-k">&lt;</span> chargeDistance2) {</td>
      </tr>
      <tr>
        <td id="L6222" class="blob-num js-line-number" data-line-number="6222"></td>
        <td id="LC6222" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> k <span class="pl-k">=</span> quad.pointCharge / dn;</td>
      </tr>
      <tr>
        <td id="L6223" class="blob-num js-line-number" data-line-number="6223"></td>
        <td id="LC6223" class="blob-code blob-code-inner js-file-line">            node.px <span class="pl-k">-=</span> dx <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6224" class="blob-num js-line-number" data-line-number="6224"></td>
        <td id="LC6224" class="blob-code blob-code-inner js-file-line">            node.py <span class="pl-k">-=</span> dy <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6225" class="blob-num js-line-number" data-line-number="6225"></td>
        <td id="LC6225" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6226" class="blob-num js-line-number" data-line-number="6226"></td>
        <td id="LC6226" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6227" class="blob-num js-line-number" data-line-number="6227"></td>
        <td id="LC6227" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">!</span>quad.charge;</td>
      </tr>
      <tr>
        <td id="L6228" class="blob-num js-line-number" data-line-number="6228"></td>
        <td id="LC6228" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L6229" class="blob-num js-line-number" data-line-number="6229"></td>
        <td id="LC6229" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6230" class="blob-num js-line-number" data-line-number="6230"></td>
        <td id="LC6230" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">tick</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6231" class="blob-num js-line-number" data-line-number="6231"></td>
        <td id="LC6231" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((alpha <span class="pl-k">*=</span> .<span class="pl-c1">99</span>) <span class="pl-k">&lt;</span> .<span class="pl-c1">005</span>) {</td>
      </tr>
      <tr>
        <td id="L6232" class="blob-num js-line-number" data-line-number="6232"></td>
        <td id="LC6232" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">event</span>.end({</td>
      </tr>
      <tr>
        <td id="L6233" class="blob-num js-line-number" data-line-number="6233"></td>
        <td id="LC6233" class="blob-code blob-code-inner js-file-line">          type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L6234" class="blob-num js-line-number" data-line-number="6234"></td>
        <td id="LC6234" class="blob-code blob-code-inner js-file-line">          alpha<span class="pl-k">:</span> alpha <span class="pl-k">=</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L6235" class="blob-num js-line-number" data-line-number="6235"></td>
        <td id="LC6235" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6236" class="blob-num js-line-number" data-line-number="6236"></td>
        <td id="LC6236" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L6237" class="blob-num js-line-number" data-line-number="6237"></td>
        <td id="LC6237" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6238" class="blob-num js-line-number" data-line-number="6238"></td>
        <td id="LC6238" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> nodes.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> links.<span class="pl-c1">length</span>, q, i, o, s, t, l, k, x, y;</td>
      </tr>
      <tr>
        <td id="L6239" class="blob-num js-line-number" data-line-number="6239"></td>
        <td id="LC6239" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L6240" class="blob-num js-line-number" data-line-number="6240"></td>
        <td id="LC6240" class="blob-code blob-code-inner js-file-line">        o <span class="pl-k">=</span> links[i];</td>
      </tr>
      <tr>
        <td id="L6241" class="blob-num js-line-number" data-line-number="6241"></td>
        <td id="LC6241" class="blob-code blob-code-inner js-file-line">        s <span class="pl-k">=</span> o.<span class="pl-c1">source</span>;</td>
      </tr>
      <tr>
        <td id="L6242" class="blob-num js-line-number" data-line-number="6242"></td>
        <td id="LC6242" class="blob-code blob-code-inner js-file-line">        t <span class="pl-k">=</span> o.<span class="pl-c1">target</span>;</td>
      </tr>
      <tr>
        <td id="L6243" class="blob-num js-line-number" data-line-number="6243"></td>
        <td id="LC6243" class="blob-code blob-code-inner js-file-line">        x <span class="pl-k">=</span> t.<span class="pl-c1">x</span> <span class="pl-k">-</span> s.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L6244" class="blob-num js-line-number" data-line-number="6244"></td>
        <td id="LC6244" class="blob-code blob-code-inner js-file-line">        y <span class="pl-k">=</span> t.<span class="pl-c1">y</span> <span class="pl-k">-</span> s.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L6245" class="blob-num js-line-number" data-line-number="6245"></td>
        <td id="LC6245" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (l <span class="pl-k">=</span> x <span class="pl-k">*</span> x <span class="pl-k">+</span> y <span class="pl-k">*</span> y) {</td>
      </tr>
      <tr>
        <td id="L6246" class="blob-num js-line-number" data-line-number="6246"></td>
        <td id="LC6246" class="blob-code blob-code-inner js-file-line">          l <span class="pl-k">=</span> alpha <span class="pl-k">*</span> strengths[i] <span class="pl-k">*</span> ((l <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(l)) <span class="pl-k">-</span> distances[i]) / l;</td>
      </tr>
      <tr>
        <td id="L6247" class="blob-num js-line-number" data-line-number="6247"></td>
        <td id="LC6247" class="blob-code blob-code-inner js-file-line">          x <span class="pl-k">*=</span> l;</td>
      </tr>
      <tr>
        <td id="L6248" class="blob-num js-line-number" data-line-number="6248"></td>
        <td id="LC6248" class="blob-code blob-code-inner js-file-line">          y <span class="pl-k">*=</span> l;</td>
      </tr>
      <tr>
        <td id="L6249" class="blob-num js-line-number" data-line-number="6249"></td>
        <td id="LC6249" class="blob-code blob-code-inner js-file-line">          t.<span class="pl-c1">x</span> <span class="pl-k">-=</span> x <span class="pl-k">*</span> (k <span class="pl-k">=</span> s.weight / (t.weight <span class="pl-k">+</span> s.weight));</td>
      </tr>
      <tr>
        <td id="L6250" class="blob-num js-line-number" data-line-number="6250"></td>
        <td id="LC6250" class="blob-code blob-code-inner js-file-line">          t.<span class="pl-c1">y</span> <span class="pl-k">-=</span> y <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6251" class="blob-num js-line-number" data-line-number="6251"></td>
        <td id="LC6251" class="blob-code blob-code-inner js-file-line">          s.<span class="pl-c1">x</span> <span class="pl-k">+=</span> x <span class="pl-k">*</span> (k <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> k);</td>
      </tr>
      <tr>
        <td id="L6252" class="blob-num js-line-number" data-line-number="6252"></td>
        <td id="LC6252" class="blob-code blob-code-inner js-file-line">          s.<span class="pl-c1">y</span> <span class="pl-k">+=</span> y <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6253" class="blob-num js-line-number" data-line-number="6253"></td>
        <td id="LC6253" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6254" class="blob-num js-line-number" data-line-number="6254"></td>
        <td id="LC6254" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6255" class="blob-num js-line-number" data-line-number="6255"></td>
        <td id="LC6255" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (k <span class="pl-k">=</span> alpha <span class="pl-k">*</span> gravity) {</td>
      </tr>
      <tr>
        <td id="L6256" class="blob-num js-line-number" data-line-number="6256"></td>
        <td id="LC6256" class="blob-code blob-code-inner js-file-line">        x <span class="pl-k">=</span> size[<span class="pl-c1">0</span>] / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L6257" class="blob-num js-line-number" data-line-number="6257"></td>
        <td id="LC6257" class="blob-code blob-code-inner js-file-line">        y <span class="pl-k">=</span> size[<span class="pl-c1">1</span>] / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L6258" class="blob-num js-line-number" data-line-number="6258"></td>
        <td id="LC6258" class="blob-code blob-code-inner js-file-line">        i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6259" class="blob-num js-line-number" data-line-number="6259"></td>
        <td id="LC6259" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (k) <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6260" class="blob-num js-line-number" data-line-number="6260"></td>
        <td id="LC6260" class="blob-code blob-code-inner js-file-line">          o <span class="pl-k">=</span> nodes[i];</td>
      </tr>
      <tr>
        <td id="L6261" class="blob-num js-line-number" data-line-number="6261"></td>
        <td id="LC6261" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">x</span> <span class="pl-k">+=</span> (x <span class="pl-k">-</span> o.<span class="pl-c1">x</span>) <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6262" class="blob-num js-line-number" data-line-number="6262"></td>
        <td id="LC6262" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">y</span> <span class="pl-k">+=</span> (y <span class="pl-k">-</span> o.<span class="pl-c1">y</span>) <span class="pl-k">*</span> k;</td>
      </tr>
      <tr>
        <td id="L6263" class="blob-num js-line-number" data-line-number="6263"></td>
        <td id="LC6263" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6264" class="blob-num js-line-number" data-line-number="6264"></td>
        <td id="LC6264" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6265" class="blob-num js-line-number" data-line-number="6265"></td>
        <td id="LC6265" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (charge) {</td>
      </tr>
      <tr>
        <td id="L6266" class="blob-num js-line-number" data-line-number="6266"></td>
        <td id="LC6266" class="blob-code blob-code-inner js-file-line">        d3_layout_forceAccumulate(q <span class="pl-k">=</span> d3.geom.quadtree(nodes), alpha, charges);</td>
      </tr>
      <tr>
        <td id="L6267" class="blob-num js-line-number" data-line-number="6267"></td>
        <td id="LC6267" class="blob-code blob-code-inner js-file-line">        i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6268" class="blob-num js-line-number" data-line-number="6268"></td>
        <td id="LC6268" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6269" class="blob-num js-line-number" data-line-number="6269"></td>
        <td id="LC6269" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>(o <span class="pl-k">=</span> nodes[i]).fixed) {</td>
      </tr>
      <tr>
        <td id="L6270" class="blob-num js-line-number" data-line-number="6270"></td>
        <td id="LC6270" class="blob-code blob-code-inner js-file-line">            q.visit(repulse(o));</td>
      </tr>
      <tr>
        <td id="L6271" class="blob-num js-line-number" data-line-number="6271"></td>
        <td id="LC6271" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6272" class="blob-num js-line-number" data-line-number="6272"></td>
        <td id="LC6272" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6273" class="blob-num js-line-number" data-line-number="6273"></td>
        <td id="LC6273" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6274" class="blob-num js-line-number" data-line-number="6274"></td>
        <td id="LC6274" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6275" class="blob-num js-line-number" data-line-number="6275"></td>
        <td id="LC6275" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6276" class="blob-num js-line-number" data-line-number="6276"></td>
        <td id="LC6276" class="blob-code blob-code-inner js-file-line">        o <span class="pl-k">=</span> nodes[i];</td>
      </tr>
      <tr>
        <td id="L6277" class="blob-num js-line-number" data-line-number="6277"></td>
        <td id="LC6277" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (o.fixed) {</td>
      </tr>
      <tr>
        <td id="L6278" class="blob-num js-line-number" data-line-number="6278"></td>
        <td id="LC6278" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">x</span> <span class="pl-k">=</span> o.px;</td>
      </tr>
      <tr>
        <td id="L6279" class="blob-num js-line-number" data-line-number="6279"></td>
        <td id="LC6279" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">y</span> <span class="pl-k">=</span> o.py;</td>
      </tr>
      <tr>
        <td id="L6280" class="blob-num js-line-number" data-line-number="6280"></td>
        <td id="LC6280" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6281" class="blob-num js-line-number" data-line-number="6281"></td>
        <td id="LC6281" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">x</span> <span class="pl-k">-=</span> (o.px <span class="pl-k">-</span> (o.px <span class="pl-k">=</span> o.<span class="pl-c1">x</span>)) <span class="pl-k">*</span> friction;</td>
      </tr>
      <tr>
        <td id="L6282" class="blob-num js-line-number" data-line-number="6282"></td>
        <td id="LC6282" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">y</span> <span class="pl-k">-=</span> (o.py <span class="pl-k">-</span> (o.py <span class="pl-k">=</span> o.<span class="pl-c1">y</span>)) <span class="pl-k">*</span> friction;</td>
      </tr>
      <tr>
        <td id="L6283" class="blob-num js-line-number" data-line-number="6283"></td>
        <td id="LC6283" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6284" class="blob-num js-line-number" data-line-number="6284"></td>
        <td id="LC6284" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6285" class="blob-num js-line-number" data-line-number="6285"></td>
        <td id="LC6285" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.tick({</td>
      </tr>
      <tr>
        <td id="L6286" class="blob-num js-line-number" data-line-number="6286"></td>
        <td id="LC6286" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>tick<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L6287" class="blob-num js-line-number" data-line-number="6287"></td>
        <td id="LC6287" class="blob-code blob-code-inner js-file-line">        alpha<span class="pl-k">:</span> alpha</td>
      </tr>
      <tr>
        <td id="L6288" class="blob-num js-line-number" data-line-number="6288"></td>
        <td id="LC6288" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6289" class="blob-num js-line-number" data-line-number="6289"></td>
        <td id="LC6289" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6290" class="blob-num js-line-number" data-line-number="6290"></td>
        <td id="LC6290" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">nodes</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6291" class="blob-num js-line-number" data-line-number="6291"></td>
        <td id="LC6291" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> nodes;</td>
      </tr>
      <tr>
        <td id="L6292" class="blob-num js-line-number" data-line-number="6292"></td>
        <td id="LC6292" class="blob-code blob-code-inner js-file-line">      nodes <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6293" class="blob-num js-line-number" data-line-number="6293"></td>
        <td id="LC6293" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6294" class="blob-num js-line-number" data-line-number="6294"></td>
        <td id="LC6294" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6295" class="blob-num js-line-number" data-line-number="6295"></td>
        <td id="LC6295" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">links</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6296" class="blob-num js-line-number" data-line-number="6296"></td>
        <td id="LC6296" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> links;</td>
      </tr>
      <tr>
        <td id="L6297" class="blob-num js-line-number" data-line-number="6297"></td>
        <td id="LC6297" class="blob-code blob-code-inner js-file-line">      links <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6298" class="blob-num js-line-number" data-line-number="6298"></td>
        <td id="LC6298" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6299" class="blob-num js-line-number" data-line-number="6299"></td>
        <td id="LC6299" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6300" class="blob-num js-line-number" data-line-number="6300"></td>
        <td id="LC6300" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6301" class="blob-num js-line-number" data-line-number="6301"></td>
        <td id="LC6301" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L6302" class="blob-num js-line-number" data-line-number="6302"></td>
        <td id="LC6302" class="blob-code blob-code-inner js-file-line">      size <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6303" class="blob-num js-line-number" data-line-number="6303"></td>
        <td id="LC6303" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6304" class="blob-num js-line-number" data-line-number="6304"></td>
        <td id="LC6304" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6305" class="blob-num js-line-number" data-line-number="6305"></td>
        <td id="LC6305" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">linkDistance</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6306" class="blob-num js-line-number" data-line-number="6306"></td>
        <td id="LC6306" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> linkDistance;</td>
      </tr>
      <tr>
        <td id="L6307" class="blob-num js-line-number" data-line-number="6307"></td>
        <td id="LC6307" class="blob-code blob-code-inner js-file-line">      linkDistance <span class="pl-k">=</span> <span class="pl-k">typeof</span> x <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> x <span class="pl-k">:</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L6308" class="blob-num js-line-number" data-line-number="6308"></td>
        <td id="LC6308" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6309" class="blob-num js-line-number" data-line-number="6309"></td>
        <td id="LC6309" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6310" class="blob-num js-line-number" data-line-number="6310"></td>
        <td id="LC6310" class="blob-code blob-code-inner js-file-line">    force.distance <span class="pl-k">=</span> force.linkDistance;</td>
      </tr>
      <tr>
        <td id="L6311" class="blob-num js-line-number" data-line-number="6311"></td>
        <td id="LC6311" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">linkStrength</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6312" class="blob-num js-line-number" data-line-number="6312"></td>
        <td id="LC6312" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> linkStrength;</td>
      </tr>
      <tr>
        <td id="L6313" class="blob-num js-line-number" data-line-number="6313"></td>
        <td id="LC6313" class="blob-code blob-code-inner js-file-line">      linkStrength <span class="pl-k">=</span> <span class="pl-k">typeof</span> x <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> x <span class="pl-k">:</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L6314" class="blob-num js-line-number" data-line-number="6314"></td>
        <td id="LC6314" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6315" class="blob-num js-line-number" data-line-number="6315"></td>
        <td id="LC6315" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6316" class="blob-num js-line-number" data-line-number="6316"></td>
        <td id="LC6316" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">friction</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6317" class="blob-num js-line-number" data-line-number="6317"></td>
        <td id="LC6317" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> friction;</td>
      </tr>
      <tr>
        <td id="L6318" class="blob-num js-line-number" data-line-number="6318"></td>
        <td id="LC6318" class="blob-code blob-code-inner js-file-line">      friction <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L6319" class="blob-num js-line-number" data-line-number="6319"></td>
        <td id="LC6319" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6320" class="blob-num js-line-number" data-line-number="6320"></td>
        <td id="LC6320" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6321" class="blob-num js-line-number" data-line-number="6321"></td>
        <td id="LC6321" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">charge</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6322" class="blob-num js-line-number" data-line-number="6322"></td>
        <td id="LC6322" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> charge;</td>
      </tr>
      <tr>
        <td id="L6323" class="blob-num js-line-number" data-line-number="6323"></td>
        <td id="LC6323" class="blob-code blob-code-inner js-file-line">      charge <span class="pl-k">=</span> <span class="pl-k">typeof</span> x <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> x <span class="pl-k">:</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L6324" class="blob-num js-line-number" data-line-number="6324"></td>
        <td id="LC6324" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6325" class="blob-num js-line-number" data-line-number="6325"></td>
        <td id="LC6325" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6326" class="blob-num js-line-number" data-line-number="6326"></td>
        <td id="LC6326" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">chargeDistance</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6327" class="blob-num js-line-number" data-line-number="6327"></td>
        <td id="LC6327" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(chargeDistance2);</td>
      </tr>
      <tr>
        <td id="L6328" class="blob-num js-line-number" data-line-number="6328"></td>
        <td id="LC6328" class="blob-code blob-code-inner js-file-line">      chargeDistance2 <span class="pl-k">=</span> x <span class="pl-k">*</span> x;</td>
      </tr>
      <tr>
        <td id="L6329" class="blob-num js-line-number" data-line-number="6329"></td>
        <td id="LC6329" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6330" class="blob-num js-line-number" data-line-number="6330"></td>
        <td id="LC6330" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6331" class="blob-num js-line-number" data-line-number="6331"></td>
        <td id="LC6331" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">gravity</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6332" class="blob-num js-line-number" data-line-number="6332"></td>
        <td id="LC6332" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> gravity;</td>
      </tr>
      <tr>
        <td id="L6333" class="blob-num js-line-number" data-line-number="6333"></td>
        <td id="LC6333" class="blob-code blob-code-inner js-file-line">      gravity <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L6334" class="blob-num js-line-number" data-line-number="6334"></td>
        <td id="LC6334" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6335" class="blob-num js-line-number" data-line-number="6335"></td>
        <td id="LC6335" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6336" class="blob-num js-line-number" data-line-number="6336"></td>
        <td id="LC6336" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">theta</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6337" class="blob-num js-line-number" data-line-number="6337"></td>
        <td id="LC6337" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(theta2);</td>
      </tr>
      <tr>
        <td id="L6338" class="blob-num js-line-number" data-line-number="6338"></td>
        <td id="LC6338" class="blob-code blob-code-inner js-file-line">      theta2 <span class="pl-k">=</span> x <span class="pl-k">*</span> x;</td>
      </tr>
      <tr>
        <td id="L6339" class="blob-num js-line-number" data-line-number="6339"></td>
        <td id="LC6339" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6340" class="blob-num js-line-number" data-line-number="6340"></td>
        <td id="LC6340" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6341" class="blob-num js-line-number" data-line-number="6341"></td>
        <td id="LC6341" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">alpha</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6342" class="blob-num js-line-number" data-line-number="6342"></td>
        <td id="LC6342" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> alpha;</td>
      </tr>
      <tr>
        <td id="L6343" class="blob-num js-line-number" data-line-number="6343"></td>
        <td id="LC6343" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L6344" class="blob-num js-line-number" data-line-number="6344"></td>
        <td id="LC6344" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (alpha) {</td>
      </tr>
      <tr>
        <td id="L6345" class="blob-num js-line-number" data-line-number="6345"></td>
        <td id="LC6345" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) alpha <span class="pl-k">=</span> x; <span class="pl-k">else</span> alpha <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6346" class="blob-num js-line-number" data-line-number="6346"></td>
        <td id="LC6346" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (x <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L6347" class="blob-num js-line-number" data-line-number="6347"></td>
        <td id="LC6347" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">event</span>.<span class="pl-c1">start</span>({</td>
      </tr>
      <tr>
        <td id="L6348" class="blob-num js-line-number" data-line-number="6348"></td>
        <td id="LC6348" class="blob-code blob-code-inner js-file-line">          type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L6349" class="blob-num js-line-number" data-line-number="6349"></td>
        <td id="LC6349" class="blob-code blob-code-inner js-file-line">          alpha<span class="pl-k">:</span> alpha <span class="pl-k">=</span> x</td>
      </tr>
      <tr>
        <td id="L6350" class="blob-num js-line-number" data-line-number="6350"></td>
        <td id="LC6350" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6351" class="blob-num js-line-number" data-line-number="6351"></td>
        <td id="LC6351" class="blob-code blob-code-inner js-file-line">        d3.timer(force.tick);</td>
      </tr>
      <tr>
        <td id="L6352" class="blob-num js-line-number" data-line-number="6352"></td>
        <td id="LC6352" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6353" class="blob-num js-line-number" data-line-number="6353"></td>
        <td id="LC6353" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force;</td>
      </tr>
      <tr>
        <td id="L6354" class="blob-num js-line-number" data-line-number="6354"></td>
        <td id="LC6354" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6355" class="blob-num js-line-number" data-line-number="6355"></td>
        <td id="LC6355" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">start</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6356" class="blob-num js-line-number" data-line-number="6356"></td>
        <td id="LC6356" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i, n <span class="pl-k">=</span> nodes.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> links.<span class="pl-c1">length</span>, w <span class="pl-k">=</span> size[<span class="pl-c1">0</span>], h <span class="pl-k">=</span> size[<span class="pl-c1">1</span>], neighbors, o;</td>
      </tr>
      <tr>
        <td id="L6357" class="blob-num js-line-number" data-line-number="6357"></td>
        <td id="LC6357" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L6358" class="blob-num js-line-number" data-line-number="6358"></td>
        <td id="LC6358" class="blob-code blob-code-inner js-file-line">        (o <span class="pl-k">=</span> nodes[i]).<span class="pl-c1">index</span> <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L6359" class="blob-num js-line-number" data-line-number="6359"></td>
        <td id="LC6359" class="blob-code blob-code-inner js-file-line">        o.weight <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6360" class="blob-num js-line-number" data-line-number="6360"></td>
        <td id="LC6360" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6361" class="blob-num js-line-number" data-line-number="6361"></td>
        <td id="LC6361" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L6362" class="blob-num js-line-number" data-line-number="6362"></td>
        <td id="LC6362" class="blob-code blob-code-inner js-file-line">        o <span class="pl-k">=</span> links[i];</td>
      </tr>
      <tr>
        <td id="L6363" class="blob-num js-line-number" data-line-number="6363"></td>
        <td id="LC6363" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> o.<span class="pl-c1">source</span> <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>) o.<span class="pl-c1">source</span> <span class="pl-k">=</span> nodes[o.<span class="pl-c1">source</span>];</td>
      </tr>
      <tr>
        <td id="L6364" class="blob-num js-line-number" data-line-number="6364"></td>
        <td id="LC6364" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">typeof</span> o.<span class="pl-c1">target</span> <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>) o.<span class="pl-c1">target</span> <span class="pl-k">=</span> nodes[o.<span class="pl-c1">target</span>];</td>
      </tr>
      <tr>
        <td id="L6365" class="blob-num js-line-number" data-line-number="6365"></td>
        <td id="LC6365" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">++</span>o.<span class="pl-c1">source</span>.weight;</td>
      </tr>
      <tr>
        <td id="L6366" class="blob-num js-line-number" data-line-number="6366"></td>
        <td id="LC6366" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">++</span>o.<span class="pl-c1">target</span>.weight;</td>
      </tr>
      <tr>
        <td id="L6367" class="blob-num js-line-number" data-line-number="6367"></td>
        <td id="LC6367" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6368" class="blob-num js-line-number" data-line-number="6368"></td>
        <td id="LC6368" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L6369" class="blob-num js-line-number" data-line-number="6369"></td>
        <td id="LC6369" class="blob-code blob-code-inner js-file-line">        o <span class="pl-k">=</span> nodes[i];</td>
      </tr>
      <tr>
        <td id="L6370" class="blob-num js-line-number" data-line-number="6370"></td>
        <td id="LC6370" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(o.<span class="pl-c1">x</span>)) o.<span class="pl-c1">x</span> <span class="pl-k">=</span> position(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, w);</td>
      </tr>
      <tr>
        <td id="L6371" class="blob-num js-line-number" data-line-number="6371"></td>
        <td id="LC6371" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(o.<span class="pl-c1">y</span>)) o.<span class="pl-c1">y</span> <span class="pl-k">=</span> position(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, h);</td>
      </tr>
      <tr>
        <td id="L6372" class="blob-num js-line-number" data-line-number="6372"></td>
        <td id="LC6372" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(o.px)) o.px <span class="pl-k">=</span> o.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L6373" class="blob-num js-line-number" data-line-number="6373"></td>
        <td id="LC6373" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(o.py)) o.py <span class="pl-k">=</span> o.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L6374" class="blob-num js-line-number" data-line-number="6374"></td>
        <td id="LC6374" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6375" class="blob-num js-line-number" data-line-number="6375"></td>
        <td id="LC6375" class="blob-code blob-code-inner js-file-line">      distances <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6376" class="blob-num js-line-number" data-line-number="6376"></td>
        <td id="LC6376" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> linkDistance <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>i) distances[i] <span class="pl-k">=</span> <span class="pl-k">+</span>linkDistance.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, links[i], i); <span class="pl-k">else</span> <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>i) distances[i] <span class="pl-k">=</span> linkDistance;</td>
      </tr>
      <tr>
        <td id="L6377" class="blob-num js-line-number" data-line-number="6377"></td>
        <td id="LC6377" class="blob-code blob-code-inner js-file-line">      strengths <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6378" class="blob-num js-line-number" data-line-number="6378"></td>
        <td id="LC6378" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> linkStrength <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>i) strengths[i] <span class="pl-k">=</span> <span class="pl-k">+</span>linkStrength.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, links[i], i); <span class="pl-k">else</span> <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>i) strengths[i] <span class="pl-k">=</span> linkStrength;</td>
      </tr>
      <tr>
        <td id="L6379" class="blob-num js-line-number" data-line-number="6379"></td>
        <td id="LC6379" class="blob-code blob-code-inner js-file-line">      charges <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6380" class="blob-num js-line-number" data-line-number="6380"></td>
        <td id="LC6380" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> charge <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) charges[i] <span class="pl-k">=</span> <span class="pl-k">+</span>charge.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, nodes[i], i); <span class="pl-k">else</span> <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) charges[i] <span class="pl-k">=</span> charge;</td>
      </tr>
      <tr>
        <td id="L6381" class="blob-num js-line-number" data-line-number="6381"></td>
        <td id="LC6381" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">position</span>(<span class="pl-smi">dimension</span>, <span class="pl-smi">size</span>) {</td>
      </tr>
      <tr>
        <td id="L6382" class="blob-num js-line-number" data-line-number="6382"></td>
        <td id="LC6382" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>neighbors) {</td>
      </tr>
      <tr>
        <td id="L6383" class="blob-num js-line-number" data-line-number="6383"></td>
        <td id="LC6383" class="blob-code blob-code-inner js-file-line">          neighbors <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(n);</td>
      </tr>
      <tr>
        <td id="L6384" class="blob-num js-line-number" data-line-number="6384"></td>
        <td id="LC6384" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>j) {</td>
      </tr>
      <tr>
        <td id="L6385" class="blob-num js-line-number" data-line-number="6385"></td>
        <td id="LC6385" class="blob-code blob-code-inner js-file-line">            neighbors[j] <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6386" class="blob-num js-line-number" data-line-number="6386"></td>
        <td id="LC6386" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6387" class="blob-num js-line-number" data-line-number="6387"></td>
        <td id="LC6387" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) {</td>
      </tr>
      <tr>
        <td id="L6388" class="blob-num js-line-number" data-line-number="6388"></td>
        <td id="LC6388" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> o <span class="pl-k">=</span> links[j];</td>
      </tr>
      <tr>
        <td id="L6389" class="blob-num js-line-number" data-line-number="6389"></td>
        <td id="LC6389" class="blob-code blob-code-inner js-file-line">            neighbors[o.<span class="pl-c1">source</span>.<span class="pl-c1">index</span>].<span class="pl-c1">push</span>(o.<span class="pl-c1">target</span>);</td>
      </tr>
      <tr>
        <td id="L6390" class="blob-num js-line-number" data-line-number="6390"></td>
        <td id="LC6390" class="blob-code blob-code-inner js-file-line">            neighbors[o.<span class="pl-c1">target</span>.<span class="pl-c1">index</span>].<span class="pl-c1">push</span>(o.<span class="pl-c1">source</span>);</td>
      </tr>
      <tr>
        <td id="L6391" class="blob-num js-line-number" data-line-number="6391"></td>
        <td id="LC6391" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6392" class="blob-num js-line-number" data-line-number="6392"></td>
        <td id="LC6392" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6393" class="blob-num js-line-number" data-line-number="6393"></td>
        <td id="LC6393" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> candidates <span class="pl-k">=</span> neighbors[i], j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, l <span class="pl-k">=</span> candidates.<span class="pl-c1">length</span>, x;</td>
      </tr>
      <tr>
        <td id="L6394" class="blob-num js-line-number" data-line-number="6394"></td>
        <td id="LC6394" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;</span> l) <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(x <span class="pl-k">=</span> candidates[j][dimension])) <span class="pl-k">return</span> x;</td>
      </tr>
      <tr>
        <td id="L6395" class="blob-num js-line-number" data-line-number="6395"></td>
        <td id="LC6395" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">random</span>() <span class="pl-k">*</span> size;</td>
      </tr>
      <tr>
        <td id="L6396" class="blob-num js-line-number" data-line-number="6396"></td>
        <td id="LC6396" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6397" class="blob-num js-line-number" data-line-number="6397"></td>
        <td id="LC6397" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force.resume();</td>
      </tr>
      <tr>
        <td id="L6398" class="blob-num js-line-number" data-line-number="6398"></td>
        <td id="LC6398" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6399" class="blob-num js-line-number" data-line-number="6399"></td>
        <td id="LC6399" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">resume</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6400" class="blob-num js-line-number" data-line-number="6400"></td>
        <td id="LC6400" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force.alpha(.<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L6401" class="blob-num js-line-number" data-line-number="6401"></td>
        <td id="LC6401" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6402" class="blob-num js-line-number" data-line-number="6402"></td>
        <td id="LC6402" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">stop</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6403" class="blob-num js-line-number" data-line-number="6403"></td>
        <td id="LC6403" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> force.alpha(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L6404" class="blob-num js-line-number" data-line-number="6404"></td>
        <td id="LC6404" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6405" class="blob-num js-line-number" data-line-number="6405"></td>
        <td id="LC6405" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">force</span>.<span class="pl-en">drag</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6406" class="blob-num js-line-number" data-line-number="6406"></td>
        <td id="LC6406" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>drag) drag <span class="pl-k">=</span> d3.behavior.drag().origin(d3_identity).on(<span class="pl-s"><span class="pl-pds">&quot;</span>dragstart.force<span class="pl-pds">&quot;</span></span>, d3_layout_forceDragstart).on(<span class="pl-s"><span class="pl-pds">&quot;</span>drag.force<span class="pl-pds">&quot;</span></span>, dragmove).on(<span class="pl-s"><span class="pl-pds">&quot;</span>dragend.force<span class="pl-pds">&quot;</span></span>, d3_layout_forceDragend);</td>
      </tr>
      <tr>
        <td id="L6407" class="blob-num js-line-number" data-line-number="6407"></td>
        <td id="LC6407" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> drag;</td>
      </tr>
      <tr>
        <td id="L6408" class="blob-num js-line-number" data-line-number="6408"></td>
        <td id="LC6408" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.on(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseover.force<span class="pl-pds">&quot;</span></span>, d3_layout_forceMouseover).on(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseout.force<span class="pl-pds">&quot;</span></span>, d3_layout_forceMouseout).<span class="pl-c1">call</span>(drag);</td>
      </tr>
      <tr>
        <td id="L6409" class="blob-num js-line-number" data-line-number="6409"></td>
        <td id="LC6409" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6410" class="blob-num js-line-number" data-line-number="6410"></td>
        <td id="LC6410" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">dragmove</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6411" class="blob-num js-line-number" data-line-number="6411"></td>
        <td id="LC6411" class="blob-code blob-code-inner js-file-line">      d.px <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>.<span class="pl-c1">x</span>, d.py <span class="pl-k">=</span> d3.<span class="pl-c1">event</span>.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L6412" class="blob-num js-line-number" data-line-number="6412"></td>
        <td id="LC6412" class="blob-code blob-code-inner js-file-line">      force.resume();</td>
      </tr>
      <tr>
        <td id="L6413" class="blob-num js-line-number" data-line-number="6413"></td>
        <td id="LC6413" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6414" class="blob-num js-line-number" data-line-number="6414"></td>
        <td id="LC6414" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.rebind(force, <span class="pl-c1">event</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6415" class="blob-num js-line-number" data-line-number="6415"></td>
        <td id="LC6415" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6416" class="blob-num js-line-number" data-line-number="6416"></td>
        <td id="LC6416" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_forceDragstart</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6417" class="blob-num js-line-number" data-line-number="6417"></td>
        <td id="LC6417" class="blob-code blob-code-inner js-file-line">    d.fixed |<span class="pl-k">=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L6418" class="blob-num js-line-number" data-line-number="6418"></td>
        <td id="LC6418" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6419" class="blob-num js-line-number" data-line-number="6419"></td>
        <td id="LC6419" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_forceDragend</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6420" class="blob-num js-line-number" data-line-number="6420"></td>
        <td id="LC6420" class="blob-code blob-code-inner js-file-line">    d.fixed <span class="pl-k">&amp;=</span> <span class="pl-k">~</span><span class="pl-c1">6</span>;</td>
      </tr>
      <tr>
        <td id="L6421" class="blob-num js-line-number" data-line-number="6421"></td>
        <td id="LC6421" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6422" class="blob-num js-line-number" data-line-number="6422"></td>
        <td id="LC6422" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_forceMouseover</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6423" class="blob-num js-line-number" data-line-number="6423"></td>
        <td id="LC6423" class="blob-code blob-code-inner js-file-line">    d.fixed |<span class="pl-k">=</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L6424" class="blob-num js-line-number" data-line-number="6424"></td>
        <td id="LC6424" class="blob-code blob-code-inner js-file-line">    d.px <span class="pl-k">=</span> d.<span class="pl-c1">x</span>, d.py <span class="pl-k">=</span> d.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L6425" class="blob-num js-line-number" data-line-number="6425"></td>
        <td id="LC6425" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6426" class="blob-num js-line-number" data-line-number="6426"></td>
        <td id="LC6426" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_forceMouseout</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6427" class="blob-num js-line-number" data-line-number="6427"></td>
        <td id="LC6427" class="blob-code blob-code-inner js-file-line">    d.fixed <span class="pl-k">&amp;=</span> <span class="pl-k">~</span><span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L6428" class="blob-num js-line-number" data-line-number="6428"></td>
        <td id="LC6428" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6429" class="blob-num js-line-number" data-line-number="6429"></td>
        <td id="LC6429" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_forceAccumulate</span>(<span class="pl-smi">quad</span>, <span class="pl-smi">alpha</span>, <span class="pl-smi">charges</span>) {</td>
      </tr>
      <tr>
        <td id="L6430" class="blob-num js-line-number" data-line-number="6430"></td>
        <td id="LC6430" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cx <span class="pl-k">=</span> <span class="pl-c1">0</span>, cy <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6431" class="blob-num js-line-number" data-line-number="6431"></td>
        <td id="LC6431" class="blob-code blob-code-inner js-file-line">    quad.charge <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6432" class="blob-num js-line-number" data-line-number="6432"></td>
        <td id="LC6432" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>quad.leaf) {</td>
      </tr>
      <tr>
        <td id="L6433" class="blob-num js-line-number" data-line-number="6433"></td>
        <td id="LC6433" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> nodes <span class="pl-k">=</span> quad.nodes, n <span class="pl-k">=</span> nodes.<span class="pl-c1">length</span>, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, c;</td>
      </tr>
      <tr>
        <td id="L6434" class="blob-num js-line-number" data-line-number="6434"></td>
        <td id="LC6434" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6435" class="blob-num js-line-number" data-line-number="6435"></td>
        <td id="LC6435" class="blob-code blob-code-inner js-file-line">        c <span class="pl-k">=</span> nodes[i];</td>
      </tr>
      <tr>
        <td id="L6436" class="blob-num js-line-number" data-line-number="6436"></td>
        <td id="LC6436" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (c <span class="pl-k">==</span> <span class="pl-c1">null</span>) <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L6437" class="blob-num js-line-number" data-line-number="6437"></td>
        <td id="LC6437" class="blob-code blob-code-inner js-file-line">        d3_layout_forceAccumulate(c, alpha, charges);</td>
      </tr>
      <tr>
        <td id="L6438" class="blob-num js-line-number" data-line-number="6438"></td>
        <td id="LC6438" class="blob-code blob-code-inner js-file-line">        quad.charge <span class="pl-k">+=</span> c.charge;</td>
      </tr>
      <tr>
        <td id="L6439" class="blob-num js-line-number" data-line-number="6439"></td>
        <td id="LC6439" class="blob-code blob-code-inner js-file-line">        cx <span class="pl-k">+=</span> c.charge <span class="pl-k">*</span> c.cx;</td>
      </tr>
      <tr>
        <td id="L6440" class="blob-num js-line-number" data-line-number="6440"></td>
        <td id="LC6440" class="blob-code blob-code-inner js-file-line">        cy <span class="pl-k">+=</span> c.charge <span class="pl-k">*</span> c.cy;</td>
      </tr>
      <tr>
        <td id="L6441" class="blob-num js-line-number" data-line-number="6441"></td>
        <td id="LC6441" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6442" class="blob-num js-line-number" data-line-number="6442"></td>
        <td id="LC6442" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6443" class="blob-num js-line-number" data-line-number="6443"></td>
        <td id="LC6443" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (quad.point) {</td>
      </tr>
      <tr>
        <td id="L6444" class="blob-num js-line-number" data-line-number="6444"></td>
        <td id="LC6444" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>quad.leaf) {</td>
      </tr>
      <tr>
        <td id="L6445" class="blob-num js-line-number" data-line-number="6445"></td>
        <td id="LC6445" class="blob-code blob-code-inner js-file-line">        quad.point.<span class="pl-c1">x</span> <span class="pl-k">+=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">random</span>() <span class="pl-k">-</span> .<span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L6446" class="blob-num js-line-number" data-line-number="6446"></td>
        <td id="LC6446" class="blob-code blob-code-inner js-file-line">        quad.point.<span class="pl-c1">y</span> <span class="pl-k">+=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">random</span>() <span class="pl-k">-</span> .<span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L6447" class="blob-num js-line-number" data-line-number="6447"></td>
        <td id="LC6447" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6448" class="blob-num js-line-number" data-line-number="6448"></td>
        <td id="LC6448" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> k <span class="pl-k">=</span> alpha <span class="pl-k">*</span> charges[quad.point.<span class="pl-c1">index</span>];</td>
      </tr>
      <tr>
        <td id="L6449" class="blob-num js-line-number" data-line-number="6449"></td>
        <td id="LC6449" class="blob-code blob-code-inner js-file-line">      quad.charge <span class="pl-k">+=</span> quad.pointCharge <span class="pl-k">=</span> k;</td>
      </tr>
      <tr>
        <td id="L6450" class="blob-num js-line-number" data-line-number="6450"></td>
        <td id="LC6450" class="blob-code blob-code-inner js-file-line">      cx <span class="pl-k">+=</span> k <span class="pl-k">*</span> quad.point.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L6451" class="blob-num js-line-number" data-line-number="6451"></td>
        <td id="LC6451" class="blob-code blob-code-inner js-file-line">      cy <span class="pl-k">+=</span> k <span class="pl-k">*</span> quad.point.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L6452" class="blob-num js-line-number" data-line-number="6452"></td>
        <td id="LC6452" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6453" class="blob-num js-line-number" data-line-number="6453"></td>
        <td id="LC6453" class="blob-code blob-code-inner js-file-line">    quad.cx <span class="pl-k">=</span> cx / quad.charge;</td>
      </tr>
      <tr>
        <td id="L6454" class="blob-num js-line-number" data-line-number="6454"></td>
        <td id="LC6454" class="blob-code blob-code-inner js-file-line">    quad.cy <span class="pl-k">=</span> cy / quad.charge;</td>
      </tr>
      <tr>
        <td id="L6455" class="blob-num js-line-number" data-line-number="6455"></td>
        <td id="LC6455" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6456" class="blob-num js-line-number" data-line-number="6456"></td>
        <td id="LC6456" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_layout_forceLinkDistance <span class="pl-k">=</span> <span class="pl-c1">20</span>, d3_layout_forceLinkStrength <span class="pl-k">=</span> <span class="pl-c1">1</span>, d3_layout_forceChargeDistance2 <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L6457" class="blob-num js-line-number" data-line-number="6457"></td>
        <td id="LC6457" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">hierarchy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6458" class="blob-num js-line-number" data-line-number="6458"></td>
        <td id="LC6458" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> sort <span class="pl-k">=</span> d3_layout_hierarchySort, children <span class="pl-k">=</span> d3_layout_hierarchyChildren, value <span class="pl-k">=</span> d3_layout_hierarchyValue;</td>
      </tr>
      <tr>
        <td id="L6459" class="blob-num js-line-number" data-line-number="6459"></td>
        <td id="LC6459" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">hierarchy</span>(<span class="pl-smi">root</span>) {</td>
      </tr>
      <tr>
        <td id="L6460" class="blob-num js-line-number" data-line-number="6460"></td>
        <td id="LC6460" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> stack <span class="pl-k">=</span> [ root ], nodes <span class="pl-k">=</span> [], node;</td>
      </tr>
      <tr>
        <td id="L6461" class="blob-num js-line-number" data-line-number="6461"></td>
        <td id="LC6461" class="blob-code blob-code-inner js-file-line">      root.depth <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6462" class="blob-num js-line-number" data-line-number="6462"></td>
        <td id="LC6462" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> ((node <span class="pl-k">=</span> stack.<span class="pl-c1">pop</span>()) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L6463" class="blob-num js-line-number" data-line-number="6463"></td>
        <td id="LC6463" class="blob-code blob-code-inner js-file-line">        nodes.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L6464" class="blob-num js-line-number" data-line-number="6464"></td>
        <td id="LC6464" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((childs <span class="pl-k">=</span> children.<span class="pl-c1">call</span>(hierarchy, node, node.depth)) <span class="pl-k">&amp;&amp;</span> (n <span class="pl-k">=</span> childs.<span class="pl-c1">length</span>)) {</td>
      </tr>
      <tr>
        <td id="L6465" class="blob-num js-line-number" data-line-number="6465"></td>
        <td id="LC6465" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> n, childs, child;</td>
      </tr>
      <tr>
        <td id="L6466" class="blob-num js-line-number" data-line-number="6466"></td>
        <td id="LC6466" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span> (<span class="pl-k">--</span>n <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L6467" class="blob-num js-line-number" data-line-number="6467"></td>
        <td id="LC6467" class="blob-code blob-code-inner js-file-line">            stack.<span class="pl-c1">push</span>(child <span class="pl-k">=</span> childs[n]);</td>
      </tr>
      <tr>
        <td id="L6468" class="blob-num js-line-number" data-line-number="6468"></td>
        <td id="LC6468" class="blob-code blob-code-inner js-file-line">            child.<span class="pl-c1">parent</span> <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L6469" class="blob-num js-line-number" data-line-number="6469"></td>
        <td id="LC6469" class="blob-code blob-code-inner js-file-line">            child.depth <span class="pl-k">=</span> node.depth <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6470" class="blob-num js-line-number" data-line-number="6470"></td>
        <td id="LC6470" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6471" class="blob-num js-line-number" data-line-number="6471"></td>
        <td id="LC6471" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (value) node.<span class="pl-c1">value</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6472" class="blob-num js-line-number" data-line-number="6472"></td>
        <td id="LC6472" class="blob-code blob-code-inner js-file-line">          node.children <span class="pl-k">=</span> childs;</td>
      </tr>
      <tr>
        <td id="L6473" class="blob-num js-line-number" data-line-number="6473"></td>
        <td id="LC6473" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6474" class="blob-num js-line-number" data-line-number="6474"></td>
        <td id="LC6474" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (value) node.<span class="pl-c1">value</span> <span class="pl-k">=</span> <span class="pl-k">+</span>value.<span class="pl-c1">call</span>(hierarchy, node, node.depth) <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6475" class="blob-num js-line-number" data-line-number="6475"></td>
        <td id="LC6475" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">delete</span> node.children;</td>
      </tr>
      <tr>
        <td id="L6476" class="blob-num js-line-number" data-line-number="6476"></td>
        <td id="LC6476" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6477" class="blob-num js-line-number" data-line-number="6477"></td>
        <td id="LC6477" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6478" class="blob-num js-line-number" data-line-number="6478"></td>
        <td id="LC6478" class="blob-code blob-code-inner js-file-line">      d3_layout_hierarchyVisitAfter(root, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6479" class="blob-num js-line-number" data-line-number="6479"></td>
        <td id="LC6479" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> childs, parent;</td>
      </tr>
      <tr>
        <td id="L6480" class="blob-num js-line-number" data-line-number="6480"></td>
        <td id="LC6480" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (sort <span class="pl-k">&amp;&amp;</span> (childs <span class="pl-k">=</span> node.children)) childs.<span class="pl-c1">sort</span>(sort);</td>
      </tr>
      <tr>
        <td id="L6481" class="blob-num js-line-number" data-line-number="6481"></td>
        <td id="LC6481" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (value <span class="pl-k">&amp;&amp;</span> (parent <span class="pl-k">=</span> node.<span class="pl-c1">parent</span>)) parent.<span class="pl-c1">value</span> <span class="pl-k">+=</span> node.<span class="pl-c1">value</span>;</td>
      </tr>
      <tr>
        <td id="L6482" class="blob-num js-line-number" data-line-number="6482"></td>
        <td id="LC6482" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6483" class="blob-num js-line-number" data-line-number="6483"></td>
        <td id="LC6483" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nodes;</td>
      </tr>
      <tr>
        <td id="L6484" class="blob-num js-line-number" data-line-number="6484"></td>
        <td id="LC6484" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6485" class="blob-num js-line-number" data-line-number="6485"></td>
        <td id="LC6485" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">hierarchy</span>.<span class="pl-en">sort</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6486" class="blob-num js-line-number" data-line-number="6486"></td>
        <td id="LC6486" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> sort;</td>
      </tr>
      <tr>
        <td id="L6487" class="blob-num js-line-number" data-line-number="6487"></td>
        <td id="LC6487" class="blob-code blob-code-inner js-file-line">      sort <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6488" class="blob-num js-line-number" data-line-number="6488"></td>
        <td id="LC6488" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> hierarchy;</td>
      </tr>
      <tr>
        <td id="L6489" class="blob-num js-line-number" data-line-number="6489"></td>
        <td id="LC6489" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6490" class="blob-num js-line-number" data-line-number="6490"></td>
        <td id="LC6490" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">hierarchy</span>.<span class="pl-en">children</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6491" class="blob-num js-line-number" data-line-number="6491"></td>
        <td id="LC6491" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> children;</td>
      </tr>
      <tr>
        <td id="L6492" class="blob-num js-line-number" data-line-number="6492"></td>
        <td id="LC6492" class="blob-code blob-code-inner js-file-line">      children <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6493" class="blob-num js-line-number" data-line-number="6493"></td>
        <td id="LC6493" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> hierarchy;</td>
      </tr>
      <tr>
        <td id="L6494" class="blob-num js-line-number" data-line-number="6494"></td>
        <td id="LC6494" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6495" class="blob-num js-line-number" data-line-number="6495"></td>
        <td id="LC6495" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">hierarchy</span>.<span class="pl-en">value</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6496" class="blob-num js-line-number" data-line-number="6496"></td>
        <td id="LC6496" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L6497" class="blob-num js-line-number" data-line-number="6497"></td>
        <td id="LC6497" class="blob-code blob-code-inner js-file-line">      value <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6498" class="blob-num js-line-number" data-line-number="6498"></td>
        <td id="LC6498" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> hierarchy;</td>
      </tr>
      <tr>
        <td id="L6499" class="blob-num js-line-number" data-line-number="6499"></td>
        <td id="LC6499" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6500" class="blob-num js-line-number" data-line-number="6500"></td>
        <td id="LC6500" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">hierarchy</span>.<span class="pl-en">revalue</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">root</span>) {</td>
      </tr>
      <tr>
        <td id="L6501" class="blob-num js-line-number" data-line-number="6501"></td>
        <td id="LC6501" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (value) {</td>
      </tr>
      <tr>
        <td id="L6502" class="blob-num js-line-number" data-line-number="6502"></td>
        <td id="LC6502" class="blob-code blob-code-inner js-file-line">        d3_layout_hierarchyVisitBefore(root, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6503" class="blob-num js-line-number" data-line-number="6503"></td>
        <td id="LC6503" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (node.children) node.<span class="pl-c1">value</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6504" class="blob-num js-line-number" data-line-number="6504"></td>
        <td id="LC6504" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6505" class="blob-num js-line-number" data-line-number="6505"></td>
        <td id="LC6505" class="blob-code blob-code-inner js-file-line">        d3_layout_hierarchyVisitAfter(root, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6506" class="blob-num js-line-number" data-line-number="6506"></td>
        <td id="LC6506" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> parent;</td>
      </tr>
      <tr>
        <td id="L6507" class="blob-num js-line-number" data-line-number="6507"></td>
        <td id="LC6507" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>node.children) node.<span class="pl-c1">value</span> <span class="pl-k">=</span> <span class="pl-k">+</span>value.<span class="pl-c1">call</span>(hierarchy, node, node.depth) <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6508" class="blob-num js-line-number" data-line-number="6508"></td>
        <td id="LC6508" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (parent <span class="pl-k">=</span> node.<span class="pl-c1">parent</span>) parent.<span class="pl-c1">value</span> <span class="pl-k">+=</span> node.<span class="pl-c1">value</span>;</td>
      </tr>
      <tr>
        <td id="L6509" class="blob-num js-line-number" data-line-number="6509"></td>
        <td id="LC6509" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6510" class="blob-num js-line-number" data-line-number="6510"></td>
        <td id="LC6510" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6511" class="blob-num js-line-number" data-line-number="6511"></td>
        <td id="LC6511" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> root;</td>
      </tr>
      <tr>
        <td id="L6512" class="blob-num js-line-number" data-line-number="6512"></td>
        <td id="LC6512" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6513" class="blob-num js-line-number" data-line-number="6513"></td>
        <td id="LC6513" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> hierarchy;</td>
      </tr>
      <tr>
        <td id="L6514" class="blob-num js-line-number" data-line-number="6514"></td>
        <td id="LC6514" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6515" class="blob-num js-line-number" data-line-number="6515"></td>
        <td id="LC6515" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_hierarchyRebind</span>(<span class="pl-smi">object</span>, <span class="pl-smi">hierarchy</span>) {</td>
      </tr>
      <tr>
        <td id="L6516" class="blob-num js-line-number" data-line-number="6516"></td>
        <td id="LC6516" class="blob-code blob-code-inner js-file-line">    d3.rebind(object, hierarchy, <span class="pl-s"><span class="pl-pds">&quot;</span>sort<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>children<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6517" class="blob-num js-line-number" data-line-number="6517"></td>
        <td id="LC6517" class="blob-code blob-code-inner js-file-line">    object.nodes <span class="pl-k">=</span> object;</td>
      </tr>
      <tr>
        <td id="L6518" class="blob-num js-line-number" data-line-number="6518"></td>
        <td id="LC6518" class="blob-code blob-code-inner js-file-line">    object.<span class="pl-c1">links</span> <span class="pl-k">=</span> d3_layout_hierarchyLinks;</td>
      </tr>
      <tr>
        <td id="L6519" class="blob-num js-line-number" data-line-number="6519"></td>
        <td id="LC6519" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> object;</td>
      </tr>
      <tr>
        <td id="L6520" class="blob-num js-line-number" data-line-number="6520"></td>
        <td id="LC6520" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6521" class="blob-num js-line-number" data-line-number="6521"></td>
        <td id="LC6521" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_hierarchyVisitBefore</span>(<span class="pl-smi">node</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L6522" class="blob-num js-line-number" data-line-number="6522"></td>
        <td id="LC6522" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> nodes <span class="pl-k">=</span> [ node ];</td>
      </tr>
      <tr>
        <td id="L6523" class="blob-num js-line-number" data-line-number="6523"></td>
        <td id="LC6523" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ((node <span class="pl-k">=</span> nodes.<span class="pl-c1">pop</span>()) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L6524" class="blob-num js-line-number" data-line-number="6524"></td>
        <td id="LC6524" class="blob-code blob-code-inner js-file-line">      callback(node);</td>
      </tr>
      <tr>
        <td id="L6525" class="blob-num js-line-number" data-line-number="6525"></td>
        <td id="LC6525" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((children <span class="pl-k">=</span> node.children) <span class="pl-k">&amp;&amp;</span> (n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>)) {</td>
      </tr>
      <tr>
        <td id="L6526" class="blob-num js-line-number" data-line-number="6526"></td>
        <td id="LC6526" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> n, children;</td>
      </tr>
      <tr>
        <td id="L6527" class="blob-num js-line-number" data-line-number="6527"></td>
        <td id="LC6527" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">--</span>n <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) nodes.<span class="pl-c1">push</span>(children[n]);</td>
      </tr>
      <tr>
        <td id="L6528" class="blob-num js-line-number" data-line-number="6528"></td>
        <td id="LC6528" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6529" class="blob-num js-line-number" data-line-number="6529"></td>
        <td id="LC6529" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6530" class="blob-num js-line-number" data-line-number="6530"></td>
        <td id="LC6530" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6531" class="blob-num js-line-number" data-line-number="6531"></td>
        <td id="LC6531" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_hierarchyVisitAfter</span>(<span class="pl-smi">node</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L6532" class="blob-num js-line-number" data-line-number="6532"></td>
        <td id="LC6532" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> nodes <span class="pl-k">=</span> [ node ], nodes2 <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6533" class="blob-num js-line-number" data-line-number="6533"></td>
        <td id="LC6533" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ((node <span class="pl-k">=</span> nodes.<span class="pl-c1">pop</span>()) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L6534" class="blob-num js-line-number" data-line-number="6534"></td>
        <td id="LC6534" class="blob-code blob-code-inner js-file-line">      nodes2.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L6535" class="blob-num js-line-number" data-line-number="6535"></td>
        <td id="LC6535" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((children <span class="pl-k">=</span> node.children) <span class="pl-k">&amp;&amp;</span> (n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>)) {</td>
      </tr>
      <tr>
        <td id="L6536" class="blob-num js-line-number" data-line-number="6536"></td>
        <td id="LC6536" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n, children;</td>
      </tr>
      <tr>
        <td id="L6537" class="blob-num js-line-number" data-line-number="6537"></td>
        <td id="LC6537" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) nodes.<span class="pl-c1">push</span>(children[i]);</td>
      </tr>
      <tr>
        <td id="L6538" class="blob-num js-line-number" data-line-number="6538"></td>
        <td id="LC6538" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6539" class="blob-num js-line-number" data-line-number="6539"></td>
        <td id="LC6539" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6540" class="blob-num js-line-number" data-line-number="6540"></td>
        <td id="LC6540" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ((node <span class="pl-k">=</span> nodes2.<span class="pl-c1">pop</span>()) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L6541" class="blob-num js-line-number" data-line-number="6541"></td>
        <td id="LC6541" class="blob-code blob-code-inner js-file-line">      callback(node);</td>
      </tr>
      <tr>
        <td id="L6542" class="blob-num js-line-number" data-line-number="6542"></td>
        <td id="LC6542" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6543" class="blob-num js-line-number" data-line-number="6543"></td>
        <td id="LC6543" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6544" class="blob-num js-line-number" data-line-number="6544"></td>
        <td id="LC6544" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_hierarchyChildren</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6545" class="blob-num js-line-number" data-line-number="6545"></td>
        <td id="LC6545" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.children;</td>
      </tr>
      <tr>
        <td id="L6546" class="blob-num js-line-number" data-line-number="6546"></td>
        <td id="LC6546" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6547" class="blob-num js-line-number" data-line-number="6547"></td>
        <td id="LC6547" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_hierarchyValue</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6548" class="blob-num js-line-number" data-line-number="6548"></td>
        <td id="LC6548" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">value</span>;</td>
      </tr>
      <tr>
        <td id="L6549" class="blob-num js-line-number" data-line-number="6549"></td>
        <td id="LC6549" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6550" class="blob-num js-line-number" data-line-number="6550"></td>
        <td id="LC6550" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_hierarchySort</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6551" class="blob-num js-line-number" data-line-number="6551"></td>
        <td id="LC6551" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> b.<span class="pl-c1">value</span> <span class="pl-k">-</span> a.<span class="pl-c1">value</span>;</td>
      </tr>
      <tr>
        <td id="L6552" class="blob-num js-line-number" data-line-number="6552"></td>
        <td id="LC6552" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6553" class="blob-num js-line-number" data-line-number="6553"></td>
        <td id="LC6553" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_hierarchyLinks</span>(<span class="pl-smi">nodes</span>) {</td>
      </tr>
      <tr>
        <td id="L6554" class="blob-num js-line-number" data-line-number="6554"></td>
        <td id="LC6554" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.merge(nodes.map(<span class="pl-k">function</span>(<span class="pl-smi">parent</span>) {</td>
      </tr>
      <tr>
        <td id="L6555" class="blob-num js-line-number" data-line-number="6555"></td>
        <td id="LC6555" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (parent.children <span class="pl-k">||</span> []).map(<span class="pl-k">function</span>(<span class="pl-smi">child</span>) {</td>
      </tr>
      <tr>
        <td id="L6556" class="blob-num js-line-number" data-line-number="6556"></td>
        <td id="LC6556" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L6557" class="blob-num js-line-number" data-line-number="6557"></td>
        <td id="LC6557" class="blob-code blob-code-inner js-file-line">          source<span class="pl-k">:</span> parent,</td>
      </tr>
      <tr>
        <td id="L6558" class="blob-num js-line-number" data-line-number="6558"></td>
        <td id="LC6558" class="blob-code blob-code-inner js-file-line">          target<span class="pl-k">:</span> child</td>
      </tr>
      <tr>
        <td id="L6559" class="blob-num js-line-number" data-line-number="6559"></td>
        <td id="LC6559" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6560" class="blob-num js-line-number" data-line-number="6560"></td>
        <td id="LC6560" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6561" class="blob-num js-line-number" data-line-number="6561"></td>
        <td id="LC6561" class="blob-code blob-code-inner js-file-line">    }));</td>
      </tr>
      <tr>
        <td id="L6562" class="blob-num js-line-number" data-line-number="6562"></td>
        <td id="LC6562" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6563" class="blob-num js-line-number" data-line-number="6563"></td>
        <td id="LC6563" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">partition</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6564" class="blob-num js-line-number" data-line-number="6564"></td>
        <td id="LC6564" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> hierarchy <span class="pl-k">=</span> d3.layout.hierarchy(), size <span class="pl-k">=</span> [ <span class="pl-c1">1</span>, <span class="pl-c1">1</span> ];</td>
      </tr>
      <tr>
        <td id="L6565" class="blob-num js-line-number" data-line-number="6565"></td>
        <td id="LC6565" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">position</span>(<span class="pl-smi">node</span>, <span class="pl-smi">x</span>, <span class="pl-smi">dx</span>, <span class="pl-smi">dy</span>) {</td>
      </tr>
      <tr>
        <td id="L6566" class="blob-num js-line-number" data-line-number="6566"></td>
        <td id="LC6566" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> children <span class="pl-k">=</span> node.children;</td>
      </tr>
      <tr>
        <td id="L6567" class="blob-num js-line-number" data-line-number="6567"></td>
        <td id="LC6567" class="blob-code blob-code-inner js-file-line">      node.<span class="pl-c1">x</span> <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6568" class="blob-num js-line-number" data-line-number="6568"></td>
        <td id="LC6568" class="blob-code blob-code-inner js-file-line">      node.<span class="pl-c1">y</span> <span class="pl-k">=</span> node.depth <span class="pl-k">*</span> dy;</td>
      </tr>
      <tr>
        <td id="L6569" class="blob-num js-line-number" data-line-number="6569"></td>
        <td id="LC6569" class="blob-code blob-code-inner js-file-line">      node.dx <span class="pl-k">=</span> dx;</td>
      </tr>
      <tr>
        <td id="L6570" class="blob-num js-line-number" data-line-number="6570"></td>
        <td id="LC6570" class="blob-code blob-code-inner js-file-line">      node.dy <span class="pl-k">=</span> dy;</td>
      </tr>
      <tr>
        <td id="L6571" class="blob-num js-line-number" data-line-number="6571"></td>
        <td id="LC6571" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children <span class="pl-k">&amp;&amp;</span> (n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>)) {</td>
      </tr>
      <tr>
        <td id="L6572" class="blob-num js-line-number" data-line-number="6572"></td>
        <td id="LC6572" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n, c, d;</td>
      </tr>
      <tr>
        <td id="L6573" class="blob-num js-line-number" data-line-number="6573"></td>
        <td id="LC6573" class="blob-code blob-code-inner js-file-line">        dx <span class="pl-k">=</span> node.<span class="pl-c1">value</span> <span class="pl-k">?</span> dx / node.<span class="pl-c1">value</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6574" class="blob-num js-line-number" data-line-number="6574"></td>
        <td id="LC6574" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6575" class="blob-num js-line-number" data-line-number="6575"></td>
        <td id="LC6575" class="blob-code blob-code-inner js-file-line">          position(c <span class="pl-k">=</span> children[i], x, d <span class="pl-k">=</span> c.<span class="pl-c1">value</span> <span class="pl-k">*</span> dx, dy);</td>
      </tr>
      <tr>
        <td id="L6576" class="blob-num js-line-number" data-line-number="6576"></td>
        <td id="LC6576" class="blob-code blob-code-inner js-file-line">          x <span class="pl-k">+=</span> d;</td>
      </tr>
      <tr>
        <td id="L6577" class="blob-num js-line-number" data-line-number="6577"></td>
        <td id="LC6577" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6578" class="blob-num js-line-number" data-line-number="6578"></td>
        <td id="LC6578" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6579" class="blob-num js-line-number" data-line-number="6579"></td>
        <td id="LC6579" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6580" class="blob-num js-line-number" data-line-number="6580"></td>
        <td id="LC6580" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">depth</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6581" class="blob-num js-line-number" data-line-number="6581"></td>
        <td id="LC6581" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> children <span class="pl-k">=</span> node.children, d <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6582" class="blob-num js-line-number" data-line-number="6582"></td>
        <td id="LC6582" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children <span class="pl-k">&amp;&amp;</span> (n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>)) {</td>
      </tr>
      <tr>
        <td id="L6583" class="blob-num js-line-number" data-line-number="6583"></td>
        <td id="LC6583" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n;</td>
      </tr>
      <tr>
        <td id="L6584" class="blob-num js-line-number" data-line-number="6584"></td>
        <td id="LC6584" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(d, depth(children[i]));</td>
      </tr>
      <tr>
        <td id="L6585" class="blob-num js-line-number" data-line-number="6585"></td>
        <td id="LC6585" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6586" class="blob-num js-line-number" data-line-number="6586"></td>
        <td id="LC6586" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> d;</td>
      </tr>
      <tr>
        <td id="L6587" class="blob-num js-line-number" data-line-number="6587"></td>
        <td id="LC6587" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6588" class="blob-num js-line-number" data-line-number="6588"></td>
        <td id="LC6588" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">partition</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6589" class="blob-num js-line-number" data-line-number="6589"></td>
        <td id="LC6589" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> nodes <span class="pl-k">=</span> hierarchy.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i);</td>
      </tr>
      <tr>
        <td id="L6590" class="blob-num js-line-number" data-line-number="6590"></td>
        <td id="LC6590" class="blob-code blob-code-inner js-file-line">      position(nodes[<span class="pl-c1">0</span>], <span class="pl-c1">0</span>, size[<span class="pl-c1">0</span>], size[<span class="pl-c1">1</span>] / depth(nodes[<span class="pl-c1">0</span>]));</td>
      </tr>
      <tr>
        <td id="L6591" class="blob-num js-line-number" data-line-number="6591"></td>
        <td id="LC6591" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nodes;</td>
      </tr>
      <tr>
        <td id="L6592" class="blob-num js-line-number" data-line-number="6592"></td>
        <td id="LC6592" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6593" class="blob-num js-line-number" data-line-number="6593"></td>
        <td id="LC6593" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">partition</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6594" class="blob-num js-line-number" data-line-number="6594"></td>
        <td id="LC6594" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L6595" class="blob-num js-line-number" data-line-number="6595"></td>
        <td id="LC6595" class="blob-code blob-code-inner js-file-line">      size <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6596" class="blob-num js-line-number" data-line-number="6596"></td>
        <td id="LC6596" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> partition;</td>
      </tr>
      <tr>
        <td id="L6597" class="blob-num js-line-number" data-line-number="6597"></td>
        <td id="LC6597" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6598" class="blob-num js-line-number" data-line-number="6598"></td>
        <td id="LC6598" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_layout_hierarchyRebind(partition, hierarchy);</td>
      </tr>
      <tr>
        <td id="L6599" class="blob-num js-line-number" data-line-number="6599"></td>
        <td id="LC6599" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6600" class="blob-num js-line-number" data-line-number="6600"></td>
        <td id="LC6600" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">pie</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6601" class="blob-num js-line-number" data-line-number="6601"></td>
        <td id="LC6601" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value <span class="pl-k">=</span> <span class="pl-c1">Number</span>, sort <span class="pl-k">=</span> d3_layout_pieSortByValue, startAngle <span class="pl-k">=</span> <span class="pl-c1">0</span>, endAngle <span class="pl-k">=</span> Ï, padAngle <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6602" class="blob-num js-line-number" data-line-number="6602"></td>
        <td id="LC6602" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pie</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L6603" class="blob-num js-line-number" data-line-number="6603"></td>
        <td id="LC6603" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>, values <span class="pl-k">=</span> data.map(<span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6604" class="blob-num js-line-number" data-line-number="6604"></td>
        <td id="LC6604" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">+</span>value.<span class="pl-c1">call</span>(pie, d, i);</td>
      </tr>
      <tr>
        <td id="L6605" class="blob-num js-line-number" data-line-number="6605"></td>
        <td id="LC6605" class="blob-code blob-code-inner js-file-line">      }), a <span class="pl-k">=</span> <span class="pl-k">+</span>(<span class="pl-k">typeof</span> startAngle <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> startAngle.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">:</span> startAngle), da <span class="pl-k">=</span> (<span class="pl-k">typeof</span> endAngle <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> endAngle.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">:</span> endAngle) <span class="pl-k">-</span> a, p <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(da) / n, <span class="pl-k">+</span>(<span class="pl-k">typeof</span> padAngle <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> padAngle.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">:</span> padAngle)), pa <span class="pl-k">=</span> p <span class="pl-k">*</span> (da <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>), k <span class="pl-k">=</span> (da <span class="pl-k">-</span> n <span class="pl-k">*</span> pa) / d3.sum(values), index <span class="pl-k">=</span> d3.range(n), arcs <span class="pl-k">=</span> [], v;</td>
      </tr>
      <tr>
        <td id="L6606" class="blob-num js-line-number" data-line-number="6606"></td>
        <td id="LC6606" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (sort <span class="pl-k">!=</span> <span class="pl-c1">null</span>) index.<span class="pl-c1">sort</span>(sort <span class="pl-k">===</span> d3_layout_pieSortByValue <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L6607" class="blob-num js-line-number" data-line-number="6607"></td>
        <td id="LC6607" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> values[j] <span class="pl-k">-</span> values[i];</td>
      </tr>
      <tr>
        <td id="L6608" class="blob-num js-line-number" data-line-number="6608"></td>
        <td id="LC6608" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L6609" class="blob-num js-line-number" data-line-number="6609"></td>
        <td id="LC6609" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">sort</span>(data[i], data[j]);</td>
      </tr>
      <tr>
        <td id="L6610" class="blob-num js-line-number" data-line-number="6610"></td>
        <td id="LC6610" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6611" class="blob-num js-line-number" data-line-number="6611"></td>
        <td id="LC6611" class="blob-code blob-code-inner js-file-line">      index.forEach(<span class="pl-k">function</span>(<span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6612" class="blob-num js-line-number" data-line-number="6612"></td>
        <td id="LC6612" class="blob-code blob-code-inner js-file-line">        arcs[i] <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L6613" class="blob-num js-line-number" data-line-number="6613"></td>
        <td id="LC6613" class="blob-code blob-code-inner js-file-line">          data<span class="pl-k">:</span> data[i],</td>
      </tr>
      <tr>
        <td id="L6614" class="blob-num js-line-number" data-line-number="6614"></td>
        <td id="LC6614" class="blob-code blob-code-inner js-file-line">          value<span class="pl-k">:</span> v <span class="pl-k">=</span> values[i],</td>
      </tr>
      <tr>
        <td id="L6615" class="blob-num js-line-number" data-line-number="6615"></td>
        <td id="LC6615" class="blob-code blob-code-inner js-file-line">          startAngle<span class="pl-k">:</span> a,</td>
      </tr>
      <tr>
        <td id="L6616" class="blob-num js-line-number" data-line-number="6616"></td>
        <td id="LC6616" class="blob-code blob-code-inner js-file-line">          endAngle<span class="pl-k">:</span> a <span class="pl-k">+=</span> v <span class="pl-k">*</span> k <span class="pl-k">+</span> pa,</td>
      </tr>
      <tr>
        <td id="L6617" class="blob-num js-line-number" data-line-number="6617"></td>
        <td id="LC6617" class="blob-code blob-code-inner js-file-line">          padAngle<span class="pl-k">:</span> p</td>
      </tr>
      <tr>
        <td id="L6618" class="blob-num js-line-number" data-line-number="6618"></td>
        <td id="LC6618" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6619" class="blob-num js-line-number" data-line-number="6619"></td>
        <td id="LC6619" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6620" class="blob-num js-line-number" data-line-number="6620"></td>
        <td id="LC6620" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arcs;</td>
      </tr>
      <tr>
        <td id="L6621" class="blob-num js-line-number" data-line-number="6621"></td>
        <td id="LC6621" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6622" class="blob-num js-line-number" data-line-number="6622"></td>
        <td id="LC6622" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pie</span>.<span class="pl-en">value</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L6623" class="blob-num js-line-number" data-line-number="6623"></td>
        <td id="LC6623" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L6624" class="blob-num js-line-number" data-line-number="6624"></td>
        <td id="LC6624" class="blob-code blob-code-inner js-file-line">      value <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L6625" class="blob-num js-line-number" data-line-number="6625"></td>
        <td id="LC6625" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> pie;</td>
      </tr>
      <tr>
        <td id="L6626" class="blob-num js-line-number" data-line-number="6626"></td>
        <td id="LC6626" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6627" class="blob-num js-line-number" data-line-number="6627"></td>
        <td id="LC6627" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pie</span>.<span class="pl-en">sort</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L6628" class="blob-num js-line-number" data-line-number="6628"></td>
        <td id="LC6628" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> sort;</td>
      </tr>
      <tr>
        <td id="L6629" class="blob-num js-line-number" data-line-number="6629"></td>
        <td id="LC6629" class="blob-code blob-code-inner js-file-line">      sort <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L6630" class="blob-num js-line-number" data-line-number="6630"></td>
        <td id="LC6630" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> pie;</td>
      </tr>
      <tr>
        <td id="L6631" class="blob-num js-line-number" data-line-number="6631"></td>
        <td id="LC6631" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6632" class="blob-num js-line-number" data-line-number="6632"></td>
        <td id="LC6632" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pie</span>.<span class="pl-en">startAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L6633" class="blob-num js-line-number" data-line-number="6633"></td>
        <td id="LC6633" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> startAngle;</td>
      </tr>
      <tr>
        <td id="L6634" class="blob-num js-line-number" data-line-number="6634"></td>
        <td id="LC6634" class="blob-code blob-code-inner js-file-line">      startAngle <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L6635" class="blob-num js-line-number" data-line-number="6635"></td>
        <td id="LC6635" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> pie;</td>
      </tr>
      <tr>
        <td id="L6636" class="blob-num js-line-number" data-line-number="6636"></td>
        <td id="LC6636" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6637" class="blob-num js-line-number" data-line-number="6637"></td>
        <td id="LC6637" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pie</span>.<span class="pl-en">endAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L6638" class="blob-num js-line-number" data-line-number="6638"></td>
        <td id="LC6638" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> endAngle;</td>
      </tr>
      <tr>
        <td id="L6639" class="blob-num js-line-number" data-line-number="6639"></td>
        <td id="LC6639" class="blob-code blob-code-inner js-file-line">      endAngle <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L6640" class="blob-num js-line-number" data-line-number="6640"></td>
        <td id="LC6640" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> pie;</td>
      </tr>
      <tr>
        <td id="L6641" class="blob-num js-line-number" data-line-number="6641"></td>
        <td id="LC6641" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6642" class="blob-num js-line-number" data-line-number="6642"></td>
        <td id="LC6642" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pie</span>.<span class="pl-en">padAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L6643" class="blob-num js-line-number" data-line-number="6643"></td>
        <td id="LC6643" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> padAngle;</td>
      </tr>
      <tr>
        <td id="L6644" class="blob-num js-line-number" data-line-number="6644"></td>
        <td id="LC6644" class="blob-code blob-code-inner js-file-line">      padAngle <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L6645" class="blob-num js-line-number" data-line-number="6645"></td>
        <td id="LC6645" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> pie;</td>
      </tr>
      <tr>
        <td id="L6646" class="blob-num js-line-number" data-line-number="6646"></td>
        <td id="LC6646" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6647" class="blob-num js-line-number" data-line-number="6647"></td>
        <td id="LC6647" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> pie;</td>
      </tr>
      <tr>
        <td id="L6648" class="blob-num js-line-number" data-line-number="6648"></td>
        <td id="LC6648" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6649" class="blob-num js-line-number" data-line-number="6649"></td>
        <td id="LC6649" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_layout_pieSortByValue <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L6650" class="blob-num js-line-number" data-line-number="6650"></td>
        <td id="LC6650" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">stack</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6651" class="blob-num js-line-number" data-line-number="6651"></td>
        <td id="LC6651" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> values <span class="pl-k">=</span> d3_identity, order <span class="pl-k">=</span> d3_layout_stackOrderDefault, offset <span class="pl-k">=</span> d3_layout_stackOffsetZero, out <span class="pl-k">=</span> d3_layout_stackOut, x <span class="pl-k">=</span> d3_layout_stackX, y <span class="pl-k">=</span> d3_layout_stackY;</td>
      </tr>
      <tr>
        <td id="L6652" class="blob-num js-line-number" data-line-number="6652"></td>
        <td id="LC6652" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">stack</span>(<span class="pl-smi">data</span>, <span class="pl-smi">index</span>) {</td>
      </tr>
      <tr>
        <td id="L6653" class="blob-num js-line-number" data-line-number="6653"></td>
        <td id="LC6653" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>(n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>)) <span class="pl-k">return</span> data;</td>
      </tr>
      <tr>
        <td id="L6654" class="blob-num js-line-number" data-line-number="6654"></td>
        <td id="LC6654" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> series <span class="pl-k">=</span> data.map(<span class="pl-k">function</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6655" class="blob-num js-line-number" data-line-number="6655"></td>
        <td id="LC6655" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> values.<span class="pl-c1">call</span>(stack, d, i);</td>
      </tr>
      <tr>
        <td id="L6656" class="blob-num js-line-number" data-line-number="6656"></td>
        <td id="LC6656" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6657" class="blob-num js-line-number" data-line-number="6657"></td>
        <td id="LC6657" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> points <span class="pl-k">=</span> series.map(<span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6658" class="blob-num js-line-number" data-line-number="6658"></td>
        <td id="LC6658" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d.map(<span class="pl-k">function</span>(<span class="pl-smi">v</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6659" class="blob-num js-line-number" data-line-number="6659"></td>
        <td id="LC6659" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> [ x.<span class="pl-c1">call</span>(stack, v, i), y.<span class="pl-c1">call</span>(stack, v, i) ];</td>
      </tr>
      <tr>
        <td id="L6660" class="blob-num js-line-number" data-line-number="6660"></td>
        <td id="LC6660" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6661" class="blob-num js-line-number" data-line-number="6661"></td>
        <td id="LC6661" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6662" class="blob-num js-line-number" data-line-number="6662"></td>
        <td id="LC6662" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> orders <span class="pl-k">=</span> order.<span class="pl-c1">call</span>(stack, points, index);</td>
      </tr>
      <tr>
        <td id="L6663" class="blob-num js-line-number" data-line-number="6663"></td>
        <td id="LC6663" class="blob-code blob-code-inner js-file-line">      series <span class="pl-k">=</span> d3.permute(series, orders);</td>
      </tr>
      <tr>
        <td id="L6664" class="blob-num js-line-number" data-line-number="6664"></td>
        <td id="LC6664" class="blob-code blob-code-inner js-file-line">      points <span class="pl-k">=</span> d3.permute(points, orders);</td>
      </tr>
      <tr>
        <td id="L6665" class="blob-num js-line-number" data-line-number="6665"></td>
        <td id="LC6665" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> offsets <span class="pl-k">=</span> offset.<span class="pl-c1">call</span>(stack, points, index);</td>
      </tr>
      <tr>
        <td id="L6666" class="blob-num js-line-number" data-line-number="6666"></td>
        <td id="LC6666" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> m <span class="pl-k">=</span> series[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>, n, i, j, o;</td>
      </tr>
      <tr>
        <td id="L6667" class="blob-num js-line-number" data-line-number="6667"></td>
        <td id="LC6667" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) {</td>
      </tr>
      <tr>
        <td id="L6668" class="blob-num js-line-number" data-line-number="6668"></td>
        <td id="LC6668" class="blob-code blob-code-inner js-file-line">        out.<span class="pl-c1">call</span>(stack, series[<span class="pl-c1">0</span>][j], o <span class="pl-k">=</span> offsets[j], points[<span class="pl-c1">0</span>][j][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L6669" class="blob-num js-line-number" data-line-number="6669"></td>
        <td id="LC6669" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">1</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L6670" class="blob-num js-line-number" data-line-number="6670"></td>
        <td id="LC6670" class="blob-code blob-code-inner js-file-line">          out.<span class="pl-c1">call</span>(stack, series[i][j], o <span class="pl-k">+=</span> points[i <span class="pl-k">-</span> <span class="pl-c1">1</span>][j][<span class="pl-c1">1</span>], points[i][j][<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L6671" class="blob-num js-line-number" data-line-number="6671"></td>
        <td id="LC6671" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6672" class="blob-num js-line-number" data-line-number="6672"></td>
        <td id="LC6672" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6673" class="blob-num js-line-number" data-line-number="6673"></td>
        <td id="LC6673" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> data;</td>
      </tr>
      <tr>
        <td id="L6674" class="blob-num js-line-number" data-line-number="6674"></td>
        <td id="LC6674" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6675" class="blob-num js-line-number" data-line-number="6675"></td>
        <td id="LC6675" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">stack</span>.<span class="pl-en">values</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6676" class="blob-num js-line-number" data-line-number="6676"></td>
        <td id="LC6676" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> values;</td>
      </tr>
      <tr>
        <td id="L6677" class="blob-num js-line-number" data-line-number="6677"></td>
        <td id="LC6677" class="blob-code blob-code-inner js-file-line">      values <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6678" class="blob-num js-line-number" data-line-number="6678"></td>
        <td id="LC6678" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> stack;</td>
      </tr>
      <tr>
        <td id="L6679" class="blob-num js-line-number" data-line-number="6679"></td>
        <td id="LC6679" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6680" class="blob-num js-line-number" data-line-number="6680"></td>
        <td id="LC6680" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">stack</span>.<span class="pl-en">order</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6681" class="blob-num js-line-number" data-line-number="6681"></td>
        <td id="LC6681" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> order;</td>
      </tr>
      <tr>
        <td id="L6682" class="blob-num js-line-number" data-line-number="6682"></td>
        <td id="LC6682" class="blob-code blob-code-inner js-file-line">      order <span class="pl-k">=</span> <span class="pl-k">typeof</span> x <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> x <span class="pl-k">:</span> d3_layout_stackOrders.get(x) <span class="pl-k">||</span> d3_layout_stackOrderDefault;</td>
      </tr>
      <tr>
        <td id="L6683" class="blob-num js-line-number" data-line-number="6683"></td>
        <td id="LC6683" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> stack;</td>
      </tr>
      <tr>
        <td id="L6684" class="blob-num js-line-number" data-line-number="6684"></td>
        <td id="LC6684" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6685" class="blob-num js-line-number" data-line-number="6685"></td>
        <td id="LC6685" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">stack</span>.<span class="pl-en">offset</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6686" class="blob-num js-line-number" data-line-number="6686"></td>
        <td id="LC6686" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> offset;</td>
      </tr>
      <tr>
        <td id="L6687" class="blob-num js-line-number" data-line-number="6687"></td>
        <td id="LC6687" class="blob-code blob-code-inner js-file-line">      offset <span class="pl-k">=</span> <span class="pl-k">typeof</span> x <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> x <span class="pl-k">:</span> d3_layout_stackOffsets.get(x) <span class="pl-k">||</span> d3_layout_stackOffsetZero;</td>
      </tr>
      <tr>
        <td id="L6688" class="blob-num js-line-number" data-line-number="6688"></td>
        <td id="LC6688" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> stack;</td>
      </tr>
      <tr>
        <td id="L6689" class="blob-num js-line-number" data-line-number="6689"></td>
        <td id="LC6689" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6690" class="blob-num js-line-number" data-line-number="6690"></td>
        <td id="LC6690" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">stack</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L6691" class="blob-num js-line-number" data-line-number="6691"></td>
        <td id="LC6691" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x;</td>
      </tr>
      <tr>
        <td id="L6692" class="blob-num js-line-number" data-line-number="6692"></td>
        <td id="LC6692" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L6693" class="blob-num js-line-number" data-line-number="6693"></td>
        <td id="LC6693" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> stack;</td>
      </tr>
      <tr>
        <td id="L6694" class="blob-num js-line-number" data-line-number="6694"></td>
        <td id="LC6694" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6695" class="blob-num js-line-number" data-line-number="6695"></td>
        <td id="LC6695" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">stack</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L6696" class="blob-num js-line-number" data-line-number="6696"></td>
        <td id="LC6696" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> y;</td>
      </tr>
      <tr>
        <td id="L6697" class="blob-num js-line-number" data-line-number="6697"></td>
        <td id="LC6697" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L6698" class="blob-num js-line-number" data-line-number="6698"></td>
        <td id="LC6698" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> stack;</td>
      </tr>
      <tr>
        <td id="L6699" class="blob-num js-line-number" data-line-number="6699"></td>
        <td id="LC6699" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6700" class="blob-num js-line-number" data-line-number="6700"></td>
        <td id="LC6700" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">stack</span>.<span class="pl-en">out</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L6701" class="blob-num js-line-number" data-line-number="6701"></td>
        <td id="LC6701" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L6702" class="blob-num js-line-number" data-line-number="6702"></td>
        <td id="LC6702" class="blob-code blob-code-inner js-file-line">      out <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L6703" class="blob-num js-line-number" data-line-number="6703"></td>
        <td id="LC6703" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> stack;</td>
      </tr>
      <tr>
        <td id="L6704" class="blob-num js-line-number" data-line-number="6704"></td>
        <td id="LC6704" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6705" class="blob-num js-line-number" data-line-number="6705"></td>
        <td id="LC6705" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> stack;</td>
      </tr>
      <tr>
        <td id="L6706" class="blob-num js-line-number" data-line-number="6706"></td>
        <td id="LC6706" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6707" class="blob-num js-line-number" data-line-number="6707"></td>
        <td id="LC6707" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_stackX</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6708" class="blob-num js-line-number" data-line-number="6708"></td>
        <td id="LC6708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L6709" class="blob-num js-line-number" data-line-number="6709"></td>
        <td id="LC6709" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6710" class="blob-num js-line-number" data-line-number="6710"></td>
        <td id="LC6710" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_stackY</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6711" class="blob-num js-line-number" data-line-number="6711"></td>
        <td id="LC6711" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L6712" class="blob-num js-line-number" data-line-number="6712"></td>
        <td id="LC6712" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6713" class="blob-num js-line-number" data-line-number="6713"></td>
        <td id="LC6713" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_stackOut</span>(<span class="pl-smi">d</span>, <span class="pl-smi">y0</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L6714" class="blob-num js-line-number" data-line-number="6714"></td>
        <td id="LC6714" class="blob-code blob-code-inner js-file-line">    d.y0 <span class="pl-k">=</span> y0;</td>
      </tr>
      <tr>
        <td id="L6715" class="blob-num js-line-number" data-line-number="6715"></td>
        <td id="LC6715" class="blob-code blob-code-inner js-file-line">    d.<span class="pl-c1">y</span> <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L6716" class="blob-num js-line-number" data-line-number="6716"></td>
        <td id="LC6716" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6717" class="blob-num js-line-number" data-line-number="6717"></td>
        <td id="LC6717" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_layout_stackOrders <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L6718" class="blob-num js-line-number" data-line-number="6718"></td>
        <td id="LC6718" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">inside-out</span><span class="pl-pds">&quot;</span></span>: <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L6719" class="blob-num js-line-number" data-line-number="6719"></td>
        <td id="LC6719" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>, i, j, max <span class="pl-k">=</span> data.map(d3_layout_stackMaxIndex), sums <span class="pl-k">=</span> data.map(d3_layout_stackReduceSum), index <span class="pl-k">=</span> d3.range(n).<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6720" class="blob-num js-line-number" data-line-number="6720"></td>
        <td id="LC6720" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> max[a] <span class="pl-k">-</span> max[b];</td>
      </tr>
      <tr>
        <td id="L6721" class="blob-num js-line-number" data-line-number="6721"></td>
        <td id="LC6721" class="blob-code blob-code-inner js-file-line">      }), top <span class="pl-k">=</span> <span class="pl-c1">0</span>, bottom <span class="pl-k">=</span> <span class="pl-c1">0</span>, tops <span class="pl-k">=</span> [], bottoms <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6722" class="blob-num js-line-number" data-line-number="6722"></td>
        <td id="LC6722" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L6723" class="blob-num js-line-number" data-line-number="6723"></td>
        <td id="LC6723" class="blob-code blob-code-inner js-file-line">        j <span class="pl-k">=</span> index[i];</td>
      </tr>
      <tr>
        <td id="L6724" class="blob-num js-line-number" data-line-number="6724"></td>
        <td id="LC6724" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (top <span class="pl-k">&lt;</span> bottom) {</td>
      </tr>
      <tr>
        <td id="L6725" class="blob-num js-line-number" data-line-number="6725"></td>
        <td id="LC6725" class="blob-code blob-code-inner js-file-line">          top <span class="pl-k">+=</span> sums[j];</td>
      </tr>
      <tr>
        <td id="L6726" class="blob-num js-line-number" data-line-number="6726"></td>
        <td id="LC6726" class="blob-code blob-code-inner js-file-line">          tops.<span class="pl-c1">push</span>(j);</td>
      </tr>
      <tr>
        <td id="L6727" class="blob-num js-line-number" data-line-number="6727"></td>
        <td id="LC6727" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6728" class="blob-num js-line-number" data-line-number="6728"></td>
        <td id="LC6728" class="blob-code blob-code-inner js-file-line">          bottom <span class="pl-k">+=</span> sums[j];</td>
      </tr>
      <tr>
        <td id="L6729" class="blob-num js-line-number" data-line-number="6729"></td>
        <td id="LC6729" class="blob-code blob-code-inner js-file-line">          bottoms.<span class="pl-c1">push</span>(j);</td>
      </tr>
      <tr>
        <td id="L6730" class="blob-num js-line-number" data-line-number="6730"></td>
        <td id="LC6730" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6731" class="blob-num js-line-number" data-line-number="6731"></td>
        <td id="LC6731" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6732" class="blob-num js-line-number" data-line-number="6732"></td>
        <td id="LC6732" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> bottoms.<span class="pl-c1">reverse</span>().<span class="pl-c1">concat</span>(tops);</td>
      </tr>
      <tr>
        <td id="L6733" class="blob-num js-line-number" data-line-number="6733"></td>
        <td id="LC6733" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L6734" class="blob-num js-line-number" data-line-number="6734"></td>
        <td id="LC6734" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">reverse</span>: <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L6735" class="blob-num js-line-number" data-line-number="6735"></td>
        <td id="LC6735" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3.range(data.<span class="pl-c1">length</span>).<span class="pl-c1">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L6736" class="blob-num js-line-number" data-line-number="6736"></td>
        <td id="LC6736" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L6737" class="blob-num js-line-number" data-line-number="6737"></td>
        <td id="LC6737" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_layout_stackOrderDefault</td>
      </tr>
      <tr>
        <td id="L6738" class="blob-num js-line-number" data-line-number="6738"></td>
        <td id="LC6738" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L6739" class="blob-num js-line-number" data-line-number="6739"></td>
        <td id="LC6739" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_layout_stackOffsets <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L6740" class="blob-num js-line-number" data-line-number="6740"></td>
        <td id="LC6740" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">silhouette</span>: <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L6741" class="blob-num js-line-number" data-line-number="6741"></td>
        <td id="LC6741" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> data[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>, sums <span class="pl-k">=</span> [], max <span class="pl-k">=</span> <span class="pl-c1">0</span>, i, j, o, y0 <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6742" class="blob-num js-line-number" data-line-number="6742"></td>
        <td id="LC6742" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) {</td>
      </tr>
      <tr>
        <td id="L6743" class="blob-num js-line-number" data-line-number="6743"></td>
        <td id="LC6743" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>, o <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) o <span class="pl-k">+=</span> data[i][j][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6744" class="blob-num js-line-number" data-line-number="6744"></td>
        <td id="LC6744" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (o <span class="pl-k">&gt;</span> max) max <span class="pl-k">=</span> o;</td>
      </tr>
      <tr>
        <td id="L6745" class="blob-num js-line-number" data-line-number="6745"></td>
        <td id="LC6745" class="blob-code blob-code-inner js-file-line">        sums.<span class="pl-c1">push</span>(o);</td>
      </tr>
      <tr>
        <td id="L6746" class="blob-num js-line-number" data-line-number="6746"></td>
        <td id="LC6746" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6747" class="blob-num js-line-number" data-line-number="6747"></td>
        <td id="LC6747" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) {</td>
      </tr>
      <tr>
        <td id="L6748" class="blob-num js-line-number" data-line-number="6748"></td>
        <td id="LC6748" class="blob-code blob-code-inner js-file-line">        y0[j] <span class="pl-k">=</span> (max <span class="pl-k">-</span> sums[j]) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L6749" class="blob-num js-line-number" data-line-number="6749"></td>
        <td id="LC6749" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6750" class="blob-num js-line-number" data-line-number="6750"></td>
        <td id="LC6750" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> y0;</td>
      </tr>
      <tr>
        <td id="L6751" class="blob-num js-line-number" data-line-number="6751"></td>
        <td id="LC6751" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L6752" class="blob-num js-line-number" data-line-number="6752"></td>
        <td id="LC6752" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">wiggle</span>: <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L6753" class="blob-num js-line-number" data-line-number="6753"></td>
        <td id="LC6753" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>, x <span class="pl-k">=</span> data[<span class="pl-c1">0</span>], m <span class="pl-k">=</span> x.<span class="pl-c1">length</span>, i, j, k, s1, s2, s3, dx, o, o0, y0 <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6754" class="blob-num js-line-number" data-line-number="6754"></td>
        <td id="LC6754" class="blob-code blob-code-inner js-file-line">      y0[<span class="pl-c1">0</span>] <span class="pl-k">=</span> o <span class="pl-k">=</span> o0 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6755" class="blob-num js-line-number" data-line-number="6755"></td>
        <td id="LC6755" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">1</span>; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) {</td>
      </tr>
      <tr>
        <td id="L6756" class="blob-num js-line-number" data-line-number="6756"></td>
        <td id="LC6756" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>, s1 <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) s1 <span class="pl-k">+=</span> data[i][j][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6757" class="blob-num js-line-number" data-line-number="6757"></td>
        <td id="LC6757" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>, s2 <span class="pl-k">=</span> <span class="pl-c1">0</span>, dx <span class="pl-k">=</span> x[j][<span class="pl-c1">0</span>] <span class="pl-k">-</span> x[j <span class="pl-k">-</span> <span class="pl-c1">1</span>][<span class="pl-c1">0</span>]; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L6758" class="blob-num js-line-number" data-line-number="6758"></td>
        <td id="LC6758" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (k <span class="pl-k">=</span> <span class="pl-c1">0</span>, s3 <span class="pl-k">=</span> (data[i][j][<span class="pl-c1">1</span>] <span class="pl-k">-</span> data[i][j <span class="pl-k">-</span> <span class="pl-c1">1</span>][<span class="pl-c1">1</span>]) / (<span class="pl-c1">2</span> <span class="pl-k">*</span> dx); k <span class="pl-k">&lt;</span> i; <span class="pl-k">++</span>k) {</td>
      </tr>
      <tr>
        <td id="L6759" class="blob-num js-line-number" data-line-number="6759"></td>
        <td id="LC6759" class="blob-code blob-code-inner js-file-line">            s3 <span class="pl-k">+=</span> (data[k][j][<span class="pl-c1">1</span>] <span class="pl-k">-</span> data[k][j <span class="pl-k">-</span> <span class="pl-c1">1</span>][<span class="pl-c1">1</span>]) / dx;</td>
      </tr>
      <tr>
        <td id="L6760" class="blob-num js-line-number" data-line-number="6760"></td>
        <td id="LC6760" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6761" class="blob-num js-line-number" data-line-number="6761"></td>
        <td id="LC6761" class="blob-code blob-code-inner js-file-line">          s2 <span class="pl-k">+=</span> s3 <span class="pl-k">*</span> data[i][j][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6762" class="blob-num js-line-number" data-line-number="6762"></td>
        <td id="LC6762" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6763" class="blob-num js-line-number" data-line-number="6763"></td>
        <td id="LC6763" class="blob-code blob-code-inner js-file-line">        y0[j] <span class="pl-k">=</span> o <span class="pl-k">-=</span> s1 <span class="pl-k">?</span> s2 / s1 <span class="pl-k">*</span> dx <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6764" class="blob-num js-line-number" data-line-number="6764"></td>
        <td id="LC6764" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (o <span class="pl-k">&lt;</span> o0) o0 <span class="pl-k">=</span> o;</td>
      </tr>
      <tr>
        <td id="L6765" class="blob-num js-line-number" data-line-number="6765"></td>
        <td id="LC6765" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6766" class="blob-num js-line-number" data-line-number="6766"></td>
        <td id="LC6766" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) y0[j] <span class="pl-k">-=</span> o0;</td>
      </tr>
      <tr>
        <td id="L6767" class="blob-num js-line-number" data-line-number="6767"></td>
        <td id="LC6767" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> y0;</td>
      </tr>
      <tr>
        <td id="L6768" class="blob-num js-line-number" data-line-number="6768"></td>
        <td id="LC6768" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L6769" class="blob-num js-line-number" data-line-number="6769"></td>
        <td id="LC6769" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">expand</span>: <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L6770" class="blob-num js-line-number" data-line-number="6770"></td>
        <td id="LC6770" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> data[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>, k <span class="pl-k">=</span> <span class="pl-c1">1</span> / n, i, j, o, y0 <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6771" class="blob-num js-line-number" data-line-number="6771"></td>
        <td id="LC6771" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) {</td>
      </tr>
      <tr>
        <td id="L6772" class="blob-num js-line-number" data-line-number="6772"></td>
        <td id="LC6772" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>, o <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) o <span class="pl-k">+=</span> data[i][j][<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6773" class="blob-num js-line-number" data-line-number="6773"></td>
        <td id="LC6773" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (o) <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) data[i][j][<span class="pl-c1">1</span>] <span class="pl-k">/=</span> o; <span class="pl-k">else</span> <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) data[i][j][<span class="pl-c1">1</span>] <span class="pl-k">=</span> k;</td>
      </tr>
      <tr>
        <td id="L6774" class="blob-num js-line-number" data-line-number="6774"></td>
        <td id="LC6774" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6775" class="blob-num js-line-number" data-line-number="6775"></td>
        <td id="LC6775" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> m; <span class="pl-k">++</span>j) y0[j] <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6776" class="blob-num js-line-number" data-line-number="6776"></td>
        <td id="LC6776" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> y0;</td>
      </tr>
      <tr>
        <td id="L6777" class="blob-num js-line-number" data-line-number="6777"></td>
        <td id="LC6777" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L6778" class="blob-num js-line-number" data-line-number="6778"></td>
        <td id="LC6778" class="blob-code blob-code-inner js-file-line">    zero<span class="pl-k">:</span> d3_layout_stackOffsetZero</td>
      </tr>
      <tr>
        <td id="L6779" class="blob-num js-line-number" data-line-number="6779"></td>
        <td id="LC6779" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L6780" class="blob-num js-line-number" data-line-number="6780"></td>
        <td id="LC6780" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_stackOrderDefault</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L6781" class="blob-num js-line-number" data-line-number="6781"></td>
        <td id="LC6781" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.range(data.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L6782" class="blob-num js-line-number" data-line-number="6782"></td>
        <td id="LC6782" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6783" class="blob-num js-line-number" data-line-number="6783"></td>
        <td id="LC6783" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_stackOffsetZero</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L6784" class="blob-num js-line-number" data-line-number="6784"></td>
        <td id="LC6784" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> data[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>, y0 <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6785" class="blob-num js-line-number" data-line-number="6785"></td>
        <td id="LC6785" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m) y0[j] <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6786" class="blob-num js-line-number" data-line-number="6786"></td>
        <td id="LC6786" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> y0;</td>
      </tr>
      <tr>
        <td id="L6787" class="blob-num js-line-number" data-line-number="6787"></td>
        <td id="LC6787" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6788" class="blob-num js-line-number" data-line-number="6788"></td>
        <td id="LC6788" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_stackMaxIndex</span>(<span class="pl-smi">array</span>) {</td>
      </tr>
      <tr>
        <td id="L6789" class="blob-num js-line-number" data-line-number="6789"></td>
        <td id="LC6789" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span>, j <span class="pl-k">=</span> <span class="pl-c1">0</span>, v <span class="pl-k">=</span> array[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], k, n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L6790" class="blob-num js-line-number" data-line-number="6790"></td>
        <td id="LC6790" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (;i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L6791" class="blob-num js-line-number" data-line-number="6791"></td>
        <td id="LC6791" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((k <span class="pl-k">=</span> array[i][<span class="pl-c1">1</span>]) <span class="pl-k">&gt;</span> v) {</td>
      </tr>
      <tr>
        <td id="L6792" class="blob-num js-line-number" data-line-number="6792"></td>
        <td id="LC6792" class="blob-code blob-code-inner js-file-line">        j <span class="pl-k">=</span> i;</td>
      </tr>
      <tr>
        <td id="L6793" class="blob-num js-line-number" data-line-number="6793"></td>
        <td id="LC6793" class="blob-code blob-code-inner js-file-line">        v <span class="pl-k">=</span> k;</td>
      </tr>
      <tr>
        <td id="L6794" class="blob-num js-line-number" data-line-number="6794"></td>
        <td id="LC6794" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6795" class="blob-num js-line-number" data-line-number="6795"></td>
        <td id="LC6795" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6796" class="blob-num js-line-number" data-line-number="6796"></td>
        <td id="LC6796" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> j;</td>
      </tr>
      <tr>
        <td id="L6797" class="blob-num js-line-number" data-line-number="6797"></td>
        <td id="LC6797" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6798" class="blob-num js-line-number" data-line-number="6798"></td>
        <td id="LC6798" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_stackReduceSum</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6799" class="blob-num js-line-number" data-line-number="6799"></td>
        <td id="LC6799" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.reduce(d3_layout_stackSum, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L6800" class="blob-num js-line-number" data-line-number="6800"></td>
        <td id="LC6800" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6801" class="blob-num js-line-number" data-line-number="6801"></td>
        <td id="LC6801" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_stackSum</span>(<span class="pl-smi">p</span>, <span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6802" class="blob-num js-line-number" data-line-number="6802"></td>
        <td id="LC6802" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> p <span class="pl-k">+</span> d[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6803" class="blob-num js-line-number" data-line-number="6803"></td>
        <td id="LC6803" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6804" class="blob-num js-line-number" data-line-number="6804"></td>
        <td id="LC6804" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">histogram</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6805" class="blob-num js-line-number" data-line-number="6805"></td>
        <td id="LC6805" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> frequency <span class="pl-k">=</span> <span class="pl-c1">true</span>, valuer <span class="pl-k">=</span> <span class="pl-c1">Number</span>, ranger <span class="pl-k">=</span> d3_layout_histogramRange, binner <span class="pl-k">=</span> d3_layout_histogramBinSturges;</td>
      </tr>
      <tr>
        <td id="L6806" class="blob-num js-line-number" data-line-number="6806"></td>
        <td id="LC6806" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">histogram</span>(<span class="pl-smi">data</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6807" class="blob-num js-line-number" data-line-number="6807"></td>
        <td id="LC6807" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> bins <span class="pl-k">=</span> [], values <span class="pl-k">=</span> data.map(valuer, <span class="pl-v">this</span>), range <span class="pl-k">=</span> ranger.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, values, i), thresholds <span class="pl-k">=</span> binner.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, range, values, i), bin, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> values.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> thresholds.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>, k <span class="pl-k">=</span> frequency <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span> / n, x;</td>
      </tr>
      <tr>
        <td id="L6808" class="blob-num js-line-number" data-line-number="6808"></td>
        <td id="LC6808" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> m) {</td>
      </tr>
      <tr>
        <td id="L6809" class="blob-num js-line-number" data-line-number="6809"></td>
        <td id="LC6809" class="blob-code blob-code-inner js-file-line">        bin <span class="pl-k">=</span> bins[i] <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6810" class="blob-num js-line-number" data-line-number="6810"></td>
        <td id="LC6810" class="blob-code blob-code-inner js-file-line">        bin.dx <span class="pl-k">=</span> thresholds[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">-</span> (bin.<span class="pl-c1">x</span> <span class="pl-k">=</span> thresholds[i]);</td>
      </tr>
      <tr>
        <td id="L6811" class="blob-num js-line-number" data-line-number="6811"></td>
        <td id="LC6811" class="blob-code blob-code-inner js-file-line">        bin.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6812" class="blob-num js-line-number" data-line-number="6812"></td>
        <td id="LC6812" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6813" class="blob-num js-line-number" data-line-number="6813"></td>
        <td id="LC6813" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (m <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L6814" class="blob-num js-line-number" data-line-number="6814"></td>
        <td id="LC6814" class="blob-code blob-code-inner js-file-line">        i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6815" class="blob-num js-line-number" data-line-number="6815"></td>
        <td id="LC6815" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L6816" class="blob-num js-line-number" data-line-number="6816"></td>
        <td id="LC6816" class="blob-code blob-code-inner js-file-line">          x <span class="pl-k">=</span> values[i];</td>
      </tr>
      <tr>
        <td id="L6817" class="blob-num js-line-number" data-line-number="6817"></td>
        <td id="LC6817" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (x <span class="pl-k">&gt;=</span> range[<span class="pl-c1">0</span>] <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;=</span> range[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L6818" class="blob-num js-line-number" data-line-number="6818"></td>
        <td id="LC6818" class="blob-code blob-code-inner js-file-line">            bin <span class="pl-k">=</span> bins[d3.bisect(thresholds, x, <span class="pl-c1">1</span>, m) <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6819" class="blob-num js-line-number" data-line-number="6819"></td>
        <td id="LC6819" class="blob-code blob-code-inner js-file-line">            bin.<span class="pl-c1">y</span> <span class="pl-k">+=</span> k;</td>
      </tr>
      <tr>
        <td id="L6820" class="blob-num js-line-number" data-line-number="6820"></td>
        <td id="LC6820" class="blob-code blob-code-inner js-file-line">            bin.<span class="pl-c1">push</span>(data[i]);</td>
      </tr>
      <tr>
        <td id="L6821" class="blob-num js-line-number" data-line-number="6821"></td>
        <td id="LC6821" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6822" class="blob-num js-line-number" data-line-number="6822"></td>
        <td id="LC6822" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6823" class="blob-num js-line-number" data-line-number="6823"></td>
        <td id="LC6823" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6824" class="blob-num js-line-number" data-line-number="6824"></td>
        <td id="LC6824" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> bins;</td>
      </tr>
      <tr>
        <td id="L6825" class="blob-num js-line-number" data-line-number="6825"></td>
        <td id="LC6825" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6826" class="blob-num js-line-number" data-line-number="6826"></td>
        <td id="LC6826" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">histogram</span>.<span class="pl-en">value</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6827" class="blob-num js-line-number" data-line-number="6827"></td>
        <td id="LC6827" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> valuer;</td>
      </tr>
      <tr>
        <td id="L6828" class="blob-num js-line-number" data-line-number="6828"></td>
        <td id="LC6828" class="blob-code blob-code-inner js-file-line">      valuer <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L6829" class="blob-num js-line-number" data-line-number="6829"></td>
        <td id="LC6829" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> histogram;</td>
      </tr>
      <tr>
        <td id="L6830" class="blob-num js-line-number" data-line-number="6830"></td>
        <td id="LC6830" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6831" class="blob-num js-line-number" data-line-number="6831"></td>
        <td id="LC6831" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">histogram</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6832" class="blob-num js-line-number" data-line-number="6832"></td>
        <td id="LC6832" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> ranger;</td>
      </tr>
      <tr>
        <td id="L6833" class="blob-num js-line-number" data-line-number="6833"></td>
        <td id="LC6833" class="blob-code blob-code-inner js-file-line">      ranger <span class="pl-k">=</span> d3_functor(x);</td>
      </tr>
      <tr>
        <td id="L6834" class="blob-num js-line-number" data-line-number="6834"></td>
        <td id="LC6834" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> histogram;</td>
      </tr>
      <tr>
        <td id="L6835" class="blob-num js-line-number" data-line-number="6835"></td>
        <td id="LC6835" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6836" class="blob-num js-line-number" data-line-number="6836"></td>
        <td id="LC6836" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">histogram</span>.<span class="pl-en">bins</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6837" class="blob-num js-line-number" data-line-number="6837"></td>
        <td id="LC6837" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> binner;</td>
      </tr>
      <tr>
        <td id="L6838" class="blob-num js-line-number" data-line-number="6838"></td>
        <td id="LC6838" class="blob-code blob-code-inner js-file-line">      binner <span class="pl-k">=</span> <span class="pl-k">typeof</span> x <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">range</span>) {</td>
      </tr>
      <tr>
        <td id="L6839" class="blob-num js-line-number" data-line-number="6839"></td>
        <td id="LC6839" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_layout_histogramBinFixed(range, x);</td>
      </tr>
      <tr>
        <td id="L6840" class="blob-num js-line-number" data-line-number="6840"></td>
        <td id="LC6840" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">:</span> d3_functor(x);</td>
      </tr>
      <tr>
        <td id="L6841" class="blob-num js-line-number" data-line-number="6841"></td>
        <td id="LC6841" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> histogram;</td>
      </tr>
      <tr>
        <td id="L6842" class="blob-num js-line-number" data-line-number="6842"></td>
        <td id="LC6842" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6843" class="blob-num js-line-number" data-line-number="6843"></td>
        <td id="LC6843" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">histogram</span>.<span class="pl-en">frequency</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L6844" class="blob-num js-line-number" data-line-number="6844"></td>
        <td id="LC6844" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> frequency;</td>
      </tr>
      <tr>
        <td id="L6845" class="blob-num js-line-number" data-line-number="6845"></td>
        <td id="LC6845" class="blob-code blob-code-inner js-file-line">      frequency <span class="pl-k">=</span> <span class="pl-k">!!</span>x;</td>
      </tr>
      <tr>
        <td id="L6846" class="blob-num js-line-number" data-line-number="6846"></td>
        <td id="LC6846" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> histogram;</td>
      </tr>
      <tr>
        <td id="L6847" class="blob-num js-line-number" data-line-number="6847"></td>
        <td id="LC6847" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6848" class="blob-num js-line-number" data-line-number="6848"></td>
        <td id="LC6848" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> histogram;</td>
      </tr>
      <tr>
        <td id="L6849" class="blob-num js-line-number" data-line-number="6849"></td>
        <td id="LC6849" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6850" class="blob-num js-line-number" data-line-number="6850"></td>
        <td id="LC6850" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_histogramBinSturges</span>(<span class="pl-smi">range</span>, <span class="pl-smi">values</span>) {</td>
      </tr>
      <tr>
        <td id="L6851" class="blob-num js-line-number" data-line-number="6851"></td>
        <td id="LC6851" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_layout_histogramBinFixed(range, <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">Math</span><span class="pl-c1">.log</span>(values.<span class="pl-c1">length</span>) / <span class="pl-c1">Math</span>.<span class="pl-c1">LN2</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L6852" class="blob-num js-line-number" data-line-number="6852"></td>
        <td id="LC6852" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6853" class="blob-num js-line-number" data-line-number="6853"></td>
        <td id="LC6853" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_histogramBinFixed</span>(<span class="pl-smi">range</span>, <span class="pl-smi">n</span>) {</td>
      </tr>
      <tr>
        <td id="L6854" class="blob-num js-line-number" data-line-number="6854"></td>
        <td id="LC6854" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-k">+</span>range[<span class="pl-c1">0</span>], m <span class="pl-k">=</span> (range[<span class="pl-c1">1</span>] <span class="pl-k">-</span> b) / n, f <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6855" class="blob-num js-line-number" data-line-number="6855"></td>
        <td id="LC6855" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>x <span class="pl-k">&lt;=</span> n) f[x] <span class="pl-k">=</span> m <span class="pl-k">*</span> x <span class="pl-k">+</span> b;</td>
      </tr>
      <tr>
        <td id="L6856" class="blob-num js-line-number" data-line-number="6856"></td>
        <td id="LC6856" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> f;</td>
      </tr>
      <tr>
        <td id="L6857" class="blob-num js-line-number" data-line-number="6857"></td>
        <td id="LC6857" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6858" class="blob-num js-line-number" data-line-number="6858"></td>
        <td id="LC6858" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_histogramRange</span>(<span class="pl-smi">values</span>) {</td>
      </tr>
      <tr>
        <td id="L6859" class="blob-num js-line-number" data-line-number="6859"></td>
        <td id="LC6859" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ d3.<span class="pl-c1">min</span>(values), d3.<span class="pl-c1">max</span>(values) ];</td>
      </tr>
      <tr>
        <td id="L6860" class="blob-num js-line-number" data-line-number="6860"></td>
        <td id="LC6860" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6861" class="blob-num js-line-number" data-line-number="6861"></td>
        <td id="LC6861" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">pack</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6862" class="blob-num js-line-number" data-line-number="6862"></td>
        <td id="LC6862" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> hierarchy <span class="pl-k">=</span> d3.layout.hierarchy().<span class="pl-c1">sort</span>(d3_layout_packSort), padding <span class="pl-k">=</span> <span class="pl-c1">0</span>, size <span class="pl-k">=</span> [ <span class="pl-c1">1</span>, <span class="pl-c1">1</span> ], radius;</td>
      </tr>
      <tr>
        <td id="L6863" class="blob-num js-line-number" data-line-number="6863"></td>
        <td id="LC6863" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pack</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6864" class="blob-num js-line-number" data-line-number="6864"></td>
        <td id="LC6864" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> nodes <span class="pl-k">=</span> hierarchy.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i), root <span class="pl-k">=</span> nodes[<span class="pl-c1">0</span>], w <span class="pl-k">=</span> size[<span class="pl-c1">0</span>], h <span class="pl-k">=</span> size[<span class="pl-c1">1</span>], r <span class="pl-k">=</span> radius <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-c1">Math</span>.sqrt <span class="pl-k">:</span> <span class="pl-k">typeof</span> radius <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-en">radius</span> : <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6865" class="blob-num js-line-number" data-line-number="6865"></td>
        <td id="LC6865" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> radius;</td>
      </tr>
      <tr>
        <td id="L6866" class="blob-num js-line-number" data-line-number="6866"></td>
        <td id="LC6866" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L6867" class="blob-num js-line-number" data-line-number="6867"></td>
        <td id="LC6867" class="blob-code blob-code-inner js-file-line">      root.<span class="pl-c1">x</span> <span class="pl-k">=</span> root.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6868" class="blob-num js-line-number" data-line-number="6868"></td>
        <td id="LC6868" class="blob-code blob-code-inner js-file-line">      d3_layout_hierarchyVisitAfter(root, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6869" class="blob-num js-line-number" data-line-number="6869"></td>
        <td id="LC6869" class="blob-code blob-code-inner js-file-line">        d.r <span class="pl-k">=</span> <span class="pl-k">+</span>r(d.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L6870" class="blob-num js-line-number" data-line-number="6870"></td>
        <td id="LC6870" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6871" class="blob-num js-line-number" data-line-number="6871"></td>
        <td id="LC6871" class="blob-code blob-code-inner js-file-line">      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);</td>
      </tr>
      <tr>
        <td id="L6872" class="blob-num js-line-number" data-line-number="6872"></td>
        <td id="LC6872" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (padding) {</td>
      </tr>
      <tr>
        <td id="L6873" class="blob-num js-line-number" data-line-number="6873"></td>
        <td id="LC6873" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> dr <span class="pl-k">=</span> padding <span class="pl-k">*</span> (radius <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">2</span> <span class="pl-k">*</span> root.r / w, <span class="pl-c1">2</span> <span class="pl-k">*</span> root.r / h)) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L6874" class="blob-num js-line-number" data-line-number="6874"></td>
        <td id="LC6874" class="blob-code blob-code-inner js-file-line">        d3_layout_hierarchyVisitAfter(root, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6875" class="blob-num js-line-number" data-line-number="6875"></td>
        <td id="LC6875" class="blob-code blob-code-inner js-file-line">          d.r <span class="pl-k">+=</span> dr;</td>
      </tr>
      <tr>
        <td id="L6876" class="blob-num js-line-number" data-line-number="6876"></td>
        <td id="LC6876" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6877" class="blob-num js-line-number" data-line-number="6877"></td>
        <td id="LC6877" class="blob-code blob-code-inner js-file-line">        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);</td>
      </tr>
      <tr>
        <td id="L6878" class="blob-num js-line-number" data-line-number="6878"></td>
        <td id="LC6878" class="blob-code blob-code-inner js-file-line">        d3_layout_hierarchyVisitAfter(root, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L6879" class="blob-num js-line-number" data-line-number="6879"></td>
        <td id="LC6879" class="blob-code blob-code-inner js-file-line">          d.r <span class="pl-k">-=</span> dr;</td>
      </tr>
      <tr>
        <td id="L6880" class="blob-num js-line-number" data-line-number="6880"></td>
        <td id="LC6880" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6881" class="blob-num js-line-number" data-line-number="6881"></td>
        <td id="LC6881" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6882" class="blob-num js-line-number" data-line-number="6882"></td>
        <td id="LC6882" class="blob-code blob-code-inner js-file-line">      d3_layout_packTransform(root, w / <span class="pl-c1">2</span>, h / <span class="pl-c1">2</span>, radius <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span> / <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">2</span> <span class="pl-k">*</span> root.r / w, <span class="pl-c1">2</span> <span class="pl-k">*</span> root.r / h));</td>
      </tr>
      <tr>
        <td id="L6883" class="blob-num js-line-number" data-line-number="6883"></td>
        <td id="LC6883" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nodes;</td>
      </tr>
      <tr>
        <td id="L6884" class="blob-num js-line-number" data-line-number="6884"></td>
        <td id="LC6884" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6885" class="blob-num js-line-number" data-line-number="6885"></td>
        <td id="LC6885" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pack</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L6886" class="blob-num js-line-number" data-line-number="6886"></td>
        <td id="LC6886" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L6887" class="blob-num js-line-number" data-line-number="6887"></td>
        <td id="LC6887" class="blob-code blob-code-inner js-file-line">      size <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L6888" class="blob-num js-line-number" data-line-number="6888"></td>
        <td id="LC6888" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> pack;</td>
      </tr>
      <tr>
        <td id="L6889" class="blob-num js-line-number" data-line-number="6889"></td>
        <td id="LC6889" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6890" class="blob-num js-line-number" data-line-number="6890"></td>
        <td id="LC6890" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pack</span>.<span class="pl-en">radius</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L6891" class="blob-num js-line-number" data-line-number="6891"></td>
        <td id="LC6891" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> radius;</td>
      </tr>
      <tr>
        <td id="L6892" class="blob-num js-line-number" data-line-number="6892"></td>
        <td id="LC6892" class="blob-code blob-code-inner js-file-line">      radius <span class="pl-k">=</span> _ <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> <span class="pl-k">typeof</span> _ <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> _ <span class="pl-k">:</span> <span class="pl-k">+</span>_;</td>
      </tr>
      <tr>
        <td id="L6893" class="blob-num js-line-number" data-line-number="6893"></td>
        <td id="LC6893" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> pack;</td>
      </tr>
      <tr>
        <td id="L6894" class="blob-num js-line-number" data-line-number="6894"></td>
        <td id="LC6894" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6895" class="blob-num js-line-number" data-line-number="6895"></td>
        <td id="LC6895" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pack</span>.<span class="pl-en">padding</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L6896" class="blob-num js-line-number" data-line-number="6896"></td>
        <td id="LC6896" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> padding;</td>
      </tr>
      <tr>
        <td id="L6897" class="blob-num js-line-number" data-line-number="6897"></td>
        <td id="LC6897" class="blob-code blob-code-inner js-file-line">      padding <span class="pl-k">=</span> <span class="pl-k">+</span>_;</td>
      </tr>
      <tr>
        <td id="L6898" class="blob-num js-line-number" data-line-number="6898"></td>
        <td id="LC6898" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> pack;</td>
      </tr>
      <tr>
        <td id="L6899" class="blob-num js-line-number" data-line-number="6899"></td>
        <td id="LC6899" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6900" class="blob-num js-line-number" data-line-number="6900"></td>
        <td id="LC6900" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_layout_hierarchyRebind(pack, hierarchy);</td>
      </tr>
      <tr>
        <td id="L6901" class="blob-num js-line-number" data-line-number="6901"></td>
        <td id="LC6901" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6902" class="blob-num js-line-number" data-line-number="6902"></td>
        <td id="LC6902" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packSort</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6903" class="blob-num js-line-number" data-line-number="6903"></td>
        <td id="LC6903" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a.<span class="pl-c1">value</span> <span class="pl-k">-</span> b.<span class="pl-c1">value</span>;</td>
      </tr>
      <tr>
        <td id="L6904" class="blob-num js-line-number" data-line-number="6904"></td>
        <td id="LC6904" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6905" class="blob-num js-line-number" data-line-number="6905"></td>
        <td id="LC6905" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packInsert</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6906" class="blob-num js-line-number" data-line-number="6906"></td>
        <td id="LC6906" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> c <span class="pl-k">=</span> a._pack_next;</td>
      </tr>
      <tr>
        <td id="L6907" class="blob-num js-line-number" data-line-number="6907"></td>
        <td id="LC6907" class="blob-code blob-code-inner js-file-line">    a._pack_next <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L6908" class="blob-num js-line-number" data-line-number="6908"></td>
        <td id="LC6908" class="blob-code blob-code-inner js-file-line">    b._pack_prev <span class="pl-k">=</span> a;</td>
      </tr>
      <tr>
        <td id="L6909" class="blob-num js-line-number" data-line-number="6909"></td>
        <td id="LC6909" class="blob-code blob-code-inner js-file-line">    b._pack_next <span class="pl-k">=</span> c;</td>
      </tr>
      <tr>
        <td id="L6910" class="blob-num js-line-number" data-line-number="6910"></td>
        <td id="LC6910" class="blob-code blob-code-inner js-file-line">    c._pack_prev <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L6911" class="blob-num js-line-number" data-line-number="6911"></td>
        <td id="LC6911" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6912" class="blob-num js-line-number" data-line-number="6912"></td>
        <td id="LC6912" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packSplice</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6913" class="blob-num js-line-number" data-line-number="6913"></td>
        <td id="LC6913" class="blob-code blob-code-inner js-file-line">    a._pack_next <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L6914" class="blob-num js-line-number" data-line-number="6914"></td>
        <td id="LC6914" class="blob-code blob-code-inner js-file-line">    b._pack_prev <span class="pl-k">=</span> a;</td>
      </tr>
      <tr>
        <td id="L6915" class="blob-num js-line-number" data-line-number="6915"></td>
        <td id="LC6915" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6916" class="blob-num js-line-number" data-line-number="6916"></td>
        <td id="LC6916" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packIntersects</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L6917" class="blob-num js-line-number" data-line-number="6917"></td>
        <td id="LC6917" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> dx <span class="pl-k">=</span> b.<span class="pl-c1">x</span> <span class="pl-k">-</span> a.<span class="pl-c1">x</span>, dy <span class="pl-k">=</span> b.<span class="pl-c1">y</span> <span class="pl-k">-</span> a.<span class="pl-c1">y</span>, dr <span class="pl-k">=</span> a.r <span class="pl-k">+</span> b.r;</td>
      </tr>
      <tr>
        <td id="L6918" class="blob-num js-line-number" data-line-number="6918"></td>
        <td id="LC6918" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> .<span class="pl-c1">999</span> <span class="pl-k">*</span> dr <span class="pl-k">*</span> dr <span class="pl-k">&gt;</span> dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy;</td>
      </tr>
      <tr>
        <td id="L6919" class="blob-num js-line-number" data-line-number="6919"></td>
        <td id="LC6919" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6920" class="blob-num js-line-number" data-line-number="6920"></td>
        <td id="LC6920" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packSiblings</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6921" class="blob-num js-line-number" data-line-number="6921"></td>
        <td id="LC6921" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>(nodes <span class="pl-k">=</span> node.children) <span class="pl-k">||</span> <span class="pl-k">!</span>(n <span class="pl-k">=</span> nodes.<span class="pl-c1">length</span>)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L6922" class="blob-num js-line-number" data-line-number="6922"></td>
        <td id="LC6922" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> nodes, xMin <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>, xMax <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">Infinity</span>, yMin <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>, yMax <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">Infinity</span>, a, b, c, i, j, k, n;</td>
      </tr>
      <tr>
        <td id="L6923" class="blob-num js-line-number" data-line-number="6923"></td>
        <td id="LC6923" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">bound</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6924" class="blob-num js-line-number" data-line-number="6924"></td>
        <td id="LC6924" class="blob-code blob-code-inner js-file-line">      xMin <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(node.<span class="pl-c1">x</span> <span class="pl-k">-</span> node.r, xMin);</td>
      </tr>
      <tr>
        <td id="L6925" class="blob-num js-line-number" data-line-number="6925"></td>
        <td id="LC6925" class="blob-code blob-code-inner js-file-line">      xMax <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(node.<span class="pl-c1">x</span> <span class="pl-k">+</span> node.r, xMax);</td>
      </tr>
      <tr>
        <td id="L6926" class="blob-num js-line-number" data-line-number="6926"></td>
        <td id="LC6926" class="blob-code blob-code-inner js-file-line">      yMin <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(node.<span class="pl-c1">y</span> <span class="pl-k">-</span> node.r, yMin);</td>
      </tr>
      <tr>
        <td id="L6927" class="blob-num js-line-number" data-line-number="6927"></td>
        <td id="LC6927" class="blob-code blob-code-inner js-file-line">      yMax <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(node.<span class="pl-c1">y</span> <span class="pl-k">+</span> node.r, yMax);</td>
      </tr>
      <tr>
        <td id="L6928" class="blob-num js-line-number" data-line-number="6928"></td>
        <td id="LC6928" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6929" class="blob-num js-line-number" data-line-number="6929"></td>
        <td id="LC6929" class="blob-code blob-code-inner js-file-line">    nodes.forEach(d3_layout_packLink);</td>
      </tr>
      <tr>
        <td id="L6930" class="blob-num js-line-number" data-line-number="6930"></td>
        <td id="LC6930" class="blob-code blob-code-inner js-file-line">    a <span class="pl-k">=</span> nodes[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L6931" class="blob-num js-line-number" data-line-number="6931"></td>
        <td id="LC6931" class="blob-code blob-code-inner js-file-line">    a.<span class="pl-c1">x</span> <span class="pl-k">=</span> <span class="pl-k">-</span>a.r;</td>
      </tr>
      <tr>
        <td id="L6932" class="blob-num js-line-number" data-line-number="6932"></td>
        <td id="LC6932" class="blob-code blob-code-inner js-file-line">    a.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6933" class="blob-num js-line-number" data-line-number="6933"></td>
        <td id="LC6933" class="blob-code blob-code-inner js-file-line">    bound(a);</td>
      </tr>
      <tr>
        <td id="L6934" class="blob-num js-line-number" data-line-number="6934"></td>
        <td id="LC6934" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (n <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L6935" class="blob-num js-line-number" data-line-number="6935"></td>
        <td id="LC6935" class="blob-code blob-code-inner js-file-line">      b <span class="pl-k">=</span> nodes[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6936" class="blob-num js-line-number" data-line-number="6936"></td>
        <td id="LC6936" class="blob-code blob-code-inner js-file-line">      b.<span class="pl-c1">x</span> <span class="pl-k">=</span> b.r;</td>
      </tr>
      <tr>
        <td id="L6937" class="blob-num js-line-number" data-line-number="6937"></td>
        <td id="LC6937" class="blob-code blob-code-inner js-file-line">      b.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6938" class="blob-num js-line-number" data-line-number="6938"></td>
        <td id="LC6938" class="blob-code blob-code-inner js-file-line">      bound(b);</td>
      </tr>
      <tr>
        <td id="L6939" class="blob-num js-line-number" data-line-number="6939"></td>
        <td id="LC6939" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (n <span class="pl-k">&gt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L6940" class="blob-num js-line-number" data-line-number="6940"></td>
        <td id="LC6940" class="blob-code blob-code-inner js-file-line">        c <span class="pl-k">=</span> nodes[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L6941" class="blob-num js-line-number" data-line-number="6941"></td>
        <td id="LC6941" class="blob-code blob-code-inner js-file-line">        d3_layout_packPlace(a, b, c);</td>
      </tr>
      <tr>
        <td id="L6942" class="blob-num js-line-number" data-line-number="6942"></td>
        <td id="LC6942" class="blob-code blob-code-inner js-file-line">        bound(c);</td>
      </tr>
      <tr>
        <td id="L6943" class="blob-num js-line-number" data-line-number="6943"></td>
        <td id="LC6943" class="blob-code blob-code-inner js-file-line">        d3_layout_packInsert(a, c);</td>
      </tr>
      <tr>
        <td id="L6944" class="blob-num js-line-number" data-line-number="6944"></td>
        <td id="LC6944" class="blob-code blob-code-inner js-file-line">        a._pack_prev <span class="pl-k">=</span> c;</td>
      </tr>
      <tr>
        <td id="L6945" class="blob-num js-line-number" data-line-number="6945"></td>
        <td id="LC6945" class="blob-code blob-code-inner js-file-line">        d3_layout_packInsert(c, b);</td>
      </tr>
      <tr>
        <td id="L6946" class="blob-num js-line-number" data-line-number="6946"></td>
        <td id="LC6946" class="blob-code blob-code-inner js-file-line">        b <span class="pl-k">=</span> a._pack_next;</td>
      </tr>
      <tr>
        <td id="L6947" class="blob-num js-line-number" data-line-number="6947"></td>
        <td id="LC6947" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">3</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L6948" class="blob-num js-line-number" data-line-number="6948"></td>
        <td id="LC6948" class="blob-code blob-code-inner js-file-line">          d3_layout_packPlace(a, b, c <span class="pl-k">=</span> nodes[i]);</td>
      </tr>
      <tr>
        <td id="L6949" class="blob-num js-line-number" data-line-number="6949"></td>
        <td id="LC6949" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> isect <span class="pl-k">=</span> <span class="pl-c1">0</span>, s1 <span class="pl-k">=</span> <span class="pl-c1">1</span>, s2 <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6950" class="blob-num js-line-number" data-line-number="6950"></td>
        <td id="LC6950" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (j <span class="pl-k">=</span> b._pack_next; j <span class="pl-k">!==</span> b; j <span class="pl-k">=</span> j._pack_next, s1<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L6951" class="blob-num js-line-number" data-line-number="6951"></td>
        <td id="LC6951" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (d3_layout_packIntersects(j, c)) {</td>
      </tr>
      <tr>
        <td id="L6952" class="blob-num js-line-number" data-line-number="6952"></td>
        <td id="LC6952" class="blob-code blob-code-inner js-file-line">              isect <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L6953" class="blob-num js-line-number" data-line-number="6953"></td>
        <td id="LC6953" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L6954" class="blob-num js-line-number" data-line-number="6954"></td>
        <td id="LC6954" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L6955" class="blob-num js-line-number" data-line-number="6955"></td>
        <td id="LC6955" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6956" class="blob-num js-line-number" data-line-number="6956"></td>
        <td id="LC6956" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isect <span class="pl-k">==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L6957" class="blob-num js-line-number" data-line-number="6957"></td>
        <td id="LC6957" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (k <span class="pl-k">=</span> a._pack_prev; k <span class="pl-k">!==</span> j._pack_prev; k <span class="pl-k">=</span> k._pack_prev, s2<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L6958" class="blob-num js-line-number" data-line-number="6958"></td>
        <td id="LC6958" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (d3_layout_packIntersects(k, c)) {</td>
      </tr>
      <tr>
        <td id="L6959" class="blob-num js-line-number" data-line-number="6959"></td>
        <td id="LC6959" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L6960" class="blob-num js-line-number" data-line-number="6960"></td>
        <td id="LC6960" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L6961" class="blob-num js-line-number" data-line-number="6961"></td>
        <td id="LC6961" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L6962" class="blob-num js-line-number" data-line-number="6962"></td>
        <td id="LC6962" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6963" class="blob-num js-line-number" data-line-number="6963"></td>
        <td id="LC6963" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isect) {</td>
      </tr>
      <tr>
        <td id="L6964" class="blob-num js-line-number" data-line-number="6964"></td>
        <td id="LC6964" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (s1 <span class="pl-k">&lt;</span> s2 <span class="pl-k">||</span> s1 <span class="pl-k">==</span> s2 <span class="pl-k">&amp;&amp;</span> b.r <span class="pl-k">&lt;</span> a.r) d3_layout_packSplice(a, b <span class="pl-k">=</span> j); <span class="pl-k">else</span> d3_layout_packSplice(a <span class="pl-k">=</span> k, b);</td>
      </tr>
      <tr>
        <td id="L6965" class="blob-num js-line-number" data-line-number="6965"></td>
        <td id="LC6965" class="blob-code blob-code-inner js-file-line">            i<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L6966" class="blob-num js-line-number" data-line-number="6966"></td>
        <td id="LC6966" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6967" class="blob-num js-line-number" data-line-number="6967"></td>
        <td id="LC6967" class="blob-code blob-code-inner js-file-line">            d3_layout_packInsert(a, c);</td>
      </tr>
      <tr>
        <td id="L6968" class="blob-num js-line-number" data-line-number="6968"></td>
        <td id="LC6968" class="blob-code blob-code-inner js-file-line">            b <span class="pl-k">=</span> c;</td>
      </tr>
      <tr>
        <td id="L6969" class="blob-num js-line-number" data-line-number="6969"></td>
        <td id="LC6969" class="blob-code blob-code-inner js-file-line">            bound(c);</td>
      </tr>
      <tr>
        <td id="L6970" class="blob-num js-line-number" data-line-number="6970"></td>
        <td id="LC6970" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6971" class="blob-num js-line-number" data-line-number="6971"></td>
        <td id="LC6971" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6972" class="blob-num js-line-number" data-line-number="6972"></td>
        <td id="LC6972" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6973" class="blob-num js-line-number" data-line-number="6973"></td>
        <td id="LC6973" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6974" class="blob-num js-line-number" data-line-number="6974"></td>
        <td id="LC6974" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cx <span class="pl-k">=</span> (xMin <span class="pl-k">+</span> xMax) / <span class="pl-c1">2</span>, cy <span class="pl-k">=</span> (yMin <span class="pl-k">+</span> yMax) / <span class="pl-c1">2</span>, cr <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L6975" class="blob-num js-line-number" data-line-number="6975"></td>
        <td id="LC6975" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L6976" class="blob-num js-line-number" data-line-number="6976"></td>
        <td id="LC6976" class="blob-code blob-code-inner js-file-line">      c <span class="pl-k">=</span> nodes[i];</td>
      </tr>
      <tr>
        <td id="L6977" class="blob-num js-line-number" data-line-number="6977"></td>
        <td id="LC6977" class="blob-code blob-code-inner js-file-line">      c.<span class="pl-c1">x</span> <span class="pl-k">-=</span> cx;</td>
      </tr>
      <tr>
        <td id="L6978" class="blob-num js-line-number" data-line-number="6978"></td>
        <td id="LC6978" class="blob-code blob-code-inner js-file-line">      c.<span class="pl-c1">y</span> <span class="pl-k">-=</span> cy;</td>
      </tr>
      <tr>
        <td id="L6979" class="blob-num js-line-number" data-line-number="6979"></td>
        <td id="LC6979" class="blob-code blob-code-inner js-file-line">      cr <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(cr, c.r <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(c.<span class="pl-c1">x</span> <span class="pl-k">*</span> c.<span class="pl-c1">x</span> <span class="pl-k">+</span> c.<span class="pl-c1">y</span> <span class="pl-k">*</span> c.<span class="pl-c1">y</span>));</td>
      </tr>
      <tr>
        <td id="L6980" class="blob-num js-line-number" data-line-number="6980"></td>
        <td id="LC6980" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6981" class="blob-num js-line-number" data-line-number="6981"></td>
        <td id="LC6981" class="blob-code blob-code-inner js-file-line">    node.r <span class="pl-k">=</span> cr;</td>
      </tr>
      <tr>
        <td id="L6982" class="blob-num js-line-number" data-line-number="6982"></td>
        <td id="LC6982" class="blob-code blob-code-inner js-file-line">    nodes.forEach(d3_layout_packUnlink);</td>
      </tr>
      <tr>
        <td id="L6983" class="blob-num js-line-number" data-line-number="6983"></td>
        <td id="LC6983" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6984" class="blob-num js-line-number" data-line-number="6984"></td>
        <td id="LC6984" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packLink</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6985" class="blob-num js-line-number" data-line-number="6985"></td>
        <td id="LC6985" class="blob-code blob-code-inner js-file-line">    node._pack_next <span class="pl-k">=</span> node._pack_prev <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L6986" class="blob-num js-line-number" data-line-number="6986"></td>
        <td id="LC6986" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6987" class="blob-num js-line-number" data-line-number="6987"></td>
        <td id="LC6987" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packUnlink</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L6988" class="blob-num js-line-number" data-line-number="6988"></td>
        <td id="LC6988" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">delete</span> node._pack_next;</td>
      </tr>
      <tr>
        <td id="L6989" class="blob-num js-line-number" data-line-number="6989"></td>
        <td id="LC6989" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">delete</span> node._pack_prev;</td>
      </tr>
      <tr>
        <td id="L6990" class="blob-num js-line-number" data-line-number="6990"></td>
        <td id="LC6990" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6991" class="blob-num js-line-number" data-line-number="6991"></td>
        <td id="LC6991" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packTransform</span>(<span class="pl-smi">node</span>, <span class="pl-smi">x</span>, <span class="pl-smi">y</span>, <span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L6992" class="blob-num js-line-number" data-line-number="6992"></td>
        <td id="LC6992" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> children <span class="pl-k">=</span> node.children;</td>
      </tr>
      <tr>
        <td id="L6993" class="blob-num js-line-number" data-line-number="6993"></td>
        <td id="LC6993" class="blob-code blob-code-inner js-file-line">    node.<span class="pl-c1">x</span> <span class="pl-k">=</span> x <span class="pl-k">+=</span> k <span class="pl-k">*</span> node.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L6994" class="blob-num js-line-number" data-line-number="6994"></td>
        <td id="LC6994" class="blob-code blob-code-inner js-file-line">    node.<span class="pl-c1">y</span> <span class="pl-k">=</span> y <span class="pl-k">+=</span> k <span class="pl-k">*</span> node.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L6995" class="blob-num js-line-number" data-line-number="6995"></td>
        <td id="LC6995" class="blob-code blob-code-inner js-file-line">    node.r <span class="pl-k">*=</span> k;</td>
      </tr>
      <tr>
        <td id="L6996" class="blob-num js-line-number" data-line-number="6996"></td>
        <td id="LC6996" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (children) {</td>
      </tr>
      <tr>
        <td id="L6997" class="blob-num js-line-number" data-line-number="6997"></td>
        <td id="LC6997" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L6998" class="blob-num js-line-number" data-line-number="6998"></td>
        <td id="LC6998" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) d3_layout_packTransform(children[i], x, y, k);</td>
      </tr>
      <tr>
        <td id="L6999" class="blob-num js-line-number" data-line-number="6999"></td>
        <td id="LC6999" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7000" class="blob-num js-line-number" data-line-number="7000"></td>
        <td id="LC7000" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7001" class="blob-num js-line-number" data-line-number="7001"></td>
        <td id="LC7001" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_packPlace</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>, <span class="pl-smi">c</span>) {</td>
      </tr>
      <tr>
        <td id="L7002" class="blob-num js-line-number" data-line-number="7002"></td>
        <td id="LC7002" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> db <span class="pl-k">=</span> a.r <span class="pl-k">+</span> c.r, dx <span class="pl-k">=</span> b.<span class="pl-c1">x</span> <span class="pl-k">-</span> a.<span class="pl-c1">x</span>, dy <span class="pl-k">=</span> b.<span class="pl-c1">y</span> <span class="pl-k">-</span> a.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L7003" class="blob-num js-line-number" data-line-number="7003"></td>
        <td id="LC7003" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (db <span class="pl-k">&amp;&amp;</span> (dx <span class="pl-k">||</span> dy)) {</td>
      </tr>
      <tr>
        <td id="L7004" class="blob-num js-line-number" data-line-number="7004"></td>
        <td id="LC7004" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> da <span class="pl-k">=</span> b.r <span class="pl-k">+</span> c.r, dc <span class="pl-k">=</span> dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy;</td>
      </tr>
      <tr>
        <td id="L7005" class="blob-num js-line-number" data-line-number="7005"></td>
        <td id="LC7005" class="blob-code blob-code-inner js-file-line">      da <span class="pl-k">*=</span> da;</td>
      </tr>
      <tr>
        <td id="L7006" class="blob-num js-line-number" data-line-number="7006"></td>
        <td id="LC7006" class="blob-code blob-code-inner js-file-line">      db <span class="pl-k">*=</span> db;</td>
      </tr>
      <tr>
        <td id="L7007" class="blob-num js-line-number" data-line-number="7007"></td>
        <td id="LC7007" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x <span class="pl-k">=</span> .<span class="pl-c1">5</span> <span class="pl-k">+</span> (db <span class="pl-k">-</span> da) / (<span class="pl-c1">2</span> <span class="pl-k">*</span> dc), y <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-c1">2</span> <span class="pl-k">*</span> da <span class="pl-k">*</span> (db <span class="pl-k">+</span> dc) <span class="pl-k">-</span> (db <span class="pl-k">-=</span> dc) <span class="pl-k">*</span> db <span class="pl-k">-</span> da <span class="pl-k">*</span> da)) / (<span class="pl-c1">2</span> <span class="pl-k">*</span> dc);</td>
      </tr>
      <tr>
        <td id="L7008" class="blob-num js-line-number" data-line-number="7008"></td>
        <td id="LC7008" class="blob-code blob-code-inner js-file-line">      c.<span class="pl-c1">x</span> <span class="pl-k">=</span> a.<span class="pl-c1">x</span> <span class="pl-k">+</span> x <span class="pl-k">*</span> dx <span class="pl-k">+</span> y <span class="pl-k">*</span> dy;</td>
      </tr>
      <tr>
        <td id="L7009" class="blob-num js-line-number" data-line-number="7009"></td>
        <td id="LC7009" class="blob-code blob-code-inner js-file-line">      c.<span class="pl-c1">y</span> <span class="pl-k">=</span> a.<span class="pl-c1">y</span> <span class="pl-k">+</span> x <span class="pl-k">*</span> dy <span class="pl-k">-</span> y <span class="pl-k">*</span> dx;</td>
      </tr>
      <tr>
        <td id="L7010" class="blob-num js-line-number" data-line-number="7010"></td>
        <td id="LC7010" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7011" class="blob-num js-line-number" data-line-number="7011"></td>
        <td id="LC7011" class="blob-code blob-code-inner js-file-line">      c.<span class="pl-c1">x</span> <span class="pl-k">=</span> a.<span class="pl-c1">x</span> <span class="pl-k">+</span> db;</td>
      </tr>
      <tr>
        <td id="L7012" class="blob-num js-line-number" data-line-number="7012"></td>
        <td id="LC7012" class="blob-code blob-code-inner js-file-line">      c.<span class="pl-c1">y</span> <span class="pl-k">=</span> a.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L7013" class="blob-num js-line-number" data-line-number="7013"></td>
        <td id="LC7013" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7014" class="blob-num js-line-number" data-line-number="7014"></td>
        <td id="LC7014" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7015" class="blob-num js-line-number" data-line-number="7015"></td>
        <td id="LC7015" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">tree</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7016" class="blob-num js-line-number" data-line-number="7016"></td>
        <td id="LC7016" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> hierarchy <span class="pl-k">=</span> d3.layout.hierarchy().<span class="pl-c1">sort</span>(<span class="pl-c1">null</span>).<span class="pl-c1">value</span>(<span class="pl-c1">null</span>), separation <span class="pl-k">=</span> d3_layout_treeSeparation, size <span class="pl-k">=</span> [ <span class="pl-c1">1</span>, <span class="pl-c1">1</span> ], nodeSize <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7017" class="blob-num js-line-number" data-line-number="7017"></td>
        <td id="LC7017" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">tree</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L7018" class="blob-num js-line-number" data-line-number="7018"></td>
        <td id="LC7018" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> nodes <span class="pl-k">=</span> hierarchy.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i), root0 <span class="pl-k">=</span> nodes[<span class="pl-c1">0</span>], root1 <span class="pl-k">=</span> wrapTree(root0);</td>
      </tr>
      <tr>
        <td id="L7019" class="blob-num js-line-number" data-line-number="7019"></td>
        <td id="LC7019" class="blob-code blob-code-inner js-file-line">      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.<span class="pl-c1">parent</span>.m <span class="pl-k">=</span> <span class="pl-k">-</span>root1.z;</td>
      </tr>
      <tr>
        <td id="L7020" class="blob-num js-line-number" data-line-number="7020"></td>
        <td id="LC7020" class="blob-code blob-code-inner js-file-line">      d3_layout_hierarchyVisitBefore(root1, secondWalk);</td>
      </tr>
      <tr>
        <td id="L7021" class="blob-num js-line-number" data-line-number="7021"></td>
        <td id="LC7021" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7022" class="blob-num js-line-number" data-line-number="7022"></td>
        <td id="LC7022" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> left <span class="pl-k">=</span> root0, right <span class="pl-k">=</span> root0, bottom <span class="pl-k">=</span> root0;</td>
      </tr>
      <tr>
        <td id="L7023" class="blob-num js-line-number" data-line-number="7023"></td>
        <td id="LC7023" class="blob-code blob-code-inner js-file-line">        d3_layout_hierarchyVisitBefore(root0, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7024" class="blob-num js-line-number" data-line-number="7024"></td>
        <td id="LC7024" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (node.<span class="pl-c1">x</span> <span class="pl-k">&lt;</span> left.<span class="pl-c1">x</span>) left <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L7025" class="blob-num js-line-number" data-line-number="7025"></td>
        <td id="LC7025" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (node.<span class="pl-c1">x</span> <span class="pl-k">&gt;</span> right.<span class="pl-c1">x</span>) right <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L7026" class="blob-num js-line-number" data-line-number="7026"></td>
        <td id="LC7026" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (node.depth <span class="pl-k">&gt;</span> bottom.depth) bottom <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L7027" class="blob-num js-line-number" data-line-number="7027"></td>
        <td id="LC7027" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L7028" class="blob-num js-line-number" data-line-number="7028"></td>
        <td id="LC7028" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> tx <span class="pl-k">=</span> separation(left, right) / <span class="pl-c1">2</span> <span class="pl-k">-</span> left.<span class="pl-c1">x</span>, kx <span class="pl-k">=</span> size[<span class="pl-c1">0</span>] / (right.<span class="pl-c1">x</span> <span class="pl-k">+</span> separation(right, left) / <span class="pl-c1">2</span> <span class="pl-k">+</span> tx), ky <span class="pl-k">=</span> size[<span class="pl-c1">1</span>] / (bottom.depth <span class="pl-k">||</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L7029" class="blob-num js-line-number" data-line-number="7029"></td>
        <td id="LC7029" class="blob-code blob-code-inner js-file-line">        d3_layout_hierarchyVisitBefore(root0, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7030" class="blob-num js-line-number" data-line-number="7030"></td>
        <td id="LC7030" class="blob-code blob-code-inner js-file-line">          node.<span class="pl-c1">x</span> <span class="pl-k">=</span> (node.<span class="pl-c1">x</span> <span class="pl-k">+</span> tx) <span class="pl-k">*</span> kx;</td>
      </tr>
      <tr>
        <td id="L7031" class="blob-num js-line-number" data-line-number="7031"></td>
        <td id="LC7031" class="blob-code blob-code-inner js-file-line">          node.<span class="pl-c1">y</span> <span class="pl-k">=</span> node.depth <span class="pl-k">*</span> ky;</td>
      </tr>
      <tr>
        <td id="L7032" class="blob-num js-line-number" data-line-number="7032"></td>
        <td id="LC7032" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L7033" class="blob-num js-line-number" data-line-number="7033"></td>
        <td id="LC7033" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7034" class="blob-num js-line-number" data-line-number="7034"></td>
        <td id="LC7034" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nodes;</td>
      </tr>
      <tr>
        <td id="L7035" class="blob-num js-line-number" data-line-number="7035"></td>
        <td id="LC7035" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7036" class="blob-num js-line-number" data-line-number="7036"></td>
        <td id="LC7036" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">wrapTree</span>(<span class="pl-smi">root0</span>) {</td>
      </tr>
      <tr>
        <td id="L7037" class="blob-num js-line-number" data-line-number="7037"></td>
        <td id="LC7037" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> root1 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7038" class="blob-num js-line-number" data-line-number="7038"></td>
        <td id="LC7038" class="blob-code blob-code-inner js-file-line">        A<span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L7039" class="blob-num js-line-number" data-line-number="7039"></td>
        <td id="LC7039" class="blob-code blob-code-inner js-file-line">        children<span class="pl-k">:</span> [ root0 ]</td>
      </tr>
      <tr>
        <td id="L7040" class="blob-num js-line-number" data-line-number="7040"></td>
        <td id="LC7040" class="blob-code blob-code-inner js-file-line">      }, queue <span class="pl-k">=</span> [ root1 ], node1;</td>
      </tr>
      <tr>
        <td id="L7041" class="blob-num js-line-number" data-line-number="7041"></td>
        <td id="LC7041" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> ((node1 <span class="pl-k">=</span> queue.<span class="pl-c1">pop</span>()) <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L7042" class="blob-num js-line-number" data-line-number="7042"></td>
        <td id="LC7042" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> children <span class="pl-k">=</span> node1.children, child, i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; <span class="pl-k">++</span>i) {</td>
      </tr>
      <tr>
        <td id="L7043" class="blob-num js-line-number" data-line-number="7043"></td>
        <td id="LC7043" class="blob-code blob-code-inner js-file-line">          queue.<span class="pl-c1">push</span>((children[i] <span class="pl-k">=</span> child <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7044" class="blob-num js-line-number" data-line-number="7044"></td>
        <td id="LC7044" class="blob-code blob-code-inner js-file-line">            _<span class="pl-k">:</span> children[i],</td>
      </tr>
      <tr>
        <td id="L7045" class="blob-num js-line-number" data-line-number="7045"></td>
        <td id="LC7045" class="blob-code blob-code-inner js-file-line">            parent<span class="pl-k">:</span> node1,</td>
      </tr>
      <tr>
        <td id="L7046" class="blob-num js-line-number" data-line-number="7046"></td>
        <td id="LC7046" class="blob-code blob-code-inner js-file-line">            children<span class="pl-k">:</span> (child <span class="pl-k">=</span> children[i].children) <span class="pl-k">&amp;&amp;</span> child.<span class="pl-c1">slice</span>() <span class="pl-k">||</span> [],</td>
      </tr>
      <tr>
        <td id="L7047" class="blob-num js-line-number" data-line-number="7047"></td>
        <td id="LC7047" class="blob-code blob-code-inner js-file-line">            A<span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L7048" class="blob-num js-line-number" data-line-number="7048"></td>
        <td id="LC7048" class="blob-code blob-code-inner js-file-line">            a<span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L7049" class="blob-num js-line-number" data-line-number="7049"></td>
        <td id="LC7049" class="blob-code blob-code-inner js-file-line">            z<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L7050" class="blob-num js-line-number" data-line-number="7050"></td>
        <td id="LC7050" class="blob-code blob-code-inner js-file-line">            m<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L7051" class="blob-num js-line-number" data-line-number="7051"></td>
        <td id="LC7051" class="blob-code blob-code-inner js-file-line">            c<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L7052" class="blob-num js-line-number" data-line-number="7052"></td>
        <td id="LC7052" class="blob-code blob-code-inner js-file-line">            s<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L7053" class="blob-num js-line-number" data-line-number="7053"></td>
        <td id="LC7053" class="blob-code blob-code-inner js-file-line">            t<span class="pl-k">:</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L7054" class="blob-num js-line-number" data-line-number="7054"></td>
        <td id="LC7054" class="blob-code blob-code-inner js-file-line">            i<span class="pl-k">:</span> i</td>
      </tr>
      <tr>
        <td id="L7055" class="blob-num js-line-number" data-line-number="7055"></td>
        <td id="LC7055" class="blob-code blob-code-inner js-file-line">          }).a <span class="pl-k">=</span> child);</td>
      </tr>
      <tr>
        <td id="L7056" class="blob-num js-line-number" data-line-number="7056"></td>
        <td id="LC7056" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7057" class="blob-num js-line-number" data-line-number="7057"></td>
        <td id="LC7057" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7058" class="blob-num js-line-number" data-line-number="7058"></td>
        <td id="LC7058" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> root1.children[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L7059" class="blob-num js-line-number" data-line-number="7059"></td>
        <td id="LC7059" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7060" class="blob-num js-line-number" data-line-number="7060"></td>
        <td id="LC7060" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">firstWalk</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L7061" class="blob-num js-line-number" data-line-number="7061"></td>
        <td id="LC7061" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> children <span class="pl-k">=</span> v.children, siblings <span class="pl-k">=</span> v.<span class="pl-c1">parent</span>.children, w <span class="pl-k">=</span> v.i <span class="pl-k">?</span> siblings[v.i <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7062" class="blob-num js-line-number" data-line-number="7062"></td>
        <td id="LC7062" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L7063" class="blob-num js-line-number" data-line-number="7063"></td>
        <td id="LC7063" class="blob-code blob-code-inner js-file-line">        d3_layout_treeShift(v);</td>
      </tr>
      <tr>
        <td id="L7064" class="blob-num js-line-number" data-line-number="7064"></td>
        <td id="LC7064" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> midpoint <span class="pl-k">=</span> (children[<span class="pl-c1">0</span>].z <span class="pl-k">+</span> children[children.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>].z) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7065" class="blob-num js-line-number" data-line-number="7065"></td>
        <td id="LC7065" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (w) {</td>
      </tr>
      <tr>
        <td id="L7066" class="blob-num js-line-number" data-line-number="7066"></td>
        <td id="LC7066" class="blob-code blob-code-inner js-file-line">          v.z <span class="pl-k">=</span> w.z <span class="pl-k">+</span> separation(v._, w._);</td>
      </tr>
      <tr>
        <td id="L7067" class="blob-num js-line-number" data-line-number="7067"></td>
        <td id="LC7067" class="blob-code blob-code-inner js-file-line">          v.m <span class="pl-k">=</span> v.z <span class="pl-k">-</span> midpoint;</td>
      </tr>
      <tr>
        <td id="L7068" class="blob-num js-line-number" data-line-number="7068"></td>
        <td id="LC7068" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7069" class="blob-num js-line-number" data-line-number="7069"></td>
        <td id="LC7069" class="blob-code blob-code-inner js-file-line">          v.z <span class="pl-k">=</span> midpoint;</td>
      </tr>
      <tr>
        <td id="L7070" class="blob-num js-line-number" data-line-number="7070"></td>
        <td id="LC7070" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7071" class="blob-num js-line-number" data-line-number="7071"></td>
        <td id="LC7071" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (w) {</td>
      </tr>
      <tr>
        <td id="L7072" class="blob-num js-line-number" data-line-number="7072"></td>
        <td id="LC7072" class="blob-code blob-code-inner js-file-line">        v.z <span class="pl-k">=</span> w.z <span class="pl-k">+</span> separation(v._, w._);</td>
      </tr>
      <tr>
        <td id="L7073" class="blob-num js-line-number" data-line-number="7073"></td>
        <td id="LC7073" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7074" class="blob-num js-line-number" data-line-number="7074"></td>
        <td id="LC7074" class="blob-code blob-code-inner js-file-line">      v.<span class="pl-c1">parent</span>.A <span class="pl-k">=</span> apportion(v, w, v.<span class="pl-c1">parent</span>.A <span class="pl-k">||</span> siblings[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L7075" class="blob-num js-line-number" data-line-number="7075"></td>
        <td id="LC7075" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7076" class="blob-num js-line-number" data-line-number="7076"></td>
        <td id="LC7076" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">secondWalk</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L7077" class="blob-num js-line-number" data-line-number="7077"></td>
        <td id="LC7077" class="blob-code blob-code-inner js-file-line">      v._.<span class="pl-c1">x</span> <span class="pl-k">=</span> v.z <span class="pl-k">+</span> v.<span class="pl-c1">parent</span>.m;</td>
      </tr>
      <tr>
        <td id="L7078" class="blob-num js-line-number" data-line-number="7078"></td>
        <td id="LC7078" class="blob-code blob-code-inner js-file-line">      v.m <span class="pl-k">+=</span> v.<span class="pl-c1">parent</span>.m;</td>
      </tr>
      <tr>
        <td id="L7079" class="blob-num js-line-number" data-line-number="7079"></td>
        <td id="LC7079" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7080" class="blob-num js-line-number" data-line-number="7080"></td>
        <td id="LC7080" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">apportion</span>(<span class="pl-smi">v</span>, <span class="pl-smi">w</span>, <span class="pl-smi">ancestor</span>) {</td>
      </tr>
      <tr>
        <td id="L7081" class="blob-num js-line-number" data-line-number="7081"></td>
        <td id="LC7081" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (w) {</td>
      </tr>
      <tr>
        <td id="L7082" class="blob-num js-line-number" data-line-number="7082"></td>
        <td id="LC7082" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> vip <span class="pl-k">=</span> v, vop <span class="pl-k">=</span> v, vim <span class="pl-k">=</span> w, vom <span class="pl-k">=</span> vip.<span class="pl-c1">parent</span>.children[<span class="pl-c1">0</span>], sip <span class="pl-k">=</span> vip.m, sop <span class="pl-k">=</span> vop.m, sim <span class="pl-k">=</span> vim.m, som <span class="pl-k">=</span> vom.m, shift;</td>
      </tr>
      <tr>
        <td id="L7083" class="blob-num js-line-number" data-line-number="7083"></td>
        <td id="LC7083" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (vim <span class="pl-k">=</span> d3_layout_treeRight(vim), vip <span class="pl-k">=</span> d3_layout_treeLeft(vip), vim <span class="pl-k">&amp;&amp;</span> vip) {</td>
      </tr>
      <tr>
        <td id="L7084" class="blob-num js-line-number" data-line-number="7084"></td>
        <td id="LC7084" class="blob-code blob-code-inner js-file-line">          vom <span class="pl-k">=</span> d3_layout_treeLeft(vom);</td>
      </tr>
      <tr>
        <td id="L7085" class="blob-num js-line-number" data-line-number="7085"></td>
        <td id="LC7085" class="blob-code blob-code-inner js-file-line">          vop <span class="pl-k">=</span> d3_layout_treeRight(vop);</td>
      </tr>
      <tr>
        <td id="L7086" class="blob-num js-line-number" data-line-number="7086"></td>
        <td id="LC7086" class="blob-code blob-code-inner js-file-line">          vop.a <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L7087" class="blob-num js-line-number" data-line-number="7087"></td>
        <td id="LC7087" class="blob-code blob-code-inner js-file-line">          shift <span class="pl-k">=</span> vim.z <span class="pl-k">+</span> sim <span class="pl-k">-</span> vip.z <span class="pl-k">-</span> sip <span class="pl-k">+</span> separation(vim._, vip._);</td>
      </tr>
      <tr>
        <td id="L7088" class="blob-num js-line-number" data-line-number="7088"></td>
        <td id="LC7088" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (shift <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L7089" class="blob-num js-line-number" data-line-number="7089"></td>
        <td id="LC7089" class="blob-code blob-code-inner js-file-line">            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);</td>
      </tr>
      <tr>
        <td id="L7090" class="blob-num js-line-number" data-line-number="7090"></td>
        <td id="LC7090" class="blob-code blob-code-inner js-file-line">            sip <span class="pl-k">+=</span> shift;</td>
      </tr>
      <tr>
        <td id="L7091" class="blob-num js-line-number" data-line-number="7091"></td>
        <td id="LC7091" class="blob-code blob-code-inner js-file-line">            sop <span class="pl-k">+=</span> shift;</td>
      </tr>
      <tr>
        <td id="L7092" class="blob-num js-line-number" data-line-number="7092"></td>
        <td id="LC7092" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L7093" class="blob-num js-line-number" data-line-number="7093"></td>
        <td id="LC7093" class="blob-code blob-code-inner js-file-line">          sim <span class="pl-k">+=</span> vim.m;</td>
      </tr>
      <tr>
        <td id="L7094" class="blob-num js-line-number" data-line-number="7094"></td>
        <td id="LC7094" class="blob-code blob-code-inner js-file-line">          sip <span class="pl-k">+=</span> vip.m;</td>
      </tr>
      <tr>
        <td id="L7095" class="blob-num js-line-number" data-line-number="7095"></td>
        <td id="LC7095" class="blob-code blob-code-inner js-file-line">          som <span class="pl-k">+=</span> vom.m;</td>
      </tr>
      <tr>
        <td id="L7096" class="blob-num js-line-number" data-line-number="7096"></td>
        <td id="LC7096" class="blob-code blob-code-inner js-file-line">          sop <span class="pl-k">+=</span> vop.m;</td>
      </tr>
      <tr>
        <td id="L7097" class="blob-num js-line-number" data-line-number="7097"></td>
        <td id="LC7097" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7098" class="blob-num js-line-number" data-line-number="7098"></td>
        <td id="LC7098" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (vim <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>d3_layout_treeRight(vop)) {</td>
      </tr>
      <tr>
        <td id="L7099" class="blob-num js-line-number" data-line-number="7099"></td>
        <td id="LC7099" class="blob-code blob-code-inner js-file-line">          vop.t <span class="pl-k">=</span> vim;</td>
      </tr>
      <tr>
        <td id="L7100" class="blob-num js-line-number" data-line-number="7100"></td>
        <td id="LC7100" class="blob-code blob-code-inner js-file-line">          vop.m <span class="pl-k">+=</span> sim <span class="pl-k">-</span> sop;</td>
      </tr>
      <tr>
        <td id="L7101" class="blob-num js-line-number" data-line-number="7101"></td>
        <td id="LC7101" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7102" class="blob-num js-line-number" data-line-number="7102"></td>
        <td id="LC7102" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (vip <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>d3_layout_treeLeft(vom)) {</td>
      </tr>
      <tr>
        <td id="L7103" class="blob-num js-line-number" data-line-number="7103"></td>
        <td id="LC7103" class="blob-code blob-code-inner js-file-line">          vom.t <span class="pl-k">=</span> vip;</td>
      </tr>
      <tr>
        <td id="L7104" class="blob-num js-line-number" data-line-number="7104"></td>
        <td id="LC7104" class="blob-code blob-code-inner js-file-line">          vom.m <span class="pl-k">+=</span> sip <span class="pl-k">-</span> som;</td>
      </tr>
      <tr>
        <td id="L7105" class="blob-num js-line-number" data-line-number="7105"></td>
        <td id="LC7105" class="blob-code blob-code-inner js-file-line">          ancestor <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L7106" class="blob-num js-line-number" data-line-number="7106"></td>
        <td id="LC7106" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7107" class="blob-num js-line-number" data-line-number="7107"></td>
        <td id="LC7107" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7108" class="blob-num js-line-number" data-line-number="7108"></td>
        <td id="LC7108" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> ancestor;</td>
      </tr>
      <tr>
        <td id="L7109" class="blob-num js-line-number" data-line-number="7109"></td>
        <td id="LC7109" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7110" class="blob-num js-line-number" data-line-number="7110"></td>
        <td id="LC7110" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">sizeNode</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7111" class="blob-num js-line-number" data-line-number="7111"></td>
        <td id="LC7111" class="blob-code blob-code-inner js-file-line">      node.<span class="pl-c1">x</span> <span class="pl-k">*=</span> size[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L7112" class="blob-num js-line-number" data-line-number="7112"></td>
        <td id="LC7112" class="blob-code blob-code-inner js-file-line">      node.<span class="pl-c1">y</span> <span class="pl-k">=</span> node.depth <span class="pl-k">*</span> size[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L7113" class="blob-num js-line-number" data-line-number="7113"></td>
        <td id="LC7113" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7114" class="blob-num js-line-number" data-line-number="7114"></td>
        <td id="LC7114" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">tree</span>.<span class="pl-en">separation</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7115" class="blob-num js-line-number" data-line-number="7115"></td>
        <td id="LC7115" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> separation;</td>
      </tr>
      <tr>
        <td id="L7116" class="blob-num js-line-number" data-line-number="7116"></td>
        <td id="LC7116" class="blob-code blob-code-inner js-file-line">      separation <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7117" class="blob-num js-line-number" data-line-number="7117"></td>
        <td id="LC7117" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> tree;</td>
      </tr>
      <tr>
        <td id="L7118" class="blob-num js-line-number" data-line-number="7118"></td>
        <td id="LC7118" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7119" class="blob-num js-line-number" data-line-number="7119"></td>
        <td id="LC7119" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">tree</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7120" class="blob-num js-line-number" data-line-number="7120"></td>
        <td id="LC7120" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> nodeSize <span class="pl-k">?</span> null <span class="pl-k">:</span> size;</td>
      </tr>
      <tr>
        <td id="L7121" class="blob-num js-line-number" data-line-number="7121"></td>
        <td id="LC7121" class="blob-code blob-code-inner js-file-line">      nodeSize <span class="pl-k">=</span> (size <span class="pl-k">=</span> x) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> sizeNode <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7122" class="blob-num js-line-number" data-line-number="7122"></td>
        <td id="LC7122" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> tree;</td>
      </tr>
      <tr>
        <td id="L7123" class="blob-num js-line-number" data-line-number="7123"></td>
        <td id="LC7123" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7124" class="blob-num js-line-number" data-line-number="7124"></td>
        <td id="LC7124" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">tree</span>.<span class="pl-en">nodeSize</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7125" class="blob-num js-line-number" data-line-number="7125"></td>
        <td id="LC7125" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> nodeSize <span class="pl-k">?</span> size <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7126" class="blob-num js-line-number" data-line-number="7126"></td>
        <td id="LC7126" class="blob-code blob-code-inner js-file-line">      nodeSize <span class="pl-k">=</span> (size <span class="pl-k">=</span> x) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> null <span class="pl-k">:</span> sizeNode;</td>
      </tr>
      <tr>
        <td id="L7127" class="blob-num js-line-number" data-line-number="7127"></td>
        <td id="LC7127" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> tree;</td>
      </tr>
      <tr>
        <td id="L7128" class="blob-num js-line-number" data-line-number="7128"></td>
        <td id="LC7128" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7129" class="blob-num js-line-number" data-line-number="7129"></td>
        <td id="LC7129" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_layout_hierarchyRebind(tree, hierarchy);</td>
      </tr>
      <tr>
        <td id="L7130" class="blob-num js-line-number" data-line-number="7130"></td>
        <td id="LC7130" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7131" class="blob-num js-line-number" data-line-number="7131"></td>
        <td id="LC7131" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_treeSeparation</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L7132" class="blob-num js-line-number" data-line-number="7132"></td>
        <td id="LC7132" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a.<span class="pl-c1">parent</span> <span class="pl-k">==</span> b.<span class="pl-c1">parent</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7133" class="blob-num js-line-number" data-line-number="7133"></td>
        <td id="LC7133" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7134" class="blob-num js-line-number" data-line-number="7134"></td>
        <td id="LC7134" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_treeLeft</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L7135" class="blob-num js-line-number" data-line-number="7135"></td>
        <td id="LC7135" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> children <span class="pl-k">=</span> v.children;</td>
      </tr>
      <tr>
        <td id="L7136" class="blob-num js-line-number" data-line-number="7136"></td>
        <td id="LC7136" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> children.<span class="pl-c1">length</span> <span class="pl-k">?</span> children[<span class="pl-c1">0</span>] <span class="pl-k">:</span> v.t;</td>
      </tr>
      <tr>
        <td id="L7137" class="blob-num js-line-number" data-line-number="7137"></td>
        <td id="LC7137" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7138" class="blob-num js-line-number" data-line-number="7138"></td>
        <td id="LC7138" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_treeRight</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L7139" class="blob-num js-line-number" data-line-number="7139"></td>
        <td id="LC7139" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> children <span class="pl-k">=</span> v.children, n;</td>
      </tr>
      <tr>
        <td id="L7140" class="blob-num js-line-number" data-line-number="7140"></td>
        <td id="LC7140" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>) <span class="pl-k">?</span> children[n <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">:</span> v.t;</td>
      </tr>
      <tr>
        <td id="L7141" class="blob-num js-line-number" data-line-number="7141"></td>
        <td id="LC7141" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7142" class="blob-num js-line-number" data-line-number="7142"></td>
        <td id="LC7142" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_treeMove</span>(<span class="pl-smi">wm</span>, <span class="pl-smi">wp</span>, <span class="pl-smi">shift</span>) {</td>
      </tr>
      <tr>
        <td id="L7143" class="blob-num js-line-number" data-line-number="7143"></td>
        <td id="LC7143" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> change <span class="pl-k">=</span> shift / (wp.i <span class="pl-k">-</span> wm.i);</td>
      </tr>
      <tr>
        <td id="L7144" class="blob-num js-line-number" data-line-number="7144"></td>
        <td id="LC7144" class="blob-code blob-code-inner js-file-line">    wp.c <span class="pl-k">-=</span> change;</td>
      </tr>
      <tr>
        <td id="L7145" class="blob-num js-line-number" data-line-number="7145"></td>
        <td id="LC7145" class="blob-code blob-code-inner js-file-line">    wp.s <span class="pl-k">+=</span> shift;</td>
      </tr>
      <tr>
        <td id="L7146" class="blob-num js-line-number" data-line-number="7146"></td>
        <td id="LC7146" class="blob-code blob-code-inner js-file-line">    wm.c <span class="pl-k">+=</span> change;</td>
      </tr>
      <tr>
        <td id="L7147" class="blob-num js-line-number" data-line-number="7147"></td>
        <td id="LC7147" class="blob-code blob-code-inner js-file-line">    wp.z <span class="pl-k">+=</span> shift;</td>
      </tr>
      <tr>
        <td id="L7148" class="blob-num js-line-number" data-line-number="7148"></td>
        <td id="LC7148" class="blob-code blob-code-inner js-file-line">    wp.m <span class="pl-k">+=</span> shift;</td>
      </tr>
      <tr>
        <td id="L7149" class="blob-num js-line-number" data-line-number="7149"></td>
        <td id="LC7149" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7150" class="blob-num js-line-number" data-line-number="7150"></td>
        <td id="LC7150" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_treeShift</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L7151" class="blob-num js-line-number" data-line-number="7151"></td>
        <td id="LC7151" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> shift <span class="pl-k">=</span> <span class="pl-c1">0</span>, change <span class="pl-k">=</span> <span class="pl-c1">0</span>, children <span class="pl-k">=</span> v.children, i <span class="pl-k">=</span> children.<span class="pl-c1">length</span>, w;</td>
      </tr>
      <tr>
        <td id="L7152" class="blob-num js-line-number" data-line-number="7152"></td>
        <td id="LC7152" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">--</span>i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L7153" class="blob-num js-line-number" data-line-number="7153"></td>
        <td id="LC7153" class="blob-code blob-code-inner js-file-line">      w <span class="pl-k">=</span> children[i];</td>
      </tr>
      <tr>
        <td id="L7154" class="blob-num js-line-number" data-line-number="7154"></td>
        <td id="LC7154" class="blob-code blob-code-inner js-file-line">      w.z <span class="pl-k">+=</span> shift;</td>
      </tr>
      <tr>
        <td id="L7155" class="blob-num js-line-number" data-line-number="7155"></td>
        <td id="LC7155" class="blob-code blob-code-inner js-file-line">      w.m <span class="pl-k">+=</span> shift;</td>
      </tr>
      <tr>
        <td id="L7156" class="blob-num js-line-number" data-line-number="7156"></td>
        <td id="LC7156" class="blob-code blob-code-inner js-file-line">      shift <span class="pl-k">+=</span> w.s <span class="pl-k">+</span> (change <span class="pl-k">+=</span> w.c);</td>
      </tr>
      <tr>
        <td id="L7157" class="blob-num js-line-number" data-line-number="7157"></td>
        <td id="LC7157" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7158" class="blob-num js-line-number" data-line-number="7158"></td>
        <td id="LC7158" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7159" class="blob-num js-line-number" data-line-number="7159"></td>
        <td id="LC7159" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_treeAncestor</span>(<span class="pl-smi">vim</span>, <span class="pl-smi">v</span>, <span class="pl-smi">ancestor</span>) {</td>
      </tr>
      <tr>
        <td id="L7160" class="blob-num js-line-number" data-line-number="7160"></td>
        <td id="LC7160" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> vim.a.<span class="pl-c1">parent</span> <span class="pl-k">===</span> v.<span class="pl-c1">parent</span> <span class="pl-k">?</span> vim.a <span class="pl-k">:</span> ancestor;</td>
      </tr>
      <tr>
        <td id="L7161" class="blob-num js-line-number" data-line-number="7161"></td>
        <td id="LC7161" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7162" class="blob-num js-line-number" data-line-number="7162"></td>
        <td id="LC7162" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">cluster</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7163" class="blob-num js-line-number" data-line-number="7163"></td>
        <td id="LC7163" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> hierarchy <span class="pl-k">=</span> d3.layout.hierarchy().<span class="pl-c1">sort</span>(<span class="pl-c1">null</span>).<span class="pl-c1">value</span>(<span class="pl-c1">null</span>), separation <span class="pl-k">=</span> d3_layout_treeSeparation, size <span class="pl-k">=</span> [ <span class="pl-c1">1</span>, <span class="pl-c1">1</span> ], nodeSize <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L7164" class="blob-num js-line-number" data-line-number="7164"></td>
        <td id="LC7164" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">cluster</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L7165" class="blob-num js-line-number" data-line-number="7165"></td>
        <td id="LC7165" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> nodes <span class="pl-k">=</span> hierarchy.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i), root <span class="pl-k">=</span> nodes[<span class="pl-c1">0</span>], previousNode, x <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7166" class="blob-num js-line-number" data-line-number="7166"></td>
        <td id="LC7166" class="blob-code blob-code-inner js-file-line">      d3_layout_hierarchyVisitAfter(root, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7167" class="blob-num js-line-number" data-line-number="7167"></td>
        <td id="LC7167" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> children <span class="pl-k">=</span> node.children;</td>
      </tr>
      <tr>
        <td id="L7168" class="blob-num js-line-number" data-line-number="7168"></td>
        <td id="LC7168" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (children <span class="pl-k">&amp;&amp;</span> children.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L7169" class="blob-num js-line-number" data-line-number="7169"></td>
        <td id="LC7169" class="blob-code blob-code-inner js-file-line">          node.<span class="pl-c1">x</span> <span class="pl-k">=</span> d3_layout_clusterX(children);</td>
      </tr>
      <tr>
        <td id="L7170" class="blob-num js-line-number" data-line-number="7170"></td>
        <td id="LC7170" class="blob-code blob-code-inner js-file-line">          node.<span class="pl-c1">y</span> <span class="pl-k">=</span> d3_layout_clusterY(children);</td>
      </tr>
      <tr>
        <td id="L7171" class="blob-num js-line-number" data-line-number="7171"></td>
        <td id="LC7171" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7172" class="blob-num js-line-number" data-line-number="7172"></td>
        <td id="LC7172" class="blob-code blob-code-inner js-file-line">          node.<span class="pl-c1">x</span> <span class="pl-k">=</span> previousNode <span class="pl-k">?</span> x <span class="pl-k">+=</span> separation(node, previousNode) <span class="pl-k">:</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7173" class="blob-num js-line-number" data-line-number="7173"></td>
        <td id="LC7173" class="blob-code blob-code-inner js-file-line">          node.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7174" class="blob-num js-line-number" data-line-number="7174"></td>
        <td id="LC7174" class="blob-code blob-code-inner js-file-line">          previousNode <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L7175" class="blob-num js-line-number" data-line-number="7175"></td>
        <td id="LC7175" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7176" class="blob-num js-line-number" data-line-number="7176"></td>
        <td id="LC7176" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L7177" class="blob-num js-line-number" data-line-number="7177"></td>
        <td id="LC7177" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> left <span class="pl-k">=</span> d3_layout_clusterLeft(root), right <span class="pl-k">=</span> d3_layout_clusterRight(root), x0 <span class="pl-k">=</span> left.<span class="pl-c1">x</span> <span class="pl-k">-</span> separation(left, right) / <span class="pl-c1">2</span>, x1 <span class="pl-k">=</span> right.<span class="pl-c1">x</span> <span class="pl-k">+</span> separation(right, left) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7178" class="blob-num js-line-number" data-line-number="7178"></td>
        <td id="LC7178" class="blob-code blob-code-inner js-file-line">      d3_layout_hierarchyVisitAfter(root, nodeSize <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7179" class="blob-num js-line-number" data-line-number="7179"></td>
        <td id="LC7179" class="blob-code blob-code-inner js-file-line">        node.<span class="pl-c1">x</span> <span class="pl-k">=</span> (node.<span class="pl-c1">x</span> <span class="pl-k">-</span> root.<span class="pl-c1">x</span>) <span class="pl-k">*</span> size[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L7180" class="blob-num js-line-number" data-line-number="7180"></td>
        <td id="LC7180" class="blob-code blob-code-inner js-file-line">        node.<span class="pl-c1">y</span> <span class="pl-k">=</span> (root.<span class="pl-c1">y</span> <span class="pl-k">-</span> node.<span class="pl-c1">y</span>) <span class="pl-k">*</span> size[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L7181" class="blob-num js-line-number" data-line-number="7181"></td>
        <td id="LC7181" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7182" class="blob-num js-line-number" data-line-number="7182"></td>
        <td id="LC7182" class="blob-code blob-code-inner js-file-line">        node.<span class="pl-c1">x</span> <span class="pl-k">=</span> (node.<span class="pl-c1">x</span> <span class="pl-k">-</span> x0) / (x1 <span class="pl-k">-</span> x0) <span class="pl-k">*</span> size[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L7183" class="blob-num js-line-number" data-line-number="7183"></td>
        <td id="LC7183" class="blob-code blob-code-inner js-file-line">        node.<span class="pl-c1">y</span> <span class="pl-k">=</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> (root.<span class="pl-c1">y</span> <span class="pl-k">?</span> node.<span class="pl-c1">y</span> / root.<span class="pl-c1">y</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>)) <span class="pl-k">*</span> size[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L7184" class="blob-num js-line-number" data-line-number="7184"></td>
        <td id="LC7184" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L7185" class="blob-num js-line-number" data-line-number="7185"></td>
        <td id="LC7185" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nodes;</td>
      </tr>
      <tr>
        <td id="L7186" class="blob-num js-line-number" data-line-number="7186"></td>
        <td id="LC7186" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7187" class="blob-num js-line-number" data-line-number="7187"></td>
        <td id="LC7187" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">cluster</span>.<span class="pl-en">separation</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7188" class="blob-num js-line-number" data-line-number="7188"></td>
        <td id="LC7188" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> separation;</td>
      </tr>
      <tr>
        <td id="L7189" class="blob-num js-line-number" data-line-number="7189"></td>
        <td id="LC7189" class="blob-code blob-code-inner js-file-line">      separation <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7190" class="blob-num js-line-number" data-line-number="7190"></td>
        <td id="LC7190" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> cluster;</td>
      </tr>
      <tr>
        <td id="L7191" class="blob-num js-line-number" data-line-number="7191"></td>
        <td id="LC7191" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7192" class="blob-num js-line-number" data-line-number="7192"></td>
        <td id="LC7192" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">cluster</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7193" class="blob-num js-line-number" data-line-number="7193"></td>
        <td id="LC7193" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> nodeSize <span class="pl-k">?</span> null <span class="pl-k">:</span> size;</td>
      </tr>
      <tr>
        <td id="L7194" class="blob-num js-line-number" data-line-number="7194"></td>
        <td id="LC7194" class="blob-code blob-code-inner js-file-line">      nodeSize <span class="pl-k">=</span> (size <span class="pl-k">=</span> x) <span class="pl-k">==</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7195" class="blob-num js-line-number" data-line-number="7195"></td>
        <td id="LC7195" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> cluster;</td>
      </tr>
      <tr>
        <td id="L7196" class="blob-num js-line-number" data-line-number="7196"></td>
        <td id="LC7196" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7197" class="blob-num js-line-number" data-line-number="7197"></td>
        <td id="LC7197" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">cluster</span>.<span class="pl-en">nodeSize</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7198" class="blob-num js-line-number" data-line-number="7198"></td>
        <td id="LC7198" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> nodeSize <span class="pl-k">?</span> size <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7199" class="blob-num js-line-number" data-line-number="7199"></td>
        <td id="LC7199" class="blob-code blob-code-inner js-file-line">      nodeSize <span class="pl-k">=</span> (size <span class="pl-k">=</span> x) <span class="pl-k">!=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7200" class="blob-num js-line-number" data-line-number="7200"></td>
        <td id="LC7200" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> cluster;</td>
      </tr>
      <tr>
        <td id="L7201" class="blob-num js-line-number" data-line-number="7201"></td>
        <td id="LC7201" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7202" class="blob-num js-line-number" data-line-number="7202"></td>
        <td id="LC7202" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_layout_hierarchyRebind(cluster, hierarchy);</td>
      </tr>
      <tr>
        <td id="L7203" class="blob-num js-line-number" data-line-number="7203"></td>
        <td id="LC7203" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7204" class="blob-num js-line-number" data-line-number="7204"></td>
        <td id="LC7204" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_clusterY</span>(<span class="pl-smi">children</span>) {</td>
      </tr>
      <tr>
        <td id="L7205" class="blob-num js-line-number" data-line-number="7205"></td>
        <td id="LC7205" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> d3.<span class="pl-c1">max</span>(children, <span class="pl-k">function</span>(<span class="pl-smi">child</span>) {</td>
      </tr>
      <tr>
        <td id="L7206" class="blob-num js-line-number" data-line-number="7206"></td>
        <td id="LC7206" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> child.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L7207" class="blob-num js-line-number" data-line-number="7207"></td>
        <td id="LC7207" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L7208" class="blob-num js-line-number" data-line-number="7208"></td>
        <td id="LC7208" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7209" class="blob-num js-line-number" data-line-number="7209"></td>
        <td id="LC7209" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_clusterX</span>(<span class="pl-smi">children</span>) {</td>
      </tr>
      <tr>
        <td id="L7210" class="blob-num js-line-number" data-line-number="7210"></td>
        <td id="LC7210" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> children.reduce(<span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">child</span>) {</td>
      </tr>
      <tr>
        <td id="L7211" class="blob-num js-line-number" data-line-number="7211"></td>
        <td id="LC7211" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x <span class="pl-k">+</span> child.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L7212" class="blob-num js-line-number" data-line-number="7212"></td>
        <td id="LC7212" class="blob-code blob-code-inner js-file-line">    }, <span class="pl-c1">0</span>) / children.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L7213" class="blob-num js-line-number" data-line-number="7213"></td>
        <td id="LC7213" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7214" class="blob-num js-line-number" data-line-number="7214"></td>
        <td id="LC7214" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_clusterLeft</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7215" class="blob-num js-line-number" data-line-number="7215"></td>
        <td id="LC7215" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> children <span class="pl-k">=</span> node.children;</td>
      </tr>
      <tr>
        <td id="L7216" class="blob-num js-line-number" data-line-number="7216"></td>
        <td id="LC7216" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> children <span class="pl-k">&amp;&amp;</span> children.<span class="pl-c1">length</span> <span class="pl-k">?</span> d3_layout_clusterLeft(children[<span class="pl-c1">0</span>]) <span class="pl-k">:</span> node;</td>
      </tr>
      <tr>
        <td id="L7217" class="blob-num js-line-number" data-line-number="7217"></td>
        <td id="LC7217" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7218" class="blob-num js-line-number" data-line-number="7218"></td>
        <td id="LC7218" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_clusterRight</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7219" class="blob-num js-line-number" data-line-number="7219"></td>
        <td id="LC7219" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> children <span class="pl-k">=</span> node.children, n;</td>
      </tr>
      <tr>
        <td id="L7220" class="blob-num js-line-number" data-line-number="7220"></td>
        <td id="LC7220" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> children <span class="pl-k">&amp;&amp;</span> (n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>) <span class="pl-k">?</span> d3_layout_clusterRight(children[n <span class="pl-k">-</span> <span class="pl-c1">1</span>]) <span class="pl-k">:</span> node;</td>
      </tr>
      <tr>
        <td id="L7221" class="blob-num js-line-number" data-line-number="7221"></td>
        <td id="LC7221" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7222" class="blob-num js-line-number" data-line-number="7222"></td>
        <td id="LC7222" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.layout</span>.<span class="pl-en">treemap</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7223" class="blob-num js-line-number" data-line-number="7223"></td>
        <td id="LC7223" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> hierarchy <span class="pl-k">=</span> d3.layout.hierarchy(), round <span class="pl-k">=</span> <span class="pl-c1">Math</span>.round, size <span class="pl-k">=</span> [ <span class="pl-c1">1</span>, <span class="pl-c1">1</span> ], padding <span class="pl-k">=</span> <span class="pl-c1">null</span>, pad <span class="pl-k">=</span> d3_layout_treemapPadNull, sticky <span class="pl-k">=</span> <span class="pl-c1">false</span>, stickies, mode <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>squarify<span class="pl-pds">&quot;</span></span>, ratio <span class="pl-k">=</span> .<span class="pl-c1">5</span> <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">5</span>));</td>
      </tr>
      <tr>
        <td id="L7224" class="blob-num js-line-number" data-line-number="7224"></td>
        <td id="LC7224" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">children</span>, <span class="pl-smi">k</span>) {</td>
      </tr>
      <tr>
        <td id="L7225" class="blob-num js-line-number" data-line-number="7225"></td>
        <td id="LC7225" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> children.<span class="pl-c1">length</span>, child, area;</td>
      </tr>
      <tr>
        <td id="L7226" class="blob-num js-line-number" data-line-number="7226"></td>
        <td id="LC7226" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L7227" class="blob-num js-line-number" data-line-number="7227"></td>
        <td id="LC7227" class="blob-code blob-code-inner js-file-line">        area <span class="pl-k">=</span> (child <span class="pl-k">=</span> children[i]).<span class="pl-c1">value</span> <span class="pl-k">*</span> (k <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> k);</td>
      </tr>
      <tr>
        <td id="L7228" class="blob-num js-line-number" data-line-number="7228"></td>
        <td id="LC7228" class="blob-code blob-code-inner js-file-line">        child.area <span class="pl-k">=</span> <span class="pl-c1">isNaN</span>(area) <span class="pl-k">||</span> area <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> area;</td>
      </tr>
      <tr>
        <td id="L7229" class="blob-num js-line-number" data-line-number="7229"></td>
        <td id="LC7229" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7230" class="blob-num js-line-number" data-line-number="7230"></td>
        <td id="LC7230" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7231" class="blob-num js-line-number" data-line-number="7231"></td>
        <td id="LC7231" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">squarify</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7232" class="blob-num js-line-number" data-line-number="7232"></td>
        <td id="LC7232" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> children <span class="pl-k">=</span> node.children;</td>
      </tr>
      <tr>
        <td id="L7233" class="blob-num js-line-number" data-line-number="7233"></td>
        <td id="LC7233" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children <span class="pl-k">&amp;&amp;</span> children.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L7234" class="blob-num js-line-number" data-line-number="7234"></td>
        <td id="LC7234" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> rect <span class="pl-k">=</span> pad(node), row <span class="pl-k">=</span> [], remaining <span class="pl-k">=</span> children.<span class="pl-c1">slice</span>(), child, best <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>, score, u <span class="pl-k">=</span> mode <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>slice<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> rect.dx <span class="pl-k">:</span> mode <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>dice<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> rect.dy <span class="pl-k">:</span> mode <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>slice-dice<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> node.depth <span class="pl-k">&amp;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> rect.dy <span class="pl-k">:</span> rect.dx <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(rect.dx, rect.dy), n;</td>
      </tr>
      <tr>
        <td id="L7235" class="blob-num js-line-number" data-line-number="7235"></td>
        <td id="LC7235" class="blob-code blob-code-inner js-file-line">        scale(remaining, rect.dx <span class="pl-k">*</span> rect.dy / node.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L7236" class="blob-num js-line-number" data-line-number="7236"></td>
        <td id="LC7236" class="blob-code blob-code-inner js-file-line">        row.area <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7237" class="blob-num js-line-number" data-line-number="7237"></td>
        <td id="LC7237" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> ((n <span class="pl-k">=</span> remaining.<span class="pl-c1">length</span>) <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L7238" class="blob-num js-line-number" data-line-number="7238"></td>
        <td id="LC7238" class="blob-code blob-code-inner js-file-line">          row.<span class="pl-c1">push</span>(child <span class="pl-k">=</span> remaining[n <span class="pl-k">-</span> <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L7239" class="blob-num js-line-number" data-line-number="7239"></td>
        <td id="LC7239" class="blob-code blob-code-inner js-file-line">          row.area <span class="pl-k">+=</span> child.area;</td>
      </tr>
      <tr>
        <td id="L7240" class="blob-num js-line-number" data-line-number="7240"></td>
        <td id="LC7240" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (mode <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>squarify<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> (score <span class="pl-k">=</span> worst(row, u)) <span class="pl-k">&lt;=</span> best) {</td>
      </tr>
      <tr>
        <td id="L7241" class="blob-num js-line-number" data-line-number="7241"></td>
        <td id="LC7241" class="blob-code blob-code-inner js-file-line">            remaining.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L7242" class="blob-num js-line-number" data-line-number="7242"></td>
        <td id="LC7242" class="blob-code blob-code-inner js-file-line">            best <span class="pl-k">=</span> score;</td>
      </tr>
      <tr>
        <td id="L7243" class="blob-num js-line-number" data-line-number="7243"></td>
        <td id="LC7243" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7244" class="blob-num js-line-number" data-line-number="7244"></td>
        <td id="LC7244" class="blob-code blob-code-inner js-file-line">            row.area <span class="pl-k">-=</span> row.<span class="pl-c1">pop</span>().area;</td>
      </tr>
      <tr>
        <td id="L7245" class="blob-num js-line-number" data-line-number="7245"></td>
        <td id="LC7245" class="blob-code blob-code-inner js-file-line">            position(row, u, rect, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L7246" class="blob-num js-line-number" data-line-number="7246"></td>
        <td id="LC7246" class="blob-code blob-code-inner js-file-line">            u <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(rect.dx, rect.dy);</td>
      </tr>
      <tr>
        <td id="L7247" class="blob-num js-line-number" data-line-number="7247"></td>
        <td id="LC7247" class="blob-code blob-code-inner js-file-line">            row.<span class="pl-c1">length</span> <span class="pl-k">=</span> row.area <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7248" class="blob-num js-line-number" data-line-number="7248"></td>
        <td id="LC7248" class="blob-code blob-code-inner js-file-line">            best <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L7249" class="blob-num js-line-number" data-line-number="7249"></td>
        <td id="LC7249" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L7250" class="blob-num js-line-number" data-line-number="7250"></td>
        <td id="LC7250" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7251" class="blob-num js-line-number" data-line-number="7251"></td>
        <td id="LC7251" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (row.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L7252" class="blob-num js-line-number" data-line-number="7252"></td>
        <td id="LC7252" class="blob-code blob-code-inner js-file-line">          position(row, u, rect, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L7253" class="blob-num js-line-number" data-line-number="7253"></td>
        <td id="LC7253" class="blob-code blob-code-inner js-file-line">          row.<span class="pl-c1">length</span> <span class="pl-k">=</span> row.area <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7254" class="blob-num js-line-number" data-line-number="7254"></td>
        <td id="LC7254" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7255" class="blob-num js-line-number" data-line-number="7255"></td>
        <td id="LC7255" class="blob-code blob-code-inner js-file-line">        children.forEach(squarify);</td>
      </tr>
      <tr>
        <td id="L7256" class="blob-num js-line-number" data-line-number="7256"></td>
        <td id="LC7256" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7257" class="blob-num js-line-number" data-line-number="7257"></td>
        <td id="LC7257" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7258" class="blob-num js-line-number" data-line-number="7258"></td>
        <td id="LC7258" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">stickify</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7259" class="blob-num js-line-number" data-line-number="7259"></td>
        <td id="LC7259" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> children <span class="pl-k">=</span> node.children;</td>
      </tr>
      <tr>
        <td id="L7260" class="blob-num js-line-number" data-line-number="7260"></td>
        <td id="LC7260" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (children <span class="pl-k">&amp;&amp;</span> children.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L7261" class="blob-num js-line-number" data-line-number="7261"></td>
        <td id="LC7261" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> rect <span class="pl-k">=</span> pad(node), remaining <span class="pl-k">=</span> children.<span class="pl-c1">slice</span>(), child, row <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7262" class="blob-num js-line-number" data-line-number="7262"></td>
        <td id="LC7262" class="blob-code blob-code-inner js-file-line">        scale(remaining, rect.dx <span class="pl-k">*</span> rect.dy / node.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L7263" class="blob-num js-line-number" data-line-number="7263"></td>
        <td id="LC7263" class="blob-code blob-code-inner js-file-line">        row.area <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7264" class="blob-num js-line-number" data-line-number="7264"></td>
        <td id="LC7264" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (child <span class="pl-k">=</span> remaining.<span class="pl-c1">pop</span>()) {</td>
      </tr>
      <tr>
        <td id="L7265" class="blob-num js-line-number" data-line-number="7265"></td>
        <td id="LC7265" class="blob-code blob-code-inner js-file-line">          row.<span class="pl-c1">push</span>(child);</td>
      </tr>
      <tr>
        <td id="L7266" class="blob-num js-line-number" data-line-number="7266"></td>
        <td id="LC7266" class="blob-code blob-code-inner js-file-line">          row.area <span class="pl-k">+=</span> child.area;</td>
      </tr>
      <tr>
        <td id="L7267" class="blob-num js-line-number" data-line-number="7267"></td>
        <td id="LC7267" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (child.z <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L7268" class="blob-num js-line-number" data-line-number="7268"></td>
        <td id="LC7268" class="blob-code blob-code-inner js-file-line">            position(row, child.z <span class="pl-k">?</span> rect.dx <span class="pl-k">:</span> rect.dy, rect, <span class="pl-k">!</span>remaining.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L7269" class="blob-num js-line-number" data-line-number="7269"></td>
        <td id="LC7269" class="blob-code blob-code-inner js-file-line">            row.<span class="pl-c1">length</span> <span class="pl-k">=</span> row.area <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7270" class="blob-num js-line-number" data-line-number="7270"></td>
        <td id="LC7270" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L7271" class="blob-num js-line-number" data-line-number="7271"></td>
        <td id="LC7271" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7272" class="blob-num js-line-number" data-line-number="7272"></td>
        <td id="LC7272" class="blob-code blob-code-inner js-file-line">        children.forEach(stickify);</td>
      </tr>
      <tr>
        <td id="L7273" class="blob-num js-line-number" data-line-number="7273"></td>
        <td id="LC7273" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7274" class="blob-num js-line-number" data-line-number="7274"></td>
        <td id="LC7274" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7275" class="blob-num js-line-number" data-line-number="7275"></td>
        <td id="LC7275" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">worst</span>(<span class="pl-smi">row</span>, <span class="pl-smi">u</span>) {</td>
      </tr>
      <tr>
        <td id="L7276" class="blob-num js-line-number" data-line-number="7276"></td>
        <td id="LC7276" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> s <span class="pl-k">=</span> row.area, r, rmax <span class="pl-k">=</span> <span class="pl-c1">0</span>, rmin <span class="pl-k">=</span> <span class="pl-c1">Infinity</span>, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> row.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L7277" class="blob-num js-line-number" data-line-number="7277"></td>
        <td id="LC7277" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L7278" class="blob-num js-line-number" data-line-number="7278"></td>
        <td id="LC7278" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>(r <span class="pl-k">=</span> row[i].area)) <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L7279" class="blob-num js-line-number" data-line-number="7279"></td>
        <td id="LC7279" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&lt;</span> rmin) rmin <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L7280" class="blob-num js-line-number" data-line-number="7280"></td>
        <td id="LC7280" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r <span class="pl-k">&gt;</span> rmax) rmax <span class="pl-k">=</span> r;</td>
      </tr>
      <tr>
        <td id="L7281" class="blob-num js-line-number" data-line-number="7281"></td>
        <td id="LC7281" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7282" class="blob-num js-line-number" data-line-number="7282"></td>
        <td id="LC7282" class="blob-code blob-code-inner js-file-line">      s <span class="pl-k">*=</span> s;</td>
      </tr>
      <tr>
        <td id="L7283" class="blob-num js-line-number" data-line-number="7283"></td>
        <td id="LC7283" class="blob-code blob-code-inner js-file-line">      u <span class="pl-k">*=</span> u;</td>
      </tr>
      <tr>
        <td id="L7284" class="blob-num js-line-number" data-line-number="7284"></td>
        <td id="LC7284" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> s <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(u <span class="pl-k">*</span> rmax <span class="pl-k">*</span> ratio / s, s / (u <span class="pl-k">*</span> rmin <span class="pl-k">*</span> ratio)) <span class="pl-k">:</span> <span class="pl-c1">Infinity</span>;</td>
      </tr>
      <tr>
        <td id="L7285" class="blob-num js-line-number" data-line-number="7285"></td>
        <td id="LC7285" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7286" class="blob-num js-line-number" data-line-number="7286"></td>
        <td id="LC7286" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">position</span>(<span class="pl-smi">row</span>, <span class="pl-smi">u</span>, <span class="pl-smi">rect</span>, <span class="pl-smi">flush</span>) {</td>
      </tr>
      <tr>
        <td id="L7287" class="blob-num js-line-number" data-line-number="7287"></td>
        <td id="LC7287" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> row.<span class="pl-c1">length</span>, x <span class="pl-k">=</span> rect.<span class="pl-c1">x</span>, y <span class="pl-k">=</span> rect.<span class="pl-c1">y</span>, v <span class="pl-k">=</span> u <span class="pl-k">?</span> <span class="pl-c1">round</span>(row.area / u) <span class="pl-k">:</span> <span class="pl-c1">0</span>, o;</td>
      </tr>
      <tr>
        <td id="L7288" class="blob-num js-line-number" data-line-number="7288"></td>
        <td id="LC7288" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (u <span class="pl-k">==</span> rect.dx) {</td>
      </tr>
      <tr>
        <td id="L7289" class="blob-num js-line-number" data-line-number="7289"></td>
        <td id="LC7289" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (flush <span class="pl-k">||</span> v <span class="pl-k">&gt;</span> rect.dy) v <span class="pl-k">=</span> rect.dy;</td>
      </tr>
      <tr>
        <td id="L7290" class="blob-num js-line-number" data-line-number="7290"></td>
        <td id="LC7290" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L7291" class="blob-num js-line-number" data-line-number="7291"></td>
        <td id="LC7291" class="blob-code blob-code-inner js-file-line">          o <span class="pl-k">=</span> row[i];</td>
      </tr>
      <tr>
        <td id="L7292" class="blob-num js-line-number" data-line-number="7292"></td>
        <td id="LC7292" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">x</span> <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7293" class="blob-num js-line-number" data-line-number="7293"></td>
        <td id="LC7293" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">y</span> <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L7294" class="blob-num js-line-number" data-line-number="7294"></td>
        <td id="LC7294" class="blob-code blob-code-inner js-file-line">          o.dy <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L7295" class="blob-num js-line-number" data-line-number="7295"></td>
        <td id="LC7295" class="blob-code blob-code-inner js-file-line">          x <span class="pl-k">+=</span> o.dx <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(rect.<span class="pl-c1">x</span> <span class="pl-k">+</span> rect.dx <span class="pl-k">-</span> x, v <span class="pl-k">?</span> <span class="pl-c1">round</span>(o.area / v) <span class="pl-k">:</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L7296" class="blob-num js-line-number" data-line-number="7296"></td>
        <td id="LC7296" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7297" class="blob-num js-line-number" data-line-number="7297"></td>
        <td id="LC7297" class="blob-code blob-code-inner js-file-line">        o.z <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L7298" class="blob-num js-line-number" data-line-number="7298"></td>
        <td id="LC7298" class="blob-code blob-code-inner js-file-line">        o.dx <span class="pl-k">+=</span> rect.<span class="pl-c1">x</span> <span class="pl-k">+</span> rect.dx <span class="pl-k">-</span> x;</td>
      </tr>
      <tr>
        <td id="L7299" class="blob-num js-line-number" data-line-number="7299"></td>
        <td id="LC7299" class="blob-code blob-code-inner js-file-line">        rect.<span class="pl-c1">y</span> <span class="pl-k">+=</span> v;</td>
      </tr>
      <tr>
        <td id="L7300" class="blob-num js-line-number" data-line-number="7300"></td>
        <td id="LC7300" class="blob-code blob-code-inner js-file-line">        rect.dy <span class="pl-k">-=</span> v;</td>
      </tr>
      <tr>
        <td id="L7301" class="blob-num js-line-number" data-line-number="7301"></td>
        <td id="LC7301" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7302" class="blob-num js-line-number" data-line-number="7302"></td>
        <td id="LC7302" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (flush <span class="pl-k">||</span> v <span class="pl-k">&gt;</span> rect.dx) v <span class="pl-k">=</span> rect.dx;</td>
      </tr>
      <tr>
        <td id="L7303" class="blob-num js-line-number" data-line-number="7303"></td>
        <td id="LC7303" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L7304" class="blob-num js-line-number" data-line-number="7304"></td>
        <td id="LC7304" class="blob-code blob-code-inner js-file-line">          o <span class="pl-k">=</span> row[i];</td>
      </tr>
      <tr>
        <td id="L7305" class="blob-num js-line-number" data-line-number="7305"></td>
        <td id="LC7305" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">x</span> <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7306" class="blob-num js-line-number" data-line-number="7306"></td>
        <td id="LC7306" class="blob-code blob-code-inner js-file-line">          o.<span class="pl-c1">y</span> <span class="pl-k">=</span> y;</td>
      </tr>
      <tr>
        <td id="L7307" class="blob-num js-line-number" data-line-number="7307"></td>
        <td id="LC7307" class="blob-code blob-code-inner js-file-line">          o.dx <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L7308" class="blob-num js-line-number" data-line-number="7308"></td>
        <td id="LC7308" class="blob-code blob-code-inner js-file-line">          y <span class="pl-k">+=</span> o.dy <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(rect.<span class="pl-c1">y</span> <span class="pl-k">+</span> rect.dy <span class="pl-k">-</span> y, v <span class="pl-k">?</span> <span class="pl-c1">round</span>(o.area / v) <span class="pl-k">:</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L7309" class="blob-num js-line-number" data-line-number="7309"></td>
        <td id="LC7309" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7310" class="blob-num js-line-number" data-line-number="7310"></td>
        <td id="LC7310" class="blob-code blob-code-inner js-file-line">        o.z <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L7311" class="blob-num js-line-number" data-line-number="7311"></td>
        <td id="LC7311" class="blob-code blob-code-inner js-file-line">        o.dy <span class="pl-k">+=</span> rect.<span class="pl-c1">y</span> <span class="pl-k">+</span> rect.dy <span class="pl-k">-</span> y;</td>
      </tr>
      <tr>
        <td id="L7312" class="blob-num js-line-number" data-line-number="7312"></td>
        <td id="LC7312" class="blob-code blob-code-inner js-file-line">        rect.<span class="pl-c1">x</span> <span class="pl-k">+=</span> v;</td>
      </tr>
      <tr>
        <td id="L7313" class="blob-num js-line-number" data-line-number="7313"></td>
        <td id="LC7313" class="blob-code blob-code-inner js-file-line">        rect.dx <span class="pl-k">-=</span> v;</td>
      </tr>
      <tr>
        <td id="L7314" class="blob-num js-line-number" data-line-number="7314"></td>
        <td id="LC7314" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7315" class="blob-num js-line-number" data-line-number="7315"></td>
        <td id="LC7315" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7316" class="blob-num js-line-number" data-line-number="7316"></td>
        <td id="LC7316" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">treemap</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L7317" class="blob-num js-line-number" data-line-number="7317"></td>
        <td id="LC7317" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> nodes <span class="pl-k">=</span> stickies <span class="pl-k">||</span> hierarchy(d), root <span class="pl-k">=</span> nodes[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L7318" class="blob-num js-line-number" data-line-number="7318"></td>
        <td id="LC7318" class="blob-code blob-code-inner js-file-line">      root.<span class="pl-c1">x</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7319" class="blob-num js-line-number" data-line-number="7319"></td>
        <td id="LC7319" class="blob-code blob-code-inner js-file-line">      root.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7320" class="blob-num js-line-number" data-line-number="7320"></td>
        <td id="LC7320" class="blob-code blob-code-inner js-file-line">      root.dx <span class="pl-k">=</span> size[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L7321" class="blob-num js-line-number" data-line-number="7321"></td>
        <td id="LC7321" class="blob-code blob-code-inner js-file-line">      root.dy <span class="pl-k">=</span> size[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L7322" class="blob-num js-line-number" data-line-number="7322"></td>
        <td id="LC7322" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (stickies) hierarchy.revalue(root);</td>
      </tr>
      <tr>
        <td id="L7323" class="blob-num js-line-number" data-line-number="7323"></td>
        <td id="LC7323" class="blob-code blob-code-inner js-file-line">      scale([ root ], root.dx <span class="pl-k">*</span> root.dy / root.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L7324" class="blob-num js-line-number" data-line-number="7324"></td>
        <td id="LC7324" class="blob-code blob-code-inner js-file-line">      (stickies <span class="pl-k">?</span> stickify <span class="pl-k">:</span> squarify)(root);</td>
      </tr>
      <tr>
        <td id="L7325" class="blob-num js-line-number" data-line-number="7325"></td>
        <td id="LC7325" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (sticky) stickies <span class="pl-k">=</span> nodes;</td>
      </tr>
      <tr>
        <td id="L7326" class="blob-num js-line-number" data-line-number="7326"></td>
        <td id="LC7326" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> nodes;</td>
      </tr>
      <tr>
        <td id="L7327" class="blob-num js-line-number" data-line-number="7327"></td>
        <td id="LC7327" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7328" class="blob-num js-line-number" data-line-number="7328"></td>
        <td id="LC7328" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">treemap</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7329" class="blob-num js-line-number" data-line-number="7329"></td>
        <td id="LC7329" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L7330" class="blob-num js-line-number" data-line-number="7330"></td>
        <td id="LC7330" class="blob-code blob-code-inner js-file-line">      size <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7331" class="blob-num js-line-number" data-line-number="7331"></td>
        <td id="LC7331" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> treemap;</td>
      </tr>
      <tr>
        <td id="L7332" class="blob-num js-line-number" data-line-number="7332"></td>
        <td id="LC7332" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7333" class="blob-num js-line-number" data-line-number="7333"></td>
        <td id="LC7333" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">treemap</span>.<span class="pl-en">padding</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7334" class="blob-num js-line-number" data-line-number="7334"></td>
        <td id="LC7334" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> padding;</td>
      </tr>
      <tr>
        <td id="L7335" class="blob-num js-line-number" data-line-number="7335"></td>
        <td id="LC7335" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">padFunction</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7336" class="blob-num js-line-number" data-line-number="7336"></td>
        <td id="LC7336" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> p <span class="pl-k">=</span> x.<span class="pl-c1">call</span>(treemap, node, node.depth);</td>
      </tr>
      <tr>
        <td id="L7337" class="blob-num js-line-number" data-line-number="7337"></td>
        <td id="LC7337" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> p <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> d3_layout_treemapPadNull(node) <span class="pl-k">:</span> d3_layout_treemapPad(node, <span class="pl-k">typeof</span> p <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> [ p, p, p, p ] <span class="pl-k">:</span> p);</td>
      </tr>
      <tr>
        <td id="L7338" class="blob-num js-line-number" data-line-number="7338"></td>
        <td id="LC7338" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7339" class="blob-num js-line-number" data-line-number="7339"></td>
        <td id="LC7339" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">padConstant</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7340" class="blob-num js-line-number" data-line-number="7340"></td>
        <td id="LC7340" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d3_layout_treemapPad(node, x);</td>
      </tr>
      <tr>
        <td id="L7341" class="blob-num js-line-number" data-line-number="7341"></td>
        <td id="LC7341" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7342" class="blob-num js-line-number" data-line-number="7342"></td>
        <td id="LC7342" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> type;</td>
      </tr>
      <tr>
        <td id="L7343" class="blob-num js-line-number" data-line-number="7343"></td>
        <td id="LC7343" class="blob-code blob-code-inner js-file-line">      pad <span class="pl-k">=</span> (padding <span class="pl-k">=</span> x) <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> d3_layout_treemapPadNull <span class="pl-k">:</span> (type <span class="pl-k">=</span> <span class="pl-k">typeof</span> x) <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> padFunction <span class="pl-k">:</span> type <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> (x <span class="pl-k">=</span> [ x, x, x, x ], </td>
      </tr>
      <tr>
        <td id="L7344" class="blob-num js-line-number" data-line-number="7344"></td>
        <td id="LC7344" class="blob-code blob-code-inner js-file-line">      padConstant) <span class="pl-k">:</span> padConstant;</td>
      </tr>
      <tr>
        <td id="L7345" class="blob-num js-line-number" data-line-number="7345"></td>
        <td id="LC7345" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> treemap;</td>
      </tr>
      <tr>
        <td id="L7346" class="blob-num js-line-number" data-line-number="7346"></td>
        <td id="LC7346" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7347" class="blob-num js-line-number" data-line-number="7347"></td>
        <td id="LC7347" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">treemap</span>.<span class="pl-en">round</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7348" class="blob-num js-line-number" data-line-number="7348"></td>
        <td id="LC7348" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> round <span class="pl-k">!=</span> <span class="pl-c1">Number</span>;</td>
      </tr>
      <tr>
        <td id="L7349" class="blob-num js-line-number" data-line-number="7349"></td>
        <td id="LC7349" class="blob-code blob-code-inner js-file-line">      round <span class="pl-k">=</span> x <span class="pl-k">?</span> <span class="pl-c1">Math</span>.round <span class="pl-k">:</span> <span class="pl-c1">Number</span>;</td>
      </tr>
      <tr>
        <td id="L7350" class="blob-num js-line-number" data-line-number="7350"></td>
        <td id="LC7350" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> treemap;</td>
      </tr>
      <tr>
        <td id="L7351" class="blob-num js-line-number" data-line-number="7351"></td>
        <td id="LC7351" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7352" class="blob-num js-line-number" data-line-number="7352"></td>
        <td id="LC7352" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">treemap</span>.<span class="pl-en">sticky</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7353" class="blob-num js-line-number" data-line-number="7353"></td>
        <td id="LC7353" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> sticky;</td>
      </tr>
      <tr>
        <td id="L7354" class="blob-num js-line-number" data-line-number="7354"></td>
        <td id="LC7354" class="blob-code blob-code-inner js-file-line">      sticky <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7355" class="blob-num js-line-number" data-line-number="7355"></td>
        <td id="LC7355" class="blob-code blob-code-inner js-file-line">      stickies <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7356" class="blob-num js-line-number" data-line-number="7356"></td>
        <td id="LC7356" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> treemap;</td>
      </tr>
      <tr>
        <td id="L7357" class="blob-num js-line-number" data-line-number="7357"></td>
        <td id="LC7357" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7358" class="blob-num js-line-number" data-line-number="7358"></td>
        <td id="LC7358" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">treemap</span>.<span class="pl-en">ratio</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7359" class="blob-num js-line-number" data-line-number="7359"></td>
        <td id="LC7359" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> ratio;</td>
      </tr>
      <tr>
        <td id="L7360" class="blob-num js-line-number" data-line-number="7360"></td>
        <td id="LC7360" class="blob-code blob-code-inner js-file-line">      ratio <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7361" class="blob-num js-line-number" data-line-number="7361"></td>
        <td id="LC7361" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> treemap;</td>
      </tr>
      <tr>
        <td id="L7362" class="blob-num js-line-number" data-line-number="7362"></td>
        <td id="LC7362" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7363" class="blob-num js-line-number" data-line-number="7363"></td>
        <td id="LC7363" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">treemap</span>.<span class="pl-en">mode</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7364" class="blob-num js-line-number" data-line-number="7364"></td>
        <td id="LC7364" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> mode;</td>
      </tr>
      <tr>
        <td id="L7365" class="blob-num js-line-number" data-line-number="7365"></td>
        <td id="LC7365" class="blob-code blob-code-inner js-file-line">      mode <span class="pl-k">=</span> x <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L7366" class="blob-num js-line-number" data-line-number="7366"></td>
        <td id="LC7366" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> treemap;</td>
      </tr>
      <tr>
        <td id="L7367" class="blob-num js-line-number" data-line-number="7367"></td>
        <td id="LC7367" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7368" class="blob-num js-line-number" data-line-number="7368"></td>
        <td id="LC7368" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_layout_hierarchyRebind(treemap, hierarchy);</td>
      </tr>
      <tr>
        <td id="L7369" class="blob-num js-line-number" data-line-number="7369"></td>
        <td id="LC7369" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7370" class="blob-num js-line-number" data-line-number="7370"></td>
        <td id="LC7370" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_treemapPadNull</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L7371" class="blob-num js-line-number" data-line-number="7371"></td>
        <td id="LC7371" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L7372" class="blob-num js-line-number" data-line-number="7372"></td>
        <td id="LC7372" class="blob-code blob-code-inner js-file-line">      x<span class="pl-k">:</span> node.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L7373" class="blob-num js-line-number" data-line-number="7373"></td>
        <td id="LC7373" class="blob-code blob-code-inner js-file-line">      y<span class="pl-k">:</span> node.<span class="pl-c1">y</span>,</td>
      </tr>
      <tr>
        <td id="L7374" class="blob-num js-line-number" data-line-number="7374"></td>
        <td id="LC7374" class="blob-code blob-code-inner js-file-line">      dx<span class="pl-k">:</span> node.dx,</td>
      </tr>
      <tr>
        <td id="L7375" class="blob-num js-line-number" data-line-number="7375"></td>
        <td id="LC7375" class="blob-code blob-code-inner js-file-line">      dy<span class="pl-k">:</span> node.dy</td>
      </tr>
      <tr>
        <td id="L7376" class="blob-num js-line-number" data-line-number="7376"></td>
        <td id="LC7376" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7377" class="blob-num js-line-number" data-line-number="7377"></td>
        <td id="LC7377" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7378" class="blob-num js-line-number" data-line-number="7378"></td>
        <td id="LC7378" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_layout_treemapPad</span>(<span class="pl-smi">node</span>, <span class="pl-smi">padding</span>) {</td>
      </tr>
      <tr>
        <td id="L7379" class="blob-num js-line-number" data-line-number="7379"></td>
        <td id="LC7379" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> node.<span class="pl-c1">x</span> <span class="pl-k">+</span> padding[<span class="pl-c1">3</span>], y <span class="pl-k">=</span> node.<span class="pl-c1">y</span> <span class="pl-k">+</span> padding[<span class="pl-c1">0</span>], dx <span class="pl-k">=</span> node.dx <span class="pl-k">-</span> padding[<span class="pl-c1">1</span>] <span class="pl-k">-</span> padding[<span class="pl-c1">3</span>], dy <span class="pl-k">=</span> node.dy <span class="pl-k">-</span> padding[<span class="pl-c1">0</span>] <span class="pl-k">-</span> padding[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L7380" class="blob-num js-line-number" data-line-number="7380"></td>
        <td id="LC7380" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (dx <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L7381" class="blob-num js-line-number" data-line-number="7381"></td>
        <td id="LC7381" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">+=</span> dx / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7382" class="blob-num js-line-number" data-line-number="7382"></td>
        <td id="LC7382" class="blob-code blob-code-inner js-file-line">      dx <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7383" class="blob-num js-line-number" data-line-number="7383"></td>
        <td id="LC7383" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7384" class="blob-num js-line-number" data-line-number="7384"></td>
        <td id="LC7384" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (dy <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L7385" class="blob-num js-line-number" data-line-number="7385"></td>
        <td id="LC7385" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">+=</span> dy / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7386" class="blob-num js-line-number" data-line-number="7386"></td>
        <td id="LC7386" class="blob-code blob-code-inner js-file-line">      dy <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7387" class="blob-num js-line-number" data-line-number="7387"></td>
        <td id="LC7387" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7388" class="blob-num js-line-number" data-line-number="7388"></td>
        <td id="LC7388" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L7389" class="blob-num js-line-number" data-line-number="7389"></td>
        <td id="LC7389" class="blob-code blob-code-inner js-file-line">      x<span class="pl-k">:</span> x,</td>
      </tr>
      <tr>
        <td id="L7390" class="blob-num js-line-number" data-line-number="7390"></td>
        <td id="LC7390" class="blob-code blob-code-inner js-file-line">      y<span class="pl-k">:</span> y,</td>
      </tr>
      <tr>
        <td id="L7391" class="blob-num js-line-number" data-line-number="7391"></td>
        <td id="LC7391" class="blob-code blob-code-inner js-file-line">      dx<span class="pl-k">:</span> dx,</td>
      </tr>
      <tr>
        <td id="L7392" class="blob-num js-line-number" data-line-number="7392"></td>
        <td id="LC7392" class="blob-code blob-code-inner js-file-line">      dy<span class="pl-k">:</span> dy</td>
      </tr>
      <tr>
        <td id="L7393" class="blob-num js-line-number" data-line-number="7393"></td>
        <td id="LC7393" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7394" class="blob-num js-line-number" data-line-number="7394"></td>
        <td id="LC7394" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7395" class="blob-num js-line-number" data-line-number="7395"></td>
        <td id="LC7395" class="blob-code blob-code-inner js-file-line">  d3.random <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7396" class="blob-num js-line-number" data-line-number="7396"></td>
        <td id="LC7396" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">normal</span>: <span class="pl-k">function</span>(<span class="pl-smi">Âµ</span>, <span class="pl-smi">Ï</span>) {</td>
      </tr>
      <tr>
        <td id="L7397" class="blob-num js-line-number" data-line-number="7397"></td>
        <td id="LC7397" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L7398" class="blob-num js-line-number" data-line-number="7398"></td>
        <td id="LC7398" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) Ï <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7399" class="blob-num js-line-number" data-line-number="7399"></td>
        <td id="LC7399" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) Âµ <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7400" class="blob-num js-line-number" data-line-number="7400"></td>
        <td id="LC7400" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7401" class="blob-num js-line-number" data-line-number="7401"></td>
        <td id="LC7401" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> x, y, r;</td>
      </tr>
      <tr>
        <td id="L7402" class="blob-num js-line-number" data-line-number="7402"></td>
        <td id="LC7402" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L7403" class="blob-num js-line-number" data-line-number="7403"></td>
        <td id="LC7403" class="blob-code blob-code-inner js-file-line">          x <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">random</span>() <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7404" class="blob-num js-line-number" data-line-number="7404"></td>
        <td id="LC7404" class="blob-code blob-code-inner js-file-line">          y <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">random</span>() <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7405" class="blob-num js-line-number" data-line-number="7405"></td>
        <td id="LC7405" class="blob-code blob-code-inner js-file-line">          r <span class="pl-k">=</span> x <span class="pl-k">*</span> x <span class="pl-k">+</span> y <span class="pl-k">*</span> y;</td>
      </tr>
      <tr>
        <td id="L7406" class="blob-num js-line-number" data-line-number="7406"></td>
        <td id="LC7406" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">while</span> (<span class="pl-k">!</span>r <span class="pl-k">||</span> r <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L7407" class="blob-num js-line-number" data-line-number="7407"></td>
        <td id="LC7407" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> Âµ <span class="pl-k">+</span> Ï <span class="pl-k">*</span> x <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(r) / r);</td>
      </tr>
      <tr>
        <td id="L7408" class="blob-num js-line-number" data-line-number="7408"></td>
        <td id="LC7408" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7409" class="blob-num js-line-number" data-line-number="7409"></td>
        <td id="LC7409" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L7410" class="blob-num js-line-number" data-line-number="7410"></td>
        <td id="LC7410" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">logNormal</span>: <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7411" class="blob-num js-line-number" data-line-number="7411"></td>
        <td id="LC7411" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> random <span class="pl-k">=</span> d3.random.normal.<span class="pl-c1">apply</span>(d3, arguments);</td>
      </tr>
      <tr>
        <td id="L7412" class="blob-num js-line-number" data-line-number="7412"></td>
        <td id="LC7412" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7413" class="blob-num js-line-number" data-line-number="7413"></td>
        <td id="LC7413" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">exp</span>(<span class="pl-c1">random</span>());</td>
      </tr>
      <tr>
        <td id="L7414" class="blob-num js-line-number" data-line-number="7414"></td>
        <td id="LC7414" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7415" class="blob-num js-line-number" data-line-number="7415"></td>
        <td id="LC7415" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L7416" class="blob-num js-line-number" data-line-number="7416"></td>
        <td id="LC7416" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">bates</span>: <span class="pl-k">function</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7417" class="blob-num js-line-number" data-line-number="7417"></td>
        <td id="LC7417" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> random <span class="pl-k">=</span> d3.random.irwinHall(m);</td>
      </tr>
      <tr>
        <td id="L7418" class="blob-num js-line-number" data-line-number="7418"></td>
        <td id="LC7418" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7419" class="blob-num js-line-number" data-line-number="7419"></td>
        <td id="LC7419" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">random</span>() / m;</td>
      </tr>
      <tr>
        <td id="L7420" class="blob-num js-line-number" data-line-number="7420"></td>
        <td id="LC7420" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7421" class="blob-num js-line-number" data-line-number="7421"></td>
        <td id="LC7421" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L7422" class="blob-num js-line-number" data-line-number="7422"></td>
        <td id="LC7422" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">irwinHall</span>: <span class="pl-k">function</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7423" class="blob-num js-line-number" data-line-number="7423"></td>
        <td id="LC7423" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7424" class="blob-num js-line-number" data-line-number="7424"></td>
        <td id="LC7424" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">0</span>, j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) s <span class="pl-k">+=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">random</span>();</td>
      </tr>
      <tr>
        <td id="L7425" class="blob-num js-line-number" data-line-number="7425"></td>
        <td id="LC7425" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> s;</td>
      </tr>
      <tr>
        <td id="L7426" class="blob-num js-line-number" data-line-number="7426"></td>
        <td id="LC7426" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7427" class="blob-num js-line-number" data-line-number="7427"></td>
        <td id="LC7427" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7428" class="blob-num js-line-number" data-line-number="7428"></td>
        <td id="LC7428" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7429" class="blob-num js-line-number" data-line-number="7429"></td>
        <td id="LC7429" class="blob-code blob-code-inner js-file-line">  d3.scale <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L7430" class="blob-num js-line-number" data-line-number="7430"></td>
        <td id="LC7430" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scaleExtent</span>(<span class="pl-smi">domain</span>) {</td>
      </tr>
      <tr>
        <td id="L7431" class="blob-num js-line-number" data-line-number="7431"></td>
        <td id="LC7431" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> start <span class="pl-k">=</span> domain[<span class="pl-c1">0</span>], stop <span class="pl-k">=</span> domain[domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L7432" class="blob-num js-line-number" data-line-number="7432"></td>
        <td id="LC7432" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> start <span class="pl-k">&lt;</span> stop <span class="pl-k">?</span> [ start, stop ] <span class="pl-k">:</span> [ stop, start ];</td>
      </tr>
      <tr>
        <td id="L7433" class="blob-num js-line-number" data-line-number="7433"></td>
        <td id="LC7433" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7434" class="blob-num js-line-number" data-line-number="7434"></td>
        <td id="LC7434" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scaleRange</span>(<span class="pl-smi">scale</span>) {</td>
      </tr>
      <tr>
        <td id="L7435" class="blob-num js-line-number" data-line-number="7435"></td>
        <td id="LC7435" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> scale.rangeExtent <span class="pl-k">?</span> scale.rangeExtent() <span class="pl-k">:</span> d3_scaleExtent(scale.range());</td>
      </tr>
      <tr>
        <td id="L7436" class="blob-num js-line-number" data-line-number="7436"></td>
        <td id="LC7436" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7437" class="blob-num js-line-number" data-line-number="7437"></td>
        <td id="LC7437" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_bilinear</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">range</span>, <span class="pl-smi">uninterpolate</span>, <span class="pl-smi">interpolate</span>) {</td>
      </tr>
      <tr>
        <td id="L7438" class="blob-num js-line-number" data-line-number="7438"></td>
        <td id="LC7438" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> u <span class="pl-k">=</span> uninterpolate(domain[<span class="pl-c1">0</span>], domain[<span class="pl-c1">1</span>]), i <span class="pl-k">=</span> interpolate(range[<span class="pl-c1">0</span>], range[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L7439" class="blob-num js-line-number" data-line-number="7439"></td>
        <td id="LC7439" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7440" class="blob-num js-line-number" data-line-number="7440"></td>
        <td id="LC7440" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> i(u(x));</td>
      </tr>
      <tr>
        <td id="L7441" class="blob-num js-line-number" data-line-number="7441"></td>
        <td id="LC7441" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7442" class="blob-num js-line-number" data-line-number="7442"></td>
        <td id="LC7442" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7443" class="blob-num js-line-number" data-line-number="7443"></td>
        <td id="LC7443" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_nice</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">nice</span>) {</td>
      </tr>
      <tr>
        <td id="L7444" class="blob-num js-line-number" data-line-number="7444"></td>
        <td id="LC7444" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i0 <span class="pl-k">=</span> <span class="pl-c1">0</span>, i1 <span class="pl-k">=</span> domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>, x0 <span class="pl-k">=</span> domain[i0], x1 <span class="pl-k">=</span> domain[i1], dx;</td>
      </tr>
      <tr>
        <td id="L7445" class="blob-num js-line-number" data-line-number="7445"></td>
        <td id="LC7445" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (x1 <span class="pl-k">&lt;</span> x0) {</td>
      </tr>
      <tr>
        <td id="L7446" class="blob-num js-line-number" data-line-number="7446"></td>
        <td id="LC7446" class="blob-code blob-code-inner js-file-line">      dx <span class="pl-k">=</span> i0, i0 <span class="pl-k">=</span> i1, i1 <span class="pl-k">=</span> dx;</td>
      </tr>
      <tr>
        <td id="L7447" class="blob-num js-line-number" data-line-number="7447"></td>
        <td id="LC7447" class="blob-code blob-code-inner js-file-line">      dx <span class="pl-k">=</span> x0, x0 <span class="pl-k">=</span> x1, x1 <span class="pl-k">=</span> dx;</td>
      </tr>
      <tr>
        <td id="L7448" class="blob-num js-line-number" data-line-number="7448"></td>
        <td id="LC7448" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7449" class="blob-num js-line-number" data-line-number="7449"></td>
        <td id="LC7449" class="blob-code blob-code-inner js-file-line">    domain[i0] <span class="pl-k">=</span> nice.<span class="pl-c1">floor</span>(x0);</td>
      </tr>
      <tr>
        <td id="L7450" class="blob-num js-line-number" data-line-number="7450"></td>
        <td id="LC7450" class="blob-code blob-code-inner js-file-line">    domain[i1] <span class="pl-k">=</span> nice.<span class="pl-c1">ceil</span>(x1);</td>
      </tr>
      <tr>
        <td id="L7451" class="blob-num js-line-number" data-line-number="7451"></td>
        <td id="LC7451" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L7452" class="blob-num js-line-number" data-line-number="7452"></td>
        <td id="LC7452" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7453" class="blob-num js-line-number" data-line-number="7453"></td>
        <td id="LC7453" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_niceStep</span>(<span class="pl-smi">step</span>) {</td>
      </tr>
      <tr>
        <td id="L7454" class="blob-num js-line-number" data-line-number="7454"></td>
        <td id="LC7454" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> step <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L7455" class="blob-num js-line-number" data-line-number="7455"></td>
        <td id="LC7455" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">floor</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7456" class="blob-num js-line-number" data-line-number="7456"></td>
        <td id="LC7456" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(x / step) <span class="pl-k">*</span> step;</td>
      </tr>
      <tr>
        <td id="L7457" class="blob-num js-line-number" data-line-number="7457"></td>
        <td id="LC7457" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7458" class="blob-num js-line-number" data-line-number="7458"></td>
        <td id="LC7458" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">ceil</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7459" class="blob-num js-line-number" data-line-number="7459"></td>
        <td id="LC7459" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(x / step) <span class="pl-k">*</span> step;</td>
      </tr>
      <tr>
        <td id="L7460" class="blob-num js-line-number" data-line-number="7460"></td>
        <td id="LC7460" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7461" class="blob-num js-line-number" data-line-number="7461"></td>
        <td id="LC7461" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> d3_scale_niceIdentity;</td>
      </tr>
      <tr>
        <td id="L7462" class="blob-num js-line-number" data-line-number="7462"></td>
        <td id="LC7462" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7463" class="blob-num js-line-number" data-line-number="7463"></td>
        <td id="LC7463" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_scale_niceIdentity <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7464" class="blob-num js-line-number" data-line-number="7464"></td>
        <td id="LC7464" class="blob-code blob-code-inner js-file-line">    floor<span class="pl-k">:</span> d3_identity,</td>
      </tr>
      <tr>
        <td id="L7465" class="blob-num js-line-number" data-line-number="7465"></td>
        <td id="LC7465" class="blob-code blob-code-inner js-file-line">    ceil<span class="pl-k">:</span> d3_identity</td>
      </tr>
      <tr>
        <td id="L7466" class="blob-num js-line-number" data-line-number="7466"></td>
        <td id="LC7466" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7467" class="blob-num js-line-number" data-line-number="7467"></td>
        <td id="LC7467" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_polylinear</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">range</span>, <span class="pl-smi">uninterpolate</span>, <span class="pl-smi">interpolate</span>) {</td>
      </tr>
      <tr>
        <td id="L7468" class="blob-num js-line-number" data-line-number="7468"></td>
        <td id="LC7468" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> u <span class="pl-k">=</span> [], i <span class="pl-k">=</span> [], j <span class="pl-k">=</span> <span class="pl-c1">0</span>, k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(domain.<span class="pl-c1">length</span>, range.<span class="pl-c1">length</span>) <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7469" class="blob-num js-line-number" data-line-number="7469"></td>
        <td id="LC7469" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (domain[k] <span class="pl-k">&lt;</span> domain[<span class="pl-c1">0</span>]) {</td>
      </tr>
      <tr>
        <td id="L7470" class="blob-num js-line-number" data-line-number="7470"></td>
        <td id="LC7470" class="blob-code blob-code-inner js-file-line">      domain <span class="pl-k">=</span> domain.<span class="pl-c1">slice</span>().<span class="pl-c1">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L7471" class="blob-num js-line-number" data-line-number="7471"></td>
        <td id="LC7471" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> range.<span class="pl-c1">slice</span>().<span class="pl-c1">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L7472" class="blob-num js-line-number" data-line-number="7472"></td>
        <td id="LC7472" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7473" class="blob-num js-line-number" data-line-number="7473"></td>
        <td id="LC7473" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>j <span class="pl-k">&lt;=</span> k) {</td>
      </tr>
      <tr>
        <td id="L7474" class="blob-num js-line-number" data-line-number="7474"></td>
        <td id="LC7474" class="blob-code blob-code-inner js-file-line">      u.<span class="pl-c1">push</span>(uninterpolate(domain[j <span class="pl-k">-</span> <span class="pl-c1">1</span>], domain[j]));</td>
      </tr>
      <tr>
        <td id="L7475" class="blob-num js-line-number" data-line-number="7475"></td>
        <td id="LC7475" class="blob-code blob-code-inner js-file-line">      i.<span class="pl-c1">push</span>(interpolate(range[j <span class="pl-k">-</span> <span class="pl-c1">1</span>], range[j]));</td>
      </tr>
      <tr>
        <td id="L7476" class="blob-num js-line-number" data-line-number="7476"></td>
        <td id="LC7476" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7477" class="blob-num js-line-number" data-line-number="7477"></td>
        <td id="LC7477" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7478" class="blob-num js-line-number" data-line-number="7478"></td>
        <td id="LC7478" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> j <span class="pl-k">=</span> d3.bisect(domain, x, <span class="pl-c1">1</span>, k) <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7479" class="blob-num js-line-number" data-line-number="7479"></td>
        <td id="LC7479" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> i[j](u[j](x));</td>
      </tr>
      <tr>
        <td id="L7480" class="blob-num js-line-number" data-line-number="7480"></td>
        <td id="LC7480" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7481" class="blob-num js-line-number" data-line-number="7481"></td>
        <td id="LC7481" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7482" class="blob-num js-line-number" data-line-number="7482"></td>
        <td id="LC7482" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">linear</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7483" class="blob-num js-line-number" data-line-number="7483"></td>
        <td id="LC7483" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_linear([ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> ], [ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> ], d3_interpolate, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L7484" class="blob-num js-line-number" data-line-number="7484"></td>
        <td id="LC7484" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7485" class="blob-num js-line-number" data-line-number="7485"></td>
        <td id="LC7485" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_linear</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">range</span>, <span class="pl-smi">interpolate</span>, <span class="pl-smi">clamp</span>) {</td>
      </tr>
      <tr>
        <td id="L7486" class="blob-num js-line-number" data-line-number="7486"></td>
        <td id="LC7486" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> output, input;</td>
      </tr>
      <tr>
        <td id="L7487" class="blob-num js-line-number" data-line-number="7487"></td>
        <td id="LC7487" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">rescale</span>() {</td>
      </tr>
      <tr>
        <td id="L7488" class="blob-num js-line-number" data-line-number="7488"></td>
        <td id="LC7488" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> linear <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(domain.<span class="pl-c1">length</span>, range.<span class="pl-c1">length</span>) <span class="pl-k">&gt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> d3_scale_polylinear <span class="pl-k">:</span> d3_scale_bilinear, uninterpolate <span class="pl-k">=</span> clamp <span class="pl-k">?</span> d3_uninterpolateClamp <span class="pl-k">:</span> d3_uninterpolateNumber;</td>
      </tr>
      <tr>
        <td id="L7489" class="blob-num js-line-number" data-line-number="7489"></td>
        <td id="LC7489" class="blob-code blob-code-inner js-file-line">      output <span class="pl-k">=</span> linear(domain, range, uninterpolate, interpolate);</td>
      </tr>
      <tr>
        <td id="L7490" class="blob-num js-line-number" data-line-number="7490"></td>
        <td id="LC7490" class="blob-code blob-code-inner js-file-line">      input <span class="pl-k">=</span> linear(range, domain, uninterpolate, d3_interpolate);</td>
      </tr>
      <tr>
        <td id="L7491" class="blob-num js-line-number" data-line-number="7491"></td>
        <td id="LC7491" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7492" class="blob-num js-line-number" data-line-number="7492"></td>
        <td id="LC7492" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7493" class="blob-num js-line-number" data-line-number="7493"></td>
        <td id="LC7493" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7494" class="blob-num js-line-number" data-line-number="7494"></td>
        <td id="LC7494" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> output(x);</td>
      </tr>
      <tr>
        <td id="L7495" class="blob-num js-line-number" data-line-number="7495"></td>
        <td id="LC7495" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7496" class="blob-num js-line-number" data-line-number="7496"></td>
        <td id="LC7496" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L7497" class="blob-num js-line-number" data-line-number="7497"></td>
        <td id="LC7497" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> input(y);</td>
      </tr>
      <tr>
        <td id="L7498" class="blob-num js-line-number" data-line-number="7498"></td>
        <td id="LC7498" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7499" class="blob-num js-line-number" data-line-number="7499"></td>
        <td id="LC7499" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7500" class="blob-num js-line-number" data-line-number="7500"></td>
        <td id="LC7500" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L7501" class="blob-num js-line-number" data-line-number="7501"></td>
        <td id="LC7501" class="blob-code blob-code-inner js-file-line">      domain <span class="pl-k">=</span> x.map(<span class="pl-c1">Number</span>);</td>
      </tr>
      <tr>
        <td id="L7502" class="blob-num js-line-number" data-line-number="7502"></td>
        <td id="LC7502" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7503" class="blob-num js-line-number" data-line-number="7503"></td>
        <td id="LC7503" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7504" class="blob-num js-line-number" data-line-number="7504"></td>
        <td id="LC7504" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7505" class="blob-num js-line-number" data-line-number="7505"></td>
        <td id="LC7505" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L7506" class="blob-num js-line-number" data-line-number="7506"></td>
        <td id="LC7506" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7507" class="blob-num js-line-number" data-line-number="7507"></td>
        <td id="LC7507" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7508" class="blob-num js-line-number" data-line-number="7508"></td>
        <td id="LC7508" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7509" class="blob-num js-line-number" data-line-number="7509"></td>
        <td id="LC7509" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">rangeRound</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7510" class="blob-num js-line-number" data-line-number="7510"></td>
        <td id="LC7510" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale.range(x).interpolate(d3_interpolateRound);</td>
      </tr>
      <tr>
        <td id="L7511" class="blob-num js-line-number" data-line-number="7511"></td>
        <td id="LC7511" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7512" class="blob-num js-line-number" data-line-number="7512"></td>
        <td id="LC7512" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">clamp</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7513" class="blob-num js-line-number" data-line-number="7513"></td>
        <td id="LC7513" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> clamp;</td>
      </tr>
      <tr>
        <td id="L7514" class="blob-num js-line-number" data-line-number="7514"></td>
        <td id="LC7514" class="blob-code blob-code-inner js-file-line">      clamp <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7515" class="blob-num js-line-number" data-line-number="7515"></td>
        <td id="LC7515" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7516" class="blob-num js-line-number" data-line-number="7516"></td>
        <td id="LC7516" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7517" class="blob-num js-line-number" data-line-number="7517"></td>
        <td id="LC7517" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">interpolate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7518" class="blob-num js-line-number" data-line-number="7518"></td>
        <td id="LC7518" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> interpolate;</td>
      </tr>
      <tr>
        <td id="L7519" class="blob-num js-line-number" data-line-number="7519"></td>
        <td id="LC7519" class="blob-code blob-code-inner js-file-line">      interpolate <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7520" class="blob-num js-line-number" data-line-number="7520"></td>
        <td id="LC7520" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7521" class="blob-num js-line-number" data-line-number="7521"></td>
        <td id="LC7521" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7522" class="blob-num js-line-number" data-line-number="7522"></td>
        <td id="LC7522" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7523" class="blob-num js-line-number" data-line-number="7523"></td>
        <td id="LC7523" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_linearTicks(domain, m);</td>
      </tr>
      <tr>
        <td id="L7524" class="blob-num js-line-number" data-line-number="7524"></td>
        <td id="LC7524" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7525" class="blob-num js-line-number" data-line-number="7525"></td>
        <td id="LC7525" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>, <span class="pl-smi">format</span>) {</td>
      </tr>
      <tr>
        <td id="L7526" class="blob-num js-line-number" data-line-number="7526"></td>
        <td id="LC7526" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_linearTickFormat(domain, m, format);</td>
      </tr>
      <tr>
        <td id="L7527" class="blob-num js-line-number" data-line-number="7527"></td>
        <td id="LC7527" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7528" class="blob-num js-line-number" data-line-number="7528"></td>
        <td id="LC7528" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">nice</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7529" class="blob-num js-line-number" data-line-number="7529"></td>
        <td id="LC7529" class="blob-code blob-code-inner js-file-line">      d3_scale_linearNice(domain, m);</td>
      </tr>
      <tr>
        <td id="L7530" class="blob-num js-line-number" data-line-number="7530"></td>
        <td id="LC7530" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7531" class="blob-num js-line-number" data-line-number="7531"></td>
        <td id="LC7531" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7532" class="blob-num js-line-number" data-line-number="7532"></td>
        <td id="LC7532" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7533" class="blob-num js-line-number" data-line-number="7533"></td>
        <td id="LC7533" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_linear(domain, range, interpolate, clamp);</td>
      </tr>
      <tr>
        <td id="L7534" class="blob-num js-line-number" data-line-number="7534"></td>
        <td id="LC7534" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7535" class="blob-num js-line-number" data-line-number="7535"></td>
        <td id="LC7535" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7536" class="blob-num js-line-number" data-line-number="7536"></td>
        <td id="LC7536" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7537" class="blob-num js-line-number" data-line-number="7537"></td>
        <td id="LC7537" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_linearRebind</span>(<span class="pl-smi">scale</span>, <span class="pl-smi">linear</span>) {</td>
      </tr>
      <tr>
        <td id="L7538" class="blob-num js-line-number" data-line-number="7538"></td>
        <td id="LC7538" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.rebind(scale, linear, <span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>rangeRound<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>interpolate<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>clamp<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7539" class="blob-num js-line-number" data-line-number="7539"></td>
        <td id="LC7539" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7540" class="blob-num js-line-number" data-line-number="7540"></td>
        <td id="LC7540" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_linearNice</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7541" class="blob-num js-line-number" data-line-number="7541"></td>
        <td id="LC7541" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[<span class="pl-c1">2</span>]));</td>
      </tr>
      <tr>
        <td id="L7542" class="blob-num js-line-number" data-line-number="7542"></td>
        <td id="LC7542" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7543" class="blob-num js-line-number" data-line-number="7543"></td>
        <td id="LC7543" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_linearTickRange</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7544" class="blob-num js-line-number" data-line-number="7544"></td>
        <td id="LC7544" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (m <span class="pl-k">==</span> <span class="pl-c1">null</span>) m <span class="pl-k">=</span> <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="L7545" class="blob-num js-line-number" data-line-number="7545"></td>
        <td id="LC7545" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> extent <span class="pl-k">=</span> d3_scaleExtent(domain), span <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>] <span class="pl-k">-</span> extent[<span class="pl-c1">0</span>], step <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span><span class="pl-c1">.log</span>(span / m) / <span class="pl-c1">Math</span>.<span class="pl-c1">LN10</span>)), err <span class="pl-k">=</span> m / span <span class="pl-k">*</span> step;</td>
      </tr>
      <tr>
        <td id="L7546" class="blob-num js-line-number" data-line-number="7546"></td>
        <td id="LC7546" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (err <span class="pl-k">&lt;=</span> .<span class="pl-c1">15</span>) step <span class="pl-k">*=</span> <span class="pl-c1">10</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (err <span class="pl-k">&lt;=</span> .<span class="pl-c1">35</span>) step <span class="pl-k">*=</span> <span class="pl-c1">5</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (err <span class="pl-k">&lt;=</span> .<span class="pl-c1">75</span>) step <span class="pl-k">*=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7547" class="blob-num js-line-number" data-line-number="7547"></td>
        <td id="LC7547" class="blob-code blob-code-inner js-file-line">    extent[<span class="pl-c1">0</span>] <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(extent[<span class="pl-c1">0</span>] / step) <span class="pl-k">*</span> step;</td>
      </tr>
      <tr>
        <td id="L7548" class="blob-num js-line-number" data-line-number="7548"></td>
        <td id="LC7548" class="blob-code blob-code-inner js-file-line">    extent[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(extent[<span class="pl-c1">1</span>] / step) <span class="pl-k">*</span> step <span class="pl-k">+</span> step <span class="pl-k">*</span> .<span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L7549" class="blob-num js-line-number" data-line-number="7549"></td>
        <td id="LC7549" class="blob-code blob-code-inner js-file-line">    extent[<span class="pl-c1">2</span>] <span class="pl-k">=</span> step;</td>
      </tr>
      <tr>
        <td id="L7550" class="blob-num js-line-number" data-line-number="7550"></td>
        <td id="LC7550" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> extent;</td>
      </tr>
      <tr>
        <td id="L7551" class="blob-num js-line-number" data-line-number="7551"></td>
        <td id="LC7551" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7552" class="blob-num js-line-number" data-line-number="7552"></td>
        <td id="LC7552" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_linearTicks</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7553" class="blob-num js-line-number" data-line-number="7553"></td>
        <td id="LC7553" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.range.<span class="pl-c1">apply</span>(d3, d3_scale_linearTickRange(domain, m));</td>
      </tr>
      <tr>
        <td id="L7554" class="blob-num js-line-number" data-line-number="7554"></td>
        <td id="LC7554" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7555" class="blob-num js-line-number" data-line-number="7555"></td>
        <td id="LC7555" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_linearTickFormat</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">m</span>, <span class="pl-smi">format</span>) {</td>
      </tr>
      <tr>
        <td id="L7556" class="blob-num js-line-number" data-line-number="7556"></td>
        <td id="LC7556" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> range <span class="pl-k">=</span> d3_scale_linearTickRange(domain, m);</td>
      </tr>
      <tr>
        <td id="L7557" class="blob-num js-line-number" data-line-number="7557"></td>
        <td id="LC7557" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (format) {</td>
      </tr>
      <tr>
        <td id="L7558" class="blob-num js-line-number" data-line-number="7558"></td>
        <td id="LC7558" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> match <span class="pl-k">=</span> d3_format_re.<span class="pl-c1">exec</span>(format);</td>
      </tr>
      <tr>
        <td id="L7559" class="blob-num js-line-number" data-line-number="7559"></td>
        <td id="LC7559" class="blob-code blob-code-inner js-file-line">      match.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L7560" class="blob-num js-line-number" data-line-number="7560"></td>
        <td id="LC7560" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (match[<span class="pl-c1">8</span>] <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L7561" class="blob-num js-line-number" data-line-number="7561"></td>
        <td id="LC7561" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> prefix <span class="pl-k">=</span> d3.formatPrefix(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">abs</span>(range[<span class="pl-c1">0</span>]), <span class="pl-c1">abs</span>(range[<span class="pl-c1">1</span>])));</td>
      </tr>
      <tr>
        <td id="L7562" class="blob-num js-line-number" data-line-number="7562"></td>
        <td id="LC7562" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>match[<span class="pl-c1">7</span>]) match[<span class="pl-c1">7</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3_scale_linearPrecision(prefix.scale(range[<span class="pl-c1">2</span>]));</td>
      </tr>
      <tr>
        <td id="L7563" class="blob-num js-line-number" data-line-number="7563"></td>
        <td id="LC7563" class="blob-code blob-code-inner js-file-line">        match[<span class="pl-c1">8</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L7564" class="blob-num js-line-number" data-line-number="7564"></td>
        <td id="LC7564" class="blob-code blob-code-inner js-file-line">        format <span class="pl-k">=</span> d3.format(match.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L7565" class="blob-num js-line-number" data-line-number="7565"></td>
        <td id="LC7565" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L7566" class="blob-num js-line-number" data-line-number="7566"></td>
        <td id="LC7566" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> format(prefix.scale(d)) <span class="pl-k">+</span> prefix.symbol;</td>
      </tr>
      <tr>
        <td id="L7567" class="blob-num js-line-number" data-line-number="7567"></td>
        <td id="LC7567" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L7568" class="blob-num js-line-number" data-line-number="7568"></td>
        <td id="LC7568" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7569" class="blob-num js-line-number" data-line-number="7569"></td>
        <td id="LC7569" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>match[<span class="pl-c1">7</span>]) match[<span class="pl-c1">7</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3_scale_linearFormatPrecision(match[<span class="pl-c1">8</span>], range);</td>
      </tr>
      <tr>
        <td id="L7570" class="blob-num js-line-number" data-line-number="7570"></td>
        <td id="LC7570" class="blob-code blob-code-inner js-file-line">      format <span class="pl-k">=</span> match.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7571" class="blob-num js-line-number" data-line-number="7571"></td>
        <td id="LC7571" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7572" class="blob-num js-line-number" data-line-number="7572"></td>
        <td id="LC7572" class="blob-code blob-code-inner js-file-line">      format <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3_scale_linearPrecision(range[<span class="pl-c1">2</span>]) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L7573" class="blob-num js-line-number" data-line-number="7573"></td>
        <td id="LC7573" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7574" class="blob-num js-line-number" data-line-number="7574"></td>
        <td id="LC7574" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.format(format);</td>
      </tr>
      <tr>
        <td id="L7575" class="blob-num js-line-number" data-line-number="7575"></td>
        <td id="LC7575" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7576" class="blob-num js-line-number" data-line-number="7576"></td>
        <td id="LC7576" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_scale_linearFormatSignificant <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7577" class="blob-num js-line-number" data-line-number="7577"></td>
        <td id="LC7577" class="blob-code blob-code-inner js-file-line">    s<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L7578" class="blob-num js-line-number" data-line-number="7578"></td>
        <td id="LC7578" class="blob-code blob-code-inner js-file-line">    g<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L7579" class="blob-num js-line-number" data-line-number="7579"></td>
        <td id="LC7579" class="blob-code blob-code-inner js-file-line">    p<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L7580" class="blob-num js-line-number" data-line-number="7580"></td>
        <td id="LC7580" class="blob-code blob-code-inner js-file-line">    r<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L7581" class="blob-num js-line-number" data-line-number="7581"></td>
        <td id="LC7581" class="blob-code blob-code-inner js-file-line">    e<span class="pl-k">:</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L7582" class="blob-num js-line-number" data-line-number="7582"></td>
        <td id="LC7582" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7583" class="blob-num js-line-number" data-line-number="7583"></td>
        <td id="LC7583" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_linearPrecision</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L7584" class="blob-num js-line-number" data-line-number="7584"></td>
        <td id="LC7584" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span><span class="pl-c1">.log</span>(value) / <span class="pl-c1">Math</span>.<span class="pl-c1">LN10</span> <span class="pl-k">+</span> .<span class="pl-c1">01</span>);</td>
      </tr>
      <tr>
        <td id="L7585" class="blob-num js-line-number" data-line-number="7585"></td>
        <td id="LC7585" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7586" class="blob-num js-line-number" data-line-number="7586"></td>
        <td id="LC7586" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_linearFormatPrecision</span>(<span class="pl-smi">type</span>, <span class="pl-smi">range</span>) {</td>
      </tr>
      <tr>
        <td id="L7587" class="blob-num js-line-number" data-line-number="7587"></td>
        <td id="LC7587" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> p <span class="pl-k">=</span> d3_scale_linearPrecision(range[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L7588" class="blob-num js-line-number" data-line-number="7588"></td>
        <td id="LC7588" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> type <span class="pl-k">in</span> d3_scale_linearFormatSignificant <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(p <span class="pl-k">-</span> d3_scale_linearPrecision(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">abs</span>(range[<span class="pl-c1">0</span>]), <span class="pl-c1">abs</span>(range[<span class="pl-c1">1</span>])))) <span class="pl-k">+</span> <span class="pl-k">+</span>(type <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> p <span class="pl-k">-</span> (type <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>) <span class="pl-k">*</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7589" class="blob-num js-line-number" data-line-number="7589"></td>
        <td id="LC7589" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7590" class="blob-num js-line-number" data-line-number="7590"></td>
        <td id="LC7590" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">log</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7591" class="blob-num js-line-number" data-line-number="7591"></td>
        <td id="LC7591" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_log(d3.scale.linear().<span class="pl-c1">domain</span>([ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> ]), <span class="pl-c1">10</span>, <span class="pl-c1">true</span>, [ <span class="pl-c1">1</span>, <span class="pl-c1">10</span> ]);</td>
      </tr>
      <tr>
        <td id="L7592" class="blob-num js-line-number" data-line-number="7592"></td>
        <td id="LC7592" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7593" class="blob-num js-line-number" data-line-number="7593"></td>
        <td id="LC7593" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_log</span>(<span class="pl-smi">linear</span>, <span class="pl-smi">base</span>, <span class="pl-smi">positive</span>, <span class="pl-smi">domain</span>) {</td>
      </tr>
      <tr>
        <td id="L7594" class="blob-num js-line-number" data-line-number="7594"></td>
        <td id="LC7594" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">log</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7595" class="blob-num js-line-number" data-line-number="7595"></td>
        <td id="LC7595" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (positive <span class="pl-k">?</span> <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(x <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> x) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">Math</span><span class="pl-c1">.log</span>(x <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-k">-</span>x)) / <span class="pl-c1">Math</span><span class="pl-c1">.log</span>(base);</td>
      </tr>
      <tr>
        <td id="L7596" class="blob-num js-line-number" data-line-number="7596"></td>
        <td id="LC7596" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7597" class="blob-num js-line-number" data-line-number="7597"></td>
        <td id="LC7597" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">pow</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7598" class="blob-num js-line-number" data-line-number="7598"></td>
        <td id="LC7598" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> positive <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(base, x) <span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(base, <span class="pl-k">-</span>x);</td>
      </tr>
      <tr>
        <td id="L7599" class="blob-num js-line-number" data-line-number="7599"></td>
        <td id="LC7599" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7600" class="blob-num js-line-number" data-line-number="7600"></td>
        <td id="LC7600" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7601" class="blob-num js-line-number" data-line-number="7601"></td>
        <td id="LC7601" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> linear(<span class="pl-c1">log</span>(x));</td>
      </tr>
      <tr>
        <td id="L7602" class="blob-num js-line-number" data-line-number="7602"></td>
        <td id="LC7602" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7603" class="blob-num js-line-number" data-line-number="7603"></td>
        <td id="LC7603" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7604" class="blob-num js-line-number" data-line-number="7604"></td>
        <td id="LC7604" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">pow</span>(linear.invert(x));</td>
      </tr>
      <tr>
        <td id="L7605" class="blob-num js-line-number" data-line-number="7605"></td>
        <td id="LC7605" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7606" class="blob-num js-line-number" data-line-number="7606"></td>
        <td id="LC7606" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7607" class="blob-num js-line-number" data-line-number="7607"></td>
        <td id="LC7607" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L7608" class="blob-num js-line-number" data-line-number="7608"></td>
        <td id="LC7608" class="blob-code blob-code-inner js-file-line">      positive <span class="pl-k">=</span> x[<span class="pl-c1">0</span>] <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7609" class="blob-num js-line-number" data-line-number="7609"></td>
        <td id="LC7609" class="blob-code blob-code-inner js-file-line">      linear.<span class="pl-c1">domain</span>((domain <span class="pl-k">=</span> x.map(<span class="pl-c1">Number</span>)).map(log));</td>
      </tr>
      <tr>
        <td id="L7610" class="blob-num js-line-number" data-line-number="7610"></td>
        <td id="LC7610" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7611" class="blob-num js-line-number" data-line-number="7611"></td>
        <td id="LC7611" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7612" class="blob-num js-line-number" data-line-number="7612"></td>
        <td id="LC7612" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">base</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L7613" class="blob-num js-line-number" data-line-number="7613"></td>
        <td id="LC7613" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> base;</td>
      </tr>
      <tr>
        <td id="L7614" class="blob-num js-line-number" data-line-number="7614"></td>
        <td id="LC7614" class="blob-code blob-code-inner js-file-line">      base <span class="pl-k">=</span> <span class="pl-k">+</span>_;</td>
      </tr>
      <tr>
        <td id="L7615" class="blob-num js-line-number" data-line-number="7615"></td>
        <td id="LC7615" class="blob-code blob-code-inner js-file-line">      linear.<span class="pl-c1">domain</span>(domain.map(log));</td>
      </tr>
      <tr>
        <td id="L7616" class="blob-num js-line-number" data-line-number="7616"></td>
        <td id="LC7616" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7617" class="blob-num js-line-number" data-line-number="7617"></td>
        <td id="LC7617" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7618" class="blob-num js-line-number" data-line-number="7618"></td>
        <td id="LC7618" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">nice</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7619" class="blob-num js-line-number" data-line-number="7619"></td>
        <td id="LC7619" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> niced <span class="pl-k">=</span> d3_scale_nice(domain.map(log), positive <span class="pl-k">?</span> <span class="pl-c1">Math</span> <span class="pl-k">:</span> d3_scale_logNiceNegative);</td>
      </tr>
      <tr>
        <td id="L7620" class="blob-num js-line-number" data-line-number="7620"></td>
        <td id="LC7620" class="blob-code blob-code-inner js-file-line">      linear.<span class="pl-c1">domain</span>(niced);</td>
      </tr>
      <tr>
        <td id="L7621" class="blob-num js-line-number" data-line-number="7621"></td>
        <td id="LC7621" class="blob-code blob-code-inner js-file-line">      domain <span class="pl-k">=</span> niced.map(pow);</td>
      </tr>
      <tr>
        <td id="L7622" class="blob-num js-line-number" data-line-number="7622"></td>
        <td id="LC7622" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7623" class="blob-num js-line-number" data-line-number="7623"></td>
        <td id="LC7623" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7624" class="blob-num js-line-number" data-line-number="7624"></td>
        <td id="LC7624" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7625" class="blob-num js-line-number" data-line-number="7625"></td>
        <td id="LC7625" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> extent <span class="pl-k">=</span> d3_scaleExtent(domain), ticks <span class="pl-k">=</span> [], u <span class="pl-k">=</span> extent[<span class="pl-c1">0</span>], v <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>], i <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">log</span>(u)), j <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">log</span>(v)), n <span class="pl-k">=</span> base <span class="pl-k">%</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">2</span> <span class="pl-k">:</span> base;</td>
      </tr>
      <tr>
        <td id="L7626" class="blob-num js-line-number" data-line-number="7626"></td>
        <td id="LC7626" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">isFinite</span>(j <span class="pl-k">-</span> i)) {</td>
      </tr>
      <tr>
        <td id="L7627" class="blob-num js-line-number" data-line-number="7627"></td>
        <td id="LC7627" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (positive) {</td>
      </tr>
      <tr>
        <td id="L7628" class="blob-num js-line-number" data-line-number="7628"></td>
        <td id="LC7628" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (;i <span class="pl-k">&lt;</span> j; i<span class="pl-k">++</span>) <span class="pl-k">for</span> (<span class="pl-k">var</span> k <span class="pl-k">=</span> <span class="pl-c1">1</span>; k <span class="pl-k">&lt;</span> n; k<span class="pl-k">++</span>) ticks.<span class="pl-c1">push</span>(<span class="pl-c1">pow</span>(i) <span class="pl-k">*</span> k);</td>
      </tr>
      <tr>
        <td id="L7629" class="blob-num js-line-number" data-line-number="7629"></td>
        <td id="LC7629" class="blob-code blob-code-inner js-file-line">          ticks.<span class="pl-c1">push</span>(<span class="pl-c1">pow</span>(i));</td>
      </tr>
      <tr>
        <td id="L7630" class="blob-num js-line-number" data-line-number="7630"></td>
        <td id="LC7630" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7631" class="blob-num js-line-number" data-line-number="7631"></td>
        <td id="LC7631" class="blob-code blob-code-inner js-file-line">          ticks.<span class="pl-c1">push</span>(<span class="pl-c1">pow</span>(i));</td>
      </tr>
      <tr>
        <td id="L7632" class="blob-num js-line-number" data-line-number="7632"></td>
        <td id="LC7632" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (;i<span class="pl-k">++</span> <span class="pl-k">&lt;</span> j; ) <span class="pl-k">for</span> (<span class="pl-k">var</span> k <span class="pl-k">=</span> n <span class="pl-k">-</span> <span class="pl-c1">1</span>; k <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>; k<span class="pl-k">--</span>) ticks.<span class="pl-c1">push</span>(<span class="pl-c1">pow</span>(i) <span class="pl-k">*</span> k);</td>
      </tr>
      <tr>
        <td id="L7633" class="blob-num js-line-number" data-line-number="7633"></td>
        <td id="LC7633" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7634" class="blob-num js-line-number" data-line-number="7634"></td>
        <td id="LC7634" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; ticks[i] <span class="pl-k">&lt;</span> u; i<span class="pl-k">++</span>) {}</td>
      </tr>
      <tr>
        <td id="L7635" class="blob-num js-line-number" data-line-number="7635"></td>
        <td id="LC7635" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (j <span class="pl-k">=</span> ticks.<span class="pl-c1">length</span>; ticks[j <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">&gt;</span> v; j<span class="pl-k">--</span>) {}</td>
      </tr>
      <tr>
        <td id="L7636" class="blob-num js-line-number" data-line-number="7636"></td>
        <td id="LC7636" class="blob-code blob-code-inner js-file-line">        ticks <span class="pl-k">=</span> ticks.<span class="pl-c1">slice</span>(i, j);</td>
      </tr>
      <tr>
        <td id="L7637" class="blob-num js-line-number" data-line-number="7637"></td>
        <td id="LC7637" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7638" class="blob-num js-line-number" data-line-number="7638"></td>
        <td id="LC7638" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> ticks;</td>
      </tr>
      <tr>
        <td id="L7639" class="blob-num js-line-number" data-line-number="7639"></td>
        <td id="LC7639" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7640" class="blob-num js-line-number" data-line-number="7640"></td>
        <td id="LC7640" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">n</span>, <span class="pl-smi">format</span>) {</td>
      </tr>
      <tr>
        <td id="L7641" class="blob-num js-line-number" data-line-number="7641"></td>
        <td id="LC7641" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> d3_scale_logFormat;</td>
      </tr>
      <tr>
        <td id="L7642" class="blob-num js-line-number" data-line-number="7642"></td>
        <td id="LC7642" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) format <span class="pl-k">=</span> d3_scale_logFormat; <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">typeof</span> format <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) format <span class="pl-k">=</span> d3.format(format);</td>
      </tr>
      <tr>
        <td id="L7643" class="blob-num js-line-number" data-line-number="7643"></td>
        <td id="LC7643" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> k <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(.<span class="pl-c1">1</span>, n / scale.ticks().<span class="pl-c1">length</span>), f <span class="pl-k">=</span> positive <span class="pl-k">?</span> (e <span class="pl-k">=</span> <span class="pl-c1">1e-12</span>, <span class="pl-c1">Math</span>.ceil) <span class="pl-k">:</span> (e <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1e-12</span>, </td>
      </tr>
      <tr>
        <td id="L7644" class="blob-num js-line-number" data-line-number="7644"></td>
        <td id="LC7644" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">Math</span>.floor), e;</td>
      </tr>
      <tr>
        <td id="L7645" class="blob-num js-line-number" data-line-number="7645"></td>
        <td id="LC7645" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L7646" class="blob-num js-line-number" data-line-number="7646"></td>
        <td id="LC7646" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d / <span class="pl-c1">pow</span>(f(<span class="pl-c1">log</span>(d) <span class="pl-k">+</span> e)) <span class="pl-k">&lt;=</span> k <span class="pl-k">?</span> format(d) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L7647" class="blob-num js-line-number" data-line-number="7647"></td>
        <td id="LC7647" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7648" class="blob-num js-line-number" data-line-number="7648"></td>
        <td id="LC7648" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7649" class="blob-num js-line-number" data-line-number="7649"></td>
        <td id="LC7649" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7650" class="blob-num js-line-number" data-line-number="7650"></td>
        <td id="LC7650" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_log(linear.copy(), base, positive, domain);</td>
      </tr>
      <tr>
        <td id="L7651" class="blob-num js-line-number" data-line-number="7651"></td>
        <td id="LC7651" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7652" class="blob-num js-line-number" data-line-number="7652"></td>
        <td id="LC7652" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_linearRebind(scale, linear);</td>
      </tr>
      <tr>
        <td id="L7653" class="blob-num js-line-number" data-line-number="7653"></td>
        <td id="LC7653" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7654" class="blob-num js-line-number" data-line-number="7654"></td>
        <td id="LC7654" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_scale_logFormat <span class="pl-k">=</span> d3.format(<span class="pl-s"><span class="pl-pds">&quot;</span>.0e<span class="pl-pds">&quot;</span></span>), d3_scale_logNiceNegative <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7655" class="blob-num js-line-number" data-line-number="7655"></td>
        <td id="LC7655" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">floor</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7656" class="blob-num js-line-number" data-line-number="7656"></td>
        <td id="LC7656" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-k">-</span>x);</td>
      </tr>
      <tr>
        <td id="L7657" class="blob-num js-line-number" data-line-number="7657"></td>
        <td id="LC7657" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L7658" class="blob-num js-line-number" data-line-number="7658"></td>
        <td id="LC7658" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">ceil</span>: <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7659" class="blob-num js-line-number" data-line-number="7659"></td>
        <td id="LC7659" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-k">-</span>x);</td>
      </tr>
      <tr>
        <td id="L7660" class="blob-num js-line-number" data-line-number="7660"></td>
        <td id="LC7660" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7661" class="blob-num js-line-number" data-line-number="7661"></td>
        <td id="LC7661" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7662" class="blob-num js-line-number" data-line-number="7662"></td>
        <td id="LC7662" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">pow</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7663" class="blob-num js-line-number" data-line-number="7663"></td>
        <td id="LC7663" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_pow(d3.scale.linear(), <span class="pl-c1">1</span>, [ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> ]);</td>
      </tr>
      <tr>
        <td id="L7664" class="blob-num js-line-number" data-line-number="7664"></td>
        <td id="LC7664" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7665" class="blob-num js-line-number" data-line-number="7665"></td>
        <td id="LC7665" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_pow</span>(<span class="pl-smi">linear</span>, <span class="pl-smi">exponent</span>, <span class="pl-smi">domain</span>) {</td>
      </tr>
      <tr>
        <td id="L7666" class="blob-num js-line-number" data-line-number="7666"></td>
        <td id="LC7666" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> powp <span class="pl-k">=</span> d3_scale_powPow(exponent), powb <span class="pl-k">=</span> d3_scale_powPow(<span class="pl-c1">1</span> / exponent);</td>
      </tr>
      <tr>
        <td id="L7667" class="blob-num js-line-number" data-line-number="7667"></td>
        <td id="LC7667" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7668" class="blob-num js-line-number" data-line-number="7668"></td>
        <td id="LC7668" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> linear(powp(x));</td>
      </tr>
      <tr>
        <td id="L7669" class="blob-num js-line-number" data-line-number="7669"></td>
        <td id="LC7669" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7670" class="blob-num js-line-number" data-line-number="7670"></td>
        <td id="LC7670" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7671" class="blob-num js-line-number" data-line-number="7671"></td>
        <td id="LC7671" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> powb(linear.invert(x));</td>
      </tr>
      <tr>
        <td id="L7672" class="blob-num js-line-number" data-line-number="7672"></td>
        <td id="LC7672" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7673" class="blob-num js-line-number" data-line-number="7673"></td>
        <td id="LC7673" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7674" class="blob-num js-line-number" data-line-number="7674"></td>
        <td id="LC7674" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L7675" class="blob-num js-line-number" data-line-number="7675"></td>
        <td id="LC7675" class="blob-code blob-code-inner js-file-line">      linear.<span class="pl-c1">domain</span>((domain <span class="pl-k">=</span> x.map(<span class="pl-c1">Number</span>)).map(powp));</td>
      </tr>
      <tr>
        <td id="L7676" class="blob-num js-line-number" data-line-number="7676"></td>
        <td id="LC7676" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7677" class="blob-num js-line-number" data-line-number="7677"></td>
        <td id="LC7677" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7678" class="blob-num js-line-number" data-line-number="7678"></td>
        <td id="LC7678" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7679" class="blob-num js-line-number" data-line-number="7679"></td>
        <td id="LC7679" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_linearTicks(domain, m);</td>
      </tr>
      <tr>
        <td id="L7680" class="blob-num js-line-number" data-line-number="7680"></td>
        <td id="LC7680" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7681" class="blob-num js-line-number" data-line-number="7681"></td>
        <td id="LC7681" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>, <span class="pl-smi">format</span>) {</td>
      </tr>
      <tr>
        <td id="L7682" class="blob-num js-line-number" data-line-number="7682"></td>
        <td id="LC7682" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_linearTickFormat(domain, m, format);</td>
      </tr>
      <tr>
        <td id="L7683" class="blob-num js-line-number" data-line-number="7683"></td>
        <td id="LC7683" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7684" class="blob-num js-line-number" data-line-number="7684"></td>
        <td id="LC7684" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">nice</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7685" class="blob-num js-line-number" data-line-number="7685"></td>
        <td id="LC7685" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale.<span class="pl-c1">domain</span>(d3_scale_linearNice(domain, m));</td>
      </tr>
      <tr>
        <td id="L7686" class="blob-num js-line-number" data-line-number="7686"></td>
        <td id="LC7686" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7687" class="blob-num js-line-number" data-line-number="7687"></td>
        <td id="LC7687" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">exponent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7688" class="blob-num js-line-number" data-line-number="7688"></td>
        <td id="LC7688" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> exponent;</td>
      </tr>
      <tr>
        <td id="L7689" class="blob-num js-line-number" data-line-number="7689"></td>
        <td id="LC7689" class="blob-code blob-code-inner js-file-line">      powp <span class="pl-k">=</span> d3_scale_powPow(exponent <span class="pl-k">=</span> x);</td>
      </tr>
      <tr>
        <td id="L7690" class="blob-num js-line-number" data-line-number="7690"></td>
        <td id="LC7690" class="blob-code blob-code-inner js-file-line">      powb <span class="pl-k">=</span> d3_scale_powPow(<span class="pl-c1">1</span> / exponent);</td>
      </tr>
      <tr>
        <td id="L7691" class="blob-num js-line-number" data-line-number="7691"></td>
        <td id="LC7691" class="blob-code blob-code-inner js-file-line">      linear.<span class="pl-c1">domain</span>(domain.map(powp));</td>
      </tr>
      <tr>
        <td id="L7692" class="blob-num js-line-number" data-line-number="7692"></td>
        <td id="LC7692" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7693" class="blob-num js-line-number" data-line-number="7693"></td>
        <td id="LC7693" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7694" class="blob-num js-line-number" data-line-number="7694"></td>
        <td id="LC7694" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7695" class="blob-num js-line-number" data-line-number="7695"></td>
        <td id="LC7695" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_pow(linear.copy(), exponent, domain);</td>
      </tr>
      <tr>
        <td id="L7696" class="blob-num js-line-number" data-line-number="7696"></td>
        <td id="LC7696" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7697" class="blob-num js-line-number" data-line-number="7697"></td>
        <td id="LC7697" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_linearRebind(scale, linear);</td>
      </tr>
      <tr>
        <td id="L7698" class="blob-num js-line-number" data-line-number="7698"></td>
        <td id="LC7698" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7699" class="blob-num js-line-number" data-line-number="7699"></td>
        <td id="LC7699" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_powPow</span>(<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L7700" class="blob-num js-line-number" data-line-number="7700"></td>
        <td id="LC7700" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7701" class="blob-num js-line-number" data-line-number="7701"></td>
        <td id="LC7701" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> x <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-k">-</span>x, e) <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(x, e);</td>
      </tr>
      <tr>
        <td id="L7702" class="blob-num js-line-number" data-line-number="7702"></td>
        <td id="LC7702" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7703" class="blob-num js-line-number" data-line-number="7703"></td>
        <td id="LC7703" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7704" class="blob-num js-line-number" data-line-number="7704"></td>
        <td id="LC7704" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">sqrt</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7705" class="blob-num js-line-number" data-line-number="7705"></td>
        <td id="LC7705" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.scale.<span class="pl-c1">pow</span>().exponent(.<span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="L7706" class="blob-num js-line-number" data-line-number="7706"></td>
        <td id="LC7706" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7707" class="blob-num js-line-number" data-line-number="7707"></td>
        <td id="LC7707" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">ordinal</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7708" class="blob-num js-line-number" data-line-number="7708"></td>
        <td id="LC7708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_ordinal([], {</td>
      </tr>
      <tr>
        <td id="L7709" class="blob-num js-line-number" data-line-number="7709"></td>
        <td id="LC7709" class="blob-code blob-code-inner js-file-line">      t<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7710" class="blob-num js-line-number" data-line-number="7710"></td>
        <td id="LC7710" class="blob-code blob-code-inner js-file-line">      a<span class="pl-k">:</span> [ [] ]</td>
      </tr>
      <tr>
        <td id="L7711" class="blob-num js-line-number" data-line-number="7711"></td>
        <td id="LC7711" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L7712" class="blob-num js-line-number" data-line-number="7712"></td>
        <td id="LC7712" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7713" class="blob-num js-line-number" data-line-number="7713"></td>
        <td id="LC7713" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_ordinal</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">ranger</span>) {</td>
      </tr>
      <tr>
        <td id="L7714" class="blob-num js-line-number" data-line-number="7714"></td>
        <td id="LC7714" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> index, range, rangeBand;</td>
      </tr>
      <tr>
        <td id="L7715" class="blob-num js-line-number" data-line-number="7715"></td>
        <td id="LC7715" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7716" class="blob-num js-line-number" data-line-number="7716"></td>
        <td id="LC7716" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> range[((index.get(x) <span class="pl-k">||</span> (ranger.t <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> index.set(x, domain.<span class="pl-c1">push</span>(x)) <span class="pl-k">:</span> <span class="pl-c1">NaN</span>)) <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">%</span> range.<span class="pl-c1">length</span>];</td>
      </tr>
      <tr>
        <td id="L7717" class="blob-num js-line-number" data-line-number="7717"></td>
        <td id="LC7717" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7718" class="blob-num js-line-number" data-line-number="7718"></td>
        <td id="LC7718" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">steps</span>(<span class="pl-smi">start</span>, <span class="pl-smi">step</span>) {</td>
      </tr>
      <tr>
        <td id="L7719" class="blob-num js-line-number" data-line-number="7719"></td>
        <td id="LC7719" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3.range(domain.<span class="pl-c1">length</span>).map(<span class="pl-k">function</span>(<span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L7720" class="blob-num js-line-number" data-line-number="7720"></td>
        <td id="LC7720" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> start <span class="pl-k">+</span> step <span class="pl-k">*</span> i;</td>
      </tr>
      <tr>
        <td id="L7721" class="blob-num js-line-number" data-line-number="7721"></td>
        <td id="LC7721" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L7722" class="blob-num js-line-number" data-line-number="7722"></td>
        <td id="LC7722" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7723" class="blob-num js-line-number" data-line-number="7723"></td>
        <td id="LC7723" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7724" class="blob-num js-line-number" data-line-number="7724"></td>
        <td id="LC7724" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L7725" class="blob-num js-line-number" data-line-number="7725"></td>
        <td id="LC7725" class="blob-code blob-code-inner js-file-line">      domain <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7726" class="blob-num js-line-number" data-line-number="7726"></td>
        <td id="LC7726" class="blob-code blob-code-inner js-file-line">      index <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">d3_Map</span>();</td>
      </tr>
      <tr>
        <td id="L7727" class="blob-num js-line-number" data-line-number="7727"></td>
        <td id="LC7727" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> x.<span class="pl-c1">length</span>, xi;</td>
      </tr>
      <tr>
        <td id="L7728" class="blob-num js-line-number" data-line-number="7728"></td>
        <td id="LC7728" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) <span class="pl-k">if</span> (<span class="pl-k">!</span>index.has(xi <span class="pl-k">=</span> x[i])) index.set(xi, domain.<span class="pl-c1">push</span>(xi));</td>
      </tr>
      <tr>
        <td id="L7729" class="blob-num js-line-number" data-line-number="7729"></td>
        <td id="LC7729" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale[ranger.t].<span class="pl-c1">apply</span>(scale, ranger.a);</td>
      </tr>
      <tr>
        <td id="L7730" class="blob-num js-line-number" data-line-number="7730"></td>
        <td id="LC7730" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7731" class="blob-num js-line-number" data-line-number="7731"></td>
        <td id="LC7731" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7732" class="blob-num js-line-number" data-line-number="7732"></td>
        <td id="LC7732" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L7733" class="blob-num js-line-number" data-line-number="7733"></td>
        <td id="LC7733" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7734" class="blob-num js-line-number" data-line-number="7734"></td>
        <td id="LC7734" class="blob-code blob-code-inner js-file-line">      rangeBand <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7735" class="blob-num js-line-number" data-line-number="7735"></td>
        <td id="LC7735" class="blob-code blob-code-inner js-file-line">      ranger <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7736" class="blob-num js-line-number" data-line-number="7736"></td>
        <td id="LC7736" class="blob-code blob-code-inner js-file-line">        t<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7737" class="blob-num js-line-number" data-line-number="7737"></td>
        <td id="LC7737" class="blob-code blob-code-inner js-file-line">        a<span class="pl-k">:</span> arguments</td>
      </tr>
      <tr>
        <td id="L7738" class="blob-num js-line-number" data-line-number="7738"></td>
        <td id="LC7738" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7739" class="blob-num js-line-number" data-line-number="7739"></td>
        <td id="LC7739" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7740" class="blob-num js-line-number" data-line-number="7740"></td>
        <td id="LC7740" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7741" class="blob-num js-line-number" data-line-number="7741"></td>
        <td id="LC7741" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">rangePoints</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">padding</span>) {</td>
      </tr>
      <tr>
        <td id="L7742" class="blob-num js-line-number" data-line-number="7742"></td>
        <td id="LC7742" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) padding <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7743" class="blob-num js-line-number" data-line-number="7743"></td>
        <td id="LC7743" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> start <span class="pl-k">=</span> x[<span class="pl-c1">0</span>], stop <span class="pl-k">=</span> x[<span class="pl-c1">1</span>], step <span class="pl-k">=</span> domain.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> (start <span class="pl-k">=</span> (start <span class="pl-k">+</span> stop) / <span class="pl-c1">2</span>, </td>
      </tr>
      <tr>
        <td id="L7744" class="blob-num js-line-number" data-line-number="7744"></td>
        <td id="LC7744" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">0</span>) <span class="pl-k">:</span> (stop <span class="pl-k">-</span> start) / (domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> padding);</td>
      </tr>
      <tr>
        <td id="L7745" class="blob-num js-line-number" data-line-number="7745"></td>
        <td id="LC7745" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> steps(start <span class="pl-k">+</span> step <span class="pl-k">*</span> padding / <span class="pl-c1">2</span>, step);</td>
      </tr>
      <tr>
        <td id="L7746" class="blob-num js-line-number" data-line-number="7746"></td>
        <td id="LC7746" class="blob-code blob-code-inner js-file-line">      rangeBand <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7747" class="blob-num js-line-number" data-line-number="7747"></td>
        <td id="LC7747" class="blob-code blob-code-inner js-file-line">      ranger <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7748" class="blob-num js-line-number" data-line-number="7748"></td>
        <td id="LC7748" class="blob-code blob-code-inner js-file-line">        t<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rangePoints<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7749" class="blob-num js-line-number" data-line-number="7749"></td>
        <td id="LC7749" class="blob-code blob-code-inner js-file-line">        a<span class="pl-k">:</span> arguments</td>
      </tr>
      <tr>
        <td id="L7750" class="blob-num js-line-number" data-line-number="7750"></td>
        <td id="LC7750" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7751" class="blob-num js-line-number" data-line-number="7751"></td>
        <td id="LC7751" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7752" class="blob-num js-line-number" data-line-number="7752"></td>
        <td id="LC7752" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7753" class="blob-num js-line-number" data-line-number="7753"></td>
        <td id="LC7753" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">rangeRoundPoints</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">padding</span>) {</td>
      </tr>
      <tr>
        <td id="L7754" class="blob-num js-line-number" data-line-number="7754"></td>
        <td id="LC7754" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) padding <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7755" class="blob-num js-line-number" data-line-number="7755"></td>
        <td id="LC7755" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> start <span class="pl-k">=</span> x[<span class="pl-c1">0</span>], stop <span class="pl-k">=</span> x[<span class="pl-c1">1</span>], step <span class="pl-k">=</span> domain.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> (start <span class="pl-k">=</span> stop <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((start <span class="pl-k">+</span> stop) / <span class="pl-c1">2</span>), </td>
      </tr>
      <tr>
        <td id="L7756" class="blob-num js-line-number" data-line-number="7756"></td>
        <td id="LC7756" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">0</span>) <span class="pl-k">:</span> (stop <span class="pl-k">-</span> start) / (domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> padding) | <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7757" class="blob-num js-line-number" data-line-number="7757"></td>
        <td id="LC7757" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> steps(start <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(step <span class="pl-k">*</span> padding / <span class="pl-c1">2</span> <span class="pl-k">+</span> (stop <span class="pl-k">-</span> start <span class="pl-k">-</span> (domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> padding) <span class="pl-k">*</span> step) / <span class="pl-c1">2</span>), step);</td>
      </tr>
      <tr>
        <td id="L7758" class="blob-num js-line-number" data-line-number="7758"></td>
        <td id="LC7758" class="blob-code blob-code-inner js-file-line">      rangeBand <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7759" class="blob-num js-line-number" data-line-number="7759"></td>
        <td id="LC7759" class="blob-code blob-code-inner js-file-line">      ranger <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7760" class="blob-num js-line-number" data-line-number="7760"></td>
        <td id="LC7760" class="blob-code blob-code-inner js-file-line">        t<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rangeRoundPoints<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7761" class="blob-num js-line-number" data-line-number="7761"></td>
        <td id="LC7761" class="blob-code blob-code-inner js-file-line">        a<span class="pl-k">:</span> arguments</td>
      </tr>
      <tr>
        <td id="L7762" class="blob-num js-line-number" data-line-number="7762"></td>
        <td id="LC7762" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7763" class="blob-num js-line-number" data-line-number="7763"></td>
        <td id="LC7763" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7764" class="blob-num js-line-number" data-line-number="7764"></td>
        <td id="LC7764" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7765" class="blob-num js-line-number" data-line-number="7765"></td>
        <td id="LC7765" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">rangeBands</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">padding</span>, <span class="pl-smi">outerPadding</span>) {</td>
      </tr>
      <tr>
        <td id="L7766" class="blob-num js-line-number" data-line-number="7766"></td>
        <td id="LC7766" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) padding <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7767" class="blob-num js-line-number" data-line-number="7767"></td>
        <td id="LC7767" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) outerPadding <span class="pl-k">=</span> padding;</td>
      </tr>
      <tr>
        <td id="L7768" class="blob-num js-line-number" data-line-number="7768"></td>
        <td id="LC7768" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> reverse <span class="pl-k">=</span> x[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> x[<span class="pl-c1">0</span>], start <span class="pl-k">=</span> x[reverse <span class="pl-k">-</span> <span class="pl-c1">0</span>], stop <span class="pl-k">=</span> x[<span class="pl-c1">1</span> <span class="pl-k">-</span> reverse], step <span class="pl-k">=</span> (stop <span class="pl-k">-</span> start) / (domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> padding <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> outerPadding);</td>
      </tr>
      <tr>
        <td id="L7769" class="blob-num js-line-number" data-line-number="7769"></td>
        <td id="LC7769" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> steps(start <span class="pl-k">+</span> step <span class="pl-k">*</span> outerPadding, step);</td>
      </tr>
      <tr>
        <td id="L7770" class="blob-num js-line-number" data-line-number="7770"></td>
        <td id="LC7770" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (reverse) range.<span class="pl-c1">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L7771" class="blob-num js-line-number" data-line-number="7771"></td>
        <td id="LC7771" class="blob-code blob-code-inner js-file-line">      rangeBand <span class="pl-k">=</span> step <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> padding);</td>
      </tr>
      <tr>
        <td id="L7772" class="blob-num js-line-number" data-line-number="7772"></td>
        <td id="LC7772" class="blob-code blob-code-inner js-file-line">      ranger <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7773" class="blob-num js-line-number" data-line-number="7773"></td>
        <td id="LC7773" class="blob-code blob-code-inner js-file-line">        t<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rangeBands<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7774" class="blob-num js-line-number" data-line-number="7774"></td>
        <td id="LC7774" class="blob-code blob-code-inner js-file-line">        a<span class="pl-k">:</span> arguments</td>
      </tr>
      <tr>
        <td id="L7775" class="blob-num js-line-number" data-line-number="7775"></td>
        <td id="LC7775" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7776" class="blob-num js-line-number" data-line-number="7776"></td>
        <td id="LC7776" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7777" class="blob-num js-line-number" data-line-number="7777"></td>
        <td id="LC7777" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7778" class="blob-num js-line-number" data-line-number="7778"></td>
        <td id="LC7778" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">rangeRoundBands</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">padding</span>, <span class="pl-smi">outerPadding</span>) {</td>
      </tr>
      <tr>
        <td id="L7779" class="blob-num js-line-number" data-line-number="7779"></td>
        <td id="LC7779" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) padding <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7780" class="blob-num js-line-number" data-line-number="7780"></td>
        <td id="LC7780" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) outerPadding <span class="pl-k">=</span> padding;</td>
      </tr>
      <tr>
        <td id="L7781" class="blob-num js-line-number" data-line-number="7781"></td>
        <td id="LC7781" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> reverse <span class="pl-k">=</span> x[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> x[<span class="pl-c1">0</span>], start <span class="pl-k">=</span> x[reverse <span class="pl-k">-</span> <span class="pl-c1">0</span>], stop <span class="pl-k">=</span> x[<span class="pl-c1">1</span> <span class="pl-k">-</span> reverse], step <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((stop <span class="pl-k">-</span> start) / (domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> padding <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> outerPadding));</td>
      </tr>
      <tr>
        <td id="L7782" class="blob-num js-line-number" data-line-number="7782"></td>
        <td id="LC7782" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> steps(start <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((stop <span class="pl-k">-</span> start <span class="pl-k">-</span> (domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> padding) <span class="pl-k">*</span> step) / <span class="pl-c1">2</span>), step);</td>
      </tr>
      <tr>
        <td id="L7783" class="blob-num js-line-number" data-line-number="7783"></td>
        <td id="LC7783" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (reverse) range.<span class="pl-c1">reverse</span>();</td>
      </tr>
      <tr>
        <td id="L7784" class="blob-num js-line-number" data-line-number="7784"></td>
        <td id="LC7784" class="blob-code blob-code-inner js-file-line">      rangeBand <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(step <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> padding));</td>
      </tr>
      <tr>
        <td id="L7785" class="blob-num js-line-number" data-line-number="7785"></td>
        <td id="LC7785" class="blob-code blob-code-inner js-file-line">      ranger <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7786" class="blob-num js-line-number" data-line-number="7786"></td>
        <td id="LC7786" class="blob-code blob-code-inner js-file-line">        t<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rangeRoundBands<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7787" class="blob-num js-line-number" data-line-number="7787"></td>
        <td id="LC7787" class="blob-code blob-code-inner js-file-line">        a<span class="pl-k">:</span> arguments</td>
      </tr>
      <tr>
        <td id="L7788" class="blob-num js-line-number" data-line-number="7788"></td>
        <td id="LC7788" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L7789" class="blob-num js-line-number" data-line-number="7789"></td>
        <td id="LC7789" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7790" class="blob-num js-line-number" data-line-number="7790"></td>
        <td id="LC7790" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7791" class="blob-num js-line-number" data-line-number="7791"></td>
        <td id="LC7791" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">rangeBand</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7792" class="blob-num js-line-number" data-line-number="7792"></td>
        <td id="LC7792" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rangeBand;</td>
      </tr>
      <tr>
        <td id="L7793" class="blob-num js-line-number" data-line-number="7793"></td>
        <td id="LC7793" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7794" class="blob-num js-line-number" data-line-number="7794"></td>
        <td id="LC7794" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">rangeExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7795" class="blob-num js-line-number" data-line-number="7795"></td>
        <td id="LC7795" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scaleExtent(ranger.a[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L7796" class="blob-num js-line-number" data-line-number="7796"></td>
        <td id="LC7796" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7797" class="blob-num js-line-number" data-line-number="7797"></td>
        <td id="LC7797" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7798" class="blob-num js-line-number" data-line-number="7798"></td>
        <td id="LC7798" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_ordinal(domain, ranger);</td>
      </tr>
      <tr>
        <td id="L7799" class="blob-num js-line-number" data-line-number="7799"></td>
        <td id="LC7799" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7800" class="blob-num js-line-number" data-line-number="7800"></td>
        <td id="LC7800" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> scale.<span class="pl-c1">domain</span>(domain);</td>
      </tr>
      <tr>
        <td id="L7801" class="blob-num js-line-number" data-line-number="7801"></td>
        <td id="LC7801" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7802" class="blob-num js-line-number" data-line-number="7802"></td>
        <td id="LC7802" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">category10</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7803" class="blob-num js-line-number" data-line-number="7803"></td>
        <td id="LC7803" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.scale.ordinal().range(d3_category10);</td>
      </tr>
      <tr>
        <td id="L7804" class="blob-num js-line-number" data-line-number="7804"></td>
        <td id="LC7804" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7805" class="blob-num js-line-number" data-line-number="7805"></td>
        <td id="LC7805" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">category20</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7806" class="blob-num js-line-number" data-line-number="7806"></td>
        <td id="LC7806" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.scale.ordinal().range(d3_category20);</td>
      </tr>
      <tr>
        <td id="L7807" class="blob-num js-line-number" data-line-number="7807"></td>
        <td id="LC7807" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7808" class="blob-num js-line-number" data-line-number="7808"></td>
        <td id="LC7808" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">category20b</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7809" class="blob-num js-line-number" data-line-number="7809"></td>
        <td id="LC7809" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.scale.ordinal().range(d3_category20b);</td>
      </tr>
      <tr>
        <td id="L7810" class="blob-num js-line-number" data-line-number="7810"></td>
        <td id="LC7810" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7811" class="blob-num js-line-number" data-line-number="7811"></td>
        <td id="LC7811" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">category20c</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7812" class="blob-num js-line-number" data-line-number="7812"></td>
        <td id="LC7812" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.scale.ordinal().range(d3_category20c);</td>
      </tr>
      <tr>
        <td id="L7813" class="blob-num js-line-number" data-line-number="7813"></td>
        <td id="LC7813" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7814" class="blob-num js-line-number" data-line-number="7814"></td>
        <td id="LC7814" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_category10 <span class="pl-k">=</span> [ <span class="pl-c1">2062260</span>, <span class="pl-c1">16744206</span>, <span class="pl-c1">2924588</span>, <span class="pl-c1">14034728</span>, <span class="pl-c1">9725885</span>, <span class="pl-c1">9197131</span>, <span class="pl-c1">14907330</span>, <span class="pl-c1">8355711</span>, <span class="pl-c1">12369186</span>, <span class="pl-c1">1556175</span> ].map(d3_rgbString);</td>
      </tr>
      <tr>
        <td id="L7815" class="blob-num js-line-number" data-line-number="7815"></td>
        <td id="LC7815" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_category20 <span class="pl-k">=</span> [ <span class="pl-c1">2062260</span>, <span class="pl-c1">11454440</span>, <span class="pl-c1">16744206</span>, <span class="pl-c1">16759672</span>, <span class="pl-c1">2924588</span>, <span class="pl-c1">10018698</span>, <span class="pl-c1">14034728</span>, <span class="pl-c1">16750742</span>, <span class="pl-c1">9725885</span>, <span class="pl-c1">12955861</span>, <span class="pl-c1">9197131</span>, <span class="pl-c1">12885140</span>, <span class="pl-c1">14907330</span>, <span class="pl-c1">16234194</span>, <span class="pl-c1">8355711</span>, <span class="pl-c1">13092807</span>, <span class="pl-c1">12369186</span>, <span class="pl-c1">14408589</span>, <span class="pl-c1">1556175</span>, <span class="pl-c1">10410725</span> ].map(d3_rgbString);</td>
      </tr>
      <tr>
        <td id="L7816" class="blob-num js-line-number" data-line-number="7816"></td>
        <td id="LC7816" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_category20b <span class="pl-k">=</span> [ <span class="pl-c1">3750777</span>, <span class="pl-c1">5395619</span>, <span class="pl-c1">7040719</span>, <span class="pl-c1">10264286</span>, <span class="pl-c1">6519097</span>, <span class="pl-c1">9216594</span>, <span class="pl-c1">11915115</span>, <span class="pl-c1">13556636</span>, <span class="pl-c1">9202993</span>, <span class="pl-c1">12426809</span>, <span class="pl-c1">15186514</span>, <span class="pl-c1">15190932</span>, <span class="pl-c1">8666169</span>, <span class="pl-c1">11356490</span>, <span class="pl-c1">14049643</span>, <span class="pl-c1">15177372</span>, <span class="pl-c1">8077683</span>, <span class="pl-c1">10834324</span>, <span class="pl-c1">13528509</span>, <span class="pl-c1">14589654</span> ].map(d3_rgbString);</td>
      </tr>
      <tr>
        <td id="L7817" class="blob-num js-line-number" data-line-number="7817"></td>
        <td id="LC7817" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_category20c <span class="pl-k">=</span> [ <span class="pl-c1">3244733</span>, <span class="pl-c1">7057110</span>, <span class="pl-c1">10406625</span>, <span class="pl-c1">13032431</span>, <span class="pl-c1">15095053</span>, <span class="pl-c1">16616764</span>, <span class="pl-c1">16625259</span>, <span class="pl-c1">16634018</span>, <span class="pl-c1">3253076</span>, <span class="pl-c1">7652470</span>, <span class="pl-c1">10607003</span>, <span class="pl-c1">13101504</span>, <span class="pl-c1">7695281</span>, <span class="pl-c1">10394312</span>, <span class="pl-c1">12369372</span>, <span class="pl-c1">14342891</span>, <span class="pl-c1">6513507</span>, <span class="pl-c1">9868950</span>, <span class="pl-c1">12434877</span>, <span class="pl-c1">14277081</span> ].map(d3_rgbString);</td>
      </tr>
      <tr>
        <td id="L7818" class="blob-num js-line-number" data-line-number="7818"></td>
        <td id="LC7818" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">quantile</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7819" class="blob-num js-line-number" data-line-number="7819"></td>
        <td id="LC7819" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_quantile([], []);</td>
      </tr>
      <tr>
        <td id="L7820" class="blob-num js-line-number" data-line-number="7820"></td>
        <td id="LC7820" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7821" class="blob-num js-line-number" data-line-number="7821"></td>
        <td id="LC7821" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_quantile</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">range</span>) {</td>
      </tr>
      <tr>
        <td id="L7822" class="blob-num js-line-number" data-line-number="7822"></td>
        <td id="LC7822" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> thresholds;</td>
      </tr>
      <tr>
        <td id="L7823" class="blob-num js-line-number" data-line-number="7823"></td>
        <td id="LC7823" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">rescale</span>() {</td>
      </tr>
      <tr>
        <td id="L7824" class="blob-num js-line-number" data-line-number="7824"></td>
        <td id="LC7824" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> k <span class="pl-k">=</span> <span class="pl-c1">0</span>, q <span class="pl-k">=</span> range.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L7825" class="blob-num js-line-number" data-line-number="7825"></td>
        <td id="LC7825" class="blob-code blob-code-inner js-file-line">      thresholds <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7826" class="blob-num js-line-number" data-line-number="7826"></td>
        <td id="LC7826" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>k <span class="pl-k">&lt;</span> q) thresholds[k <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> d3.quantile(domain, k / q);</td>
      </tr>
      <tr>
        <td id="L7827" class="blob-num js-line-number" data-line-number="7827"></td>
        <td id="LC7827" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7828" class="blob-num js-line-number" data-line-number="7828"></td>
        <td id="LC7828" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7829" class="blob-num js-line-number" data-line-number="7829"></td>
        <td id="LC7829" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7830" class="blob-num js-line-number" data-line-number="7830"></td>
        <td id="LC7830" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(x <span class="pl-k">=</span> <span class="pl-k">+</span>x)) <span class="pl-k">return</span> range[d3.bisect(thresholds, x)];</td>
      </tr>
      <tr>
        <td id="L7831" class="blob-num js-line-number" data-line-number="7831"></td>
        <td id="LC7831" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7832" class="blob-num js-line-number" data-line-number="7832"></td>
        <td id="LC7832" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7833" class="blob-num js-line-number" data-line-number="7833"></td>
        <td id="LC7833" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L7834" class="blob-num js-line-number" data-line-number="7834"></td>
        <td id="LC7834" class="blob-code blob-code-inner js-file-line">      domain <span class="pl-k">=</span> x.map(d3_number).filter(d3_numeric).<span class="pl-c1">sort</span>(d3_ascending);</td>
      </tr>
      <tr>
        <td id="L7835" class="blob-num js-line-number" data-line-number="7835"></td>
        <td id="LC7835" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7836" class="blob-num js-line-number" data-line-number="7836"></td>
        <td id="LC7836" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7837" class="blob-num js-line-number" data-line-number="7837"></td>
        <td id="LC7837" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7838" class="blob-num js-line-number" data-line-number="7838"></td>
        <td id="LC7838" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L7839" class="blob-num js-line-number" data-line-number="7839"></td>
        <td id="LC7839" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7840" class="blob-num js-line-number" data-line-number="7840"></td>
        <td id="LC7840" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7841" class="blob-num js-line-number" data-line-number="7841"></td>
        <td id="LC7841" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7842" class="blob-num js-line-number" data-line-number="7842"></td>
        <td id="LC7842" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">quantiles</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7843" class="blob-num js-line-number" data-line-number="7843"></td>
        <td id="LC7843" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> thresholds;</td>
      </tr>
      <tr>
        <td id="L7844" class="blob-num js-line-number" data-line-number="7844"></td>
        <td id="LC7844" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7845" class="blob-num js-line-number" data-line-number="7845"></td>
        <td id="LC7845" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">invertExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L7846" class="blob-num js-line-number" data-line-number="7846"></td>
        <td id="LC7846" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> range.<span class="pl-c1">indexOf</span>(y);</td>
      </tr>
      <tr>
        <td id="L7847" class="blob-num js-line-number" data-line-number="7847"></td>
        <td id="LC7847" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> y <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> [ <span class="pl-c1">NaN</span>, <span class="pl-c1">NaN</span> ] <span class="pl-k">:</span> [ y <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> thresholds[y <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">:</span> domain[<span class="pl-c1">0</span>], y <span class="pl-k">&lt;</span> thresholds.<span class="pl-c1">length</span> <span class="pl-k">?</span> thresholds[y] <span class="pl-k">:</span> domain[domain.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L7848" class="blob-num js-line-number" data-line-number="7848"></td>
        <td id="LC7848" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7849" class="blob-num js-line-number" data-line-number="7849"></td>
        <td id="LC7849" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7850" class="blob-num js-line-number" data-line-number="7850"></td>
        <td id="LC7850" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_quantile(domain, range);</td>
      </tr>
      <tr>
        <td id="L7851" class="blob-num js-line-number" data-line-number="7851"></td>
        <td id="LC7851" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7852" class="blob-num js-line-number" data-line-number="7852"></td>
        <td id="LC7852" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7853" class="blob-num js-line-number" data-line-number="7853"></td>
        <td id="LC7853" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7854" class="blob-num js-line-number" data-line-number="7854"></td>
        <td id="LC7854" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">quantize</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7855" class="blob-num js-line-number" data-line-number="7855"></td>
        <td id="LC7855" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_quantize(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, [ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> ]);</td>
      </tr>
      <tr>
        <td id="L7856" class="blob-num js-line-number" data-line-number="7856"></td>
        <td id="LC7856" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7857" class="blob-num js-line-number" data-line-number="7857"></td>
        <td id="LC7857" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_quantize</span>(<span class="pl-smi">x0</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">range</span>) {</td>
      </tr>
      <tr>
        <td id="L7858" class="blob-num js-line-number" data-line-number="7858"></td>
        <td id="LC7858" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> kx, i;</td>
      </tr>
      <tr>
        <td id="L7859" class="blob-num js-line-number" data-line-number="7859"></td>
        <td id="LC7859" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7860" class="blob-num js-line-number" data-line-number="7860"></td>
        <td id="LC7860" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> range[<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(i, <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(kx <span class="pl-k">*</span> (x <span class="pl-k">-</span> x0))))];</td>
      </tr>
      <tr>
        <td id="L7861" class="blob-num js-line-number" data-line-number="7861"></td>
        <td id="LC7861" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7862" class="blob-num js-line-number" data-line-number="7862"></td>
        <td id="LC7862" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">rescale</span>() {</td>
      </tr>
      <tr>
        <td id="L7863" class="blob-num js-line-number" data-line-number="7863"></td>
        <td id="LC7863" class="blob-code blob-code-inner js-file-line">      kx <span class="pl-k">=</span> range.<span class="pl-c1">length</span> / (x1 <span class="pl-k">-</span> x0);</td>
      </tr>
      <tr>
        <td id="L7864" class="blob-num js-line-number" data-line-number="7864"></td>
        <td id="LC7864" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> range.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7865" class="blob-num js-line-number" data-line-number="7865"></td>
        <td id="LC7865" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7866" class="blob-num js-line-number" data-line-number="7866"></td>
        <td id="LC7866" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7867" class="blob-num js-line-number" data-line-number="7867"></td>
        <td id="LC7867" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7868" class="blob-num js-line-number" data-line-number="7868"></td>
        <td id="LC7868" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> [ x0, x1 ];</td>
      </tr>
      <tr>
        <td id="L7869" class="blob-num js-line-number" data-line-number="7869"></td>
        <td id="LC7869" class="blob-code blob-code-inner js-file-line">      x0 <span class="pl-k">=</span> <span class="pl-k">+</span>x[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L7870" class="blob-num js-line-number" data-line-number="7870"></td>
        <td id="LC7870" class="blob-code blob-code-inner js-file-line">      x1 <span class="pl-k">=</span> <span class="pl-k">+</span>x[x.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L7871" class="blob-num js-line-number" data-line-number="7871"></td>
        <td id="LC7871" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7872" class="blob-num js-line-number" data-line-number="7872"></td>
        <td id="LC7872" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7873" class="blob-num js-line-number" data-line-number="7873"></td>
        <td id="LC7873" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7874" class="blob-num js-line-number" data-line-number="7874"></td>
        <td id="LC7874" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L7875" class="blob-num js-line-number" data-line-number="7875"></td>
        <td id="LC7875" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L7876" class="blob-num js-line-number" data-line-number="7876"></td>
        <td id="LC7876" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7877" class="blob-num js-line-number" data-line-number="7877"></td>
        <td id="LC7877" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7878" class="blob-num js-line-number" data-line-number="7878"></td>
        <td id="LC7878" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">invertExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L7879" class="blob-num js-line-number" data-line-number="7879"></td>
        <td id="LC7879" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> range.<span class="pl-c1">indexOf</span>(y);</td>
      </tr>
      <tr>
        <td id="L7880" class="blob-num js-line-number" data-line-number="7880"></td>
        <td id="LC7880" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> y <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">NaN</span> <span class="pl-k">:</span> y / kx <span class="pl-k">+</span> x0;</td>
      </tr>
      <tr>
        <td id="L7881" class="blob-num js-line-number" data-line-number="7881"></td>
        <td id="LC7881" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ y, y <span class="pl-k">+</span> <span class="pl-c1">1</span> / kx ];</td>
      </tr>
      <tr>
        <td id="L7882" class="blob-num js-line-number" data-line-number="7882"></td>
        <td id="LC7882" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7883" class="blob-num js-line-number" data-line-number="7883"></td>
        <td id="LC7883" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7884" class="blob-num js-line-number" data-line-number="7884"></td>
        <td id="LC7884" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_quantize(x0, x1, range);</td>
      </tr>
      <tr>
        <td id="L7885" class="blob-num js-line-number" data-line-number="7885"></td>
        <td id="LC7885" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7886" class="blob-num js-line-number" data-line-number="7886"></td>
        <td id="LC7886" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> rescale();</td>
      </tr>
      <tr>
        <td id="L7887" class="blob-num js-line-number" data-line-number="7887"></td>
        <td id="LC7887" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7888" class="blob-num js-line-number" data-line-number="7888"></td>
        <td id="LC7888" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">threshold</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7889" class="blob-num js-line-number" data-line-number="7889"></td>
        <td id="LC7889" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_threshold([ .<span class="pl-c1">5</span> ], [ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> ]);</td>
      </tr>
      <tr>
        <td id="L7890" class="blob-num js-line-number" data-line-number="7890"></td>
        <td id="LC7890" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7891" class="blob-num js-line-number" data-line-number="7891"></td>
        <td id="LC7891" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_threshold</span>(<span class="pl-smi">domain</span>, <span class="pl-smi">range</span>) {</td>
      </tr>
      <tr>
        <td id="L7892" class="blob-num js-line-number" data-line-number="7892"></td>
        <td id="LC7892" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7893" class="blob-num js-line-number" data-line-number="7893"></td>
        <td id="LC7893" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x <span class="pl-k">&lt;=</span> x) <span class="pl-k">return</span> range[d3.bisect(domain, x)];</td>
      </tr>
      <tr>
        <td id="L7894" class="blob-num js-line-number" data-line-number="7894"></td>
        <td id="LC7894" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7895" class="blob-num js-line-number" data-line-number="7895"></td>
        <td id="LC7895" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L7896" class="blob-num js-line-number" data-line-number="7896"></td>
        <td id="LC7896" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L7897" class="blob-num js-line-number" data-line-number="7897"></td>
        <td id="LC7897" class="blob-code blob-code-inner js-file-line">      domain <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L7898" class="blob-num js-line-number" data-line-number="7898"></td>
        <td id="LC7898" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7899" class="blob-num js-line-number" data-line-number="7899"></td>
        <td id="LC7899" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7900" class="blob-num js-line-number" data-line-number="7900"></td>
        <td id="LC7900" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L7901" class="blob-num js-line-number" data-line-number="7901"></td>
        <td id="LC7901" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> range;</td>
      </tr>
      <tr>
        <td id="L7902" class="blob-num js-line-number" data-line-number="7902"></td>
        <td id="LC7902" class="blob-code blob-code-inner js-file-line">      range <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L7903" class="blob-num js-line-number" data-line-number="7903"></td>
        <td id="LC7903" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7904" class="blob-num js-line-number" data-line-number="7904"></td>
        <td id="LC7904" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7905" class="blob-num js-line-number" data-line-number="7905"></td>
        <td id="LC7905" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">invertExtent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L7906" class="blob-num js-line-number" data-line-number="7906"></td>
        <td id="LC7906" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> range.<span class="pl-c1">indexOf</span>(y);</td>
      </tr>
      <tr>
        <td id="L7907" class="blob-num js-line-number" data-line-number="7907"></td>
        <td id="LC7907" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ domain[y <span class="pl-k">-</span> <span class="pl-c1">1</span>], domain[y] ];</td>
      </tr>
      <tr>
        <td id="L7908" class="blob-num js-line-number" data-line-number="7908"></td>
        <td id="LC7908" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7909" class="blob-num js-line-number" data-line-number="7909"></td>
        <td id="LC7909" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7910" class="blob-num js-line-number" data-line-number="7910"></td>
        <td id="LC7910" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_threshold(domain, range);</td>
      </tr>
      <tr>
        <td id="L7911" class="blob-num js-line-number" data-line-number="7911"></td>
        <td id="LC7911" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7912" class="blob-num js-line-number" data-line-number="7912"></td>
        <td id="LC7912" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L7913" class="blob-num js-line-number" data-line-number="7913"></td>
        <td id="LC7913" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7914" class="blob-num js-line-number" data-line-number="7914"></td>
        <td id="LC7914" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.scale</span>.<span class="pl-en">identity</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7915" class="blob-num js-line-number" data-line-number="7915"></td>
        <td id="LC7915" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_identity([ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> ]);</td>
      </tr>
      <tr>
        <td id="L7916" class="blob-num js-line-number" data-line-number="7916"></td>
        <td id="LC7916" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7917" class="blob-num js-line-number" data-line-number="7917"></td>
        <td id="LC7917" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_scale_identity</span>(<span class="pl-smi">domain</span>) {</td>
      </tr>
      <tr>
        <td id="L7918" class="blob-num js-line-number" data-line-number="7918"></td>
        <td id="LC7918" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">identity</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7919" class="blob-num js-line-number" data-line-number="7919"></td>
        <td id="LC7919" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L7920" class="blob-num js-line-number" data-line-number="7920"></td>
        <td id="LC7920" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7921" class="blob-num js-line-number" data-line-number="7921"></td>
        <td id="LC7921" class="blob-code blob-code-inner js-file-line">    identity.invert <span class="pl-k">=</span> identity;</td>
      </tr>
      <tr>
        <td id="L7922" class="blob-num js-line-number" data-line-number="7922"></td>
        <td id="LC7922" class="blob-code blob-code-inner js-file-line">    identity.<span class="pl-c1">domain</span> <span class="pl-k">=</span> <span class="pl-c1">identity</span>.<span class="pl-en">range</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L7923" class="blob-num js-line-number" data-line-number="7923"></td>
        <td id="LC7923" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> domain;</td>
      </tr>
      <tr>
        <td id="L7924" class="blob-num js-line-number" data-line-number="7924"></td>
        <td id="LC7924" class="blob-code blob-code-inner js-file-line">      domain <span class="pl-k">=</span> x.map(identity);</td>
      </tr>
      <tr>
        <td id="L7925" class="blob-num js-line-number" data-line-number="7925"></td>
        <td id="LC7925" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> identity;</td>
      </tr>
      <tr>
        <td id="L7926" class="blob-num js-line-number" data-line-number="7926"></td>
        <td id="LC7926" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7927" class="blob-num js-line-number" data-line-number="7927"></td>
        <td id="LC7927" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">identity</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L7928" class="blob-num js-line-number" data-line-number="7928"></td>
        <td id="LC7928" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_linearTicks(domain, m);</td>
      </tr>
      <tr>
        <td id="L7929" class="blob-num js-line-number" data-line-number="7929"></td>
        <td id="LC7929" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7930" class="blob-num js-line-number" data-line-number="7930"></td>
        <td id="LC7930" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">identity</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>, <span class="pl-smi">format</span>) {</td>
      </tr>
      <tr>
        <td id="L7931" class="blob-num js-line-number" data-line-number="7931"></td>
        <td id="LC7931" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_linearTickFormat(domain, m, format);</td>
      </tr>
      <tr>
        <td id="L7932" class="blob-num js-line-number" data-line-number="7932"></td>
        <td id="LC7932" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7933" class="blob-num js-line-number" data-line-number="7933"></td>
        <td id="LC7933" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">identity</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7934" class="blob-num js-line-number" data-line-number="7934"></td>
        <td id="LC7934" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_scale_identity(domain);</td>
      </tr>
      <tr>
        <td id="L7935" class="blob-num js-line-number" data-line-number="7935"></td>
        <td id="LC7935" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7936" class="blob-num js-line-number" data-line-number="7936"></td>
        <td id="LC7936" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> identity;</td>
      </tr>
      <tr>
        <td id="L7937" class="blob-num js-line-number" data-line-number="7937"></td>
        <td id="LC7937" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7938" class="blob-num js-line-number" data-line-number="7938"></td>
        <td id="LC7938" class="blob-code blob-code-inner js-file-line">  d3.svg <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L7939" class="blob-num js-line-number" data-line-number="7939"></td>
        <td id="LC7939" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_zero</span>() {</td>
      </tr>
      <tr>
        <td id="L7940" class="blob-num js-line-number" data-line-number="7940"></td>
        <td id="LC7940" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7941" class="blob-num js-line-number" data-line-number="7941"></td>
        <td id="LC7941" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L7942" class="blob-num js-line-number" data-line-number="7942"></td>
        <td id="LC7942" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg</span>.<span class="pl-en">arc</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7943" class="blob-num js-line-number" data-line-number="7943"></td>
        <td id="LC7943" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> innerRadius <span class="pl-k">=</span> d3_svg_arcInnerRadius, outerRadius <span class="pl-k">=</span> d3_svg_arcOuterRadius, cornerRadius <span class="pl-k">=</span> d3_zero, padRadius <span class="pl-k">=</span> d3_svg_arcAuto, startAngle <span class="pl-k">=</span> d3_svg_arcStartAngle, endAngle <span class="pl-k">=</span> d3_svg_arcEndAngle, padAngle <span class="pl-k">=</span> d3_svg_arcPadAngle;</td>
      </tr>
      <tr>
        <td id="L7944" class="blob-num js-line-number" data-line-number="7944"></td>
        <td id="LC7944" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">arc</span>() {</td>
      </tr>
      <tr>
        <td id="L7945" class="blob-num js-line-number" data-line-number="7945"></td>
        <td id="LC7945" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> r0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-k">+</span>innerRadius.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments)), r1 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, <span class="pl-k">+</span>outerRadius.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments)), a0 <span class="pl-k">=</span> startAngle.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">-</span> halfÏ, a1 <span class="pl-k">=</span> endAngle.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">-</span> halfÏ, da <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a1 <span class="pl-k">-</span> a0), cw <span class="pl-k">=</span> a0 <span class="pl-k">&gt;</span> a1 <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7946" class="blob-num js-line-number" data-line-number="7946"></td>
        <td id="LC7946" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (r1 <span class="pl-k">&lt;</span> r0) rc <span class="pl-k">=</span> r1, r1 <span class="pl-k">=</span> r0, r0 <span class="pl-k">=</span> rc;</td>
      </tr>
      <tr>
        <td id="L7947" class="blob-num js-line-number" data-line-number="7947"></td>
        <td id="LC7947" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (da <span class="pl-k">&gt;=</span> ÏÎµ) <span class="pl-k">return</span> circleSegment(r1, cw) <span class="pl-k">+</span> (r0 <span class="pl-k">?</span> circleSegment(r0, <span class="pl-c1">1</span> <span class="pl-k">-</span> cw) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L7948" class="blob-num js-line-number" data-line-number="7948"></td>
        <td id="LC7948" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> rc, cr, rp, ap, p0 <span class="pl-k">=</span> <span class="pl-c1">0</span>, p1 <span class="pl-k">=</span> <span class="pl-c1">0</span>, x0, y0, x1, y1, x2, y2, x3, y3, path <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7949" class="blob-num js-line-number" data-line-number="7949"></td>
        <td id="LC7949" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (ap <span class="pl-k">=</span> (<span class="pl-k">+</span>padAngle.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">||</span> <span class="pl-c1">0</span>) / <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L7950" class="blob-num js-line-number" data-line-number="7950"></td>
        <td id="LC7950" class="blob-code blob-code-inner js-file-line">        rp <span class="pl-k">=</span> padRadius <span class="pl-k">===</span> d3_svg_arcAuto <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(r0 <span class="pl-k">*</span> r0 <span class="pl-k">+</span> r1 <span class="pl-k">*</span> r1) <span class="pl-k">:</span> <span class="pl-k">+</span>padRadius.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L7951" class="blob-num js-line-number" data-line-number="7951"></td>
        <td id="LC7951" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>cw) p1 <span class="pl-k">*=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7952" class="blob-num js-line-number" data-line-number="7952"></td>
        <td id="LC7952" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r1) p1 <span class="pl-k">=</span> d3_asin(rp / r1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(ap));</td>
      </tr>
      <tr>
        <td id="L7953" class="blob-num js-line-number" data-line-number="7953"></td>
        <td id="LC7953" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (r0) p0 <span class="pl-k">=</span> d3_asin(rp / r0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(ap));</td>
      </tr>
      <tr>
        <td id="L7954" class="blob-num js-line-number" data-line-number="7954"></td>
        <td id="LC7954" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7955" class="blob-num js-line-number" data-line-number="7955"></td>
        <td id="LC7955" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (r1) {</td>
      </tr>
      <tr>
        <td id="L7956" class="blob-num js-line-number" data-line-number="7956"></td>
        <td id="LC7956" class="blob-code blob-code-inner js-file-line">        x0 <span class="pl-k">=</span> r1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a0 <span class="pl-k">+</span> p1);</td>
      </tr>
      <tr>
        <td id="L7957" class="blob-num js-line-number" data-line-number="7957"></td>
        <td id="LC7957" class="blob-code blob-code-inner js-file-line">        y0 <span class="pl-k">=</span> r1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a0 <span class="pl-k">+</span> p1);</td>
      </tr>
      <tr>
        <td id="L7958" class="blob-num js-line-number" data-line-number="7958"></td>
        <td id="LC7958" class="blob-code blob-code-inner js-file-line">        x1 <span class="pl-k">=</span> r1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a1 <span class="pl-k">-</span> p1);</td>
      </tr>
      <tr>
        <td id="L7959" class="blob-num js-line-number" data-line-number="7959"></td>
        <td id="LC7959" class="blob-code blob-code-inner js-file-line">        y1 <span class="pl-k">=</span> r1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a1 <span class="pl-k">-</span> p1);</td>
      </tr>
      <tr>
        <td id="L7960" class="blob-num js-line-number" data-line-number="7960"></td>
        <td id="LC7960" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> l1 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a1 <span class="pl-k">-</span> a0 <span class="pl-k">-</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> p1) <span class="pl-k">&lt;=</span> Ï <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7961" class="blob-num js-line-number" data-line-number="7961"></td>
        <td id="LC7961" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (p1 <span class="pl-k">&amp;&amp;</span> d3_svg_arcSweep(x0, y0, x1, y1) <span class="pl-k">===</span> cw <span class="pl-k">^</span> l1) {</td>
      </tr>
      <tr>
        <td id="L7962" class="blob-num js-line-number" data-line-number="7962"></td>
        <td id="LC7962" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> h1 <span class="pl-k">=</span> (a0 <span class="pl-k">+</span> a1) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7963" class="blob-num js-line-number" data-line-number="7963"></td>
        <td id="LC7963" class="blob-code blob-code-inner js-file-line">          x0 <span class="pl-k">=</span> r1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(h1);</td>
      </tr>
      <tr>
        <td id="L7964" class="blob-num js-line-number" data-line-number="7964"></td>
        <td id="LC7964" class="blob-code blob-code-inner js-file-line">          y0 <span class="pl-k">=</span> r1 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(h1);</td>
      </tr>
      <tr>
        <td id="L7965" class="blob-num js-line-number" data-line-number="7965"></td>
        <td id="LC7965" class="blob-code blob-code-inner js-file-line">          x1 <span class="pl-k">=</span> y1 <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7966" class="blob-num js-line-number" data-line-number="7966"></td>
        <td id="LC7966" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7967" class="blob-num js-line-number" data-line-number="7967"></td>
        <td id="LC7967" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7968" class="blob-num js-line-number" data-line-number="7968"></td>
        <td id="LC7968" class="blob-code blob-code-inner js-file-line">        x0 <span class="pl-k">=</span> y0 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7969" class="blob-num js-line-number" data-line-number="7969"></td>
        <td id="LC7969" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7970" class="blob-num js-line-number" data-line-number="7970"></td>
        <td id="LC7970" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (r0) {</td>
      </tr>
      <tr>
        <td id="L7971" class="blob-num js-line-number" data-line-number="7971"></td>
        <td id="LC7971" class="blob-code blob-code-inner js-file-line">        x2 <span class="pl-k">=</span> r0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a1 <span class="pl-k">-</span> p0);</td>
      </tr>
      <tr>
        <td id="L7972" class="blob-num js-line-number" data-line-number="7972"></td>
        <td id="LC7972" class="blob-code blob-code-inner js-file-line">        y2 <span class="pl-k">=</span> r0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a1 <span class="pl-k">-</span> p0);</td>
      </tr>
      <tr>
        <td id="L7973" class="blob-num js-line-number" data-line-number="7973"></td>
        <td id="LC7973" class="blob-code blob-code-inner js-file-line">        x3 <span class="pl-k">=</span> r0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a0 <span class="pl-k">+</span> p0);</td>
      </tr>
      <tr>
        <td id="L7974" class="blob-num js-line-number" data-line-number="7974"></td>
        <td id="LC7974" class="blob-code blob-code-inner js-file-line">        y3 <span class="pl-k">=</span> r0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a0 <span class="pl-k">+</span> p0);</td>
      </tr>
      <tr>
        <td id="L7975" class="blob-num js-line-number" data-line-number="7975"></td>
        <td id="LC7975" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> l0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a0 <span class="pl-k">-</span> a1 <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> p0) <span class="pl-k">&lt;=</span> Ï <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7976" class="blob-num js-line-number" data-line-number="7976"></td>
        <td id="LC7976" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (p0 <span class="pl-k">&amp;&amp;</span> d3_svg_arcSweep(x2, y2, x3, y3) <span class="pl-k">===</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> cw <span class="pl-k">^</span> l0) {</td>
      </tr>
      <tr>
        <td id="L7977" class="blob-num js-line-number" data-line-number="7977"></td>
        <td id="LC7977" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> h0 <span class="pl-k">=</span> (a0 <span class="pl-k">+</span> a1) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L7978" class="blob-num js-line-number" data-line-number="7978"></td>
        <td id="LC7978" class="blob-code blob-code-inner js-file-line">          x2 <span class="pl-k">=</span> r0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(h0);</td>
      </tr>
      <tr>
        <td id="L7979" class="blob-num js-line-number" data-line-number="7979"></td>
        <td id="LC7979" class="blob-code blob-code-inner js-file-line">          y2 <span class="pl-k">=</span> r0 <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(h0);</td>
      </tr>
      <tr>
        <td id="L7980" class="blob-num js-line-number" data-line-number="7980"></td>
        <td id="LC7980" class="blob-code blob-code-inner js-file-line">          x3 <span class="pl-k">=</span> y3 <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7981" class="blob-num js-line-number" data-line-number="7981"></td>
        <td id="LC7981" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7982" class="blob-num js-line-number" data-line-number="7982"></td>
        <td id="LC7982" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7983" class="blob-num js-line-number" data-line-number="7983"></td>
        <td id="LC7983" class="blob-code blob-code-inner js-file-line">        x2 <span class="pl-k">=</span> y2 <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L7984" class="blob-num js-line-number" data-line-number="7984"></td>
        <td id="LC7984" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7985" class="blob-num js-line-number" data-line-number="7985"></td>
        <td id="LC7985" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((rc <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(r1 <span class="pl-k">-</span> r0) / <span class="pl-c1">2</span>, <span class="pl-k">+</span>cornerRadius.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments))) <span class="pl-k">&gt;</span> .<span class="pl-c1">001</span>) {</td>
      </tr>
      <tr>
        <td id="L7986" class="blob-num js-line-number" data-line-number="7986"></td>
        <td id="LC7986" class="blob-code blob-code-inner js-file-line">        cr <span class="pl-k">=</span> r0 <span class="pl-k">&lt;</span> r1 <span class="pl-k">^</span> cw <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L7987" class="blob-num js-line-number" data-line-number="7987"></td>
        <td id="LC7987" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> oc <span class="pl-k">=</span> x3 <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> [ x2, y2 ] <span class="pl-k">:</span> x1 <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> [ x0, y0 ] <span class="pl-k">:</span> d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax <span class="pl-k">=</span> x0 <span class="pl-k">-</span> oc[<span class="pl-c1">0</span>], ay <span class="pl-k">=</span> y0 <span class="pl-k">-</span> oc[<span class="pl-c1">1</span>], bx <span class="pl-k">=</span> x1 <span class="pl-k">-</span> oc[<span class="pl-c1">0</span>], by <span class="pl-k">=</span> y1 <span class="pl-k">-</span> oc[<span class="pl-c1">1</span>], kc <span class="pl-k">=</span> <span class="pl-c1">1</span> / <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>((ax <span class="pl-k">*</span> bx <span class="pl-k">+</span> ay <span class="pl-k">*</span> by) / (<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(ax <span class="pl-k">*</span> ax <span class="pl-k">+</span> ay <span class="pl-k">*</span> ay) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(bx <span class="pl-k">*</span> bx <span class="pl-k">+</span> by <span class="pl-k">*</span> by))) / <span class="pl-c1">2</span>), lc <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(oc[<span class="pl-c1">0</span>] <span class="pl-k">*</span> oc[<span class="pl-c1">0</span>] <span class="pl-k">+</span> oc[<span class="pl-c1">1</span>] <span class="pl-k">*</span> oc[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L7988" class="blob-num js-line-number" data-line-number="7988"></td>
        <td id="LC7988" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x1 <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L7989" class="blob-num js-line-number" data-line-number="7989"></td>
        <td id="LC7989" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> rc1 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(rc, (r1 <span class="pl-k">-</span> lc) / (kc <span class="pl-k">+</span> <span class="pl-c1">1</span>)), t30 <span class="pl-k">=</span> d3_svg_arcCornerTangents(x3 <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> [ x2, y2 ] <span class="pl-k">:</span> [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 <span class="pl-k">=</span> d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);</td>
      </tr>
      <tr>
        <td id="L7990" class="blob-num js-line-number" data-line-number="7990"></td>
        <td id="LC7990" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (rc <span class="pl-k">===</span> rc1) {</td>
      </tr>
      <tr>
        <td id="L7991" class="blob-num js-line-number" data-line-number="7991"></td>
        <td id="LC7991" class="blob-code blob-code-inner js-file-line">            path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, t30[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, rc1, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, rc1, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 0,<span class="pl-pds">&quot;</span></span>, cr, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, t30[<span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, r1, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, r1, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span> <span class="pl-k">-</span> cw <span class="pl-k">^</span> d3_svg_arcSweep(t30[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], t30[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>], t12[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], t12[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, cw, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, t12[<span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, rc1, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, rc1, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 0,<span class="pl-pds">&quot;</span></span>, cr, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, t12[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L7992" class="blob-num js-line-number" data-line-number="7992"></td>
        <td id="LC7992" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7993" class="blob-num js-line-number" data-line-number="7993"></td>
        <td id="LC7993" class="blob-code blob-code-inner js-file-line">            path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, t30[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, rc1, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, rc1, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 1,<span class="pl-pds">&quot;</span></span>, cr, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, t12[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L7994" class="blob-num js-line-number" data-line-number="7994"></td>
        <td id="LC7994" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L7995" class="blob-num js-line-number" data-line-number="7995"></td>
        <td id="LC7995" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7996" class="blob-num js-line-number" data-line-number="7996"></td>
        <td id="LC7996" class="blob-code blob-code-inner js-file-line">          path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, x0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y0);</td>
      </tr>
      <tr>
        <td id="L7997" class="blob-num js-line-number" data-line-number="7997"></td>
        <td id="LC7997" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7998" class="blob-num js-line-number" data-line-number="7998"></td>
        <td id="LC7998" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x3 <span class="pl-k">!=</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L7999" class="blob-num js-line-number" data-line-number="7999"></td>
        <td id="LC7999" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> rc0 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(rc, (r0 <span class="pl-k">-</span> lc) / (kc <span class="pl-k">-</span> <span class="pl-c1">1</span>)), t03 <span class="pl-k">=</span> d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, <span class="pl-k">-</span>rc0, cw), t21 <span class="pl-k">=</span> d3_svg_arcCornerTangents([ x2, y2 ], x1 <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> [ x0, y0 ] <span class="pl-k">:</span> [ x1, y1 ], r0, <span class="pl-k">-</span>rc0, cw);</td>
      </tr>
      <tr>
        <td id="L8000" class="blob-num js-line-number" data-line-number="8000"></td>
        <td id="LC8000" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (rc <span class="pl-k">===</span> rc0) {</td>
      </tr>
      <tr>
        <td id="L8001" class="blob-num js-line-number" data-line-number="8001"></td>
        <td id="LC8001" class="blob-code blob-code-inner js-file-line">            path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, t21[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, rc0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, rc0, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 0,<span class="pl-pds">&quot;</span></span>, cr, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, t21[<span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, r0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, r0, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span>, cw <span class="pl-k">^</span> d3_svg_arcSweep(t21[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], t21[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>], t03[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>], t03[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span> <span class="pl-k">-</span> cw, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, t03[<span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, rc0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, rc0, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 0,<span class="pl-pds">&quot;</span></span>, cr, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, t03[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8002" class="blob-num js-line-number" data-line-number="8002"></td>
        <td id="LC8002" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8003" class="blob-num js-line-number" data-line-number="8003"></td>
        <td id="LC8003" class="blob-code blob-code-inner js-file-line">            path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, t21[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, rc0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, rc0, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 0,<span class="pl-pds">&quot;</span></span>, cr, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, t03[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8004" class="blob-num js-line-number" data-line-number="8004"></td>
        <td id="LC8004" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8005" class="blob-num js-line-number" data-line-number="8005"></td>
        <td id="LC8005" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8006" class="blob-num js-line-number" data-line-number="8006"></td>
        <td id="LC8006" class="blob-code blob-code-inner js-file-line">          path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, x2, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y2);</td>
      </tr>
      <tr>
        <td id="L8007" class="blob-num js-line-number" data-line-number="8007"></td>
        <td id="LC8007" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8008" class="blob-num js-line-number" data-line-number="8008"></td>
        <td id="LC8008" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8009" class="blob-num js-line-number" data-line-number="8009"></td>
        <td id="LC8009" class="blob-code blob-code-inner js-file-line">        path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, x0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y0);</td>
      </tr>
      <tr>
        <td id="L8010" class="blob-num js-line-number" data-line-number="8010"></td>
        <td id="LC8010" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x1 <span class="pl-k">!=</span> <span class="pl-c1">null</span>) path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, r1, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, r1, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span>, l1, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, cw, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, x1, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y1);</td>
      </tr>
      <tr>
        <td id="L8011" class="blob-num js-line-number" data-line-number="8011"></td>
        <td id="LC8011" class="blob-code blob-code-inner js-file-line">        path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, x2, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y2);</td>
      </tr>
      <tr>
        <td id="L8012" class="blob-num js-line-number" data-line-number="8012"></td>
        <td id="LC8012" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x3 <span class="pl-k">!=</span> <span class="pl-c1">null</span>) path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>, r0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, r0, <span class="pl-s"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span>, l0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span> <span class="pl-k">-</span> cw, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, x3, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y3);</td>
      </tr>
      <tr>
        <td id="L8013" class="blob-num js-line-number" data-line-number="8013"></td>
        <td id="LC8013" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8014" class="blob-num js-line-number" data-line-number="8014"></td>
        <td id="LC8014" class="blob-code blob-code-inner js-file-line">      path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8015" class="blob-num js-line-number" data-line-number="8015"></td>
        <td id="LC8015" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8016" class="blob-num js-line-number" data-line-number="8016"></td>
        <td id="LC8016" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8017" class="blob-num js-line-number" data-line-number="8017"></td>
        <td id="LC8017" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">circleSegment</span>(<span class="pl-smi">r1</span>, <span class="pl-smi">cw</span>) {</td>
      </tr>
      <tr>
        <td id="L8018" class="blob-num js-line-number" data-line-number="8018"></td>
        <td id="LC8018" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0 1,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> cw <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r1 <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1 <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0 1,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> cw <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r1;</td>
      </tr>
      <tr>
        <td id="L8019" class="blob-num js-line-number" data-line-number="8019"></td>
        <td id="LC8019" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8020" class="blob-num js-line-number" data-line-number="8020"></td>
        <td id="LC8020" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">arc</span>.<span class="pl-en">innerRadius</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8021" class="blob-num js-line-number" data-line-number="8021"></td>
        <td id="LC8021" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> innerRadius;</td>
      </tr>
      <tr>
        <td id="L8022" class="blob-num js-line-number" data-line-number="8022"></td>
        <td id="LC8022" class="blob-code blob-code-inner js-file-line">      innerRadius <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8023" class="blob-num js-line-number" data-line-number="8023"></td>
        <td id="LC8023" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L8024" class="blob-num js-line-number" data-line-number="8024"></td>
        <td id="LC8024" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8025" class="blob-num js-line-number" data-line-number="8025"></td>
        <td id="LC8025" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">arc</span>.<span class="pl-en">outerRadius</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8026" class="blob-num js-line-number" data-line-number="8026"></td>
        <td id="LC8026" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> outerRadius;</td>
      </tr>
      <tr>
        <td id="L8027" class="blob-num js-line-number" data-line-number="8027"></td>
        <td id="LC8027" class="blob-code blob-code-inner js-file-line">      outerRadius <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8028" class="blob-num js-line-number" data-line-number="8028"></td>
        <td id="LC8028" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L8029" class="blob-num js-line-number" data-line-number="8029"></td>
        <td id="LC8029" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8030" class="blob-num js-line-number" data-line-number="8030"></td>
        <td id="LC8030" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">arc</span>.<span class="pl-en">cornerRadius</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8031" class="blob-num js-line-number" data-line-number="8031"></td>
        <td id="LC8031" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> cornerRadius;</td>
      </tr>
      <tr>
        <td id="L8032" class="blob-num js-line-number" data-line-number="8032"></td>
        <td id="LC8032" class="blob-code blob-code-inner js-file-line">      cornerRadius <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8033" class="blob-num js-line-number" data-line-number="8033"></td>
        <td id="LC8033" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L8034" class="blob-num js-line-number" data-line-number="8034"></td>
        <td id="LC8034" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8035" class="blob-num js-line-number" data-line-number="8035"></td>
        <td id="LC8035" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">arc</span>.<span class="pl-en">padRadius</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8036" class="blob-num js-line-number" data-line-number="8036"></td>
        <td id="LC8036" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> padRadius;</td>
      </tr>
      <tr>
        <td id="L8037" class="blob-num js-line-number" data-line-number="8037"></td>
        <td id="LC8037" class="blob-code blob-code-inner js-file-line">      padRadius <span class="pl-k">=</span> v <span class="pl-k">==</span> d3_svg_arcAuto <span class="pl-k">?</span> d3_svg_arcAuto <span class="pl-k">:</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8038" class="blob-num js-line-number" data-line-number="8038"></td>
        <td id="LC8038" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L8039" class="blob-num js-line-number" data-line-number="8039"></td>
        <td id="LC8039" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8040" class="blob-num js-line-number" data-line-number="8040"></td>
        <td id="LC8040" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">arc</span>.<span class="pl-en">startAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8041" class="blob-num js-line-number" data-line-number="8041"></td>
        <td id="LC8041" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> startAngle;</td>
      </tr>
      <tr>
        <td id="L8042" class="blob-num js-line-number" data-line-number="8042"></td>
        <td id="LC8042" class="blob-code blob-code-inner js-file-line">      startAngle <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8043" class="blob-num js-line-number" data-line-number="8043"></td>
        <td id="LC8043" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L8044" class="blob-num js-line-number" data-line-number="8044"></td>
        <td id="LC8044" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8045" class="blob-num js-line-number" data-line-number="8045"></td>
        <td id="LC8045" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">arc</span>.<span class="pl-en">endAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8046" class="blob-num js-line-number" data-line-number="8046"></td>
        <td id="LC8046" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> endAngle;</td>
      </tr>
      <tr>
        <td id="L8047" class="blob-num js-line-number" data-line-number="8047"></td>
        <td id="LC8047" class="blob-code blob-code-inner js-file-line">      endAngle <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8048" class="blob-num js-line-number" data-line-number="8048"></td>
        <td id="LC8048" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L8049" class="blob-num js-line-number" data-line-number="8049"></td>
        <td id="LC8049" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8050" class="blob-num js-line-number" data-line-number="8050"></td>
        <td id="LC8050" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">arc</span>.<span class="pl-en">padAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8051" class="blob-num js-line-number" data-line-number="8051"></td>
        <td id="LC8051" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> padAngle;</td>
      </tr>
      <tr>
        <td id="L8052" class="blob-num js-line-number" data-line-number="8052"></td>
        <td id="LC8052" class="blob-code blob-code-inner js-file-line">      padAngle <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8053" class="blob-num js-line-number" data-line-number="8053"></td>
        <td id="LC8053" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L8054" class="blob-num js-line-number" data-line-number="8054"></td>
        <td id="LC8054" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8055" class="blob-num js-line-number" data-line-number="8055"></td>
        <td id="LC8055" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">arc</span>.<span class="pl-en">centroid</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8056" class="blob-num js-line-number" data-line-number="8056"></td>
        <td id="LC8056" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> r <span class="pl-k">=</span> (<span class="pl-k">+</span>innerRadius.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">+</span> <span class="pl-k">+</span>outerRadius.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments)) / <span class="pl-c1">2</span>, a <span class="pl-k">=</span> (<span class="pl-k">+</span>startAngle.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments) <span class="pl-k">+</span> <span class="pl-k">+</span>endAngle.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments)) / <span class="pl-c1">2</span> <span class="pl-k">-</span> halfÏ;</td>
      </tr>
      <tr>
        <td id="L8057" class="blob-num js-line-number" data-line-number="8057"></td>
        <td id="LC8057" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a) <span class="pl-k">*</span> r, <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a) <span class="pl-k">*</span> r ];</td>
      </tr>
      <tr>
        <td id="L8058" class="blob-num js-line-number" data-line-number="8058"></td>
        <td id="LC8058" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8059" class="blob-num js-line-number" data-line-number="8059"></td>
        <td id="LC8059" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> arc;</td>
      </tr>
      <tr>
        <td id="L8060" class="blob-num js-line-number" data-line-number="8060"></td>
        <td id="LC8060" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8061" class="blob-num js-line-number" data-line-number="8061"></td>
        <td id="LC8061" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_svg_arcAuto <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8062" class="blob-num js-line-number" data-line-number="8062"></td>
        <td id="LC8062" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_arcInnerRadius</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L8063" class="blob-num js-line-number" data-line-number="8063"></td>
        <td id="LC8063" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.innerRadius;</td>
      </tr>
      <tr>
        <td id="L8064" class="blob-num js-line-number" data-line-number="8064"></td>
        <td id="LC8064" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8065" class="blob-num js-line-number" data-line-number="8065"></td>
        <td id="LC8065" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_arcOuterRadius</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L8066" class="blob-num js-line-number" data-line-number="8066"></td>
        <td id="LC8066" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.outerRadius;</td>
      </tr>
      <tr>
        <td id="L8067" class="blob-num js-line-number" data-line-number="8067"></td>
        <td id="LC8067" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8068" class="blob-num js-line-number" data-line-number="8068"></td>
        <td id="LC8068" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_arcStartAngle</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L8069" class="blob-num js-line-number" data-line-number="8069"></td>
        <td id="LC8069" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.startAngle;</td>
      </tr>
      <tr>
        <td id="L8070" class="blob-num js-line-number" data-line-number="8070"></td>
        <td id="LC8070" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8071" class="blob-num js-line-number" data-line-number="8071"></td>
        <td id="LC8071" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_arcEndAngle</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L8072" class="blob-num js-line-number" data-line-number="8072"></td>
        <td id="LC8072" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.endAngle;</td>
      </tr>
      <tr>
        <td id="L8073" class="blob-num js-line-number" data-line-number="8073"></td>
        <td id="LC8073" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8074" class="blob-num js-line-number" data-line-number="8074"></td>
        <td id="LC8074" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_arcPadAngle</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L8075" class="blob-num js-line-number" data-line-number="8075"></td>
        <td id="LC8075" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d <span class="pl-k">&amp;&amp;</span> d.padAngle;</td>
      </tr>
      <tr>
        <td id="L8076" class="blob-num js-line-number" data-line-number="8076"></td>
        <td id="LC8076" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8077" class="blob-num js-line-number" data-line-number="8077"></td>
        <td id="LC8077" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_arcSweep</span>(<span class="pl-smi">x0</span>, <span class="pl-smi">y0</span>, <span class="pl-smi">x1</span>, <span class="pl-smi">y1</span>) {</td>
      </tr>
      <tr>
        <td id="L8078" class="blob-num js-line-number" data-line-number="8078"></td>
        <td id="LC8078" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (x0 <span class="pl-k">-</span> x1) <span class="pl-k">*</span> y0 <span class="pl-k">-</span> (y0 <span class="pl-k">-</span> y1) <span class="pl-k">*</span> x0 <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8079" class="blob-num js-line-number" data-line-number="8079"></td>
        <td id="LC8079" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8080" class="blob-num js-line-number" data-line-number="8080"></td>
        <td id="LC8080" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_arcCornerTangents</span>(<span class="pl-smi">p0</span>, <span class="pl-smi">p1</span>, <span class="pl-smi">r1</span>, <span class="pl-smi">rc</span>, <span class="pl-smi">cw</span>) {</td>
      </tr>
      <tr>
        <td id="L8081" class="blob-num js-line-number" data-line-number="8081"></td>
        <td id="LC8081" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x01 <span class="pl-k">=</span> p0[<span class="pl-c1">0</span>] <span class="pl-k">-</span> p1[<span class="pl-c1">0</span>], y01 <span class="pl-k">=</span> p0[<span class="pl-c1">1</span>] <span class="pl-k">-</span> p1[<span class="pl-c1">1</span>], lo <span class="pl-k">=</span> (cw <span class="pl-k">?</span> rc <span class="pl-k">:</span> <span class="pl-k">-</span>rc) / <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(x01 <span class="pl-k">*</span> x01 <span class="pl-k">+</span> y01 <span class="pl-k">*</span> y01), ox <span class="pl-k">=</span> lo <span class="pl-k">*</span> y01, oy <span class="pl-k">=</span> <span class="pl-k">-</span>lo <span class="pl-k">*</span> x01, x1 <span class="pl-k">=</span> p0[<span class="pl-c1">0</span>] <span class="pl-k">+</span> ox, y1 <span class="pl-k">=</span> p0[<span class="pl-c1">1</span>] <span class="pl-k">+</span> oy, x2 <span class="pl-k">=</span> p1[<span class="pl-c1">0</span>] <span class="pl-k">+</span> ox, y2 <span class="pl-k">=</span> p1[<span class="pl-c1">1</span>] <span class="pl-k">+</span> oy, x3 <span class="pl-k">=</span> (x1 <span class="pl-k">+</span> x2) / <span class="pl-c1">2</span>, y3 <span class="pl-k">=</span> (y1 <span class="pl-k">+</span> y2) / <span class="pl-c1">2</span>, dx <span class="pl-k">=</span> x2 <span class="pl-k">-</span> x1, dy <span class="pl-k">=</span> y2 <span class="pl-k">-</span> y1, d2 <span class="pl-k">=</span> dx <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> dy, r <span class="pl-k">=</span> r1 <span class="pl-k">-</span> rc, D <span class="pl-k">=</span> x1 <span class="pl-k">*</span> y2 <span class="pl-k">-</span> x2 <span class="pl-k">*</span> y1, d <span class="pl-k">=</span> (dy <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(r <span class="pl-k">*</span> r <span class="pl-k">*</span> d2 <span class="pl-k">-</span> D <span class="pl-k">*</span> D), cx0 <span class="pl-k">=</span> (D <span class="pl-k">*</span> dy <span class="pl-k">-</span> dx <span class="pl-k">*</span> d) / d2, cy0 <span class="pl-k">=</span> (<span class="pl-k">-</span>D <span class="pl-k">*</span> dx <span class="pl-k">-</span> dy <span class="pl-k">*</span> d) / d2, cx1 <span class="pl-k">=</span> (D <span class="pl-k">*</span> dy <span class="pl-k">+</span> dx <span class="pl-k">*</span> d) / d2, cy1 <span class="pl-k">=</span> (<span class="pl-k">-</span>D <span class="pl-k">*</span> dx <span class="pl-k">+</span> dy <span class="pl-k">*</span> d) / d2, dx0 <span class="pl-k">=</span> cx0 <span class="pl-k">-</span> x3, dy0 <span class="pl-k">=</span> cy0 <span class="pl-k">-</span> y3, dx1 <span class="pl-k">=</span> cx1 <span class="pl-k">-</span> x3, dy1 <span class="pl-k">=</span> cy1 <span class="pl-k">-</span> y3;</td>
      </tr>
      <tr>
        <td id="L8082" class="blob-num js-line-number" data-line-number="8082"></td>
        <td id="LC8082" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (dx0 <span class="pl-k">*</span> dx0 <span class="pl-k">+</span> dy0 <span class="pl-k">*</span> dy0 <span class="pl-k">&gt;</span> dx1 <span class="pl-k">*</span> dx1 <span class="pl-k">+</span> dy1 <span class="pl-k">*</span> dy1) cx0 <span class="pl-k">=</span> cx1, cy0 <span class="pl-k">=</span> cy1;</td>
      </tr>
      <tr>
        <td id="L8083" class="blob-num js-line-number" data-line-number="8083"></td>
        <td id="LC8083" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ [ cx0 <span class="pl-k">-</span> ox, cy0 <span class="pl-k">-</span> oy ], [ cx0 <span class="pl-k">*</span> r1 / r, cy0 <span class="pl-k">*</span> r1 / r ] ];</td>
      </tr>
      <tr>
        <td id="L8084" class="blob-num js-line-number" data-line-number="8084"></td>
        <td id="LC8084" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8085" class="blob-num js-line-number" data-line-number="8085"></td>
        <td id="LC8085" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_line</span>(<span class="pl-smi">projection</span>) {</td>
      </tr>
      <tr>
        <td id="L8086" class="blob-num js-line-number" data-line-number="8086"></td>
        <td id="LC8086" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x <span class="pl-k">=</span> d3_geom_pointX, y <span class="pl-k">=</span> d3_geom_pointY, defined <span class="pl-k">=</span> d3_true, interpolate <span class="pl-k">=</span> d3_svg_lineLinear, interpolateKey <span class="pl-k">=</span> interpolate.key, tension <span class="pl-k">=</span> .<span class="pl-c1">7</span>;</td>
      </tr>
      <tr>
        <td id="L8087" class="blob-num js-line-number" data-line-number="8087"></td>
        <td id="LC8087" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">line</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L8088" class="blob-num js-line-number" data-line-number="8088"></td>
        <td id="LC8088" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> segments <span class="pl-k">=</span> [], points <span class="pl-k">=</span> [], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>, d, fx <span class="pl-k">=</span> d3_functor(x), fy <span class="pl-k">=</span> d3_functor(y);</td>
      </tr>
      <tr>
        <td id="L8089" class="blob-num js-line-number" data-line-number="8089"></td>
        <td id="LC8089" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">segment</span>() {</td>
      </tr>
      <tr>
        <td id="L8090" class="blob-num js-line-number" data-line-number="8090"></td>
        <td id="LC8090" class="blob-code blob-code-inner js-file-line">        segments.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, interpolate(projection(points), tension));</td>
      </tr>
      <tr>
        <td id="L8091" class="blob-num js-line-number" data-line-number="8091"></td>
        <td id="LC8091" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8092" class="blob-num js-line-number" data-line-number="8092"></td>
        <td id="LC8092" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L8093" class="blob-num js-line-number" data-line-number="8093"></td>
        <td id="LC8093" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (defined.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d <span class="pl-k">=</span> data[i], i)) {</td>
      </tr>
      <tr>
        <td id="L8094" class="blob-num js-line-number" data-line-number="8094"></td>
        <td id="LC8094" class="blob-code blob-code-inner js-file-line">          points.<span class="pl-c1">push</span>([ <span class="pl-k">+</span>fx.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i), <span class="pl-k">+</span>fy.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i) ]);</td>
      </tr>
      <tr>
        <td id="L8095" class="blob-num js-line-number" data-line-number="8095"></td>
        <td id="LC8095" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (points.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L8096" class="blob-num js-line-number" data-line-number="8096"></td>
        <td id="LC8096" class="blob-code blob-code-inner js-file-line">          segment();</td>
      </tr>
      <tr>
        <td id="L8097" class="blob-num js-line-number" data-line-number="8097"></td>
        <td id="LC8097" class="blob-code blob-code-inner js-file-line">          points <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8098" class="blob-num js-line-number" data-line-number="8098"></td>
        <td id="LC8098" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8099" class="blob-num js-line-number" data-line-number="8099"></td>
        <td id="LC8099" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8100" class="blob-num js-line-number" data-line-number="8100"></td>
        <td id="LC8100" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (points.<span class="pl-c1">length</span>) segment();</td>
      </tr>
      <tr>
        <td id="L8101" class="blob-num js-line-number" data-line-number="8101"></td>
        <td id="LC8101" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> segments.<span class="pl-c1">length</span> <span class="pl-k">?</span> segments.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L8102" class="blob-num js-line-number" data-line-number="8102"></td>
        <td id="LC8102" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8103" class="blob-num js-line-number" data-line-number="8103"></td>
        <td id="LC8103" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">line</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8104" class="blob-num js-line-number" data-line-number="8104"></td>
        <td id="LC8104" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x;</td>
      </tr>
      <tr>
        <td id="L8105" class="blob-num js-line-number" data-line-number="8105"></td>
        <td id="LC8105" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8106" class="blob-num js-line-number" data-line-number="8106"></td>
        <td id="LC8106" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L8107" class="blob-num js-line-number" data-line-number="8107"></td>
        <td id="LC8107" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8108" class="blob-num js-line-number" data-line-number="8108"></td>
        <td id="LC8108" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">line</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8109" class="blob-num js-line-number" data-line-number="8109"></td>
        <td id="LC8109" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> y;</td>
      </tr>
      <tr>
        <td id="L8110" class="blob-num js-line-number" data-line-number="8110"></td>
        <td id="LC8110" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8111" class="blob-num js-line-number" data-line-number="8111"></td>
        <td id="LC8111" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L8112" class="blob-num js-line-number" data-line-number="8112"></td>
        <td id="LC8112" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8113" class="blob-num js-line-number" data-line-number="8113"></td>
        <td id="LC8113" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">line</span>.<span class="pl-en">defined</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8114" class="blob-num js-line-number" data-line-number="8114"></td>
        <td id="LC8114" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> defined;</td>
      </tr>
      <tr>
        <td id="L8115" class="blob-num js-line-number" data-line-number="8115"></td>
        <td id="LC8115" class="blob-code blob-code-inner js-file-line">      defined <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8116" class="blob-num js-line-number" data-line-number="8116"></td>
        <td id="LC8116" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L8117" class="blob-num js-line-number" data-line-number="8117"></td>
        <td id="LC8117" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8118" class="blob-num js-line-number" data-line-number="8118"></td>
        <td id="LC8118" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">line</span>.<span class="pl-en">interpolate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8119" class="blob-num js-line-number" data-line-number="8119"></td>
        <td id="LC8119" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> interpolateKey;</td>
      </tr>
      <tr>
        <td id="L8120" class="blob-num js-line-number" data-line-number="8120"></td>
        <td id="LC8120" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> _ <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) interpolateKey <span class="pl-k">=</span> interpolate <span class="pl-k">=</span> _; <span class="pl-k">else</span> interpolateKey <span class="pl-k">=</span> (interpolate <span class="pl-k">=</span> d3_svg_lineInterpolators.get(_) <span class="pl-k">||</span> d3_svg_lineLinear).key;</td>
      </tr>
      <tr>
        <td id="L8121" class="blob-num js-line-number" data-line-number="8121"></td>
        <td id="LC8121" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L8122" class="blob-num js-line-number" data-line-number="8122"></td>
        <td id="LC8122" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8123" class="blob-num js-line-number" data-line-number="8123"></td>
        <td id="LC8123" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">line</span>.<span class="pl-en">tension</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8124" class="blob-num js-line-number" data-line-number="8124"></td>
        <td id="LC8124" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> tension;</td>
      </tr>
      <tr>
        <td id="L8125" class="blob-num js-line-number" data-line-number="8125"></td>
        <td id="LC8125" class="blob-code blob-code-inner js-file-line">      tension <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8126" class="blob-num js-line-number" data-line-number="8126"></td>
        <td id="LC8126" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L8127" class="blob-num js-line-number" data-line-number="8127"></td>
        <td id="LC8127" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8128" class="blob-num js-line-number" data-line-number="8128"></td>
        <td id="LC8128" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L8129" class="blob-num js-line-number" data-line-number="8129"></td>
        <td id="LC8129" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8130" class="blob-num js-line-number" data-line-number="8130"></td>
        <td id="LC8130" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg</span>.<span class="pl-en">line</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8131" class="blob-num js-line-number" data-line-number="8131"></td>
        <td id="LC8131" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_svg_line(d3_identity);</td>
      </tr>
      <tr>
        <td id="L8132" class="blob-num js-line-number" data-line-number="8132"></td>
        <td id="LC8132" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8133" class="blob-num js-line-number" data-line-number="8133"></td>
        <td id="LC8133" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_svg_lineInterpolators <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L8134" class="blob-num js-line-number" data-line-number="8134"></td>
        <td id="LC8134" class="blob-code blob-code-inner js-file-line">    linear<span class="pl-k">:</span> d3_svg_lineLinear,</td>
      </tr>
      <tr>
        <td id="L8135" class="blob-num js-line-number" data-line-number="8135"></td>
        <td id="LC8135" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>linear-closed<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineLinearClosed,</td>
      </tr>
      <tr>
        <td id="L8136" class="blob-num js-line-number" data-line-number="8136"></td>
        <td id="LC8136" class="blob-code blob-code-inner js-file-line">    step<span class="pl-k">:</span> d3_svg_lineStep,</td>
      </tr>
      <tr>
        <td id="L8137" class="blob-num js-line-number" data-line-number="8137"></td>
        <td id="LC8137" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>step-before<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineStepBefore,</td>
      </tr>
      <tr>
        <td id="L8138" class="blob-num js-line-number" data-line-number="8138"></td>
        <td id="LC8138" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>step-after<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineStepAfter,</td>
      </tr>
      <tr>
        <td id="L8139" class="blob-num js-line-number" data-line-number="8139"></td>
        <td id="LC8139" class="blob-code blob-code-inner js-file-line">    basis<span class="pl-k">:</span> d3_svg_lineBasis,</td>
      </tr>
      <tr>
        <td id="L8140" class="blob-num js-line-number" data-line-number="8140"></td>
        <td id="LC8140" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>basis-open<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineBasisOpen,</td>
      </tr>
      <tr>
        <td id="L8141" class="blob-num js-line-number" data-line-number="8141"></td>
        <td id="LC8141" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>basis-closed<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineBasisClosed,</td>
      </tr>
      <tr>
        <td id="L8142" class="blob-num js-line-number" data-line-number="8142"></td>
        <td id="LC8142" class="blob-code blob-code-inner js-file-line">    bundle<span class="pl-k">:</span> d3_svg_lineBundle,</td>
      </tr>
      <tr>
        <td id="L8143" class="blob-num js-line-number" data-line-number="8143"></td>
        <td id="LC8143" class="blob-code blob-code-inner js-file-line">    cardinal<span class="pl-k">:</span> d3_svg_lineCardinal,</td>
      </tr>
      <tr>
        <td id="L8144" class="blob-num js-line-number" data-line-number="8144"></td>
        <td id="LC8144" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>cardinal-open<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineCardinalOpen,</td>
      </tr>
      <tr>
        <td id="L8145" class="blob-num js-line-number" data-line-number="8145"></td>
        <td id="LC8145" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>cardinal-closed<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> d3_svg_lineCardinalClosed,</td>
      </tr>
      <tr>
        <td id="L8146" class="blob-num js-line-number" data-line-number="8146"></td>
        <td id="LC8146" class="blob-code blob-code-inner js-file-line">    monotone<span class="pl-k">:</span> d3_svg_lineMonotone</td>
      </tr>
      <tr>
        <td id="L8147" class="blob-num js-line-number" data-line-number="8147"></td>
        <td id="LC8147" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L8148" class="blob-num js-line-number" data-line-number="8148"></td>
        <td id="LC8148" class="blob-code blob-code-inner js-file-line">  d3_svg_lineInterpolators.forEach(<span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8149" class="blob-num js-line-number" data-line-number="8149"></td>
        <td id="LC8149" class="blob-code blob-code-inner js-file-line">    value.key <span class="pl-k">=</span> key;</td>
      </tr>
      <tr>
        <td id="L8150" class="blob-num js-line-number" data-line-number="8150"></td>
        <td id="LC8150" class="blob-code blob-code-inner js-file-line">    value.<span class="pl-c1">closed</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>-closed<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(key);</td>
      </tr>
      <tr>
        <td id="L8151" class="blob-num js-line-number" data-line-number="8151"></td>
        <td id="LC8151" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L8152" class="blob-num js-line-number" data-line-number="8152"></td>
        <td id="LC8152" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineLinear</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8153" class="blob-num js-line-number" data-line-number="8153"></td>
        <td id="LC8153" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> points.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8154" class="blob-num js-line-number" data-line-number="8154"></td>
        <td id="LC8154" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8155" class="blob-num js-line-number" data-line-number="8155"></td>
        <td id="LC8155" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineLinearClosed</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8156" class="blob-num js-line-number" data-line-number="8156"></td>
        <td id="LC8156" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_svg_lineLinear(points) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8157" class="blob-num js-line-number" data-line-number="8157"></td>
        <td id="LC8157" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8158" class="blob-num js-line-number" data-line-number="8158"></td>
        <td id="LC8158" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineStep</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8159" class="blob-num js-line-number" data-line-number="8159"></td>
        <td id="LC8159" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>, p <span class="pl-k">=</span> points[<span class="pl-c1">0</span>], path <span class="pl-k">=</span> [ p[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L8160" class="blob-num js-line-number" data-line-number="8160"></td>
        <td id="LC8160" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>, (p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> (p <span class="pl-k">=</span> points[i])[<span class="pl-c1">0</span>]) / <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8161" class="blob-num js-line-number" data-line-number="8161"></td>
        <td id="LC8161" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (n <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8162" class="blob-num js-line-number" data-line-number="8162"></td>
        <td id="LC8162" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8163" class="blob-num js-line-number" data-line-number="8163"></td>
        <td id="LC8163" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8164" class="blob-num js-line-number" data-line-number="8164"></td>
        <td id="LC8164" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineStepBefore</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8165" class="blob-num js-line-number" data-line-number="8165"></td>
        <td id="LC8165" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>, p <span class="pl-k">=</span> points[<span class="pl-c1">0</span>], path <span class="pl-k">=</span> [ p[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L8166" class="blob-num js-line-number" data-line-number="8166"></td>
        <td id="LC8166" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span>, (p <span class="pl-k">=</span> points[i])[<span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8167" class="blob-num js-line-number" data-line-number="8167"></td>
        <td id="LC8167" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8168" class="blob-num js-line-number" data-line-number="8168"></td>
        <td id="LC8168" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8169" class="blob-num js-line-number" data-line-number="8169"></td>
        <td id="LC8169" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineStepAfter</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8170" class="blob-num js-line-number" data-line-number="8170"></td>
        <td id="LC8170" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>, p <span class="pl-k">=</span> points[<span class="pl-c1">0</span>], path <span class="pl-k">=</span> [ p[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L8171" class="blob-num js-line-number" data-line-number="8171"></td>
        <td id="LC8171" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>, (p <span class="pl-k">=</span> points[i])[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span>, p[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8172" class="blob-num js-line-number" data-line-number="8172"></td>
        <td id="LC8172" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8173" class="blob-num js-line-number" data-line-number="8173"></td>
        <td id="LC8173" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8174" class="blob-num js-line-number" data-line-number="8174"></td>
        <td id="LC8174" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineCardinalOpen</span>(<span class="pl-smi">points</span>, <span class="pl-smi">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L8175" class="blob-num js-line-number" data-line-number="8175"></td>
        <td id="LC8175" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> points.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span> <span class="pl-k">?</span> d3_svg_lineLinear(points) <span class="pl-k">:</span> points[<span class="pl-c1">1</span>] <span class="pl-k">+</span> d3_svg_lineHermite(points.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>), d3_svg_lineCardinalTangents(points, tension));</td>
      </tr>
      <tr>
        <td id="L8176" class="blob-num js-line-number" data-line-number="8176"></td>
        <td id="LC8176" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8177" class="blob-num js-line-number" data-line-number="8177"></td>
        <td id="LC8177" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineCardinalClosed</span>(<span class="pl-smi">points</span>, <span class="pl-smi">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L8178" class="blob-num js-line-number" data-line-number="8178"></td>
        <td id="LC8178" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> points.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span> <span class="pl-k">?</span> d3_svg_lineLinear(points) <span class="pl-k">:</span> points[<span class="pl-c1">0</span>] <span class="pl-k">+</span> d3_svg_lineHermite((points.<span class="pl-c1">push</span>(points[<span class="pl-c1">0</span>]), </td>
      </tr>
      <tr>
        <td id="L8179" class="blob-num js-line-number" data-line-number="8179"></td>
        <td id="LC8179" class="blob-code blob-code-inner js-file-line">    points), d3_svg_lineCardinalTangents([ points[points.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">2</span>] ].<span class="pl-c1">concat</span>(points, [ points[<span class="pl-c1">1</span>] ]), tension));</td>
      </tr>
      <tr>
        <td id="L8180" class="blob-num js-line-number" data-line-number="8180"></td>
        <td id="LC8180" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8181" class="blob-num js-line-number" data-line-number="8181"></td>
        <td id="LC8181" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineCardinal</span>(<span class="pl-smi">points</span>, <span class="pl-smi">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L8182" class="blob-num js-line-number" data-line-number="8182"></td>
        <td id="LC8182" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> points.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span> <span class="pl-k">?</span> d3_svg_lineLinear(points) <span class="pl-k">:</span> points[<span class="pl-c1">0</span>] <span class="pl-k">+</span> d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));</td>
      </tr>
      <tr>
        <td id="L8183" class="blob-num js-line-number" data-line-number="8183"></td>
        <td id="LC8183" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8184" class="blob-num js-line-number" data-line-number="8184"></td>
        <td id="LC8184" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineHermite</span>(<span class="pl-smi">points</span>, <span class="pl-smi">tangents</span>) {</td>
      </tr>
      <tr>
        <td id="L8185" class="blob-num js-line-number" data-line-number="8185"></td>
        <td id="LC8185" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (tangents.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> <span class="pl-k">||</span> points.<span class="pl-c1">length</span> <span class="pl-k">!=</span> tangents.<span class="pl-c1">length</span> <span class="pl-k">&amp;&amp;</span> points.<span class="pl-c1">length</span> <span class="pl-k">!=</span> tangents.<span class="pl-c1">length</span> <span class="pl-k">+</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L8186" class="blob-num js-line-number" data-line-number="8186"></td>
        <td id="LC8186" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_svg_lineLinear(points);</td>
      </tr>
      <tr>
        <td id="L8187" class="blob-num js-line-number" data-line-number="8187"></td>
        <td id="LC8187" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8188" class="blob-num js-line-number" data-line-number="8188"></td>
        <td id="LC8188" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> quad <span class="pl-k">=</span> points.<span class="pl-c1">length</span> <span class="pl-k">!=</span> tangents.<span class="pl-c1">length</span>, path <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, p0 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>], p <span class="pl-k">=</span> points[<span class="pl-c1">1</span>], t0 <span class="pl-k">=</span> tangents[<span class="pl-c1">0</span>], t <span class="pl-k">=</span> t0, pi <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8189" class="blob-num js-line-number" data-line-number="8189"></td>
        <td id="LC8189" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (quad) {</td>
      </tr>
      <tr>
        <td id="L8190" class="blob-num js-line-number" data-line-number="8190"></td>
        <td id="LC8190" class="blob-code blob-code-inner js-file-line">      path <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Q<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> t0[<span class="pl-c1">0</span>] <span class="pl-k">*</span> <span class="pl-c1">2</span> / <span class="pl-c1">3</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> t0[<span class="pl-c1">1</span>] <span class="pl-k">*</span> <span class="pl-c1">2</span> / <span class="pl-c1">3</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L8191" class="blob-num js-line-number" data-line-number="8191"></td>
        <td id="LC8191" class="blob-code blob-code-inner js-file-line">      p0 <span class="pl-k">=</span> points[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L8192" class="blob-num js-line-number" data-line-number="8192"></td>
        <td id="LC8192" class="blob-code blob-code-inner js-file-line">      pi <span class="pl-k">=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L8193" class="blob-num js-line-number" data-line-number="8193"></td>
        <td id="LC8193" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8194" class="blob-num js-line-number" data-line-number="8194"></td>
        <td id="LC8194" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (tangents.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L8195" class="blob-num js-line-number" data-line-number="8195"></td>
        <td id="LC8195" class="blob-code blob-code-inner js-file-line">      t <span class="pl-k">=</span> tangents[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L8196" class="blob-num js-line-number" data-line-number="8196"></td>
        <td id="LC8196" class="blob-code blob-code-inner js-file-line">      p <span class="pl-k">=</span> points[pi];</td>
      </tr>
      <tr>
        <td id="L8197" class="blob-num js-line-number" data-line-number="8197"></td>
        <td id="LC8197" class="blob-code blob-code-inner js-file-line">      pi<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L8198" class="blob-num js-line-number" data-line-number="8198"></td>
        <td id="LC8198" class="blob-code blob-code-inner js-file-line">      path <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p0[<span class="pl-c1">0</span>] <span class="pl-k">+</span> t0[<span class="pl-c1">0</span>]) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p0[<span class="pl-c1">1</span>] <span class="pl-k">+</span> t0[<span class="pl-c1">1</span>]) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> t[<span class="pl-c1">0</span>]) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> t[<span class="pl-c1">1</span>]) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L8199" class="blob-num js-line-number" data-line-number="8199"></td>
        <td id="LC8199" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">2</span>; i <span class="pl-k">&lt;</span> tangents.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>, pi<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8200" class="blob-num js-line-number" data-line-number="8200"></td>
        <td id="LC8200" class="blob-code blob-code-inner js-file-line">        p <span class="pl-k">=</span> points[pi];</td>
      </tr>
      <tr>
        <td id="L8201" class="blob-num js-line-number" data-line-number="8201"></td>
        <td id="LC8201" class="blob-code blob-code-inner js-file-line">        t <span class="pl-k">=</span> tangents[i];</td>
      </tr>
      <tr>
        <td id="L8202" class="blob-num js-line-number" data-line-number="8202"></td>
        <td id="LC8202" class="blob-code blob-code-inner js-file-line">        path <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>S<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">-</span> t[<span class="pl-c1">0</span>]) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> t[<span class="pl-c1">1</span>]) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L8203" class="blob-num js-line-number" data-line-number="8203"></td>
        <td id="LC8203" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8204" class="blob-num js-line-number" data-line-number="8204"></td>
        <td id="LC8204" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8205" class="blob-num js-line-number" data-line-number="8205"></td>
        <td id="LC8205" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (quad) {</td>
      </tr>
      <tr>
        <td id="L8206" class="blob-num js-line-number" data-line-number="8206"></td>
        <td id="LC8206" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> lp <span class="pl-k">=</span> points[pi];</td>
      </tr>
      <tr>
        <td id="L8207" class="blob-num js-line-number" data-line-number="8207"></td>
        <td id="LC8207" class="blob-code blob-code-inner js-file-line">      path <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Q<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> t[<span class="pl-c1">0</span>] <span class="pl-k">*</span> <span class="pl-c1">2</span> / <span class="pl-c1">3</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (p[<span class="pl-c1">1</span>] <span class="pl-k">+</span> t[<span class="pl-c1">1</span>] <span class="pl-k">*</span> <span class="pl-c1">2</span> / <span class="pl-c1">3</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> lp[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> lp[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L8208" class="blob-num js-line-number" data-line-number="8208"></td>
        <td id="LC8208" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8209" class="blob-num js-line-number" data-line-number="8209"></td>
        <td id="LC8209" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path;</td>
      </tr>
      <tr>
        <td id="L8210" class="blob-num js-line-number" data-line-number="8210"></td>
        <td id="LC8210" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8211" class="blob-num js-line-number" data-line-number="8211"></td>
        <td id="LC8211" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineCardinalTangents</span>(<span class="pl-smi">points</span>, <span class="pl-smi">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L8212" class="blob-num js-line-number" data-line-number="8212"></td>
        <td id="LC8212" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> tangents <span class="pl-k">=</span> [], a <span class="pl-k">=</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> tension) / <span class="pl-c1">2</span>, p0, p1 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>], p2 <span class="pl-k">=</span> points[<span class="pl-c1">1</span>], i <span class="pl-k">=</span> <span class="pl-c1">1</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L8213" class="blob-num js-line-number" data-line-number="8213"></td>
        <td id="LC8213" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L8214" class="blob-num js-line-number" data-line-number="8214"></td>
        <td id="LC8214" class="blob-code blob-code-inner js-file-line">      p0 <span class="pl-k">=</span> p1;</td>
      </tr>
      <tr>
        <td id="L8215" class="blob-num js-line-number" data-line-number="8215"></td>
        <td id="LC8215" class="blob-code blob-code-inner js-file-line">      p1 <span class="pl-k">=</span> p2;</td>
      </tr>
      <tr>
        <td id="L8216" class="blob-num js-line-number" data-line-number="8216"></td>
        <td id="LC8216" class="blob-code blob-code-inner js-file-line">      p2 <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L8217" class="blob-num js-line-number" data-line-number="8217"></td>
        <td id="LC8217" class="blob-code blob-code-inner js-file-line">      tangents.<span class="pl-c1">push</span>([ a <span class="pl-k">*</span> (p2[<span class="pl-c1">0</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">0</span>]), a <span class="pl-k">*</span> (p2[<span class="pl-c1">1</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">1</span>]) ]);</td>
      </tr>
      <tr>
        <td id="L8218" class="blob-num js-line-number" data-line-number="8218"></td>
        <td id="LC8218" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8219" class="blob-num js-line-number" data-line-number="8219"></td>
        <td id="LC8219" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> tangents;</td>
      </tr>
      <tr>
        <td id="L8220" class="blob-num js-line-number" data-line-number="8220"></td>
        <td id="LC8220" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8221" class="blob-num js-line-number" data-line-number="8221"></td>
        <td id="LC8221" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineBasis</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8222" class="blob-num js-line-number" data-line-number="8222"></td>
        <td id="LC8222" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (points.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) <span class="pl-k">return</span> d3_svg_lineLinear(points);</td>
      </tr>
      <tr>
        <td id="L8223" class="blob-num js-line-number" data-line-number="8223"></td>
        <td id="LC8223" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>, pi <span class="pl-k">=</span> points[<span class="pl-c1">0</span>], x0 <span class="pl-k">=</span> pi[<span class="pl-c1">0</span>], y0 <span class="pl-k">=</span> pi[<span class="pl-c1">1</span>], px <span class="pl-k">=</span> [ x0, x0, x0, (pi <span class="pl-k">=</span> points[<span class="pl-c1">1</span>])[<span class="pl-c1">0</span>] ], py <span class="pl-k">=</span> [ y0, y0, y0, pi[<span class="pl-c1">1</span>] ], path <span class="pl-k">=</span> [ x0, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, y0, <span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];</td>
      </tr>
      <tr>
        <td id="L8224" class="blob-num js-line-number" data-line-number="8224"></td>
        <td id="LC8224" class="blob-code blob-code-inner js-file-line">    points.<span class="pl-c1">push</span>(points[n <span class="pl-k">-</span> <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8225" class="blob-num js-line-number" data-line-number="8225"></td>
        <td id="LC8225" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;=</span> n) {</td>
      </tr>
      <tr>
        <td id="L8226" class="blob-num js-line-number" data-line-number="8226"></td>
        <td id="LC8226" class="blob-code blob-code-inner js-file-line">      pi <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L8227" class="blob-num js-line-number" data-line-number="8227"></td>
        <td id="LC8227" class="blob-code blob-code-inner js-file-line">      px.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L8228" class="blob-num js-line-number" data-line-number="8228"></td>
        <td id="LC8228" class="blob-code blob-code-inner js-file-line">      px.<span class="pl-c1">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8229" class="blob-num js-line-number" data-line-number="8229"></td>
        <td id="LC8229" class="blob-code blob-code-inner js-file-line">      py.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L8230" class="blob-num js-line-number" data-line-number="8230"></td>
        <td id="LC8230" class="blob-code blob-code-inner js-file-line">      py.<span class="pl-c1">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8231" class="blob-num js-line-number" data-line-number="8231"></td>
        <td id="LC8231" class="blob-code blob-code-inner js-file-line">      d3_svg_lineBasisBezier(path, px, py);</td>
      </tr>
      <tr>
        <td id="L8232" class="blob-num js-line-number" data-line-number="8232"></td>
        <td id="LC8232" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8233" class="blob-num js-line-number" data-line-number="8233"></td>
        <td id="LC8233" class="blob-code blob-code-inner js-file-line">    points.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L8234" class="blob-num js-line-number" data-line-number="8234"></td>
        <td id="LC8234" class="blob-code blob-code-inner js-file-line">    path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, pi);</td>
      </tr>
      <tr>
        <td id="L8235" class="blob-num js-line-number" data-line-number="8235"></td>
        <td id="LC8235" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8236" class="blob-num js-line-number" data-line-number="8236"></td>
        <td id="LC8236" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8237" class="blob-num js-line-number" data-line-number="8237"></td>
        <td id="LC8237" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineBasisOpen</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8238" class="blob-num js-line-number" data-line-number="8238"></td>
        <td id="LC8238" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (points.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>) <span class="pl-k">return</span> d3_svg_lineLinear(points);</td>
      </tr>
      <tr>
        <td id="L8239" class="blob-num js-line-number" data-line-number="8239"></td>
        <td id="LC8239" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> path <span class="pl-k">=</span> [], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>, pi, px <span class="pl-k">=</span> [ <span class="pl-c1">0</span> ], py <span class="pl-k">=</span> [ <span class="pl-c1">0</span> ];</td>
      </tr>
      <tr>
        <td id="L8240" class="blob-num js-line-number" data-line-number="8240"></td>
        <td id="LC8240" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L8241" class="blob-num js-line-number" data-line-number="8241"></td>
        <td id="LC8241" class="blob-code blob-code-inner js-file-line">      pi <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L8242" class="blob-num js-line-number" data-line-number="8242"></td>
        <td id="LC8242" class="blob-code blob-code-inner js-file-line">      px.<span class="pl-c1">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8243" class="blob-num js-line-number" data-line-number="8243"></td>
        <td id="LC8243" class="blob-code blob-code-inner js-file-line">      py.<span class="pl-c1">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8244" class="blob-num js-line-number" data-line-number="8244"></td>
        <td id="LC8244" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8245" class="blob-num js-line-number" data-line-number="8245"></td>
        <td id="LC8245" class="blob-code blob-code-inner js-file-line">    path.<span class="pl-c1">push</span>(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));</td>
      </tr>
      <tr>
        <td id="L8246" class="blob-num js-line-number" data-line-number="8246"></td>
        <td id="LC8246" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">--</span>i;</td>
      </tr>
      <tr>
        <td id="L8247" class="blob-num js-line-number" data-line-number="8247"></td>
        <td id="LC8247" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L8248" class="blob-num js-line-number" data-line-number="8248"></td>
        <td id="LC8248" class="blob-code blob-code-inner js-file-line">      pi <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L8249" class="blob-num js-line-number" data-line-number="8249"></td>
        <td id="LC8249" class="blob-code blob-code-inner js-file-line">      px.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L8250" class="blob-num js-line-number" data-line-number="8250"></td>
        <td id="LC8250" class="blob-code blob-code-inner js-file-line">      px.<span class="pl-c1">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8251" class="blob-num js-line-number" data-line-number="8251"></td>
        <td id="LC8251" class="blob-code blob-code-inner js-file-line">      py.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L8252" class="blob-num js-line-number" data-line-number="8252"></td>
        <td id="LC8252" class="blob-code blob-code-inner js-file-line">      py.<span class="pl-c1">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8253" class="blob-num js-line-number" data-line-number="8253"></td>
        <td id="LC8253" class="blob-code blob-code-inner js-file-line">      d3_svg_lineBasisBezier(path, px, py);</td>
      </tr>
      <tr>
        <td id="L8254" class="blob-num js-line-number" data-line-number="8254"></td>
        <td id="LC8254" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8255" class="blob-num js-line-number" data-line-number="8255"></td>
        <td id="LC8255" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8256" class="blob-num js-line-number" data-line-number="8256"></td>
        <td id="LC8256" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8257" class="blob-num js-line-number" data-line-number="8257"></td>
        <td id="LC8257" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineBasisClosed</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8258" class="blob-num js-line-number" data-line-number="8258"></td>
        <td id="LC8258" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> path, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>, m <span class="pl-k">=</span> n <span class="pl-k">+</span> <span class="pl-c1">4</span>, pi, px <span class="pl-k">=</span> [], py <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8259" class="blob-num js-line-number" data-line-number="8259"></td>
        <td id="LC8259" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L8260" class="blob-num js-line-number" data-line-number="8260"></td>
        <td id="LC8260" class="blob-code blob-code-inner js-file-line">      pi <span class="pl-k">=</span> points[i <span class="pl-k">%</span> n];</td>
      </tr>
      <tr>
        <td id="L8261" class="blob-num js-line-number" data-line-number="8261"></td>
        <td id="LC8261" class="blob-code blob-code-inner js-file-line">      px.<span class="pl-c1">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8262" class="blob-num js-line-number" data-line-number="8262"></td>
        <td id="LC8262" class="blob-code blob-code-inner js-file-line">      py.<span class="pl-c1">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8263" class="blob-num js-line-number" data-line-number="8263"></td>
        <td id="LC8263" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8264" class="blob-num js-line-number" data-line-number="8264"></td>
        <td id="LC8264" class="blob-code blob-code-inner js-file-line">    path <span class="pl-k">=</span> [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];</td>
      </tr>
      <tr>
        <td id="L8265" class="blob-num js-line-number" data-line-number="8265"></td>
        <td id="LC8265" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">--</span>i;</td>
      </tr>
      <tr>
        <td id="L8266" class="blob-num js-line-number" data-line-number="8266"></td>
        <td id="LC8266" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> m) {</td>
      </tr>
      <tr>
        <td id="L8267" class="blob-num js-line-number" data-line-number="8267"></td>
        <td id="LC8267" class="blob-code blob-code-inner js-file-line">      pi <span class="pl-k">=</span> points[i <span class="pl-k">%</span> n];</td>
      </tr>
      <tr>
        <td id="L8268" class="blob-num js-line-number" data-line-number="8268"></td>
        <td id="LC8268" class="blob-code blob-code-inner js-file-line">      px.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L8269" class="blob-num js-line-number" data-line-number="8269"></td>
        <td id="LC8269" class="blob-code blob-code-inner js-file-line">      px.<span class="pl-c1">push</span>(pi[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8270" class="blob-num js-line-number" data-line-number="8270"></td>
        <td id="LC8270" class="blob-code blob-code-inner js-file-line">      py.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L8271" class="blob-num js-line-number" data-line-number="8271"></td>
        <td id="LC8271" class="blob-code blob-code-inner js-file-line">      py.<span class="pl-c1">push</span>(pi[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8272" class="blob-num js-line-number" data-line-number="8272"></td>
        <td id="LC8272" class="blob-code blob-code-inner js-file-line">      d3_svg_lineBasisBezier(path, px, py);</td>
      </tr>
      <tr>
        <td id="L8273" class="blob-num js-line-number" data-line-number="8273"></td>
        <td id="LC8273" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8274" class="blob-num js-line-number" data-line-number="8274"></td>
        <td id="LC8274" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8275" class="blob-num js-line-number" data-line-number="8275"></td>
        <td id="LC8275" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8276" class="blob-num js-line-number" data-line-number="8276"></td>
        <td id="LC8276" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineBundle</span>(<span class="pl-smi">points</span>, <span class="pl-smi">tension</span>) {</td>
      </tr>
      <tr>
        <td id="L8277" class="blob-num js-line-number" data-line-number="8277"></td>
        <td id="LC8277" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> points.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8278" class="blob-num js-line-number" data-line-number="8278"></td>
        <td id="LC8278" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (n) {</td>
      </tr>
      <tr>
        <td id="L8279" class="blob-num js-line-number" data-line-number="8279"></td>
        <td id="LC8279" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x0 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>], y0 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>], dx <span class="pl-k">=</span> points[n][<span class="pl-c1">0</span>] <span class="pl-k">-</span> x0, dy <span class="pl-k">=</span> points[n][<span class="pl-c1">1</span>] <span class="pl-k">-</span> y0, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, p, t;</td>
      </tr>
      <tr>
        <td id="L8280" class="blob-num js-line-number" data-line-number="8280"></td>
        <td id="LC8280" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;=</span> n) {</td>
      </tr>
      <tr>
        <td id="L8281" class="blob-num js-line-number" data-line-number="8281"></td>
        <td id="LC8281" class="blob-code blob-code-inner js-file-line">        p <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L8282" class="blob-num js-line-number" data-line-number="8282"></td>
        <td id="LC8282" class="blob-code blob-code-inner js-file-line">        t <span class="pl-k">=</span> i / n;</td>
      </tr>
      <tr>
        <td id="L8283" class="blob-num js-line-number" data-line-number="8283"></td>
        <td id="LC8283" class="blob-code blob-code-inner js-file-line">        p[<span class="pl-c1">0</span>] <span class="pl-k">=</span> tension <span class="pl-k">*</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> tension) <span class="pl-k">*</span> (x0 <span class="pl-k">+</span> t <span class="pl-k">*</span> dx);</td>
      </tr>
      <tr>
        <td id="L8284" class="blob-num js-line-number" data-line-number="8284"></td>
        <td id="LC8284" class="blob-code blob-code-inner js-file-line">        p[<span class="pl-c1">1</span>] <span class="pl-k">=</span> tension <span class="pl-k">*</span> p[<span class="pl-c1">1</span>] <span class="pl-k">+</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> tension) <span class="pl-k">*</span> (y0 <span class="pl-k">+</span> t <span class="pl-k">*</span> dy);</td>
      </tr>
      <tr>
        <td id="L8285" class="blob-num js-line-number" data-line-number="8285"></td>
        <td id="LC8285" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8286" class="blob-num js-line-number" data-line-number="8286"></td>
        <td id="LC8286" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8287" class="blob-num js-line-number" data-line-number="8287"></td>
        <td id="LC8287" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_svg_lineBasis(points);</td>
      </tr>
      <tr>
        <td id="L8288" class="blob-num js-line-number" data-line-number="8288"></td>
        <td id="LC8288" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8289" class="blob-num js-line-number" data-line-number="8289"></td>
        <td id="LC8289" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineDot4</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L8290" class="blob-num js-line-number" data-line-number="8290"></td>
        <td id="LC8290" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> a[<span class="pl-c1">0</span>] <span class="pl-k">*</span> b[<span class="pl-c1">0</span>] <span class="pl-k">+</span> a[<span class="pl-c1">1</span>] <span class="pl-k">*</span> b[<span class="pl-c1">1</span>] <span class="pl-k">+</span> a[<span class="pl-c1">2</span>] <span class="pl-k">*</span> b[<span class="pl-c1">2</span>] <span class="pl-k">+</span> a[<span class="pl-c1">3</span>] <span class="pl-k">*</span> b[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L8291" class="blob-num js-line-number" data-line-number="8291"></td>
        <td id="LC8291" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8292" class="blob-num js-line-number" data-line-number="8292"></td>
        <td id="LC8292" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_svg_lineBasisBezier1 <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">2</span> / <span class="pl-c1">3</span>, <span class="pl-c1">1</span> / <span class="pl-c1">3</span>, <span class="pl-c1">0</span> ], d3_svg_lineBasisBezier2 <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> / <span class="pl-c1">3</span>, <span class="pl-c1">2</span> / <span class="pl-c1">3</span>, <span class="pl-c1">0</span> ], d3_svg_lineBasisBezier3 <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">1</span> / <span class="pl-c1">6</span>, <span class="pl-c1">2</span> / <span class="pl-c1">3</span>, <span class="pl-c1">1</span> / <span class="pl-c1">6</span> ];</td>
      </tr>
      <tr>
        <td id="L8293" class="blob-num js-line-number" data-line-number="8293"></td>
        <td id="LC8293" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineBasisBezier</span>(<span class="pl-smi">path</span>, <span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L8294" class="blob-num js-line-number" data-line-number="8294"></td>
        <td id="LC8294" class="blob-code blob-code-inner js-file-line">    path.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>, d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));</td>
      </tr>
      <tr>
        <td id="L8295" class="blob-num js-line-number" data-line-number="8295"></td>
        <td id="LC8295" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8296" class="blob-num js-line-number" data-line-number="8296"></td>
        <td id="LC8296" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineSlope</span>(<span class="pl-smi">p0</span>, <span class="pl-smi">p1</span>) {</td>
      </tr>
      <tr>
        <td id="L8297" class="blob-num js-line-number" data-line-number="8297"></td>
        <td id="LC8297" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (p1[<span class="pl-c1">1</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">1</span>]) / (p1[<span class="pl-c1">0</span>] <span class="pl-k">-</span> p0[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L8298" class="blob-num js-line-number" data-line-number="8298"></td>
        <td id="LC8298" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8299" class="blob-num js-line-number" data-line-number="8299"></td>
        <td id="LC8299" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineFiniteDifferences</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8300" class="blob-num js-line-number" data-line-number="8300"></td>
        <td id="LC8300" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, j <span class="pl-k">=</span> points.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>, m <span class="pl-k">=</span> [], p0 <span class="pl-k">=</span> points[<span class="pl-c1">0</span>], p1 <span class="pl-k">=</span> points[<span class="pl-c1">1</span>], d <span class="pl-k">=</span> m[<span class="pl-c1">0</span>] <span class="pl-k">=</span> d3_svg_lineSlope(p0, p1);</td>
      </tr>
      <tr>
        <td id="L8301" class="blob-num js-line-number" data-line-number="8301"></td>
        <td id="LC8301" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> j) {</td>
      </tr>
      <tr>
        <td id="L8302" class="blob-num js-line-number" data-line-number="8302"></td>
        <td id="LC8302" class="blob-code blob-code-inner js-file-line">      m[i] <span class="pl-k">=</span> (d <span class="pl-k">+</span> (d <span class="pl-k">=</span> d3_svg_lineSlope(p0 <span class="pl-k">=</span> p1, p1 <span class="pl-k">=</span> points[i <span class="pl-k">+</span> <span class="pl-c1">1</span>]))) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L8303" class="blob-num js-line-number" data-line-number="8303"></td>
        <td id="LC8303" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8304" class="blob-num js-line-number" data-line-number="8304"></td>
        <td id="LC8304" class="blob-code blob-code-inner js-file-line">    m[i] <span class="pl-k">=</span> d;</td>
      </tr>
      <tr>
        <td id="L8305" class="blob-num js-line-number" data-line-number="8305"></td>
        <td id="LC8305" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m;</td>
      </tr>
      <tr>
        <td id="L8306" class="blob-num js-line-number" data-line-number="8306"></td>
        <td id="LC8306" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8307" class="blob-num js-line-number" data-line-number="8307"></td>
        <td id="LC8307" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineMonotoneTangents</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8308" class="blob-num js-line-number" data-line-number="8308"></td>
        <td id="LC8308" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> tangents <span class="pl-k">=</span> [], d, a, b, s, m <span class="pl-k">=</span> d3_svg_lineFiniteDifferences(points), i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, j <span class="pl-k">=</span> points.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8309" class="blob-num js-line-number" data-line-number="8309"></td>
        <td id="LC8309" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> j) {</td>
      </tr>
      <tr>
        <td id="L8310" class="blob-num js-line-number" data-line-number="8310"></td>
        <td id="LC8310" class="blob-code blob-code-inner js-file-line">      d <span class="pl-k">=</span> d3_svg_lineSlope(points[i], points[i <span class="pl-k">+</span> <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L8311" class="blob-num js-line-number" data-line-number="8311"></td>
        <td id="LC8311" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">abs</span>(d) <span class="pl-k">&lt;</span> Îµ) {</td>
      </tr>
      <tr>
        <td id="L8312" class="blob-num js-line-number" data-line-number="8312"></td>
        <td id="LC8312" class="blob-code blob-code-inner js-file-line">        m[i] <span class="pl-k">=</span> m[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L8313" class="blob-num js-line-number" data-line-number="8313"></td>
        <td id="LC8313" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8314" class="blob-num js-line-number" data-line-number="8314"></td>
        <td id="LC8314" class="blob-code blob-code-inner js-file-line">        a <span class="pl-k">=</span> m[i] / d;</td>
      </tr>
      <tr>
        <td id="L8315" class="blob-num js-line-number" data-line-number="8315"></td>
        <td id="LC8315" class="blob-code blob-code-inner js-file-line">        b <span class="pl-k">=</span> m[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] / d;</td>
      </tr>
      <tr>
        <td id="L8316" class="blob-num js-line-number" data-line-number="8316"></td>
        <td id="LC8316" class="blob-code blob-code-inner js-file-line">        s <span class="pl-k">=</span> a <span class="pl-k">*</span> a <span class="pl-k">+</span> b <span class="pl-k">*</span> b;</td>
      </tr>
      <tr>
        <td id="L8317" class="blob-num js-line-number" data-line-number="8317"></td>
        <td id="LC8317" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (s <span class="pl-k">&gt;</span> <span class="pl-c1">9</span>) {</td>
      </tr>
      <tr>
        <td id="L8318" class="blob-num js-line-number" data-line-number="8318"></td>
        <td id="LC8318" class="blob-code blob-code-inner js-file-line">          s <span class="pl-k">=</span> d <span class="pl-k">*</span> <span class="pl-c1">3</span> / <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(s);</td>
      </tr>
      <tr>
        <td id="L8319" class="blob-num js-line-number" data-line-number="8319"></td>
        <td id="LC8319" class="blob-code blob-code-inner js-file-line">          m[i] <span class="pl-k">=</span> s <span class="pl-k">*</span> a;</td>
      </tr>
      <tr>
        <td id="L8320" class="blob-num js-line-number" data-line-number="8320"></td>
        <td id="LC8320" class="blob-code blob-code-inner js-file-line">          m[i <span class="pl-k">+</span> <span class="pl-c1">1</span>] <span class="pl-k">=</span> s <span class="pl-k">*</span> b;</td>
      </tr>
      <tr>
        <td id="L8321" class="blob-num js-line-number" data-line-number="8321"></td>
        <td id="LC8321" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8322" class="blob-num js-line-number" data-line-number="8322"></td>
        <td id="LC8322" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8323" class="blob-num js-line-number" data-line-number="8323"></td>
        <td id="LC8323" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8324" class="blob-num js-line-number" data-line-number="8324"></td>
        <td id="LC8324" class="blob-code blob-code-inner js-file-line">    i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8325" class="blob-num js-line-number" data-line-number="8325"></td>
        <td id="LC8325" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;=</span> j) {</td>
      </tr>
      <tr>
        <td id="L8326" class="blob-num js-line-number" data-line-number="8326"></td>
        <td id="LC8326" class="blob-code blob-code-inner js-file-line">      s <span class="pl-k">=</span> (points[<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(j, i <span class="pl-k">+</span> <span class="pl-c1">1</span>)][<span class="pl-c1">0</span>] <span class="pl-k">-</span> points[<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>, i <span class="pl-k">-</span> <span class="pl-c1">1</span>)][<span class="pl-c1">0</span>]) / (<span class="pl-c1">6</span> <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">+</span> m[i] <span class="pl-k">*</span> m[i]));</td>
      </tr>
      <tr>
        <td id="L8327" class="blob-num js-line-number" data-line-number="8327"></td>
        <td id="LC8327" class="blob-code blob-code-inner js-file-line">      tangents.<span class="pl-c1">push</span>([ s <span class="pl-k">||</span> <span class="pl-c1">0</span>, m[i] <span class="pl-k">*</span> s <span class="pl-k">||</span> <span class="pl-c1">0</span> ]);</td>
      </tr>
      <tr>
        <td id="L8328" class="blob-num js-line-number" data-line-number="8328"></td>
        <td id="LC8328" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8329" class="blob-num js-line-number" data-line-number="8329"></td>
        <td id="LC8329" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> tangents;</td>
      </tr>
      <tr>
        <td id="L8330" class="blob-num js-line-number" data-line-number="8330"></td>
        <td id="LC8330" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8331" class="blob-num js-line-number" data-line-number="8331"></td>
        <td id="LC8331" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineMonotone</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8332" class="blob-num js-line-number" data-line-number="8332"></td>
        <td id="LC8332" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> points.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span> <span class="pl-k">?</span> d3_svg_lineLinear(points) <span class="pl-k">:</span> points[<span class="pl-c1">0</span>] <span class="pl-k">+</span> d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));</td>
      </tr>
      <tr>
        <td id="L8333" class="blob-num js-line-number" data-line-number="8333"></td>
        <td id="LC8333" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8334" class="blob-num js-line-number" data-line-number="8334"></td>
        <td id="LC8334" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg.line</span>.<span class="pl-en">radial</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8335" class="blob-num js-line-number" data-line-number="8335"></td>
        <td id="LC8335" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> line <span class="pl-k">=</span> d3_svg_line(d3_svg_lineRadial);</td>
      </tr>
      <tr>
        <td id="L8336" class="blob-num js-line-number" data-line-number="8336"></td>
        <td id="LC8336" class="blob-code blob-code-inner js-file-line">    line.radius <span class="pl-k">=</span> line.<span class="pl-c1">x</span>, <span class="pl-k">delete</span> line.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L8337" class="blob-num js-line-number" data-line-number="8337"></td>
        <td id="LC8337" class="blob-code blob-code-inner js-file-line">    line.angle <span class="pl-k">=</span> line.<span class="pl-c1">y</span>, <span class="pl-k">delete</span> line.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L8338" class="blob-num js-line-number" data-line-number="8338"></td>
        <td id="LC8338" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> line;</td>
      </tr>
      <tr>
        <td id="L8339" class="blob-num js-line-number" data-line-number="8339"></td>
        <td id="LC8339" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8340" class="blob-num js-line-number" data-line-number="8340"></td>
        <td id="LC8340" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_lineRadial</span>(<span class="pl-smi">points</span>) {</td>
      </tr>
      <tr>
        <td id="L8341" class="blob-num js-line-number" data-line-number="8341"></td>
        <td id="LC8341" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> point, i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> points.<span class="pl-c1">length</span>, r, a;</td>
      </tr>
      <tr>
        <td id="L8342" class="blob-num js-line-number" data-line-number="8342"></td>
        <td id="LC8342" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L8343" class="blob-num js-line-number" data-line-number="8343"></td>
        <td id="LC8343" class="blob-code blob-code-inner js-file-line">      point <span class="pl-k">=</span> points[i];</td>
      </tr>
      <tr>
        <td id="L8344" class="blob-num js-line-number" data-line-number="8344"></td>
        <td id="LC8344" class="blob-code blob-code-inner js-file-line">      r <span class="pl-k">=</span> point[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L8345" class="blob-num js-line-number" data-line-number="8345"></td>
        <td id="LC8345" class="blob-code blob-code-inner js-file-line">      a <span class="pl-k">=</span> point[<span class="pl-c1">1</span>] <span class="pl-k">-</span> halfÏ;</td>
      </tr>
      <tr>
        <td id="L8346" class="blob-num js-line-number" data-line-number="8346"></td>
        <td id="LC8346" class="blob-code blob-code-inner js-file-line">      point[<span class="pl-c1">0</span>] <span class="pl-k">=</span> r <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a);</td>
      </tr>
      <tr>
        <td id="L8347" class="blob-num js-line-number" data-line-number="8347"></td>
        <td id="LC8347" class="blob-code blob-code-inner js-file-line">      point[<span class="pl-c1">1</span>] <span class="pl-k">=</span> r <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a);</td>
      </tr>
      <tr>
        <td id="L8348" class="blob-num js-line-number" data-line-number="8348"></td>
        <td id="LC8348" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8349" class="blob-num js-line-number" data-line-number="8349"></td>
        <td id="LC8349" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> points;</td>
      </tr>
      <tr>
        <td id="L8350" class="blob-num js-line-number" data-line-number="8350"></td>
        <td id="LC8350" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8351" class="blob-num js-line-number" data-line-number="8351"></td>
        <td id="LC8351" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_area</span>(<span class="pl-smi">projection</span>) {</td>
      </tr>
      <tr>
        <td id="L8352" class="blob-num js-line-number" data-line-number="8352"></td>
        <td id="LC8352" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> x0 <span class="pl-k">=</span> d3_geom_pointX, x1 <span class="pl-k">=</span> d3_geom_pointX, y0 <span class="pl-k">=</span> <span class="pl-c1">0</span>, y1 <span class="pl-k">=</span> d3_geom_pointY, defined <span class="pl-k">=</span> d3_true, interpolate <span class="pl-k">=</span> d3_svg_lineLinear, interpolateKey <span class="pl-k">=</span> interpolate.key, interpolateReverse <span class="pl-k">=</span> interpolate, L <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>, tension <span class="pl-k">=</span> .<span class="pl-c1">7</span>;</td>
      </tr>
      <tr>
        <td id="L8353" class="blob-num js-line-number" data-line-number="8353"></td>
        <td id="LC8353" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">area</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L8354" class="blob-num js-line-number" data-line-number="8354"></td>
        <td id="LC8354" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> segments <span class="pl-k">=</span> [], points0 <span class="pl-k">=</span> [], points1 <span class="pl-k">=</span> [], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> data.<span class="pl-c1">length</span>, d, fx0 <span class="pl-k">=</span> d3_functor(x0), fy0 <span class="pl-k">=</span> d3_functor(y0), fx1 <span class="pl-k">=</span> x0 <span class="pl-k">===</span> x1 <span class="pl-k">?</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8355" class="blob-num js-line-number" data-line-number="8355"></td>
        <td id="LC8355" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> x;</td>
      </tr>
      <tr>
        <td id="L8356" class="blob-num js-line-number" data-line-number="8356"></td>
        <td id="LC8356" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">:</span> d3_functor(x1), fy1 <span class="pl-k">=</span> y0 <span class="pl-k">===</span> y1 <span class="pl-k">?</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8357" class="blob-num js-line-number" data-line-number="8357"></td>
        <td id="LC8357" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> y;</td>
      </tr>
      <tr>
        <td id="L8358" class="blob-num js-line-number" data-line-number="8358"></td>
        <td id="LC8358" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">:</span> d3_functor(y1), x, y;</td>
      </tr>
      <tr>
        <td id="L8359" class="blob-num js-line-number" data-line-number="8359"></td>
        <td id="LC8359" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">segment</span>() {</td>
      </tr>
      <tr>
        <td id="L8360" class="blob-num js-line-number" data-line-number="8360"></td>
        <td id="LC8360" class="blob-code blob-code-inner js-file-line">        segments.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>, interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.<span class="pl-c1">reverse</span>()), tension), <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8361" class="blob-num js-line-number" data-line-number="8361"></td>
        <td id="LC8361" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8362" class="blob-num js-line-number" data-line-number="8362"></td>
        <td id="LC8362" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (<span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n) {</td>
      </tr>
      <tr>
        <td id="L8363" class="blob-num js-line-number" data-line-number="8363"></td>
        <td id="LC8363" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (defined.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d <span class="pl-k">=</span> data[i], i)) {</td>
      </tr>
      <tr>
        <td id="L8364" class="blob-num js-line-number" data-line-number="8364"></td>
        <td id="LC8364" class="blob-code blob-code-inner js-file-line">          points0.<span class="pl-c1">push</span>([ x <span class="pl-k">=</span> <span class="pl-k">+</span>fx0.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i), y <span class="pl-k">=</span> <span class="pl-k">+</span>fy0.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i) ]);</td>
      </tr>
      <tr>
        <td id="L8365" class="blob-num js-line-number" data-line-number="8365"></td>
        <td id="LC8365" class="blob-code blob-code-inner js-file-line">          points1.<span class="pl-c1">push</span>([ <span class="pl-k">+</span>fx1.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i), <span class="pl-k">+</span>fy1.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i) ]);</td>
      </tr>
      <tr>
        <td id="L8366" class="blob-num js-line-number" data-line-number="8366"></td>
        <td id="LC8366" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (points0.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L8367" class="blob-num js-line-number" data-line-number="8367"></td>
        <td id="LC8367" class="blob-code blob-code-inner js-file-line">          segment();</td>
      </tr>
      <tr>
        <td id="L8368" class="blob-num js-line-number" data-line-number="8368"></td>
        <td id="LC8368" class="blob-code blob-code-inner js-file-line">          points0 <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8369" class="blob-num js-line-number" data-line-number="8369"></td>
        <td id="LC8369" class="blob-code blob-code-inner js-file-line">          points1 <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8370" class="blob-num js-line-number" data-line-number="8370"></td>
        <td id="LC8370" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8371" class="blob-num js-line-number" data-line-number="8371"></td>
        <td id="LC8371" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8372" class="blob-num js-line-number" data-line-number="8372"></td>
        <td id="LC8372" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (points0.<span class="pl-c1">length</span>) segment();</td>
      </tr>
      <tr>
        <td id="L8373" class="blob-num js-line-number" data-line-number="8373"></td>
        <td id="LC8373" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> segments.<span class="pl-c1">length</span> <span class="pl-k">?</span> segments.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L8374" class="blob-num js-line-number" data-line-number="8374"></td>
        <td id="LC8374" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8375" class="blob-num js-line-number" data-line-number="8375"></td>
        <td id="LC8375" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8376" class="blob-num js-line-number" data-line-number="8376"></td>
        <td id="LC8376" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x1;</td>
      </tr>
      <tr>
        <td id="L8377" class="blob-num js-line-number" data-line-number="8377"></td>
        <td id="LC8377" class="blob-code blob-code-inner js-file-line">      x0 <span class="pl-k">=</span> x1 <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8378" class="blob-num js-line-number" data-line-number="8378"></td>
        <td id="LC8378" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8379" class="blob-num js-line-number" data-line-number="8379"></td>
        <td id="LC8379" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8380" class="blob-num js-line-number" data-line-number="8380"></td>
        <td id="LC8380" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">x0</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8381" class="blob-num js-line-number" data-line-number="8381"></td>
        <td id="LC8381" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x0;</td>
      </tr>
      <tr>
        <td id="L8382" class="blob-num js-line-number" data-line-number="8382"></td>
        <td id="LC8382" class="blob-code blob-code-inner js-file-line">      x0 <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8383" class="blob-num js-line-number" data-line-number="8383"></td>
        <td id="LC8383" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8384" class="blob-num js-line-number" data-line-number="8384"></td>
        <td id="LC8384" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8385" class="blob-num js-line-number" data-line-number="8385"></td>
        <td id="LC8385" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">x1</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8386" class="blob-num js-line-number" data-line-number="8386"></td>
        <td id="LC8386" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x1;</td>
      </tr>
      <tr>
        <td id="L8387" class="blob-num js-line-number" data-line-number="8387"></td>
        <td id="LC8387" class="blob-code blob-code-inner js-file-line">      x1 <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8388" class="blob-num js-line-number" data-line-number="8388"></td>
        <td id="LC8388" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8389" class="blob-num js-line-number" data-line-number="8389"></td>
        <td id="LC8389" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8390" class="blob-num js-line-number" data-line-number="8390"></td>
        <td id="LC8390" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8391" class="blob-num js-line-number" data-line-number="8391"></td>
        <td id="LC8391" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> y1;</td>
      </tr>
      <tr>
        <td id="L8392" class="blob-num js-line-number" data-line-number="8392"></td>
        <td id="LC8392" class="blob-code blob-code-inner js-file-line">      y0 <span class="pl-k">=</span> y1 <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8393" class="blob-num js-line-number" data-line-number="8393"></td>
        <td id="LC8393" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8394" class="blob-num js-line-number" data-line-number="8394"></td>
        <td id="LC8394" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8395" class="blob-num js-line-number" data-line-number="8395"></td>
        <td id="LC8395" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">y0</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8396" class="blob-num js-line-number" data-line-number="8396"></td>
        <td id="LC8396" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> y0;</td>
      </tr>
      <tr>
        <td id="L8397" class="blob-num js-line-number" data-line-number="8397"></td>
        <td id="LC8397" class="blob-code blob-code-inner js-file-line">      y0 <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8398" class="blob-num js-line-number" data-line-number="8398"></td>
        <td id="LC8398" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8399" class="blob-num js-line-number" data-line-number="8399"></td>
        <td id="LC8399" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8400" class="blob-num js-line-number" data-line-number="8400"></td>
        <td id="LC8400" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">y1</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8401" class="blob-num js-line-number" data-line-number="8401"></td>
        <td id="LC8401" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> y1;</td>
      </tr>
      <tr>
        <td id="L8402" class="blob-num js-line-number" data-line-number="8402"></td>
        <td id="LC8402" class="blob-code blob-code-inner js-file-line">      y1 <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8403" class="blob-num js-line-number" data-line-number="8403"></td>
        <td id="LC8403" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8404" class="blob-num js-line-number" data-line-number="8404"></td>
        <td id="LC8404" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8405" class="blob-num js-line-number" data-line-number="8405"></td>
        <td id="LC8405" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">defined</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8406" class="blob-num js-line-number" data-line-number="8406"></td>
        <td id="LC8406" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> defined;</td>
      </tr>
      <tr>
        <td id="L8407" class="blob-num js-line-number" data-line-number="8407"></td>
        <td id="LC8407" class="blob-code blob-code-inner js-file-line">      defined <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8408" class="blob-num js-line-number" data-line-number="8408"></td>
        <td id="LC8408" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8409" class="blob-num js-line-number" data-line-number="8409"></td>
        <td id="LC8409" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8410" class="blob-num js-line-number" data-line-number="8410"></td>
        <td id="LC8410" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">interpolate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8411" class="blob-num js-line-number" data-line-number="8411"></td>
        <td id="LC8411" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> interpolateKey;</td>
      </tr>
      <tr>
        <td id="L8412" class="blob-num js-line-number" data-line-number="8412"></td>
        <td id="LC8412" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> _ <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) interpolateKey <span class="pl-k">=</span> interpolate <span class="pl-k">=</span> _; <span class="pl-k">else</span> interpolateKey <span class="pl-k">=</span> (interpolate <span class="pl-k">=</span> d3_svg_lineInterpolators.get(_) <span class="pl-k">||</span> d3_svg_lineLinear).key;</td>
      </tr>
      <tr>
        <td id="L8413" class="blob-num js-line-number" data-line-number="8413"></td>
        <td id="LC8413" class="blob-code blob-code-inner js-file-line">      interpolateReverse <span class="pl-k">=</span> interpolate.reverse <span class="pl-k">||</span> interpolate;</td>
      </tr>
      <tr>
        <td id="L8414" class="blob-num js-line-number" data-line-number="8414"></td>
        <td id="LC8414" class="blob-code blob-code-inner js-file-line">      L <span class="pl-k">=</span> interpolate.<span class="pl-c1">closed</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8415" class="blob-num js-line-number" data-line-number="8415"></td>
        <td id="LC8415" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8416" class="blob-num js-line-number" data-line-number="8416"></td>
        <td id="LC8416" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8417" class="blob-num js-line-number" data-line-number="8417"></td>
        <td id="LC8417" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">area</span>.<span class="pl-en">tension</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">_</span>) {</td>
      </tr>
      <tr>
        <td id="L8418" class="blob-num js-line-number" data-line-number="8418"></td>
        <td id="LC8418" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> tension;</td>
      </tr>
      <tr>
        <td id="L8419" class="blob-num js-line-number" data-line-number="8419"></td>
        <td id="LC8419" class="blob-code blob-code-inner js-file-line">      tension <span class="pl-k">=</span> _;</td>
      </tr>
      <tr>
        <td id="L8420" class="blob-num js-line-number" data-line-number="8420"></td>
        <td id="LC8420" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8421" class="blob-num js-line-number" data-line-number="8421"></td>
        <td id="LC8421" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8422" class="blob-num js-line-number" data-line-number="8422"></td>
        <td id="LC8422" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8423" class="blob-num js-line-number" data-line-number="8423"></td>
        <td id="LC8423" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8424" class="blob-num js-line-number" data-line-number="8424"></td>
        <td id="LC8424" class="blob-code blob-code-inner js-file-line">  d3_svg_lineStepBefore.reverse <span class="pl-k">=</span> d3_svg_lineStepAfter;</td>
      </tr>
      <tr>
        <td id="L8425" class="blob-num js-line-number" data-line-number="8425"></td>
        <td id="LC8425" class="blob-code blob-code-inner js-file-line">  d3_svg_lineStepAfter.reverse <span class="pl-k">=</span> d3_svg_lineStepBefore;</td>
      </tr>
      <tr>
        <td id="L8426" class="blob-num js-line-number" data-line-number="8426"></td>
        <td id="LC8426" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg</span>.<span class="pl-en">area</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8427" class="blob-num js-line-number" data-line-number="8427"></td>
        <td id="LC8427" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_svg_area(d3_identity);</td>
      </tr>
      <tr>
        <td id="L8428" class="blob-num js-line-number" data-line-number="8428"></td>
        <td id="LC8428" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8429" class="blob-num js-line-number" data-line-number="8429"></td>
        <td id="LC8429" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg.area</span>.<span class="pl-en">radial</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8430" class="blob-num js-line-number" data-line-number="8430"></td>
        <td id="LC8430" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> area <span class="pl-k">=</span> d3_svg_area(d3_svg_lineRadial);</td>
      </tr>
      <tr>
        <td id="L8431" class="blob-num js-line-number" data-line-number="8431"></td>
        <td id="LC8431" class="blob-code blob-code-inner js-file-line">    area.radius <span class="pl-k">=</span> area.<span class="pl-c1">x</span>, <span class="pl-k">delete</span> area.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L8432" class="blob-num js-line-number" data-line-number="8432"></td>
        <td id="LC8432" class="blob-code blob-code-inner js-file-line">    area.innerRadius <span class="pl-k">=</span> area.x0, <span class="pl-k">delete</span> area.x0;</td>
      </tr>
      <tr>
        <td id="L8433" class="blob-num js-line-number" data-line-number="8433"></td>
        <td id="LC8433" class="blob-code blob-code-inner js-file-line">    area.outerRadius <span class="pl-k">=</span> area.x1, <span class="pl-k">delete</span> area.x1;</td>
      </tr>
      <tr>
        <td id="L8434" class="blob-num js-line-number" data-line-number="8434"></td>
        <td id="LC8434" class="blob-code blob-code-inner js-file-line">    area.angle <span class="pl-k">=</span> area.<span class="pl-c1">y</span>, <span class="pl-k">delete</span> area.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L8435" class="blob-num js-line-number" data-line-number="8435"></td>
        <td id="LC8435" class="blob-code blob-code-inner js-file-line">    area.startAngle <span class="pl-k">=</span> area.y0, <span class="pl-k">delete</span> area.y0;</td>
      </tr>
      <tr>
        <td id="L8436" class="blob-num js-line-number" data-line-number="8436"></td>
        <td id="LC8436" class="blob-code blob-code-inner js-file-line">    area.endAngle <span class="pl-k">=</span> area.y1, <span class="pl-k">delete</span> area.y1;</td>
      </tr>
      <tr>
        <td id="L8437" class="blob-num js-line-number" data-line-number="8437"></td>
        <td id="LC8437" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> area;</td>
      </tr>
      <tr>
        <td id="L8438" class="blob-num js-line-number" data-line-number="8438"></td>
        <td id="LC8438" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8439" class="blob-num js-line-number" data-line-number="8439"></td>
        <td id="LC8439" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg</span>.<span class="pl-en">chord</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8440" class="blob-num js-line-number" data-line-number="8440"></td>
        <td id="LC8440" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> source <span class="pl-k">=</span> d3_source, target <span class="pl-k">=</span> d3_target, radius <span class="pl-k">=</span> d3_svg_chordRadius, startAngle <span class="pl-k">=</span> d3_svg_arcStartAngle, endAngle <span class="pl-k">=</span> d3_svg_arcEndAngle;</td>
      </tr>
      <tr>
        <td id="L8441" class="blob-num js-line-number" data-line-number="8441"></td>
        <td id="LC8441" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">chord</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L8442" class="blob-num js-line-number" data-line-number="8442"></td>
        <td id="LC8442" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> s <span class="pl-k">=</span> subgroup(<span class="pl-v">this</span>, source, d, i), t <span class="pl-k">=</span> subgroup(<span class="pl-v">this</span>, target, d, i);</td>
      </tr>
      <tr>
        <td id="L8443" class="blob-num js-line-number" data-line-number="8443"></td>
        <td id="LC8443" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> s.p0 <span class="pl-k">+</span> arc(s.r, s.p1, s.a1 <span class="pl-k">-</span> s.a0) <span class="pl-k">+</span> (equals(s, t) <span class="pl-k">?</span> curve(s.r, s.p1, s.r, s.p0) <span class="pl-k">:</span> curve(s.r, s.p1, t.r, t.p0) <span class="pl-k">+</span> arc(t.r, t.p1, t.a1 <span class="pl-k">-</span> t.a0) <span class="pl-k">+</span> curve(t.r, t.p1, s.r, s.p0)) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8444" class="blob-num js-line-number" data-line-number="8444"></td>
        <td id="LC8444" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8445" class="blob-num js-line-number" data-line-number="8445"></td>
        <td id="LC8445" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">subgroup</span>(<span class="pl-smi">self</span>, <span class="pl-smi">f</span>, <span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L8446" class="blob-num js-line-number" data-line-number="8446"></td>
        <td id="LC8446" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> subgroup <span class="pl-k">=</span> f.<span class="pl-c1">call</span>(self, d, i), r <span class="pl-k">=</span> radius.<span class="pl-c1">call</span>(self, subgroup, i), a0 <span class="pl-k">=</span> startAngle.<span class="pl-c1">call</span>(self, subgroup, i) <span class="pl-k">-</span> halfÏ, a1 <span class="pl-k">=</span> endAngle.<span class="pl-c1">call</span>(self, subgroup, i) <span class="pl-k">-</span> halfÏ;</td>
      </tr>
      <tr>
        <td id="L8447" class="blob-num js-line-number" data-line-number="8447"></td>
        <td id="LC8447" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L8448" class="blob-num js-line-number" data-line-number="8448"></td>
        <td id="LC8448" class="blob-code blob-code-inner js-file-line">        r<span class="pl-k">:</span> r,</td>
      </tr>
      <tr>
        <td id="L8449" class="blob-num js-line-number" data-line-number="8449"></td>
        <td id="LC8449" class="blob-code blob-code-inner js-file-line">        a0<span class="pl-k">:</span> a0,</td>
      </tr>
      <tr>
        <td id="L8450" class="blob-num js-line-number" data-line-number="8450"></td>
        <td id="LC8450" class="blob-code blob-code-inner js-file-line">        a1<span class="pl-k">:</span> a1,</td>
      </tr>
      <tr>
        <td id="L8451" class="blob-num js-line-number" data-line-number="8451"></td>
        <td id="LC8451" class="blob-code blob-code-inner js-file-line">        p0<span class="pl-k">:</span> [ r <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a0), r <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a0) ],</td>
      </tr>
      <tr>
        <td id="L8452" class="blob-num js-line-number" data-line-number="8452"></td>
        <td id="LC8452" class="blob-code blob-code-inner js-file-line">        p1<span class="pl-k">:</span> [ r <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a1), r <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a1) ]</td>
      </tr>
      <tr>
        <td id="L8453" class="blob-num js-line-number" data-line-number="8453"></td>
        <td id="LC8453" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8454" class="blob-num js-line-number" data-line-number="8454"></td>
        <td id="LC8454" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8455" class="blob-num js-line-number" data-line-number="8455"></td>
        <td id="LC8455" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">equals</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L8456" class="blob-num js-line-number" data-line-number="8456"></td>
        <td id="LC8456" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> a.a0 <span class="pl-k">==</span> b.a0 <span class="pl-k">&amp;&amp;</span> a.a1 <span class="pl-k">==</span> b.a1;</td>
      </tr>
      <tr>
        <td id="L8457" class="blob-num js-line-number" data-line-number="8457"></td>
        <td id="LC8457" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8458" class="blob-num js-line-number" data-line-number="8458"></td>
        <td id="LC8458" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">arc</span>(<span class="pl-smi">r</span>, <span class="pl-smi">p</span>, <span class="pl-smi">a</span>) {</td>
      </tr>
      <tr>
        <td id="L8459" class="blob-num js-line-number" data-line-number="8459"></td>
        <td id="LC8459" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">+</span>(a <span class="pl-k">&gt;</span> Ï) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,1 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p;</td>
      </tr>
      <tr>
        <td id="L8460" class="blob-num js-line-number" data-line-number="8460"></td>
        <td id="LC8460" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8461" class="blob-num js-line-number" data-line-number="8461"></td>
        <td id="LC8461" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">curve</span>(<span class="pl-smi">r0</span>, <span class="pl-smi">p0</span>, <span class="pl-smi">r1</span>, <span class="pl-smi">p1</span>) {</td>
      </tr>
      <tr>
        <td id="L8462" class="blob-num js-line-number" data-line-number="8462"></td>
        <td id="LC8462" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Q 0,0 <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p1;</td>
      </tr>
      <tr>
        <td id="L8463" class="blob-num js-line-number" data-line-number="8463"></td>
        <td id="LC8463" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8464" class="blob-num js-line-number" data-line-number="8464"></td>
        <td id="LC8464" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">radius</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8465" class="blob-num js-line-number" data-line-number="8465"></td>
        <td id="LC8465" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> radius;</td>
      </tr>
      <tr>
        <td id="L8466" class="blob-num js-line-number" data-line-number="8466"></td>
        <td id="LC8466" class="blob-code blob-code-inner js-file-line">      radius <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8467" class="blob-num js-line-number" data-line-number="8467"></td>
        <td id="LC8467" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L8468" class="blob-num js-line-number" data-line-number="8468"></td>
        <td id="LC8468" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8469" class="blob-num js-line-number" data-line-number="8469"></td>
        <td id="LC8469" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">source</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8470" class="blob-num js-line-number" data-line-number="8470"></td>
        <td id="LC8470" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> source;</td>
      </tr>
      <tr>
        <td id="L8471" class="blob-num js-line-number" data-line-number="8471"></td>
        <td id="LC8471" class="blob-code blob-code-inner js-file-line">      source <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8472" class="blob-num js-line-number" data-line-number="8472"></td>
        <td id="LC8472" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L8473" class="blob-num js-line-number" data-line-number="8473"></td>
        <td id="LC8473" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8474" class="blob-num js-line-number" data-line-number="8474"></td>
        <td id="LC8474" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">target</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8475" class="blob-num js-line-number" data-line-number="8475"></td>
        <td id="LC8475" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> target;</td>
      </tr>
      <tr>
        <td id="L8476" class="blob-num js-line-number" data-line-number="8476"></td>
        <td id="LC8476" class="blob-code blob-code-inner js-file-line">      target <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8477" class="blob-num js-line-number" data-line-number="8477"></td>
        <td id="LC8477" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L8478" class="blob-num js-line-number" data-line-number="8478"></td>
        <td id="LC8478" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8479" class="blob-num js-line-number" data-line-number="8479"></td>
        <td id="LC8479" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">startAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8480" class="blob-num js-line-number" data-line-number="8480"></td>
        <td id="LC8480" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> startAngle;</td>
      </tr>
      <tr>
        <td id="L8481" class="blob-num js-line-number" data-line-number="8481"></td>
        <td id="LC8481" class="blob-code blob-code-inner js-file-line">      startAngle <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8482" class="blob-num js-line-number" data-line-number="8482"></td>
        <td id="LC8482" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L8483" class="blob-num js-line-number" data-line-number="8483"></td>
        <td id="LC8483" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8484" class="blob-num js-line-number" data-line-number="8484"></td>
        <td id="LC8484" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">chord</span>.<span class="pl-en">endAngle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">v</span>) {</td>
      </tr>
      <tr>
        <td id="L8485" class="blob-num js-line-number" data-line-number="8485"></td>
        <td id="LC8485" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> endAngle;</td>
      </tr>
      <tr>
        <td id="L8486" class="blob-num js-line-number" data-line-number="8486"></td>
        <td id="LC8486" class="blob-code blob-code-inner js-file-line">      endAngle <span class="pl-k">=</span> d3_functor(v);</td>
      </tr>
      <tr>
        <td id="L8487" class="blob-num js-line-number" data-line-number="8487"></td>
        <td id="LC8487" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L8488" class="blob-num js-line-number" data-line-number="8488"></td>
        <td id="LC8488" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8489" class="blob-num js-line-number" data-line-number="8489"></td>
        <td id="LC8489" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> chord;</td>
      </tr>
      <tr>
        <td id="L8490" class="blob-num js-line-number" data-line-number="8490"></td>
        <td id="LC8490" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8491" class="blob-num js-line-number" data-line-number="8491"></td>
        <td id="LC8491" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_chordRadius</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L8492" class="blob-num js-line-number" data-line-number="8492"></td>
        <td id="LC8492" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.radius;</td>
      </tr>
      <tr>
        <td id="L8493" class="blob-num js-line-number" data-line-number="8493"></td>
        <td id="LC8493" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8494" class="blob-num js-line-number" data-line-number="8494"></td>
        <td id="LC8494" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg</span>.<span class="pl-en">diagonal</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8495" class="blob-num js-line-number" data-line-number="8495"></td>
        <td id="LC8495" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> source <span class="pl-k">=</span> d3_source, target <span class="pl-k">=</span> d3_target, projection <span class="pl-k">=</span> d3_svg_diagonalProjection;</td>
      </tr>
      <tr>
        <td id="L8496" class="blob-num js-line-number" data-line-number="8496"></td>
        <td id="LC8496" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">diagonal</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L8497" class="blob-num js-line-number" data-line-number="8497"></td>
        <td id="LC8497" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> p0 <span class="pl-k">=</span> source.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i), p3 <span class="pl-k">=</span> target.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i), m <span class="pl-k">=</span> (p0.<span class="pl-c1">y</span> <span class="pl-k">+</span> p3.<span class="pl-c1">y</span>) / <span class="pl-c1">2</span>, p <span class="pl-k">=</span> [ p0, {</td>
      </tr>
      <tr>
        <td id="L8498" class="blob-num js-line-number" data-line-number="8498"></td>
        <td id="LC8498" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> p0.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L8499" class="blob-num js-line-number" data-line-number="8499"></td>
        <td id="LC8499" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> m</td>
      </tr>
      <tr>
        <td id="L8500" class="blob-num js-line-number" data-line-number="8500"></td>
        <td id="LC8500" class="blob-code blob-code-inner js-file-line">      }, {</td>
      </tr>
      <tr>
        <td id="L8501" class="blob-num js-line-number" data-line-number="8501"></td>
        <td id="LC8501" class="blob-code blob-code-inner js-file-line">        x<span class="pl-k">:</span> p3.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L8502" class="blob-num js-line-number" data-line-number="8502"></td>
        <td id="LC8502" class="blob-code blob-code-inner js-file-line">        y<span class="pl-k">:</span> m</td>
      </tr>
      <tr>
        <td id="L8503" class="blob-num js-line-number" data-line-number="8503"></td>
        <td id="LC8503" class="blob-code blob-code-inner js-file-line">      }, p3 ];</td>
      </tr>
      <tr>
        <td id="L8504" class="blob-num js-line-number" data-line-number="8504"></td>
        <td id="LC8504" class="blob-code blob-code-inner js-file-line">      p <span class="pl-k">=</span> p.map(projection);</td>
      </tr>
      <tr>
        <td id="L8505" class="blob-num js-line-number" data-line-number="8505"></td>
        <td id="LC8505" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">2</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> p[<span class="pl-c1">3</span>];</td>
      </tr>
      <tr>
        <td id="L8506" class="blob-num js-line-number" data-line-number="8506"></td>
        <td id="LC8506" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8507" class="blob-num js-line-number" data-line-number="8507"></td>
        <td id="LC8507" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">diagonal</span>.<span class="pl-en">source</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8508" class="blob-num js-line-number" data-line-number="8508"></td>
        <td id="LC8508" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> source;</td>
      </tr>
      <tr>
        <td id="L8509" class="blob-num js-line-number" data-line-number="8509"></td>
        <td id="LC8509" class="blob-code blob-code-inner js-file-line">      source <span class="pl-k">=</span> d3_functor(x);</td>
      </tr>
      <tr>
        <td id="L8510" class="blob-num js-line-number" data-line-number="8510"></td>
        <td id="LC8510" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L8511" class="blob-num js-line-number" data-line-number="8511"></td>
        <td id="LC8511" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8512" class="blob-num js-line-number" data-line-number="8512"></td>
        <td id="LC8512" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">diagonal</span>.<span class="pl-en">target</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8513" class="blob-num js-line-number" data-line-number="8513"></td>
        <td id="LC8513" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> target;</td>
      </tr>
      <tr>
        <td id="L8514" class="blob-num js-line-number" data-line-number="8514"></td>
        <td id="LC8514" class="blob-code blob-code-inner js-file-line">      target <span class="pl-k">=</span> d3_functor(x);</td>
      </tr>
      <tr>
        <td id="L8515" class="blob-num js-line-number" data-line-number="8515"></td>
        <td id="LC8515" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L8516" class="blob-num js-line-number" data-line-number="8516"></td>
        <td id="LC8516" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8517" class="blob-num js-line-number" data-line-number="8517"></td>
        <td id="LC8517" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">diagonal</span>.<span class="pl-en">projection</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8518" class="blob-num js-line-number" data-line-number="8518"></td>
        <td id="LC8518" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> projection;</td>
      </tr>
      <tr>
        <td id="L8519" class="blob-num js-line-number" data-line-number="8519"></td>
        <td id="LC8519" class="blob-code blob-code-inner js-file-line">      projection <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L8520" class="blob-num js-line-number" data-line-number="8520"></td>
        <td id="LC8520" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L8521" class="blob-num js-line-number" data-line-number="8521"></td>
        <td id="LC8521" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8522" class="blob-num js-line-number" data-line-number="8522"></td>
        <td id="LC8522" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L8523" class="blob-num js-line-number" data-line-number="8523"></td>
        <td id="LC8523" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8524" class="blob-num js-line-number" data-line-number="8524"></td>
        <td id="LC8524" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_diagonalProjection</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L8525" class="blob-num js-line-number" data-line-number="8525"></td>
        <td id="LC8525" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ d.<span class="pl-c1">x</span>, d.<span class="pl-c1">y</span> ];</td>
      </tr>
      <tr>
        <td id="L8526" class="blob-num js-line-number" data-line-number="8526"></td>
        <td id="LC8526" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8527" class="blob-num js-line-number" data-line-number="8527"></td>
        <td id="LC8527" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg.diagonal</span>.<span class="pl-en">radial</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8528" class="blob-num js-line-number" data-line-number="8528"></td>
        <td id="LC8528" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> diagonal <span class="pl-k">=</span> d3.svg.diagonal(), projection <span class="pl-k">=</span> d3_svg_diagonalProjection, projection_ <span class="pl-k">=</span> diagonal.projection;</td>
      </tr>
      <tr>
        <td id="L8529" class="blob-num js-line-number" data-line-number="8529"></td>
        <td id="LC8529" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">diagonal</span>.<span class="pl-en">projection</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8530" class="blob-num js-line-number" data-line-number="8530"></td>
        <td id="LC8530" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> projection_(d3_svg_diagonalRadialProjection(projection <span class="pl-k">=</span> x)) <span class="pl-k">:</span> projection;</td>
      </tr>
      <tr>
        <td id="L8531" class="blob-num js-line-number" data-line-number="8531"></td>
        <td id="LC8531" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8532" class="blob-num js-line-number" data-line-number="8532"></td>
        <td id="LC8532" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> diagonal;</td>
      </tr>
      <tr>
        <td id="L8533" class="blob-num js-line-number" data-line-number="8533"></td>
        <td id="LC8533" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8534" class="blob-num js-line-number" data-line-number="8534"></td>
        <td id="LC8534" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_diagonalRadialProjection</span>(<span class="pl-smi">projection</span>) {</td>
      </tr>
      <tr>
        <td id="L8535" class="blob-num js-line-number" data-line-number="8535"></td>
        <td id="LC8535" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8536" class="blob-num js-line-number" data-line-number="8536"></td>
        <td id="LC8536" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> d <span class="pl-k">=</span> projection.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments), r <span class="pl-k">=</span> d[<span class="pl-c1">0</span>], a <span class="pl-k">=</span> d[<span class="pl-c1">1</span>] <span class="pl-k">-</span> halfÏ;</td>
      </tr>
      <tr>
        <td id="L8537" class="blob-num js-line-number" data-line-number="8537"></td>
        <td id="LC8537" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> [ r <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a), r <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a) ];</td>
      </tr>
      <tr>
        <td id="L8538" class="blob-num js-line-number" data-line-number="8538"></td>
        <td id="LC8538" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8539" class="blob-num js-line-number" data-line-number="8539"></td>
        <td id="LC8539" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8540" class="blob-num js-line-number" data-line-number="8540"></td>
        <td id="LC8540" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg</span>.<span class="pl-en">symbol</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8541" class="blob-num js-line-number" data-line-number="8541"></td>
        <td id="LC8541" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> type <span class="pl-k">=</span> d3_svg_symbolType, size <span class="pl-k">=</span> d3_svg_symbolSize;</td>
      </tr>
      <tr>
        <td id="L8542" class="blob-num js-line-number" data-line-number="8542"></td>
        <td id="LC8542" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">symbol</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L8543" class="blob-num js-line-number" data-line-number="8543"></td>
        <td id="LC8543" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (d3_svg_symbols.get(type.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i)) <span class="pl-k">||</span> d3_svg_symbolCircle)(size.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i));</td>
      </tr>
      <tr>
        <td id="L8544" class="blob-num js-line-number" data-line-number="8544"></td>
        <td id="LC8544" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8545" class="blob-num js-line-number" data-line-number="8545"></td>
        <td id="LC8545" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">symbol</span>.<span class="pl-en">type</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8546" class="blob-num js-line-number" data-line-number="8546"></td>
        <td id="LC8546" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> type;</td>
      </tr>
      <tr>
        <td id="L8547" class="blob-num js-line-number" data-line-number="8547"></td>
        <td id="LC8547" class="blob-code blob-code-inner js-file-line">      type <span class="pl-k">=</span> d3_functor(x);</td>
      </tr>
      <tr>
        <td id="L8548" class="blob-num js-line-number" data-line-number="8548"></td>
        <td id="LC8548" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> symbol;</td>
      </tr>
      <tr>
        <td id="L8549" class="blob-num js-line-number" data-line-number="8549"></td>
        <td id="LC8549" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8550" class="blob-num js-line-number" data-line-number="8550"></td>
        <td id="LC8550" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">symbol</span>.<span class="pl-en">size</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8551" class="blob-num js-line-number" data-line-number="8551"></td>
        <td id="LC8551" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L8552" class="blob-num js-line-number" data-line-number="8552"></td>
        <td id="LC8552" class="blob-code blob-code-inner js-file-line">      size <span class="pl-k">=</span> d3_functor(x);</td>
      </tr>
      <tr>
        <td id="L8553" class="blob-num js-line-number" data-line-number="8553"></td>
        <td id="LC8553" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> symbol;</td>
      </tr>
      <tr>
        <td id="L8554" class="blob-num js-line-number" data-line-number="8554"></td>
        <td id="LC8554" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8555" class="blob-num js-line-number" data-line-number="8555"></td>
        <td id="LC8555" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> symbol;</td>
      </tr>
      <tr>
        <td id="L8556" class="blob-num js-line-number" data-line-number="8556"></td>
        <td id="LC8556" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8557" class="blob-num js-line-number" data-line-number="8557"></td>
        <td id="LC8557" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_symbolSize</span>() {</td>
      </tr>
      <tr>
        <td id="L8558" class="blob-num js-line-number" data-line-number="8558"></td>
        <td id="LC8558" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">64</span>;</td>
      </tr>
      <tr>
        <td id="L8559" class="blob-num js-line-number" data-line-number="8559"></td>
        <td id="LC8559" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8560" class="blob-num js-line-number" data-line-number="8560"></td>
        <td id="LC8560" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_symbolType</span>() {</td>
      </tr>
      <tr>
        <td id="L8561" class="blob-num js-line-number" data-line-number="8561"></td>
        <td id="LC8561" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8562" class="blob-num js-line-number" data-line-number="8562"></td>
        <td id="LC8562" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8563" class="blob-num js-line-number" data-line-number="8563"></td>
        <td id="LC8563" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_symbolCircle</span>(<span class="pl-smi">size</span>) {</td>
      </tr>
      <tr>
        <td id="L8564" class="blob-num js-line-number" data-line-number="8564"></td>
        <td id="LC8564" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> r <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(size / Ï);</td>
      </tr>
      <tr>
        <td id="L8565" class="blob-num js-line-number" data-line-number="8565"></td>
        <td id="LC8565" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0 1,1 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8566" class="blob-num js-line-number" data-line-number="8566"></td>
        <td id="LC8566" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8567" class="blob-num js-line-number" data-line-number="8567"></td>
        <td id="LC8567" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_svg_symbols <span class="pl-k">=</span> d3.map({</td>
      </tr>
      <tr>
        <td id="L8568" class="blob-num js-line-number" data-line-number="8568"></td>
        <td id="LC8568" class="blob-code blob-code-inner js-file-line">    circle<span class="pl-k">:</span> d3_svg_symbolCircle,</td>
      </tr>
      <tr>
        <td id="L8569" class="blob-num js-line-number" data-line-number="8569"></td>
        <td id="LC8569" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">cross</span>: <span class="pl-k">function</span>(<span class="pl-smi">size</span>) {</td>
      </tr>
      <tr>
        <td id="L8570" class="blob-num js-line-number" data-line-number="8570"></td>
        <td id="LC8570" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> r <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(size / <span class="pl-c1">5</span>) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L8571" class="blob-num js-line-number" data-line-number="8571"></td>
        <td id="LC8571" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">3</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">3</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">3</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">3</span> <span class="pl-k">*</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8572" class="blob-num js-line-number" data-line-number="8572"></td>
        <td id="LC8572" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L8573" class="blob-num js-line-number" data-line-number="8573"></td>
        <td id="LC8573" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">diamond</span>: <span class="pl-k">function</span>(<span class="pl-smi">size</span>) {</td>
      </tr>
      <tr>
        <td id="L8574" class="blob-num js-line-number" data-line-number="8574"></td>
        <td id="LC8574" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> ry <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(size / (<span class="pl-c1">2</span> <span class="pl-k">*</span> d3_svg_symbolTan30)), rx <span class="pl-k">=</span> ry <span class="pl-k">*</span> d3_svg_symbolTan30;</td>
      </tr>
      <tr>
        <td id="L8575" class="blob-num js-line-number" data-line-number="8575"></td>
        <td id="LC8575" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>ry <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> rx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,0<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> 0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> ry <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>rx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,0<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8576" class="blob-num js-line-number" data-line-number="8576"></td>
        <td id="LC8576" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L8577" class="blob-num js-line-number" data-line-number="8577"></td>
        <td id="LC8577" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">square</span>: <span class="pl-k">function</span>(<span class="pl-smi">size</span>) {</td>
      </tr>
      <tr>
        <td id="L8578" class="blob-num js-line-number" data-line-number="8578"></td>
        <td id="LC8578" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> r <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(size) / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L8579" class="blob-num js-line-number" data-line-number="8579"></td>
        <td id="LC8579" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> r <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8580" class="blob-num js-line-number" data-line-number="8580"></td>
        <td id="LC8580" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L8581" class="blob-num js-line-number" data-line-number="8581"></td>
        <td id="LC8581" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">triangle-down</span><span class="pl-pds">&quot;</span></span>: <span class="pl-k">function</span>(<span class="pl-smi">size</span>) {</td>
      </tr>
      <tr>
        <td id="L8582" class="blob-num js-line-number" data-line-number="8582"></td>
        <td id="LC8582" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> rx <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(size / d3_svg_symbolSqrt3), ry <span class="pl-k">=</span> rx <span class="pl-k">*</span> d3_svg_symbolSqrt3 / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L8583" class="blob-num js-line-number" data-line-number="8583"></td>
        <td id="LC8583" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> ry <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> rx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>ry <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>rx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>ry <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8584" class="blob-num js-line-number" data-line-number="8584"></td>
        <td id="LC8584" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L8585" class="blob-num js-line-number" data-line-number="8585"></td>
        <td id="LC8585" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">triangle-up</span><span class="pl-pds">&quot;</span></span>: <span class="pl-k">function</span>(<span class="pl-smi">size</span>) {</td>
      </tr>
      <tr>
        <td id="L8586" class="blob-num js-line-number" data-line-number="8586"></td>
        <td id="LC8586" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> rx <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(size / d3_svg_symbolSqrt3), ry <span class="pl-k">=</span> rx <span class="pl-k">*</span> d3_svg_symbolSqrt3 / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L8587" class="blob-num js-line-number" data-line-number="8587"></td>
        <td id="LC8587" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>M0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>ry <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> rx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> ry <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-k">-</span>rx <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> ry <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8588" class="blob-num js-line-number" data-line-number="8588"></td>
        <td id="LC8588" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8589" class="blob-num js-line-number" data-line-number="8589"></td>
        <td id="LC8589" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L8590" class="blob-num js-line-number" data-line-number="8590"></td>
        <td id="LC8590" class="blob-code blob-code-inner js-file-line">  d3.svg.symbolTypes <span class="pl-k">=</span> d3_svg_symbols.keys();</td>
      </tr>
      <tr>
        <td id="L8591" class="blob-num js-line-number" data-line-number="8591"></td>
        <td id="LC8591" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_svg_symbolSqrt3 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>), d3_svg_symbolTan30 <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(<span class="pl-c1">30</span> <span class="pl-k">*</span> d3_radians);</td>
      </tr>
      <tr>
        <td id="L8592" class="blob-num js-line-number" data-line-number="8592"></td>
        <td id="LC8592" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">transition</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L8593" class="blob-num js-line-number" data-line-number="8593"></td>
        <td id="LC8593" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> d3_transitionInheritId <span class="pl-k">||</span> <span class="pl-k">++</span>d3_transitionId, ns <span class="pl-k">=</span> d3_transitionNamespace(name), subgroups <span class="pl-k">=</span> [], subgroup, node, transition <span class="pl-k">=</span> d3_transitionInherit <span class="pl-k">||</span> {</td>
      </tr>
      <tr>
        <td id="L8594" class="blob-num js-line-number" data-line-number="8594"></td>
        <td id="LC8594" class="blob-code blob-code-inner js-file-line">      time<span class="pl-k">:</span> <span class="pl-c1">Date</span>.now(),</td>
      </tr>
      <tr>
        <td id="L8595" class="blob-num js-line-number" data-line-number="8595"></td>
        <td id="LC8595" class="blob-code blob-code-inner js-file-line">      ease<span class="pl-k">:</span> d3_ease_cubicInOut,</td>
      </tr>
      <tr>
        <td id="L8596" class="blob-num js-line-number" data-line-number="8596"></td>
        <td id="LC8596" class="blob-code blob-code-inner js-file-line">      delay<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L8597" class="blob-num js-line-number" data-line-number="8597"></td>
        <td id="LC8597" class="blob-code blob-code-inner js-file-line">      duration<span class="pl-k">:</span> <span class="pl-c1">250</span></td>
      </tr>
      <tr>
        <td id="L8598" class="blob-num js-line-number" data-line-number="8598"></td>
        <td id="LC8598" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8599" class="blob-num js-line-number" data-line-number="8599"></td>
        <td id="LC8599" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L8600" class="blob-num js-line-number" data-line-number="8600"></td>
        <td id="LC8600" class="blob-code blob-code-inner js-file-line">      subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L8601" class="blob-num js-line-number" data-line-number="8601"></td>
        <td id="LC8601" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L8602" class="blob-num js-line-number" data-line-number="8602"></td>
        <td id="LC8602" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) d3_transitionNode(node, i, ns, id, transition);</td>
      </tr>
      <tr>
        <td id="L8603" class="blob-num js-line-number" data-line-number="8603"></td>
        <td id="LC8603" class="blob-code blob-code-inner js-file-line">        subgroup.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L8604" class="blob-num js-line-number" data-line-number="8604"></td>
        <td id="LC8604" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8605" class="blob-num js-line-number" data-line-number="8605"></td>
        <td id="LC8605" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8606" class="blob-num js-line-number" data-line-number="8606"></td>
        <td id="LC8606" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_transition(subgroups, ns, id);</td>
      </tr>
      <tr>
        <td id="L8607" class="blob-num js-line-number" data-line-number="8607"></td>
        <td id="LC8607" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8608" class="blob-num js-line-number" data-line-number="8608"></td>
        <td id="LC8608" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_selectionPrototype</span>.<span class="pl-en">interrupt</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L8609" class="blob-num js-line-number" data-line-number="8609"></td>
        <td id="LC8609" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.each(name <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> d3_selection_interrupt <span class="pl-k">:</span> d3_selection_interruptNS(d3_transitionNamespace(name)));</td>
      </tr>
      <tr>
        <td id="L8610" class="blob-num js-line-number" data-line-number="8610"></td>
        <td id="LC8610" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8611" class="blob-num js-line-number" data-line-number="8611"></td>
        <td id="LC8611" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_selection_interrupt <span class="pl-k">=</span> d3_selection_interruptNS(d3_transitionNamespace());</td>
      </tr>
      <tr>
        <td id="L8612" class="blob-num js-line-number" data-line-number="8612"></td>
        <td id="LC8612" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_selection_interruptNS</span>(<span class="pl-smi">ns</span>) {</td>
      </tr>
      <tr>
        <td id="L8613" class="blob-num js-line-number" data-line-number="8613"></td>
        <td id="LC8613" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8614" class="blob-num js-line-number" data-line-number="8614"></td>
        <td id="LC8614" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> lock, active;</td>
      </tr>
      <tr>
        <td id="L8615" class="blob-num js-line-number" data-line-number="8615"></td>
        <td id="LC8615" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((lock <span class="pl-k">=</span> <span class="pl-v">this</span>[ns]) <span class="pl-k">&amp;&amp;</span> (active <span class="pl-k">=</span> lock[lock.active])) {</td>
      </tr>
      <tr>
        <td id="L8616" class="blob-num js-line-number" data-line-number="8616"></td>
        <td id="LC8616" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">--</span>lock.count) <span class="pl-k">delete</span> lock[lock.active]; <span class="pl-k">else</span> <span class="pl-k">delete</span> <span class="pl-v">this</span>[ns];</td>
      </tr>
      <tr>
        <td id="L8617" class="blob-num js-line-number" data-line-number="8617"></td>
        <td id="LC8617" class="blob-code blob-code-inner js-file-line">        lock.active <span class="pl-k">+=</span> .<span class="pl-c1">5</span>;</td>
      </tr>
      <tr>
        <td id="L8618" class="blob-num js-line-number" data-line-number="8618"></td>
        <td id="LC8618" class="blob-code blob-code-inner js-file-line">        active.<span class="pl-c1">event</span> <span class="pl-k">&amp;&amp;</span> active.<span class="pl-c1">event</span>.interrupt.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, <span class="pl-v">this</span>.__data__, active.<span class="pl-c1">index</span>);</td>
      </tr>
      <tr>
        <td id="L8619" class="blob-num js-line-number" data-line-number="8619"></td>
        <td id="LC8619" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8620" class="blob-num js-line-number" data-line-number="8620"></td>
        <td id="LC8620" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8621" class="blob-num js-line-number" data-line-number="8621"></td>
        <td id="LC8621" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8622" class="blob-num js-line-number" data-line-number="8622"></td>
        <td id="LC8622" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transition</span>(<span class="pl-smi">groups</span>, <span class="pl-smi">ns</span>, <span class="pl-smi">id</span>) {</td>
      </tr>
      <tr>
        <td id="L8623" class="blob-num js-line-number" data-line-number="8623"></td>
        <td id="LC8623" class="blob-code blob-code-inner js-file-line">    d3_subclass(groups, d3_transitionPrototype);</td>
      </tr>
      <tr>
        <td id="L8624" class="blob-num js-line-number" data-line-number="8624"></td>
        <td id="LC8624" class="blob-code blob-code-inner js-file-line">    groups.namespace <span class="pl-k">=</span> ns;</td>
      </tr>
      <tr>
        <td id="L8625" class="blob-num js-line-number" data-line-number="8625"></td>
        <td id="LC8625" class="blob-code blob-code-inner js-file-line">    groups.<span class="pl-c1">id</span> <span class="pl-k">=</span> id;</td>
      </tr>
      <tr>
        <td id="L8626" class="blob-num js-line-number" data-line-number="8626"></td>
        <td id="LC8626" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> groups;</td>
      </tr>
      <tr>
        <td id="L8627" class="blob-num js-line-number" data-line-number="8627"></td>
        <td id="LC8627" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8628" class="blob-num js-line-number" data-line-number="8628"></td>
        <td id="LC8628" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_transitionPrototype <span class="pl-k">=</span> [], d3_transitionId <span class="pl-k">=</span> <span class="pl-c1">0</span>, d3_transitionInheritId, d3_transitionInherit;</td>
      </tr>
      <tr>
        <td id="L8629" class="blob-num js-line-number" data-line-number="8629"></td>
        <td id="LC8629" class="blob-code blob-code-inner js-file-line">  d3_transitionPrototype.call <span class="pl-k">=</span> d3_selectionPrototype.call;</td>
      </tr>
      <tr>
        <td id="L8630" class="blob-num js-line-number" data-line-number="8630"></td>
        <td id="LC8630" class="blob-code blob-code-inner js-file-line">  d3_transitionPrototype.empty <span class="pl-k">=</span> d3_selectionPrototype.empty;</td>
      </tr>
      <tr>
        <td id="L8631" class="blob-num js-line-number" data-line-number="8631"></td>
        <td id="LC8631" class="blob-code blob-code-inner js-file-line">  d3_transitionPrototype.node <span class="pl-k">=</span> d3_selectionPrototype.node;</td>
      </tr>
      <tr>
        <td id="L8632" class="blob-num js-line-number" data-line-number="8632"></td>
        <td id="LC8632" class="blob-code blob-code-inner js-file-line">  d3_transitionPrototype.<span class="pl-c1">size</span> <span class="pl-k">=</span> d3_selectionPrototype.<span class="pl-c1">size</span>;</td>
      </tr>
      <tr>
        <td id="L8633" class="blob-num js-line-number" data-line-number="8633"></td>
        <td id="LC8633" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">transition</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">selection</span>, <span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L8634" class="blob-num js-line-number" data-line-number="8634"></td>
        <td id="LC8634" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> selection <span class="pl-k">&amp;&amp;</span> selection.transition <span class="pl-k">?</span> d3_transitionInheritId <span class="pl-k">?</span> selection.transition(name) <span class="pl-k">:</span> selection <span class="pl-k">:</span> d3.<span class="pl-c1">selection</span>().transition(selection);</td>
      </tr>
      <tr>
        <td id="L8635" class="blob-num js-line-number" data-line-number="8635"></td>
        <td id="LC8635" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8636" class="blob-num js-line-number" data-line-number="8636"></td>
        <td id="LC8636" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.transition</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> d3_transitionPrototype;</td>
      </tr>
      <tr>
        <td id="L8637" class="blob-num js-line-number" data-line-number="8637"></td>
        <td id="LC8637" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">select</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L8638" class="blob-num js-line-number" data-line-number="8638"></td>
        <td id="LC8638" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">id</span>, ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace, subgroups <span class="pl-k">=</span> [], subgroup, subnode, node;</td>
      </tr>
      <tr>
        <td id="L8639" class="blob-num js-line-number" data-line-number="8639"></td>
        <td id="LC8639" class="blob-code blob-code-inner js-file-line">    selector <span class="pl-k">=</span> d3_selection_selector(selector);</td>
      </tr>
      <tr>
        <td id="L8640" class="blob-num js-line-number" data-line-number="8640"></td>
        <td id="LC8640" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L8641" class="blob-num js-line-number" data-line-number="8641"></td>
        <td id="LC8641" class="blob-code blob-code-inner js-file-line">      subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L8642" class="blob-num js-line-number" data-line-number="8642"></td>
        <td id="LC8642" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L8643" class="blob-num js-line-number" data-line-number="8643"></td>
        <td id="LC8643" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((node <span class="pl-k">=</span> group[i]) <span class="pl-k">&amp;&amp;</span> (subnode <span class="pl-k">=</span> selector.<span class="pl-c1">call</span>(node, node.__data__, i, j))) {</td>
      </tr>
      <tr>
        <td id="L8644" class="blob-num js-line-number" data-line-number="8644"></td>
        <td id="LC8644" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&quot;</span>__data__<span class="pl-pds">&quot;</span></span> <span class="pl-k">in</span> node) subnode.__data__ <span class="pl-k">=</span> node.__data__;</td>
      </tr>
      <tr>
        <td id="L8645" class="blob-num js-line-number" data-line-number="8645"></td>
        <td id="LC8645" class="blob-code blob-code-inner js-file-line">          d3_transitionNode(subnode, i, ns, id, node[ns][id]);</td>
      </tr>
      <tr>
        <td id="L8646" class="blob-num js-line-number" data-line-number="8646"></td>
        <td id="LC8646" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">push</span>(subnode);</td>
      </tr>
      <tr>
        <td id="L8647" class="blob-num js-line-number" data-line-number="8647"></td>
        <td id="LC8647" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8648" class="blob-num js-line-number" data-line-number="8648"></td>
        <td id="LC8648" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">push</span>(<span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L8649" class="blob-num js-line-number" data-line-number="8649"></td>
        <td id="LC8649" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8650" class="blob-num js-line-number" data-line-number="8650"></td>
        <td id="LC8650" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8651" class="blob-num js-line-number" data-line-number="8651"></td>
        <td id="LC8651" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8652" class="blob-num js-line-number" data-line-number="8652"></td>
        <td id="LC8652" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_transition(subgroups, ns, id);</td>
      </tr>
      <tr>
        <td id="L8653" class="blob-num js-line-number" data-line-number="8653"></td>
        <td id="LC8653" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8654" class="blob-num js-line-number" data-line-number="8654"></td>
        <td id="LC8654" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">selectAll</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L8655" class="blob-num js-line-number" data-line-number="8655"></td>
        <td id="LC8655" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">id</span>, ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace, subgroups <span class="pl-k">=</span> [], subgroup, subnodes, node, subnode, transition;</td>
      </tr>
      <tr>
        <td id="L8656" class="blob-num js-line-number" data-line-number="8656"></td>
        <td id="LC8656" class="blob-code blob-code-inner js-file-line">    selector <span class="pl-k">=</span> d3_selection_selectorAll(selector);</td>
      </tr>
      <tr>
        <td id="L8657" class="blob-num js-line-number" data-line-number="8657"></td>
        <td id="LC8657" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; <span class="pl-k">++</span>j <span class="pl-k">&lt;</span> m; ) {</td>
      </tr>
      <tr>
        <td id="L8658" class="blob-num js-line-number" data-line-number="8658"></td>
        <td id="LC8658" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> n; ) {</td>
      </tr>
      <tr>
        <td id="L8659" class="blob-num js-line-number" data-line-number="8659"></td>
        <td id="LC8659" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L8660" class="blob-num js-line-number" data-line-number="8660"></td>
        <td id="LC8660" class="blob-code blob-code-inner js-file-line">          transition <span class="pl-k">=</span> node[ns][id];</td>
      </tr>
      <tr>
        <td id="L8661" class="blob-num js-line-number" data-line-number="8661"></td>
        <td id="LC8661" class="blob-code blob-code-inner js-file-line">          subnodes <span class="pl-k">=</span> selector.<span class="pl-c1">call</span>(node, node.__data__, i, j);</td>
      </tr>
      <tr>
        <td id="L8662" class="blob-num js-line-number" data-line-number="8662"></td>
        <td id="LC8662" class="blob-code blob-code-inner js-file-line">          subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L8663" class="blob-num js-line-number" data-line-number="8663"></td>
        <td id="LC8663" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (<span class="pl-k">var</span> k <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, o <span class="pl-k">=</span> subnodes.<span class="pl-c1">length</span>; <span class="pl-k">++</span>k <span class="pl-k">&lt;</span> o; ) {</td>
      </tr>
      <tr>
        <td id="L8664" class="blob-num js-line-number" data-line-number="8664"></td>
        <td id="LC8664" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (subnode <span class="pl-k">=</span> subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);</td>
      </tr>
      <tr>
        <td id="L8665" class="blob-num js-line-number" data-line-number="8665"></td>
        <td id="LC8665" class="blob-code blob-code-inner js-file-line">            subgroup.<span class="pl-c1">push</span>(subnode);</td>
      </tr>
      <tr>
        <td id="L8666" class="blob-num js-line-number" data-line-number="8666"></td>
        <td id="LC8666" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8667" class="blob-num js-line-number" data-line-number="8667"></td>
        <td id="LC8667" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8668" class="blob-num js-line-number" data-line-number="8668"></td>
        <td id="LC8668" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8669" class="blob-num js-line-number" data-line-number="8669"></td>
        <td id="LC8669" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8670" class="blob-num js-line-number" data-line-number="8670"></td>
        <td id="LC8670" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_transition(subgroups, ns, id);</td>
      </tr>
      <tr>
        <td id="L8671" class="blob-num js-line-number" data-line-number="8671"></td>
        <td id="LC8671" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8672" class="blob-num js-line-number" data-line-number="8672"></td>
        <td id="LC8672" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">filter</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">filter</span>) {</td>
      </tr>
      <tr>
        <td id="L8673" class="blob-num js-line-number" data-line-number="8673"></td>
        <td id="LC8673" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> subgroups <span class="pl-k">=</span> [], subgroup, group, node;</td>
      </tr>
      <tr>
        <td id="L8674" class="blob-num js-line-number" data-line-number="8674"></td>
        <td id="LC8674" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> filter <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) filter <span class="pl-k">=</span> d3_selection_filter(filter);</td>
      </tr>
      <tr>
        <td id="L8675" class="blob-num js-line-number" data-line-number="8675"></td>
        <td id="LC8675" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8676" class="blob-num js-line-number" data-line-number="8676"></td>
        <td id="LC8676" class="blob-code blob-code-inner js-file-line">      subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L8677" class="blob-num js-line-number" data-line-number="8677"></td>
        <td id="LC8677" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8678" class="blob-num js-line-number" data-line-number="8678"></td>
        <td id="LC8678" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((node <span class="pl-k">=</span> group[i]) <span class="pl-k">&amp;&amp;</span> filter.<span class="pl-c1">call</span>(node, node.__data__, i, j)) {</td>
      </tr>
      <tr>
        <td id="L8679" class="blob-num js-line-number" data-line-number="8679"></td>
        <td id="LC8679" class="blob-code blob-code-inner js-file-line">          subgroup.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L8680" class="blob-num js-line-number" data-line-number="8680"></td>
        <td id="LC8680" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8681" class="blob-num js-line-number" data-line-number="8681"></td>
        <td id="LC8681" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8682" class="blob-num js-line-number" data-line-number="8682"></td>
        <td id="LC8682" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8683" class="blob-num js-line-number" data-line-number="8683"></td>
        <td id="LC8683" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_transition(subgroups, <span class="pl-v">this</span>.namespace, <span class="pl-v">this</span>.<span class="pl-c1">id</span>);</td>
      </tr>
      <tr>
        <td id="L8684" class="blob-num js-line-number" data-line-number="8684"></td>
        <td id="LC8684" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8685" class="blob-num js-line-number" data-line-number="8685"></td>
        <td id="LC8685" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">tween</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L8686" class="blob-num js-line-number" data-line-number="8686"></td>
        <td id="LC8686" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">id</span>, ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace;</td>
      </tr>
      <tr>
        <td id="L8687" class="blob-num js-line-number" data-line-number="8687"></td>
        <td id="LC8687" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span> <span class="pl-v">this</span>.node()[ns][id].tween.get(name);</td>
      </tr>
      <tr>
        <td id="L8688" class="blob-num js-line-number" data-line-number="8688"></td>
        <td id="LC8688" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection_each(<span class="pl-v">this</span>, tween <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L8689" class="blob-num js-line-number" data-line-number="8689"></td>
        <td id="LC8689" class="blob-code blob-code-inner js-file-line">      node[ns][id].tween.<span class="pl-c1">remove</span>(name);</td>
      </tr>
      <tr>
        <td id="L8690" class="blob-num js-line-number" data-line-number="8690"></td>
        <td id="LC8690" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L8691" class="blob-num js-line-number" data-line-number="8691"></td>
        <td id="LC8691" class="blob-code blob-code-inner js-file-line">      node[ns][id].tween.set(name, tween);</td>
      </tr>
      <tr>
        <td id="L8692" class="blob-num js-line-number" data-line-number="8692"></td>
        <td id="LC8692" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L8693" class="blob-num js-line-number" data-line-number="8693"></td>
        <td id="LC8693" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8694" class="blob-num js-line-number" data-line-number="8694"></td>
        <td id="LC8694" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transition_tween</span>(<span class="pl-smi">groups</span>, <span class="pl-smi">name</span>, <span class="pl-smi">value</span>, <span class="pl-smi">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L8695" class="blob-num js-line-number" data-line-number="8695"></td>
        <td id="LC8695" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> groups.<span class="pl-c1">id</span>, ns <span class="pl-k">=</span> groups.namespace;</td>
      </tr>
      <tr>
        <td id="L8696" class="blob-num js-line-number" data-line-number="8696"></td>
        <td id="LC8696" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection_each(groups, <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>, <span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L8697" class="blob-num js-line-number" data-line-number="8697"></td>
        <td id="LC8697" class="blob-code blob-code-inner js-file-line">      node[ns][id].tween.set(name, tween(value.<span class="pl-c1">call</span>(node, node.__data__, i, j)));</td>
      </tr>
      <tr>
        <td id="L8698" class="blob-num js-line-number" data-line-number="8698"></td>
        <td id="LC8698" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> (value <span class="pl-k">=</span> tween(value), <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L8699" class="blob-num js-line-number" data-line-number="8699"></td>
        <td id="LC8699" class="blob-code blob-code-inner js-file-line">      node[ns][id].tween.set(name, value);</td>
      </tr>
      <tr>
        <td id="L8700" class="blob-num js-line-number" data-line-number="8700"></td>
        <td id="LC8700" class="blob-code blob-code-inner js-file-line">    }));</td>
      </tr>
      <tr>
        <td id="L8701" class="blob-num js-line-number" data-line-number="8701"></td>
        <td id="LC8701" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8702" class="blob-num js-line-number" data-line-number="8702"></td>
        <td id="LC8702" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">attr</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">nameNS</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8703" class="blob-num js-line-number" data-line-number="8703"></td>
        <td id="LC8703" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L8704" class="blob-num js-line-number" data-line-number="8704"></td>
        <td id="LC8704" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (value <span class="pl-k">in</span> nameNS) <span class="pl-v">this</span>.attr(value, nameNS[value]);</td>
      </tr>
      <tr>
        <td id="L8705" class="blob-num js-line-number" data-line-number="8705"></td>
        <td id="LC8705" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L8706" class="blob-num js-line-number" data-line-number="8706"></td>
        <td id="LC8706" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8707" class="blob-num js-line-number" data-line-number="8707"></td>
        <td id="LC8707" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> interpolate <span class="pl-k">=</span> nameNS <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> d3_interpolateTransform <span class="pl-k">:</span> d3_interpolate, name <span class="pl-k">=</span> d3.ns.qualify(nameNS);</td>
      </tr>
      <tr>
        <td id="L8708" class="blob-num js-line-number" data-line-number="8708"></td>
        <td id="LC8708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrNull</span>() {</td>
      </tr>
      <tr>
        <td id="L8709" class="blob-num js-line-number" data-line-number="8709"></td>
        <td id="LC8709" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.<span class="pl-c1">removeAttribute</span>(name);</td>
      </tr>
      <tr>
        <td id="L8710" class="blob-num js-line-number" data-line-number="8710"></td>
        <td id="LC8710" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8711" class="blob-num js-line-number" data-line-number="8711"></td>
        <td id="LC8711" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrNullNS</span>() {</td>
      </tr>
      <tr>
        <td id="L8712" class="blob-num js-line-number" data-line-number="8712"></td>
        <td id="LC8712" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.removeAttributeNS(name.space, name.local);</td>
      </tr>
      <tr>
        <td id="L8713" class="blob-num js-line-number" data-line-number="8713"></td>
        <td id="LC8713" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8714" class="blob-num js-line-number" data-line-number="8714"></td>
        <td id="LC8714" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrTween</span>(<span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L8715" class="blob-num js-line-number" data-line-number="8715"></td>
        <td id="LC8715" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> b <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> attrNull <span class="pl-k">:</span> (b <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8716" class="blob-num js-line-number" data-line-number="8716"></td>
        <td id="LC8716" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> a <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">getAttribute</span>(name), i;</td>
      </tr>
      <tr>
        <td id="L8717" class="blob-num js-line-number" data-line-number="8717"></td>
        <td id="LC8717" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> a <span class="pl-k">!==</span> b <span class="pl-k">&amp;&amp;</span> (i <span class="pl-k">=</span> interpolate(a, b), <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L8718" class="blob-num js-line-number" data-line-number="8718"></td>
        <td id="LC8718" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.<span class="pl-c1">setAttribute</span>(name, i(t));</td>
      </tr>
      <tr>
        <td id="L8719" class="blob-num js-line-number" data-line-number="8719"></td>
        <td id="LC8719" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L8720" class="blob-num js-line-number" data-line-number="8720"></td>
        <td id="LC8720" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8721" class="blob-num js-line-number" data-line-number="8721"></td>
        <td id="LC8721" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8722" class="blob-num js-line-number" data-line-number="8722"></td>
        <td id="LC8722" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrTweenNS</span>(<span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L8723" class="blob-num js-line-number" data-line-number="8723"></td>
        <td id="LC8723" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> b <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> attrNullNS <span class="pl-k">:</span> (b <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8724" class="blob-num js-line-number" data-line-number="8724"></td>
        <td id="LC8724" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> a <span class="pl-k">=</span> <span class="pl-v">this</span>.getAttributeNS(name.space, name.local), i;</td>
      </tr>
      <tr>
        <td id="L8725" class="blob-num js-line-number" data-line-number="8725"></td>
        <td id="LC8725" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> a <span class="pl-k">!==</span> b <span class="pl-k">&amp;&amp;</span> (i <span class="pl-k">=</span> interpolate(a, b), <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L8726" class="blob-num js-line-number" data-line-number="8726"></td>
        <td id="LC8726" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.setAttributeNS(name.space, name.local, i(t));</td>
      </tr>
      <tr>
        <td id="L8727" class="blob-num js-line-number" data-line-number="8727"></td>
        <td id="LC8727" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L8728" class="blob-num js-line-number" data-line-number="8728"></td>
        <td id="LC8728" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8729" class="blob-num js-line-number" data-line-number="8729"></td>
        <td id="LC8729" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8730" class="blob-num js-line-number" data-line-number="8730"></td>
        <td id="LC8730" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_transition_tween(<span class="pl-v">this</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>attr.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> nameNS, value, name.local <span class="pl-k">?</span> attrTweenNS <span class="pl-k">:</span> attrTween);</td>
      </tr>
      <tr>
        <td id="L8731" class="blob-num js-line-number" data-line-number="8731"></td>
        <td id="LC8731" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8732" class="blob-num js-line-number" data-line-number="8732"></td>
        <td id="LC8732" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">attrTween</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">nameNS</span>, <span class="pl-smi">tween</span>) {</td>
      </tr>
      <tr>
        <td id="L8733" class="blob-num js-line-number" data-line-number="8733"></td>
        <td id="LC8733" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> name <span class="pl-k">=</span> d3.ns.qualify(nameNS);</td>
      </tr>
      <tr>
        <td id="L8734" class="blob-num js-line-number" data-line-number="8734"></td>
        <td id="LC8734" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrTween</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L8735" class="blob-num js-line-number" data-line-number="8735"></td>
        <td id="LC8735" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> f <span class="pl-k">=</span> tween.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i, <span class="pl-v">this</span>.<span class="pl-c1">getAttribute</span>(name));</td>
      </tr>
      <tr>
        <td id="L8736" class="blob-num js-line-number" data-line-number="8736"></td>
        <td id="LC8736" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> f <span class="pl-k">&amp;&amp;</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L8737" class="blob-num js-line-number" data-line-number="8737"></td>
        <td id="LC8737" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.<span class="pl-c1">setAttribute</span>(name, f(t));</td>
      </tr>
      <tr>
        <td id="L8738" class="blob-num js-line-number" data-line-number="8738"></td>
        <td id="LC8738" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8739" class="blob-num js-line-number" data-line-number="8739"></td>
        <td id="LC8739" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8740" class="blob-num js-line-number" data-line-number="8740"></td>
        <td id="LC8740" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">attrTweenNS</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L8741" class="blob-num js-line-number" data-line-number="8741"></td>
        <td id="LC8741" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> f <span class="pl-k">=</span> tween.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i, <span class="pl-v">this</span>.getAttributeNS(name.space, name.local));</td>
      </tr>
      <tr>
        <td id="L8742" class="blob-num js-line-number" data-line-number="8742"></td>
        <td id="LC8742" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> f <span class="pl-k">&amp;&amp;</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L8743" class="blob-num js-line-number" data-line-number="8743"></td>
        <td id="LC8743" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.setAttributeNS(name.space, name.local, f(t));</td>
      </tr>
      <tr>
        <td id="L8744" class="blob-num js-line-number" data-line-number="8744"></td>
        <td id="LC8744" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8745" class="blob-num js-line-number" data-line-number="8745"></td>
        <td id="LC8745" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8746" class="blob-num js-line-number" data-line-number="8746"></td>
        <td id="LC8746" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.tween(<span class="pl-s"><span class="pl-pds">&quot;</span>attr.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> nameNS, name.local <span class="pl-k">?</span> attrTweenNS <span class="pl-k">:</span> attrTween);</td>
      </tr>
      <tr>
        <td id="L8747" class="blob-num js-line-number" data-line-number="8747"></td>
        <td id="LC8747" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8748" class="blob-num js-line-number" data-line-number="8748"></td>
        <td id="LC8748" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">style</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>, <span class="pl-smi">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L8749" class="blob-num js-line-number" data-line-number="8749"></td>
        <td id="LC8749" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L8750" class="blob-num js-line-number" data-line-number="8750"></td>
        <td id="LC8750" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) {</td>
      </tr>
      <tr>
        <td id="L8751" class="blob-num js-line-number" data-line-number="8751"></td>
        <td id="LC8751" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> name <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L8752" class="blob-num js-line-number" data-line-number="8752"></td>
        <td id="LC8752" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (n <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) value <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8753" class="blob-num js-line-number" data-line-number="8753"></td>
        <td id="LC8753" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (priority <span class="pl-k">in</span> name) <span class="pl-v">this</span>.<span class="pl-c1">style</span>(priority, name[priority], value);</td>
      </tr>
      <tr>
        <td id="L8754" class="blob-num js-line-number" data-line-number="8754"></td>
        <td id="LC8754" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L8755" class="blob-num js-line-number" data-line-number="8755"></td>
        <td id="LC8755" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8756" class="blob-num js-line-number" data-line-number="8756"></td>
        <td id="LC8756" class="blob-code blob-code-inner js-file-line">      priority <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8757" class="blob-num js-line-number" data-line-number="8757"></td>
        <td id="LC8757" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8758" class="blob-num js-line-number" data-line-number="8758"></td>
        <td id="LC8758" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">styleNull</span>() {</td>
      </tr>
      <tr>
        <td id="L8759" class="blob-num js-line-number" data-line-number="8759"></td>
        <td id="LC8759" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.<span class="pl-c1">style</span>.removeProperty(name);</td>
      </tr>
      <tr>
        <td id="L8760" class="blob-num js-line-number" data-line-number="8760"></td>
        <td id="LC8760" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8761" class="blob-num js-line-number" data-line-number="8761"></td>
        <td id="LC8761" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">styleString</span>(<span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L8762" class="blob-num js-line-number" data-line-number="8762"></td>
        <td id="LC8762" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> b <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> styleNull <span class="pl-k">:</span> (b <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8763" class="blob-num js-line-number" data-line-number="8763"></td>
        <td id="LC8763" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> a <span class="pl-k">=</span> d3_window(<span class="pl-v">this</span>).getComputedStyle(<span class="pl-v">this</span>, <span class="pl-c1">null</span>).getPropertyValue(name), i;</td>
      </tr>
      <tr>
        <td id="L8764" class="blob-num js-line-number" data-line-number="8764"></td>
        <td id="LC8764" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> a <span class="pl-k">!==</span> b <span class="pl-k">&amp;&amp;</span> (i <span class="pl-k">=</span> d3_interpolate(a, b), <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L8765" class="blob-num js-line-number" data-line-number="8765"></td>
        <td id="LC8765" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.<span class="pl-c1">style</span>.setProperty(name, i(t), priority);</td>
      </tr>
      <tr>
        <td id="L8766" class="blob-num js-line-number" data-line-number="8766"></td>
        <td id="LC8766" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L8767" class="blob-num js-line-number" data-line-number="8767"></td>
        <td id="LC8767" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8768" class="blob-num js-line-number" data-line-number="8768"></td>
        <td id="LC8768" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8769" class="blob-num js-line-number" data-line-number="8769"></td>
        <td id="LC8769" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_transition_tween(<span class="pl-v">this</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>style.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name, value, styleString);</td>
      </tr>
      <tr>
        <td id="L8770" class="blob-num js-line-number" data-line-number="8770"></td>
        <td id="LC8770" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8771" class="blob-num js-line-number" data-line-number="8771"></td>
        <td id="LC8771" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">styleTween</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">tween</span>, <span class="pl-smi">priority</span>) {</td>
      </tr>
      <tr>
        <td id="L8772" class="blob-num js-line-number" data-line-number="8772"></td>
        <td id="LC8772" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">3</span>) priority <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8773" class="blob-num js-line-number" data-line-number="8773"></td>
        <td id="LC8773" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">styleTween</span>(<span class="pl-smi">d</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L8774" class="blob-num js-line-number" data-line-number="8774"></td>
        <td id="LC8774" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> f <span class="pl-k">=</span> tween.<span class="pl-c1">call</span>(<span class="pl-v">this</span>, d, i, d3_window(<span class="pl-v">this</span>).getComputedStyle(<span class="pl-v">this</span>, <span class="pl-c1">null</span>).getPropertyValue(name));</td>
      </tr>
      <tr>
        <td id="L8775" class="blob-num js-line-number" data-line-number="8775"></td>
        <td id="LC8775" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> f <span class="pl-k">&amp;&amp;</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L8776" class="blob-num js-line-number" data-line-number="8776"></td>
        <td id="LC8776" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.<span class="pl-c1">style</span>.setProperty(name, f(t), priority);</td>
      </tr>
      <tr>
        <td id="L8777" class="blob-num js-line-number" data-line-number="8777"></td>
        <td id="LC8777" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8778" class="blob-num js-line-number" data-line-number="8778"></td>
        <td id="LC8778" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8779" class="blob-num js-line-number" data-line-number="8779"></td>
        <td id="LC8779" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.tween(<span class="pl-s"><span class="pl-pds">&quot;</span>style.<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name, styleTween);</td>
      </tr>
      <tr>
        <td id="L8780" class="blob-num js-line-number" data-line-number="8780"></td>
        <td id="LC8780" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8781" class="blob-num js-line-number" data-line-number="8781"></td>
        <td id="LC8781" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">text</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8782" class="blob-num js-line-number" data-line-number="8782"></td>
        <td id="LC8782" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_transition_tween(<span class="pl-v">this</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>, value, d3_transition_text);</td>
      </tr>
      <tr>
        <td id="L8783" class="blob-num js-line-number" data-line-number="8783"></td>
        <td id="LC8783" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8784" class="blob-num js-line-number" data-line-number="8784"></td>
        <td id="LC8784" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transition_text</span>(<span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L8785" class="blob-num js-line-number" data-line-number="8785"></td>
        <td id="LC8785" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (b <span class="pl-k">==</span> <span class="pl-c1">null</span>) b <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8786" class="blob-num js-line-number" data-line-number="8786"></td>
        <td id="LC8786" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8787" class="blob-num js-line-number" data-line-number="8787"></td>
        <td id="LC8787" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.textContent <span class="pl-k">=</span> b;</td>
      </tr>
      <tr>
        <td id="L8788" class="blob-num js-line-number" data-line-number="8788"></td>
        <td id="LC8788" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8789" class="blob-num js-line-number" data-line-number="8789"></td>
        <td id="LC8789" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8790" class="blob-num js-line-number" data-line-number="8790"></td>
        <td id="LC8790" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">remove</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8791" class="blob-num js-line-number" data-line-number="8791"></td>
        <td id="LC8791" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace;</td>
      </tr>
      <tr>
        <td id="L8792" class="blob-num js-line-number" data-line-number="8792"></td>
        <td id="LC8792" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>.each(<span class="pl-s"><span class="pl-pds">&quot;</span>end.transition<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8793" class="blob-num js-line-number" data-line-number="8793"></td>
        <td id="LC8793" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> p;</td>
      </tr>
      <tr>
        <td id="L8794" class="blob-num js-line-number" data-line-number="8794"></td>
        <td id="LC8794" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-v">this</span>[ns].count <span class="pl-k">&lt;</span> <span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> (p <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">parentNode</span>)) p.<span class="pl-c1">removeChild</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L8795" class="blob-num js-line-number" data-line-number="8795"></td>
        <td id="LC8795" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L8796" class="blob-num js-line-number" data-line-number="8796"></td>
        <td id="LC8796" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8797" class="blob-num js-line-number" data-line-number="8797"></td>
        <td id="LC8797" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">ease</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8798" class="blob-num js-line-number" data-line-number="8798"></td>
        <td id="LC8798" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">id</span>, ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace;</td>
      </tr>
      <tr>
        <td id="L8799" class="blob-num js-line-number" data-line-number="8799"></td>
        <td id="LC8799" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-v">this</span>.node()[ns][id].ease;</td>
      </tr>
      <tr>
        <td id="L8800" class="blob-num js-line-number" data-line-number="8800"></td>
        <td id="LC8800" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> value <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) value <span class="pl-k">=</span> d3.ease.<span class="pl-c1">apply</span>(d3, arguments);</td>
      </tr>
      <tr>
        <td id="L8801" class="blob-num js-line-number" data-line-number="8801"></td>
        <td id="LC8801" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection_each(<span class="pl-v">this</span>, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L8802" class="blob-num js-line-number" data-line-number="8802"></td>
        <td id="LC8802" class="blob-code blob-code-inner js-file-line">      node[ns][id].ease <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L8803" class="blob-num js-line-number" data-line-number="8803"></td>
        <td id="LC8803" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L8804" class="blob-num js-line-number" data-line-number="8804"></td>
        <td id="LC8804" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8805" class="blob-num js-line-number" data-line-number="8805"></td>
        <td id="LC8805" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">delay</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8806" class="blob-num js-line-number" data-line-number="8806"></td>
        <td id="LC8806" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">id</span>, ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace;</td>
      </tr>
      <tr>
        <td id="L8807" class="blob-num js-line-number" data-line-number="8807"></td>
        <td id="LC8807" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-v">this</span>.node()[ns][id].delay;</td>
      </tr>
      <tr>
        <td id="L8808" class="blob-num js-line-number" data-line-number="8808"></td>
        <td id="LC8808" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection_each(<span class="pl-v">this</span>, <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>, <span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L8809" class="blob-num js-line-number" data-line-number="8809"></td>
        <td id="LC8809" class="blob-code blob-code-inner js-file-line">      node[ns][id].delay <span class="pl-k">=</span> <span class="pl-k">+</span>value.<span class="pl-c1">call</span>(node, node.__data__, i, j);</td>
      </tr>
      <tr>
        <td id="L8810" class="blob-num js-line-number" data-line-number="8810"></td>
        <td id="LC8810" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> (value <span class="pl-k">=</span> <span class="pl-k">+</span>value, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L8811" class="blob-num js-line-number" data-line-number="8811"></td>
        <td id="LC8811" class="blob-code blob-code-inner js-file-line">      node[ns][id].delay <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L8812" class="blob-num js-line-number" data-line-number="8812"></td>
        <td id="LC8812" class="blob-code blob-code-inner js-file-line">    }));</td>
      </tr>
      <tr>
        <td id="L8813" class="blob-num js-line-number" data-line-number="8813"></td>
        <td id="LC8813" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8814" class="blob-num js-line-number" data-line-number="8814"></td>
        <td id="LC8814" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">duration</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8815" class="blob-num js-line-number" data-line-number="8815"></td>
        <td id="LC8815" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">id</span>, ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace;</td>
      </tr>
      <tr>
        <td id="L8816" class="blob-num js-line-number" data-line-number="8816"></td>
        <td id="LC8816" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-v">this</span>.node()[ns][id].duration;</td>
      </tr>
      <tr>
        <td id="L8817" class="blob-num js-line-number" data-line-number="8817"></td>
        <td id="LC8817" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_selection_each(<span class="pl-v">this</span>, <span class="pl-k">typeof</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>, <span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L8818" class="blob-num js-line-number" data-line-number="8818"></td>
        <td id="LC8818" class="blob-code blob-code-inner js-file-line">      node[ns][id].duration <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">1</span>, value.<span class="pl-c1">call</span>(node, node.__data__, i, j));</td>
      </tr>
      <tr>
        <td id="L8819" class="blob-num js-line-number" data-line-number="8819"></td>
        <td id="LC8819" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">:</span> (value <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">1</span>, value), <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L8820" class="blob-num js-line-number" data-line-number="8820"></td>
        <td id="LC8820" class="blob-code blob-code-inner js-file-line">      node[ns][id].duration <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L8821" class="blob-num js-line-number" data-line-number="8821"></td>
        <td id="LC8821" class="blob-code blob-code-inner js-file-line">    }));</td>
      </tr>
      <tr>
        <td id="L8822" class="blob-num js-line-number" data-line-number="8822"></td>
        <td id="LC8822" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8823" class="blob-num js-line-number" data-line-number="8823"></td>
        <td id="LC8823" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">each</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">type</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L8824" class="blob-num js-line-number" data-line-number="8824"></td>
        <td id="LC8824" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">id</span>, ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace;</td>
      </tr>
      <tr>
        <td id="L8825" class="blob-num js-line-number" data-line-number="8825"></td>
        <td id="LC8825" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L8826" class="blob-num js-line-number" data-line-number="8826"></td>
        <td id="LC8826" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> inherit <span class="pl-k">=</span> d3_transitionInherit, inheritId <span class="pl-k">=</span> d3_transitionInheritId;</td>
      </tr>
      <tr>
        <td id="L8827" class="blob-num js-line-number" data-line-number="8827"></td>
        <td id="LC8827" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L8828" class="blob-num js-line-number" data-line-number="8828"></td>
        <td id="LC8828" class="blob-code blob-code-inner js-file-line">        d3_transitionInheritId <span class="pl-k">=</span> id;</td>
      </tr>
      <tr>
        <td id="L8829" class="blob-num js-line-number" data-line-number="8829"></td>
        <td id="LC8829" class="blob-code blob-code-inner js-file-line">        d3_selection_each(<span class="pl-v">this</span>, <span class="pl-k">function</span>(<span class="pl-smi">node</span>, <span class="pl-smi">i</span>, <span class="pl-smi">j</span>) {</td>
      </tr>
      <tr>
        <td id="L8830" class="blob-num js-line-number" data-line-number="8830"></td>
        <td id="LC8830" class="blob-code blob-code-inner js-file-line">          d3_transitionInherit <span class="pl-k">=</span> node[ns][id];</td>
      </tr>
      <tr>
        <td id="L8831" class="blob-num js-line-number" data-line-number="8831"></td>
        <td id="LC8831" class="blob-code blob-code-inner js-file-line">          type.<span class="pl-c1">call</span>(node, node.__data__, i, j);</td>
      </tr>
      <tr>
        <td id="L8832" class="blob-num js-line-number" data-line-number="8832"></td>
        <td id="LC8832" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L8833" class="blob-num js-line-number" data-line-number="8833"></td>
        <td id="LC8833" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L8834" class="blob-num js-line-number" data-line-number="8834"></td>
        <td id="LC8834" class="blob-code blob-code-inner js-file-line">        d3_transitionInherit <span class="pl-k">=</span> inherit;</td>
      </tr>
      <tr>
        <td id="L8835" class="blob-num js-line-number" data-line-number="8835"></td>
        <td id="LC8835" class="blob-code blob-code-inner js-file-line">        d3_transitionInheritId <span class="pl-k">=</span> inheritId;</td>
      </tr>
      <tr>
        <td id="L8836" class="blob-num js-line-number" data-line-number="8836"></td>
        <td id="LC8836" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8837" class="blob-num js-line-number" data-line-number="8837"></td>
        <td id="LC8837" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8838" class="blob-num js-line-number" data-line-number="8838"></td>
        <td id="LC8838" class="blob-code blob-code-inner js-file-line">      d3_selection_each(<span class="pl-v">this</span>, <span class="pl-k">function</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L8839" class="blob-num js-line-number" data-line-number="8839"></td>
        <td id="LC8839" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> transition <span class="pl-k">=</span> node[ns][id];</td>
      </tr>
      <tr>
        <td id="L8840" class="blob-num js-line-number" data-line-number="8840"></td>
        <td id="LC8840" class="blob-code blob-code-inner js-file-line">        (transition.<span class="pl-c1">event</span> <span class="pl-k">||</span> (transition.<span class="pl-c1">event</span> <span class="pl-k">=</span> d3.dispatch(<span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>interrupt<span class="pl-pds">&quot;</span></span>))).on(type, listener);</td>
      </tr>
      <tr>
        <td id="L8841" class="blob-num js-line-number" data-line-number="8841"></td>
        <td id="LC8841" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8842" class="blob-num js-line-number" data-line-number="8842"></td>
        <td id="LC8842" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8843" class="blob-num js-line-number" data-line-number="8843"></td>
        <td id="LC8843" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L8844" class="blob-num js-line-number" data-line-number="8844"></td>
        <td id="LC8844" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8845" class="blob-num js-line-number" data-line-number="8845"></td>
        <td id="LC8845" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_transitionPrototype</span>.<span class="pl-en">transition</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8846" class="blob-num js-line-number" data-line-number="8846"></td>
        <td id="LC8846" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> id0 <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">id</span>, id1 <span class="pl-k">=</span> <span class="pl-k">++</span>d3_transitionId, ns <span class="pl-k">=</span> <span class="pl-v">this</span>.namespace, subgroups <span class="pl-k">=</span> [], subgroup, group, node, transition;</td>
      </tr>
      <tr>
        <td id="L8847" class="blob-num js-line-number" data-line-number="8847"></td>
        <td id="LC8847" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>, m <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; j <span class="pl-k">&lt;</span> m; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8848" class="blob-num js-line-number" data-line-number="8848"></td>
        <td id="LC8848" class="blob-code blob-code-inner js-file-line">      subgroups.<span class="pl-c1">push</span>(subgroup <span class="pl-k">=</span> []);</td>
      </tr>
      <tr>
        <td id="L8849" class="blob-num js-line-number" data-line-number="8849"></td>
        <td id="LC8849" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> group <span class="pl-k">=</span> <span class="pl-v">this</span>[j], i <span class="pl-k">=</span> <span class="pl-c1">0</span>, n <span class="pl-k">=</span> group.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8850" class="blob-num js-line-number" data-line-number="8850"></td>
        <td id="LC8850" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node <span class="pl-k">=</span> group[i]) {</td>
      </tr>
      <tr>
        <td id="L8851" class="blob-num js-line-number" data-line-number="8851"></td>
        <td id="LC8851" class="blob-code blob-code-inner js-file-line">          transition <span class="pl-k">=</span> node[ns][id0];</td>
      </tr>
      <tr>
        <td id="L8852" class="blob-num js-line-number" data-line-number="8852"></td>
        <td id="LC8852" class="blob-code blob-code-inner js-file-line">          d3_transitionNode(node, i, ns, id1, {</td>
      </tr>
      <tr>
        <td id="L8853" class="blob-num js-line-number" data-line-number="8853"></td>
        <td id="LC8853" class="blob-code blob-code-inner js-file-line">            time<span class="pl-k">:</span> transition<span class="pl-c1">.time</span>,</td>
      </tr>
      <tr>
        <td id="L8854" class="blob-num js-line-number" data-line-number="8854"></td>
        <td id="LC8854" class="blob-code blob-code-inner js-file-line">            ease<span class="pl-k">:</span> transition.ease,</td>
      </tr>
      <tr>
        <td id="L8855" class="blob-num js-line-number" data-line-number="8855"></td>
        <td id="LC8855" class="blob-code blob-code-inner js-file-line">            delay<span class="pl-k">:</span> transition.delay <span class="pl-k">+</span> transition.duration,</td>
      </tr>
      <tr>
        <td id="L8856" class="blob-num js-line-number" data-line-number="8856"></td>
        <td id="LC8856" class="blob-code blob-code-inner js-file-line">            duration<span class="pl-k">:</span> transition.duration</td>
      </tr>
      <tr>
        <td id="L8857" class="blob-num js-line-number" data-line-number="8857"></td>
        <td id="LC8857" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L8858" class="blob-num js-line-number" data-line-number="8858"></td>
        <td id="LC8858" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8859" class="blob-num js-line-number" data-line-number="8859"></td>
        <td id="LC8859" class="blob-code blob-code-inner js-file-line">        subgroup.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L8860" class="blob-num js-line-number" data-line-number="8860"></td>
        <td id="LC8860" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8861" class="blob-num js-line-number" data-line-number="8861"></td>
        <td id="LC8861" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8862" class="blob-num js-line-number" data-line-number="8862"></td>
        <td id="LC8862" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_transition(subgroups, ns, id1);</td>
      </tr>
      <tr>
        <td id="L8863" class="blob-num js-line-number" data-line-number="8863"></td>
        <td id="LC8863" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8864" class="blob-num js-line-number" data-line-number="8864"></td>
        <td id="LC8864" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transitionNamespace</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L8865" class="blob-num js-line-number" data-line-number="8865"></td>
        <td id="LC8865" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> name <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>__transition__<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>__transition_<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>__<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8866" class="blob-num js-line-number" data-line-number="8866"></td>
        <td id="LC8866" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8867" class="blob-num js-line-number" data-line-number="8867"></td>
        <td id="LC8867" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_transitionNode</span>(<span class="pl-smi">node</span>, <span class="pl-smi">i</span>, <span class="pl-smi">ns</span>, <span class="pl-smi">id</span>, <span class="pl-smi">inherit</span>) {</td>
      </tr>
      <tr>
        <td id="L8868" class="blob-num js-line-number" data-line-number="8868"></td>
        <td id="LC8868" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lock <span class="pl-k">=</span> node[ns] <span class="pl-k">||</span> (node[ns] <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L8869" class="blob-num js-line-number" data-line-number="8869"></td>
        <td id="LC8869" class="blob-code blob-code-inner js-file-line">      active<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L8870" class="blob-num js-line-number" data-line-number="8870"></td>
        <td id="LC8870" class="blob-code blob-code-inner js-file-line">      count<span class="pl-k">:</span> <span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L8871" class="blob-num js-line-number" data-line-number="8871"></td>
        <td id="LC8871" class="blob-code blob-code-inner js-file-line">    }), transition <span class="pl-k">=</span> lock[id];</td>
      </tr>
      <tr>
        <td id="L8872" class="blob-num js-line-number" data-line-number="8872"></td>
        <td id="LC8872" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>transition) {</td>
      </tr>
      <tr>
        <td id="L8873" class="blob-num js-line-number" data-line-number="8873"></td>
        <td id="LC8873" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> time <span class="pl-k">=</span> inherit<span class="pl-c1">.time</span>;</td>
      </tr>
      <tr>
        <td id="L8874" class="blob-num js-line-number" data-line-number="8874"></td>
        <td id="LC8874" class="blob-code blob-code-inner js-file-line">      transition <span class="pl-k">=</span> lock[id] <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L8875" class="blob-num js-line-number" data-line-number="8875"></td>
        <td id="LC8875" class="blob-code blob-code-inner js-file-line">        tween<span class="pl-k">:</span> <span class="pl-k">new</span> <span class="pl-en">d3_Map</span>(),</td>
      </tr>
      <tr>
        <td id="L8876" class="blob-num js-line-number" data-line-number="8876"></td>
        <td id="LC8876" class="blob-code blob-code-inner js-file-line">        time<span class="pl-k">:</span> time,</td>
      </tr>
      <tr>
        <td id="L8877" class="blob-num js-line-number" data-line-number="8877"></td>
        <td id="LC8877" class="blob-code blob-code-inner js-file-line">        delay<span class="pl-k">:</span> inherit.delay,</td>
      </tr>
      <tr>
        <td id="L8878" class="blob-num js-line-number" data-line-number="8878"></td>
        <td id="LC8878" class="blob-code blob-code-inner js-file-line">        duration<span class="pl-k">:</span> inherit.duration,</td>
      </tr>
      <tr>
        <td id="L8879" class="blob-num js-line-number" data-line-number="8879"></td>
        <td id="LC8879" class="blob-code blob-code-inner js-file-line">        ease<span class="pl-k">:</span> inherit.ease,</td>
      </tr>
      <tr>
        <td id="L8880" class="blob-num js-line-number" data-line-number="8880"></td>
        <td id="LC8880" class="blob-code blob-code-inner js-file-line">        index<span class="pl-k">:</span> i</td>
      </tr>
      <tr>
        <td id="L8881" class="blob-num js-line-number" data-line-number="8881"></td>
        <td id="LC8881" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8882" class="blob-num js-line-number" data-line-number="8882"></td>
        <td id="LC8882" class="blob-code blob-code-inner js-file-line">      inherit <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L8883" class="blob-num js-line-number" data-line-number="8883"></td>
        <td id="LC8883" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">++</span>lock.count;</td>
      </tr>
      <tr>
        <td id="L8884" class="blob-num js-line-number" data-line-number="8884"></td>
        <td id="LC8884" class="blob-code blob-code-inner js-file-line">      d3.timer(<span class="pl-k">function</span>(<span class="pl-smi">elapsed</span>) {</td>
      </tr>
      <tr>
        <td id="L8885" class="blob-num js-line-number" data-line-number="8885"></td>
        <td id="LC8885" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> delay <span class="pl-k">=</span> transition.delay, duration, ease, timer <span class="pl-k">=</span> d3_timer_active, tweened <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8886" class="blob-num js-line-number" data-line-number="8886"></td>
        <td id="LC8886" class="blob-code blob-code-inner js-file-line">        timer.t <span class="pl-k">=</span> delay <span class="pl-k">+</span> time;</td>
      </tr>
      <tr>
        <td id="L8887" class="blob-num js-line-number" data-line-number="8887"></td>
        <td id="LC8887" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (delay <span class="pl-k">&lt;=</span> elapsed) <span class="pl-k">return</span> start(elapsed <span class="pl-k">-</span> delay);</td>
      </tr>
      <tr>
        <td id="L8888" class="blob-num js-line-number" data-line-number="8888"></td>
        <td id="LC8888" class="blob-code blob-code-inner js-file-line">        timer.c <span class="pl-k">=</span> start;</td>
      </tr>
      <tr>
        <td id="L8889" class="blob-num js-line-number" data-line-number="8889"></td>
        <td id="LC8889" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">start</span>(<span class="pl-smi">elapsed</span>) {</td>
      </tr>
      <tr>
        <td id="L8890" class="blob-num js-line-number" data-line-number="8890"></td>
        <td id="LC8890" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (lock.active <span class="pl-k">&gt;</span> id) <span class="pl-k">return</span> <span class="pl-c1">stop</span>();</td>
      </tr>
      <tr>
        <td id="L8891" class="blob-num js-line-number" data-line-number="8891"></td>
        <td id="LC8891" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> active <span class="pl-k">=</span> lock[lock.active];</td>
      </tr>
      <tr>
        <td id="L8892" class="blob-num js-line-number" data-line-number="8892"></td>
        <td id="LC8892" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (active) {</td>
      </tr>
      <tr>
        <td id="L8893" class="blob-num js-line-number" data-line-number="8893"></td>
        <td id="LC8893" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">--</span>lock.count;</td>
      </tr>
      <tr>
        <td id="L8894" class="blob-num js-line-number" data-line-number="8894"></td>
        <td id="LC8894" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">delete</span> lock[lock.active];</td>
      </tr>
      <tr>
        <td id="L8895" class="blob-num js-line-number" data-line-number="8895"></td>
        <td id="LC8895" class="blob-code blob-code-inner js-file-line">            active.<span class="pl-c1">event</span> <span class="pl-k">&amp;&amp;</span> active.<span class="pl-c1">event</span>.interrupt.<span class="pl-c1">call</span>(node, node.__data__, active.<span class="pl-c1">index</span>);</td>
      </tr>
      <tr>
        <td id="L8896" class="blob-num js-line-number" data-line-number="8896"></td>
        <td id="LC8896" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8897" class="blob-num js-line-number" data-line-number="8897"></td>
        <td id="LC8897" class="blob-code blob-code-inner js-file-line">          lock.active <span class="pl-k">=</span> id;</td>
      </tr>
      <tr>
        <td id="L8898" class="blob-num js-line-number" data-line-number="8898"></td>
        <td id="LC8898" class="blob-code blob-code-inner js-file-line">          transition.<span class="pl-c1">event</span> <span class="pl-k">&amp;&amp;</span> transition.<span class="pl-c1">event</span>.<span class="pl-c1">start</span>.<span class="pl-c1">call</span>(node, node.__data__, i);</td>
      </tr>
      <tr>
        <td id="L8899" class="blob-num js-line-number" data-line-number="8899"></td>
        <td id="LC8899" class="blob-code blob-code-inner js-file-line">          transition.tween.forEach(<span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8900" class="blob-num js-line-number" data-line-number="8900"></td>
        <td id="LC8900" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (value <span class="pl-k">=</span> value.<span class="pl-c1">call</span>(node, node.__data__, i)) {</td>
      </tr>
      <tr>
        <td id="L8901" class="blob-num js-line-number" data-line-number="8901"></td>
        <td id="LC8901" class="blob-code blob-code-inner js-file-line">              tweened.<span class="pl-c1">push</span>(value);</td>
      </tr>
      <tr>
        <td id="L8902" class="blob-num js-line-number" data-line-number="8902"></td>
        <td id="LC8902" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L8903" class="blob-num js-line-number" data-line-number="8903"></td>
        <td id="LC8903" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L8904" class="blob-num js-line-number" data-line-number="8904"></td>
        <td id="LC8904" class="blob-code blob-code-inner js-file-line">          ease <span class="pl-k">=</span> transition.ease;</td>
      </tr>
      <tr>
        <td id="L8905" class="blob-num js-line-number" data-line-number="8905"></td>
        <td id="LC8905" class="blob-code blob-code-inner js-file-line">          duration <span class="pl-k">=</span> transition.duration;</td>
      </tr>
      <tr>
        <td id="L8906" class="blob-num js-line-number" data-line-number="8906"></td>
        <td id="LC8906" class="blob-code blob-code-inner js-file-line">          d3.timer(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8907" class="blob-num js-line-number" data-line-number="8907"></td>
        <td id="LC8907" class="blob-code blob-code-inner js-file-line">            timer.c <span class="pl-k">=</span> tick(elapsed <span class="pl-k">||</span> <span class="pl-c1">1</span>) <span class="pl-k">?</span> d3_true <span class="pl-k">:</span> tick;</td>
      </tr>
      <tr>
        <td id="L8908" class="blob-num js-line-number" data-line-number="8908"></td>
        <td id="LC8908" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8909" class="blob-num js-line-number" data-line-number="8909"></td>
        <td id="LC8909" class="blob-code blob-code-inner js-file-line">          }, <span class="pl-c1">0</span>, time);</td>
      </tr>
      <tr>
        <td id="L8910" class="blob-num js-line-number" data-line-number="8910"></td>
        <td id="LC8910" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8911" class="blob-num js-line-number" data-line-number="8911"></td>
        <td id="LC8911" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">tick</span>(<span class="pl-smi">elapsed</span>) {</td>
      </tr>
      <tr>
        <td id="L8912" class="blob-num js-line-number" data-line-number="8912"></td>
        <td id="LC8912" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (lock.active <span class="pl-k">!==</span> id) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8913" class="blob-num js-line-number" data-line-number="8913"></td>
        <td id="LC8913" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> t <span class="pl-k">=</span> elapsed / duration, e <span class="pl-k">=</span> ease(t), n <span class="pl-k">=</span> tweened.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L8914" class="blob-num js-line-number" data-line-number="8914"></td>
        <td id="LC8914" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span> (n <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L8915" class="blob-num js-line-number" data-line-number="8915"></td>
        <td id="LC8915" class="blob-code blob-code-inner js-file-line">            tweened[<span class="pl-k">--</span>n].<span class="pl-c1">call</span>(node, e);</td>
      </tr>
      <tr>
        <td id="L8916" class="blob-num js-line-number" data-line-number="8916"></td>
        <td id="LC8916" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8917" class="blob-num js-line-number" data-line-number="8917"></td>
        <td id="LC8917" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (t <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L8918" class="blob-num js-line-number" data-line-number="8918"></td>
        <td id="LC8918" class="blob-code blob-code-inner js-file-line">            transition.<span class="pl-c1">event</span> <span class="pl-k">&amp;&amp;</span> transition.<span class="pl-c1">event</span>.end.<span class="pl-c1">call</span>(node, node.__data__, i);</td>
      </tr>
      <tr>
        <td id="L8919" class="blob-num js-line-number" data-line-number="8919"></td>
        <td id="LC8919" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stop</span>();</td>
      </tr>
      <tr>
        <td id="L8920" class="blob-num js-line-number" data-line-number="8920"></td>
        <td id="LC8920" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8921" class="blob-num js-line-number" data-line-number="8921"></td>
        <td id="LC8921" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8922" class="blob-num js-line-number" data-line-number="8922"></td>
        <td id="LC8922" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">stop</span>() {</td>
      </tr>
      <tr>
        <td id="L8923" class="blob-num js-line-number" data-line-number="8923"></td>
        <td id="LC8923" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">--</span>lock.count) <span class="pl-k">delete</span> lock[id]; <span class="pl-k">else</span> <span class="pl-k">delete</span> node[ns];</td>
      </tr>
      <tr>
        <td id="L8924" class="blob-num js-line-number" data-line-number="8924"></td>
        <td id="LC8924" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8925" class="blob-num js-line-number" data-line-number="8925"></td>
        <td id="LC8925" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8926" class="blob-num js-line-number" data-line-number="8926"></td>
        <td id="LC8926" class="blob-code blob-code-inner js-file-line">      }, <span class="pl-c1">0</span>, time);</td>
      </tr>
      <tr>
        <td id="L8927" class="blob-num js-line-number" data-line-number="8927"></td>
        <td id="LC8927" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8928" class="blob-num js-line-number" data-line-number="8928"></td>
        <td id="LC8928" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8929" class="blob-num js-line-number" data-line-number="8929"></td>
        <td id="LC8929" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg</span>.<span class="pl-en">axis</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8930" class="blob-num js-line-number" data-line-number="8930"></td>
        <td id="LC8930" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> scale <span class="pl-k">=</span> d3.scale.linear(), orient <span class="pl-k">=</span> d3_svg_axisDefaultOrient, innerTickSize <span class="pl-k">=</span> <span class="pl-c1">6</span>, outerTickSize <span class="pl-k">=</span> <span class="pl-c1">6</span>, tickPadding <span class="pl-k">=</span> <span class="pl-c1">3</span>, tickArguments_ <span class="pl-k">=</span> [ <span class="pl-c1">10</span> ], tickValues <span class="pl-k">=</span> <span class="pl-c1">null</span>, tickFormat_;</td>
      </tr>
      <tr>
        <td id="L8931" class="blob-num js-line-number" data-line-number="8931"></td>
        <td id="LC8931" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">axis</span>(<span class="pl-smi">g</span>) {</td>
      </tr>
      <tr>
        <td id="L8932" class="blob-num js-line-number" data-line-number="8932"></td>
        <td id="LC8932" class="blob-code blob-code-inner js-file-line">      g.each(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8933" class="blob-num js-line-number" data-line-number="8933"></td>
        <td id="LC8933" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> g <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L8934" class="blob-num js-line-number" data-line-number="8934"></td>
        <td id="LC8934" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> scale0 <span class="pl-k">=</span> <span class="pl-v">this</span>.__chart__ <span class="pl-k">||</span> scale, scale1 <span class="pl-k">=</span> <span class="pl-v">this</span>.__chart__ <span class="pl-k">=</span> scale.copy();</td>
      </tr>
      <tr>
        <td id="L8935" class="blob-num js-line-number" data-line-number="8935"></td>
        <td id="LC8935" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ticks <span class="pl-k">=</span> tickValues <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> scale1.ticks <span class="pl-k">?</span> scale1.ticks.<span class="pl-c1">apply</span>(scale1, tickArguments_) <span class="pl-k">:</span> scale1.<span class="pl-c1">domain</span>() <span class="pl-k">:</span> tickValues, tickFormat <span class="pl-k">=</span> tickFormat_ <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> scale1.tickFormat <span class="pl-k">?</span> scale1.tickFormat.<span class="pl-c1">apply</span>(scale1, tickArguments_) <span class="pl-k">:</span> d3_identity <span class="pl-k">:</span> tickFormat_, tick <span class="pl-k">=</span> g.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.tick<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(ticks, scale1), tickEnter <span class="pl-k">=</span> tick.enter().insert(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>.domain<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>tick<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, Îµ), tickExit <span class="pl-k">=</span> d3.transition(tick.exit()).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, Îµ).<span class="pl-c1">remove</span>(), tickUpdate <span class="pl-k">=</span> d3.transition(tick.order()).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">1</span>), tickSpacing <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(innerTickSize, <span class="pl-c1">0</span>) <span class="pl-k">+</span> tickPadding, tickTransform;</td>
      </tr>
      <tr>
        <td id="L8936" class="blob-num js-line-number" data-line-number="8936"></td>
        <td id="LC8936" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> range <span class="pl-k">=</span> d3_scaleRange(scale1), path <span class="pl-k">=</span> g.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.domain<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>([ <span class="pl-c1">0</span> ]), pathUpdate <span class="pl-k">=</span> (path.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>domain<span class="pl-pds">&quot;</span></span>), </td>
      </tr>
      <tr>
        <td id="L8937" class="blob-num js-line-number" data-line-number="8937"></td>
        <td id="LC8937" class="blob-code blob-code-inner js-file-line">        d3.transition(path));</td>
      </tr>
      <tr>
        <td id="L8938" class="blob-num js-line-number" data-line-number="8938"></td>
        <td id="LC8938" class="blob-code blob-code-inner js-file-line">        tickEnter.append(<span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8939" class="blob-num js-line-number" data-line-number="8939"></td>
        <td id="LC8939" class="blob-code blob-code-inner js-file-line">        tickEnter.append(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8940" class="blob-num js-line-number" data-line-number="8940"></td>
        <td id="LC8940" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> lineEnter <span class="pl-k">=</span> tickEnter.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>), lineUpdate <span class="pl-k">=</span> tickUpdate.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>), text <span class="pl-k">=</span> tick.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">text</span>(tickFormat), textEnter <span class="pl-k">=</span> tickEnter.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>), textUpdate <span class="pl-k">=</span> tickUpdate.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>), sign <span class="pl-k">=</span> orient <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> orient <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>, x1, x2, y1, y2;</td>
      </tr>
      <tr>
        <td id="L8941" class="blob-num js-line-number" data-line-number="8941"></td>
        <td id="LC8941" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (orient <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span> <span class="pl-k">||</span> orient <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L8942" class="blob-num js-line-number" data-line-number="8942"></td>
        <td id="LC8942" class="blob-code blob-code-inner js-file-line">          tickTransform <span class="pl-k">=</span> d3_svg_axisX, x1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, y1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, x2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>, y2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8943" class="blob-num js-line-number" data-line-number="8943"></td>
        <td id="LC8943" class="blob-code blob-code-inner js-file-line">          text.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>, sign <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>0em<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.71em<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8944" class="blob-num js-line-number" data-line-number="8944"></td>
        <td id="LC8944" class="blob-code blob-code-inner js-file-line">          pathUpdate.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> sign <span class="pl-k">*</span> outerTickSize <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>V0H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> sign <span class="pl-k">*</span> outerTickSize);</td>
      </tr>
      <tr>
        <td id="L8945" class="blob-num js-line-number" data-line-number="8945"></td>
        <td id="LC8945" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8946" class="blob-num js-line-number" data-line-number="8946"></td>
        <td id="LC8946" class="blob-code blob-code-inner js-file-line">          tickTransform <span class="pl-k">=</span> d3_svg_axisY, x1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, y1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, x2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>, y2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8947" class="blob-num js-line-number" data-line-number="8947"></td>
        <td id="LC8947" class="blob-code blob-code-inner js-file-line">          text.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>.32em<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>, sign <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8948" class="blob-num js-line-number" data-line-number="8948"></td>
        <td id="LC8948" class="blob-code blob-code-inner js-file-line">          pathUpdate.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> sign <span class="pl-k">*</span> outerTickSize <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">0</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>H0V<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> range[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> sign <span class="pl-k">*</span> outerTickSize);</td>
      </tr>
      <tr>
        <td id="L8949" class="blob-num js-line-number" data-line-number="8949"></td>
        <td id="LC8949" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8950" class="blob-num js-line-number" data-line-number="8950"></td>
        <td id="LC8950" class="blob-code blob-code-inner js-file-line">        lineEnter.attr(y2, sign <span class="pl-k">*</span> innerTickSize);</td>
      </tr>
      <tr>
        <td id="L8951" class="blob-num js-line-number" data-line-number="8951"></td>
        <td id="LC8951" class="blob-code blob-code-inner js-file-line">        textEnter.attr(y1, sign <span class="pl-k">*</span> tickSpacing);</td>
      </tr>
      <tr>
        <td id="L8952" class="blob-num js-line-number" data-line-number="8952"></td>
        <td id="LC8952" class="blob-code blob-code-inner js-file-line">        lineUpdate.attr(x2, <span class="pl-c1">0</span>).attr(y2, sign <span class="pl-k">*</span> innerTickSize);</td>
      </tr>
      <tr>
        <td id="L8953" class="blob-num js-line-number" data-line-number="8953"></td>
        <td id="LC8953" class="blob-code blob-code-inner js-file-line">        textUpdate.attr(x1, <span class="pl-c1">0</span>).attr(y1, sign <span class="pl-k">*</span> tickSpacing);</td>
      </tr>
      <tr>
        <td id="L8954" class="blob-num js-line-number" data-line-number="8954"></td>
        <td id="LC8954" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (scale1.rangeBand) {</td>
      </tr>
      <tr>
        <td id="L8955" class="blob-num js-line-number" data-line-number="8955"></td>
        <td id="LC8955" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> x <span class="pl-k">=</span> scale1, dx <span class="pl-k">=</span> x.rangeBand() / <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L8956" class="blob-num js-line-number" data-line-number="8956"></td>
        <td id="LC8956" class="blob-code blob-code-inner js-file-line">          scale0 <span class="pl-k">=</span> <span class="pl-en">scale1</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L8957" class="blob-num js-line-number" data-line-number="8957"></td>
        <td id="LC8957" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> x(d) <span class="pl-k">+</span> dx;</td>
      </tr>
      <tr>
        <td id="L8958" class="blob-num js-line-number" data-line-number="8958"></td>
        <td id="LC8958" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L8959" class="blob-num js-line-number" data-line-number="8959"></td>
        <td id="LC8959" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (scale0.rangeBand) {</td>
      </tr>
      <tr>
        <td id="L8960" class="blob-num js-line-number" data-line-number="8960"></td>
        <td id="LC8960" class="blob-code blob-code-inner js-file-line">          scale0 <span class="pl-k">=</span> scale1;</td>
      </tr>
      <tr>
        <td id="L8961" class="blob-num js-line-number" data-line-number="8961"></td>
        <td id="LC8961" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8962" class="blob-num js-line-number" data-line-number="8962"></td>
        <td id="LC8962" class="blob-code blob-code-inner js-file-line">          tickExit.<span class="pl-c1">call</span>(tickTransform, scale1, scale0);</td>
      </tr>
      <tr>
        <td id="L8963" class="blob-num js-line-number" data-line-number="8963"></td>
        <td id="LC8963" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8964" class="blob-num js-line-number" data-line-number="8964"></td>
        <td id="LC8964" class="blob-code blob-code-inner js-file-line">        tickEnter.<span class="pl-c1">call</span>(tickTransform, scale0, scale1);</td>
      </tr>
      <tr>
        <td id="L8965" class="blob-num js-line-number" data-line-number="8965"></td>
        <td id="LC8965" class="blob-code blob-code-inner js-file-line">        tickUpdate.<span class="pl-c1">call</span>(tickTransform, scale1, scale1);</td>
      </tr>
      <tr>
        <td id="L8966" class="blob-num js-line-number" data-line-number="8966"></td>
        <td id="LC8966" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8967" class="blob-num js-line-number" data-line-number="8967"></td>
        <td id="LC8967" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8968" class="blob-num js-line-number" data-line-number="8968"></td>
        <td id="LC8968" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">scale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8969" class="blob-num js-line-number" data-line-number="8969"></td>
        <td id="LC8969" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L8970" class="blob-num js-line-number" data-line-number="8970"></td>
        <td id="LC8970" class="blob-code blob-code-inner js-file-line">      scale <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L8971" class="blob-num js-line-number" data-line-number="8971"></td>
        <td id="LC8971" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L8972" class="blob-num js-line-number" data-line-number="8972"></td>
        <td id="LC8972" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8973" class="blob-num js-line-number" data-line-number="8973"></td>
        <td id="LC8973" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">orient</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8974" class="blob-num js-line-number" data-line-number="8974"></td>
        <td id="LC8974" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> orient;</td>
      </tr>
      <tr>
        <td id="L8975" class="blob-num js-line-number" data-line-number="8975"></td>
        <td id="LC8975" class="blob-code blob-code-inner js-file-line">      orient <span class="pl-k">=</span> x <span class="pl-k">in</span> d3_svg_axisOrients <span class="pl-k">?</span> x <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> d3_svg_axisDefaultOrient;</td>
      </tr>
      <tr>
        <td id="L8976" class="blob-num js-line-number" data-line-number="8976"></td>
        <td id="LC8976" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L8977" class="blob-num js-line-number" data-line-number="8977"></td>
        <td id="LC8977" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8978" class="blob-num js-line-number" data-line-number="8978"></td>
        <td id="LC8978" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8979" class="blob-num js-line-number" data-line-number="8979"></td>
        <td id="LC8979" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> tickArguments_;</td>
      </tr>
      <tr>
        <td id="L8980" class="blob-num js-line-number" data-line-number="8980"></td>
        <td id="LC8980" class="blob-code blob-code-inner js-file-line">      tickArguments_ <span class="pl-k">=</span> arguments;</td>
      </tr>
      <tr>
        <td id="L8981" class="blob-num js-line-number" data-line-number="8981"></td>
        <td id="LC8981" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L8982" class="blob-num js-line-number" data-line-number="8982"></td>
        <td id="LC8982" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8983" class="blob-num js-line-number" data-line-number="8983"></td>
        <td id="LC8983" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">tickValues</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8984" class="blob-num js-line-number" data-line-number="8984"></td>
        <td id="LC8984" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> tickValues;</td>
      </tr>
      <tr>
        <td id="L8985" class="blob-num js-line-number" data-line-number="8985"></td>
        <td id="LC8985" class="blob-code blob-code-inner js-file-line">      tickValues <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L8986" class="blob-num js-line-number" data-line-number="8986"></td>
        <td id="LC8986" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L8987" class="blob-num js-line-number" data-line-number="8987"></td>
        <td id="LC8987" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8988" class="blob-num js-line-number" data-line-number="8988"></td>
        <td id="LC8988" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8989" class="blob-num js-line-number" data-line-number="8989"></td>
        <td id="LC8989" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> tickFormat_;</td>
      </tr>
      <tr>
        <td id="L8990" class="blob-num js-line-number" data-line-number="8990"></td>
        <td id="LC8990" class="blob-code blob-code-inner js-file-line">      tickFormat_ <span class="pl-k">=</span> x;</td>
      </tr>
      <tr>
        <td id="L8991" class="blob-num js-line-number" data-line-number="8991"></td>
        <td id="LC8991" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L8992" class="blob-num js-line-number" data-line-number="8992"></td>
        <td id="LC8992" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8993" class="blob-num js-line-number" data-line-number="8993"></td>
        <td id="LC8993" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">tickSize</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L8994" class="blob-num js-line-number" data-line-number="8994"></td>
        <td id="LC8994" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> n <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L8995" class="blob-num js-line-number" data-line-number="8995"></td>
        <td id="LC8995" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>n) <span class="pl-k">return</span> innerTickSize;</td>
      </tr>
      <tr>
        <td id="L8996" class="blob-num js-line-number" data-line-number="8996"></td>
        <td id="LC8996" class="blob-code blob-code-inner js-file-line">      innerTickSize <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L8997" class="blob-num js-line-number" data-line-number="8997"></td>
        <td id="LC8997" class="blob-code blob-code-inner js-file-line">      outerTickSize <span class="pl-k">=</span> <span class="pl-k">+</span>arguments[n <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L8998" class="blob-num js-line-number" data-line-number="8998"></td>
        <td id="LC8998" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L8999" class="blob-num js-line-number" data-line-number="8999"></td>
        <td id="LC8999" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9000" class="blob-num js-line-number" data-line-number="9000"></td>
        <td id="LC9000" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">innerTickSize</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L9001" class="blob-num js-line-number" data-line-number="9001"></td>
        <td id="LC9001" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> innerTickSize;</td>
      </tr>
      <tr>
        <td id="L9002" class="blob-num js-line-number" data-line-number="9002"></td>
        <td id="LC9002" class="blob-code blob-code-inner js-file-line">      innerTickSize <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L9003" class="blob-num js-line-number" data-line-number="9003"></td>
        <td id="LC9003" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L9004" class="blob-num js-line-number" data-line-number="9004"></td>
        <td id="LC9004" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9005" class="blob-num js-line-number" data-line-number="9005"></td>
        <td id="LC9005" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">outerTickSize</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L9006" class="blob-num js-line-number" data-line-number="9006"></td>
        <td id="LC9006" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> outerTickSize;</td>
      </tr>
      <tr>
        <td id="L9007" class="blob-num js-line-number" data-line-number="9007"></td>
        <td id="LC9007" class="blob-code blob-code-inner js-file-line">      outerTickSize <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L9008" class="blob-num js-line-number" data-line-number="9008"></td>
        <td id="LC9008" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L9009" class="blob-num js-line-number" data-line-number="9009"></td>
        <td id="LC9009" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9010" class="blob-num js-line-number" data-line-number="9010"></td>
        <td id="LC9010" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">tickPadding</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L9011" class="blob-num js-line-number" data-line-number="9011"></td>
        <td id="LC9011" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> tickPadding;</td>
      </tr>
      <tr>
        <td id="L9012" class="blob-num js-line-number" data-line-number="9012"></td>
        <td id="LC9012" class="blob-code blob-code-inner js-file-line">      tickPadding <span class="pl-k">=</span> <span class="pl-k">+</span>x;</td>
      </tr>
      <tr>
        <td id="L9013" class="blob-num js-line-number" data-line-number="9013"></td>
        <td id="LC9013" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L9014" class="blob-num js-line-number" data-line-number="9014"></td>
        <td id="LC9014" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9015" class="blob-num js-line-number" data-line-number="9015"></td>
        <td id="LC9015" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">axis</span>.<span class="pl-en">tickSubdivide</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9016" class="blob-num js-line-number" data-line-number="9016"></td>
        <td id="LC9016" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">&amp;&amp;</span> axis;</td>
      </tr>
      <tr>
        <td id="L9017" class="blob-num js-line-number" data-line-number="9017"></td>
        <td id="LC9017" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9018" class="blob-num js-line-number" data-line-number="9018"></td>
        <td id="LC9018" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> axis;</td>
      </tr>
      <tr>
        <td id="L9019" class="blob-num js-line-number" data-line-number="9019"></td>
        <td id="LC9019" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9020" class="blob-num js-line-number" data-line-number="9020"></td>
        <td id="LC9020" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_svg_axisDefaultOrient <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>, d3_svg_axisOrients <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L9021" class="blob-num js-line-number" data-line-number="9021"></td>
        <td id="LC9021" class="blob-code blob-code-inner js-file-line">    top<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L9022" class="blob-num js-line-number" data-line-number="9022"></td>
        <td id="LC9022" class="blob-code blob-code-inner js-file-line">    right<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L9023" class="blob-num js-line-number" data-line-number="9023"></td>
        <td id="LC9023" class="blob-code blob-code-inner js-file-line">    bottom<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L9024" class="blob-num js-line-number" data-line-number="9024"></td>
        <td id="LC9024" class="blob-code blob-code-inner js-file-line">    left<span class="pl-k">:</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L9025" class="blob-num js-line-number" data-line-number="9025"></td>
        <td id="LC9025" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9026" class="blob-num js-line-number" data-line-number="9026"></td>
        <td id="LC9026" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_axisX</span>(<span class="pl-smi">selection</span>, <span class="pl-smi">x0</span>, <span class="pl-smi">x1</span>) {</td>
      </tr>
      <tr>
        <td id="L9027" class="blob-num js-line-number" data-line-number="9027"></td>
        <td id="LC9027" class="blob-code blob-code-inner js-file-line">    selection.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9028" class="blob-num js-line-number" data-line-number="9028"></td>
        <td id="LC9028" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> v0 <span class="pl-k">=</span> x0(d);</td>
      </tr>
      <tr>
        <td id="L9029" class="blob-num js-line-number" data-line-number="9029"></td>
        <td id="LC9029" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (<span class="pl-c1">isFinite</span>(v0) <span class="pl-k">?</span> v0 <span class="pl-k">:</span> x1(d)) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L9030" class="blob-num js-line-number" data-line-number="9030"></td>
        <td id="LC9030" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L9031" class="blob-num js-line-number" data-line-number="9031"></td>
        <td id="LC9031" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9032" class="blob-num js-line-number" data-line-number="9032"></td>
        <td id="LC9032" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_svg_axisY</span>(<span class="pl-smi">selection</span>, <span class="pl-smi">y0</span>, <span class="pl-smi">y1</span>) {</td>
      </tr>
      <tr>
        <td id="L9033" class="blob-num js-line-number" data-line-number="9033"></td>
        <td id="LC9033" class="blob-code blob-code-inner js-file-line">    selection.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9034" class="blob-num js-line-number" data-line-number="9034"></td>
        <td id="LC9034" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> v0 <span class="pl-k">=</span> y0(d);</td>
      </tr>
      <tr>
        <td id="L9035" class="blob-num js-line-number" data-line-number="9035"></td>
        <td id="LC9035" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>translate(0,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (<span class="pl-c1">isFinite</span>(v0) <span class="pl-k">?</span> v0 <span class="pl-k">:</span> y1(d)) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L9036" class="blob-num js-line-number" data-line-number="9036"></td>
        <td id="LC9036" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L9037" class="blob-num js-line-number" data-line-number="9037"></td>
        <td id="LC9037" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9038" class="blob-num js-line-number" data-line-number="9038"></td>
        <td id="LC9038" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3.svg</span>.<span class="pl-en">brush</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9039" class="blob-num js-line-number" data-line-number="9039"></td>
        <td id="LC9039" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">event</span> <span class="pl-k">=</span> d3_eventDispatch(brush, <span class="pl-s"><span class="pl-pds">&quot;</span>brushstart<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>brush<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>brushend<span class="pl-pds">&quot;</span></span>), x <span class="pl-k">=</span> <span class="pl-c1">null</span>, y <span class="pl-k">=</span> <span class="pl-c1">null</span>, xExtent <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ], yExtent <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ], xExtentDomain, yExtentDomain, xClamp <span class="pl-k">=</span> <span class="pl-c1">true</span>, yClamp <span class="pl-k">=</span> <span class="pl-c1">true</span>, resizes <span class="pl-k">=</span> d3_svg_brushResizes[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L9040" class="blob-num js-line-number" data-line-number="9040"></td>
        <td id="LC9040" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">brush</span>(<span class="pl-smi">g</span>) {</td>
      </tr>
      <tr>
        <td id="L9041" class="blob-num js-line-number" data-line-number="9041"></td>
        <td id="LC9041" class="blob-code blob-code-inner js-file-line">      g.each(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9042" class="blob-num js-line-number" data-line-number="9042"></td>
        <td id="LC9042" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> g <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(<span class="pl-v">this</span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pointer-events<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-tap-highlight-color<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0)<span class="pl-pds">&quot;</span></span>).on(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown.brush<span class="pl-pds">&quot;</span></span>, brushstart).on(<span class="pl-s"><span class="pl-pds">&quot;</span>touchstart.brush<span class="pl-pds">&quot;</span></span>, brushstart);</td>
      </tr>
      <tr>
        <td id="L9043" class="blob-num js-line-number" data-line-number="9043"></td>
        <td id="LC9043" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> background <span class="pl-k">=</span> g.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.background<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>([ <span class="pl-c1">0</span> ]);</td>
      </tr>
      <tr>
        <td id="L9044" class="blob-num js-line-number" data-line-number="9044"></td>
        <td id="LC9044" class="blob-code blob-code-inner js-file-line">        background.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>background<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>crosshair<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L9045" class="blob-num js-line-number" data-line-number="9045"></td>
        <td id="LC9045" class="blob-code blob-code-inner js-file-line">        g.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.extent<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>([ <span class="pl-c1">0</span> ]).enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>extent<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>move<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L9046" class="blob-num js-line-number" data-line-number="9046"></td>
        <td id="LC9046" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> resize <span class="pl-k">=</span> g.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.resize<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">data</span>(resizes, d3_identity);</td>
      </tr>
      <tr>
        <td id="L9047" class="blob-num js-line-number" data-line-number="9047"></td>
        <td id="LC9047" class="blob-code blob-code-inner js-file-line">        resize.exit().<span class="pl-c1">remove</span>();</td>
      </tr>
      <tr>
        <td id="L9048" class="blob-num js-line-number" data-line-number="9048"></td>
        <td id="LC9048" class="blob-code blob-code-inner js-file-line">        resize.enter().append(<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9049" class="blob-num js-line-number" data-line-number="9049"></td>
        <td id="LC9049" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>resize <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> d;</td>
      </tr>
      <tr>
        <td id="L9050" class="blob-num js-line-number" data-line-number="9050"></td>
        <td id="LC9050" class="blob-code blob-code-inner js-file-line">        }).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9051" class="blob-num js-line-number" data-line-number="9051"></td>
        <td id="LC9051" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> d3_svg_brushCursor[d];</td>
      </tr>
      <tr>
        <td id="L9052" class="blob-num js-line-number" data-line-number="9052"></td>
        <td id="LC9052" class="blob-code blob-code-inner js-file-line">        }).append(<span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9053" class="blob-num js-line-number" data-line-number="9053"></td>
        <td id="LC9053" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[ew]</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(d) <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">3</span> <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9054" class="blob-num js-line-number" data-line-number="9054"></td>
        <td id="LC9054" class="blob-code blob-code-inner js-file-line">        }).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9055" class="blob-num js-line-number" data-line-number="9055"></td>
        <td id="LC9055" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[ns]</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(d) <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">3</span> <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9056" class="blob-num js-line-number" data-line-number="9056"></td>
        <td id="LC9056" class="blob-code blob-code-inner js-file-line">        }).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">6</span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">6</span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L9057" class="blob-num js-line-number" data-line-number="9057"></td>
        <td id="LC9057" class="blob-code blob-code-inner js-file-line">        resize.<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>, brush.empty() <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L9058" class="blob-num js-line-number" data-line-number="9058"></td>
        <td id="LC9058" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> gUpdate <span class="pl-k">=</span> d3.transition(g), backgroundUpdate <span class="pl-k">=</span> d3.transition(background), range;</td>
      </tr>
      <tr>
        <td id="L9059" class="blob-num js-line-number" data-line-number="9059"></td>
        <td id="LC9059" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x) {</td>
      </tr>
      <tr>
        <td id="L9060" class="blob-num js-line-number" data-line-number="9060"></td>
        <td id="LC9060" class="blob-code blob-code-inner js-file-line">          range <span class="pl-k">=</span> d3_scaleRange(x);</td>
      </tr>
      <tr>
        <td id="L9061" class="blob-num js-line-number" data-line-number="9061"></td>
        <td id="LC9061" class="blob-code blob-code-inner js-file-line">          backgroundUpdate.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, range[<span class="pl-c1">0</span>]).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, range[<span class="pl-c1">1</span>] <span class="pl-k">-</span> range[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L9062" class="blob-num js-line-number" data-line-number="9062"></td>
        <td id="LC9062" class="blob-code blob-code-inner js-file-line">          redrawX(gUpdate);</td>
      </tr>
      <tr>
        <td id="L9063" class="blob-num js-line-number" data-line-number="9063"></td>
        <td id="LC9063" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9064" class="blob-num js-line-number" data-line-number="9064"></td>
        <td id="LC9064" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (y) {</td>
      </tr>
      <tr>
        <td id="L9065" class="blob-num js-line-number" data-line-number="9065"></td>
        <td id="LC9065" class="blob-code blob-code-inner js-file-line">          range <span class="pl-k">=</span> d3_scaleRange(y);</td>
      </tr>
      <tr>
        <td id="L9066" class="blob-num js-line-number" data-line-number="9066"></td>
        <td id="LC9066" class="blob-code blob-code-inner js-file-line">          backgroundUpdate.attr(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, range[<span class="pl-c1">0</span>]).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, range[<span class="pl-c1">1</span>] <span class="pl-k">-</span> range[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L9067" class="blob-num js-line-number" data-line-number="9067"></td>
        <td id="LC9067" class="blob-code blob-code-inner js-file-line">          redrawY(gUpdate);</td>
      </tr>
      <tr>
        <td id="L9068" class="blob-num js-line-number" data-line-number="9068"></td>
        <td id="LC9068" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9069" class="blob-num js-line-number" data-line-number="9069"></td>
        <td id="LC9069" class="blob-code blob-code-inner js-file-line">        redraw(gUpdate);</td>
      </tr>
      <tr>
        <td id="L9070" class="blob-num js-line-number" data-line-number="9070"></td>
        <td id="LC9070" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L9071" class="blob-num js-line-number" data-line-number="9071"></td>
        <td id="LC9071" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9072" class="blob-num js-line-number" data-line-number="9072"></td>
        <td id="LC9072" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">brush</span>.<span class="pl-en">event</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">g</span>) {</td>
      </tr>
      <tr>
        <td id="L9073" class="blob-num js-line-number" data-line-number="9073"></td>
        <td id="LC9073" class="blob-code blob-code-inner js-file-line">      g.each(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9074" class="blob-num js-line-number" data-line-number="9074"></td>
        <td id="LC9074" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> event_ <span class="pl-k">=</span> <span class="pl-c1">event</span>.of(<span class="pl-v">this</span>, arguments), extent1 <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L9075" class="blob-num js-line-number" data-line-number="9075"></td>
        <td id="LC9075" class="blob-code blob-code-inner js-file-line">          x<span class="pl-k">:</span> xExtent,</td>
      </tr>
      <tr>
        <td id="L9076" class="blob-num js-line-number" data-line-number="9076"></td>
        <td id="LC9076" class="blob-code blob-code-inner js-file-line">          y<span class="pl-k">:</span> yExtent,</td>
      </tr>
      <tr>
        <td id="L9077" class="blob-num js-line-number" data-line-number="9077"></td>
        <td id="LC9077" class="blob-code blob-code-inner js-file-line">          i<span class="pl-k">:</span> xExtentDomain,</td>
      </tr>
      <tr>
        <td id="L9078" class="blob-num js-line-number" data-line-number="9078"></td>
        <td id="LC9078" class="blob-code blob-code-inner js-file-line">          j<span class="pl-k">:</span> yExtentDomain</td>
      </tr>
      <tr>
        <td id="L9079" class="blob-num js-line-number" data-line-number="9079"></td>
        <td id="LC9079" class="blob-code blob-code-inner js-file-line">        }, extent0 <span class="pl-k">=</span> <span class="pl-v">this</span>.__chart__ <span class="pl-k">||</span> extent1;</td>
      </tr>
      <tr>
        <td id="L9080" class="blob-num js-line-number" data-line-number="9080"></td>
        <td id="LC9080" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.__chart__ <span class="pl-k">=</span> extent1;</td>
      </tr>
      <tr>
        <td id="L9081" class="blob-num js-line-number" data-line-number="9081"></td>
        <td id="LC9081" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3_transitionInheritId) {</td>
      </tr>
      <tr>
        <td id="L9082" class="blob-num js-line-number" data-line-number="9082"></td>
        <td id="LC9082" class="blob-code blob-code-inner js-file-line">          d3.<span class="pl-c1">select</span>(<span class="pl-v">this</span>).transition().each(<span class="pl-s"><span class="pl-pds">&quot;</span>start.brush<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9083" class="blob-num js-line-number" data-line-number="9083"></td>
        <td id="LC9083" class="blob-code blob-code-inner js-file-line">            xExtentDomain <span class="pl-k">=</span> extent0.i;</td>
      </tr>
      <tr>
        <td id="L9084" class="blob-num js-line-number" data-line-number="9084"></td>
        <td id="LC9084" class="blob-code blob-code-inner js-file-line">            yExtentDomain <span class="pl-k">=</span> extent0.j;</td>
      </tr>
      <tr>
        <td id="L9085" class="blob-num js-line-number" data-line-number="9085"></td>
        <td id="LC9085" class="blob-code blob-code-inner js-file-line">            xExtent <span class="pl-k">=</span> extent0.<span class="pl-c1">x</span>;</td>
      </tr>
      <tr>
        <td id="L9086" class="blob-num js-line-number" data-line-number="9086"></td>
        <td id="LC9086" class="blob-code blob-code-inner js-file-line">            yExtent <span class="pl-k">=</span> extent0.<span class="pl-c1">y</span>;</td>
      </tr>
      <tr>
        <td id="L9087" class="blob-num js-line-number" data-line-number="9087"></td>
        <td id="LC9087" class="blob-code blob-code-inner js-file-line">            event_({</td>
      </tr>
      <tr>
        <td id="L9088" class="blob-num js-line-number" data-line-number="9088"></td>
        <td id="LC9088" class="blob-code blob-code-inner js-file-line">              type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brushstart<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9089" class="blob-num js-line-number" data-line-number="9089"></td>
        <td id="LC9089" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L9090" class="blob-num js-line-number" data-line-number="9090"></td>
        <td id="LC9090" class="blob-code blob-code-inner js-file-line">          }).tween(<span class="pl-s"><span class="pl-pds">&quot;</span>brush:brush<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9091" class="blob-num js-line-number" data-line-number="9091"></td>
        <td id="LC9091" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> xi <span class="pl-k">=</span> d3_interpolateArray(xExtent, extent1.<span class="pl-c1">x</span>), yi <span class="pl-k">=</span> d3_interpolateArray(yExtent, extent1.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L9092" class="blob-num js-line-number" data-line-number="9092"></td>
        <td id="LC9092" class="blob-code blob-code-inner js-file-line">            xExtentDomain <span class="pl-k">=</span> yExtentDomain <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9093" class="blob-num js-line-number" data-line-number="9093"></td>
        <td id="LC9093" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L9094" class="blob-num js-line-number" data-line-number="9094"></td>
        <td id="LC9094" class="blob-code blob-code-inner js-file-line">              xExtent <span class="pl-k">=</span> extent1.<span class="pl-c1">x</span> <span class="pl-k">=</span> xi(t);</td>
      </tr>
      <tr>
        <td id="L9095" class="blob-num js-line-number" data-line-number="9095"></td>
        <td id="LC9095" class="blob-code blob-code-inner js-file-line">              yExtent <span class="pl-k">=</span> extent1.<span class="pl-c1">y</span> <span class="pl-k">=</span> yi(t);</td>
      </tr>
      <tr>
        <td id="L9096" class="blob-num js-line-number" data-line-number="9096"></td>
        <td id="LC9096" class="blob-code blob-code-inner js-file-line">              event_({</td>
      </tr>
      <tr>
        <td id="L9097" class="blob-num js-line-number" data-line-number="9097"></td>
        <td id="LC9097" class="blob-code blob-code-inner js-file-line">                type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brush<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9098" class="blob-num js-line-number" data-line-number="9098"></td>
        <td id="LC9098" class="blob-code blob-code-inner js-file-line">                mode<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9099" class="blob-num js-line-number" data-line-number="9099"></td>
        <td id="LC9099" class="blob-code blob-code-inner js-file-line">              });</td>
      </tr>
      <tr>
        <td id="L9100" class="blob-num js-line-number" data-line-number="9100"></td>
        <td id="LC9100" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L9101" class="blob-num js-line-number" data-line-number="9101"></td>
        <td id="LC9101" class="blob-code blob-code-inner js-file-line">          }).each(<span class="pl-s"><span class="pl-pds">&quot;</span>end.brush<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9102" class="blob-num js-line-number" data-line-number="9102"></td>
        <td id="LC9102" class="blob-code blob-code-inner js-file-line">            xExtentDomain <span class="pl-k">=</span> extent1.i;</td>
      </tr>
      <tr>
        <td id="L9103" class="blob-num js-line-number" data-line-number="9103"></td>
        <td id="LC9103" class="blob-code blob-code-inner js-file-line">            yExtentDomain <span class="pl-k">=</span> extent1.j;</td>
      </tr>
      <tr>
        <td id="L9104" class="blob-num js-line-number" data-line-number="9104"></td>
        <td id="LC9104" class="blob-code blob-code-inner js-file-line">            event_({</td>
      </tr>
      <tr>
        <td id="L9105" class="blob-num js-line-number" data-line-number="9105"></td>
        <td id="LC9105" class="blob-code blob-code-inner js-file-line">              type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brush<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9106" class="blob-num js-line-number" data-line-number="9106"></td>
        <td id="LC9106" class="blob-code blob-code-inner js-file-line">              mode<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9107" class="blob-num js-line-number" data-line-number="9107"></td>
        <td id="LC9107" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L9108" class="blob-num js-line-number" data-line-number="9108"></td>
        <td id="LC9108" class="blob-code blob-code-inner js-file-line">            event_({</td>
      </tr>
      <tr>
        <td id="L9109" class="blob-num js-line-number" data-line-number="9109"></td>
        <td id="LC9109" class="blob-code blob-code-inner js-file-line">              type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brushend<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9110" class="blob-num js-line-number" data-line-number="9110"></td>
        <td id="LC9110" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L9111" class="blob-num js-line-number" data-line-number="9111"></td>
        <td id="LC9111" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L9112" class="blob-num js-line-number" data-line-number="9112"></td>
        <td id="LC9112" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9113" class="blob-num js-line-number" data-line-number="9113"></td>
        <td id="LC9113" class="blob-code blob-code-inner js-file-line">          event_({</td>
      </tr>
      <tr>
        <td id="L9114" class="blob-num js-line-number" data-line-number="9114"></td>
        <td id="LC9114" class="blob-code blob-code-inner js-file-line">            type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brushstart<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9115" class="blob-num js-line-number" data-line-number="9115"></td>
        <td id="LC9115" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L9116" class="blob-num js-line-number" data-line-number="9116"></td>
        <td id="LC9116" class="blob-code blob-code-inner js-file-line">          event_({</td>
      </tr>
      <tr>
        <td id="L9117" class="blob-num js-line-number" data-line-number="9117"></td>
        <td id="LC9117" class="blob-code blob-code-inner js-file-line">            type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brush<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9118" class="blob-num js-line-number" data-line-number="9118"></td>
        <td id="LC9118" class="blob-code blob-code-inner js-file-line">            mode<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9119" class="blob-num js-line-number" data-line-number="9119"></td>
        <td id="LC9119" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L9120" class="blob-num js-line-number" data-line-number="9120"></td>
        <td id="LC9120" class="blob-code blob-code-inner js-file-line">          event_({</td>
      </tr>
      <tr>
        <td id="L9121" class="blob-num js-line-number" data-line-number="9121"></td>
        <td id="LC9121" class="blob-code blob-code-inner js-file-line">            type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brushend<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9122" class="blob-num js-line-number" data-line-number="9122"></td>
        <td id="LC9122" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L9123" class="blob-num js-line-number" data-line-number="9123"></td>
        <td id="LC9123" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9124" class="blob-num js-line-number" data-line-number="9124"></td>
        <td id="LC9124" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L9125" class="blob-num js-line-number" data-line-number="9125"></td>
        <td id="LC9125" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9126" class="blob-num js-line-number" data-line-number="9126"></td>
        <td id="LC9126" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">redraw</span>(<span class="pl-smi">g</span>) {</td>
      </tr>
      <tr>
        <td id="L9127" class="blob-num js-line-number" data-line-number="9127"></td>
        <td id="LC9127" class="blob-code blob-code-inner js-file-line">      g.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.resize<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9128" class="blob-num js-line-number" data-line-number="9128"></td>
        <td id="LC9128" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> xExtent[<span class="pl-k">+</span><span class="pl-sr"><span class="pl-pds">/</span>e<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(d)] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> yExtent[<span class="pl-k">+</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>s<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(d)] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L9129" class="blob-num js-line-number" data-line-number="9129"></td>
        <td id="LC9129" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L9130" class="blob-num js-line-number" data-line-number="9130"></td>
        <td id="LC9130" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9131" class="blob-num js-line-number" data-line-number="9131"></td>
        <td id="LC9131" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">redrawX</span>(<span class="pl-smi">g</span>) {</td>
      </tr>
      <tr>
        <td id="L9132" class="blob-num js-line-number" data-line-number="9132"></td>
        <td id="LC9132" class="blob-code blob-code-inner js-file-line">      g.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.extent<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>, xExtent[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L9133" class="blob-num js-line-number" data-line-number="9133"></td>
        <td id="LC9133" class="blob-code blob-code-inner js-file-line">      g.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.extent,.n&gt;rect,.s&gt;rect<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>, xExtent[<span class="pl-c1">1</span>] <span class="pl-k">-</span> xExtent[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L9134" class="blob-num js-line-number" data-line-number="9134"></td>
        <td id="LC9134" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9135" class="blob-num js-line-number" data-line-number="9135"></td>
        <td id="LC9135" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">redrawY</span>(<span class="pl-smi">g</span>) {</td>
      </tr>
      <tr>
        <td id="L9136" class="blob-num js-line-number" data-line-number="9136"></td>
        <td id="LC9136" class="blob-code blob-code-inner js-file-line">      g.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.extent<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>, yExtent[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L9137" class="blob-num js-line-number" data-line-number="9137"></td>
        <td id="LC9137" class="blob-code blob-code-inner js-file-line">      g.selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.extent,.e&gt;rect,.w&gt;rect<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, yExtent[<span class="pl-c1">1</span>] <span class="pl-k">-</span> yExtent[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L9138" class="blob-num js-line-number" data-line-number="9138"></td>
        <td id="LC9138" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9139" class="blob-num js-line-number" data-line-number="9139"></td>
        <td id="LC9139" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">brushstart</span>() {</td>
      </tr>
      <tr>
        <td id="L9140" class="blob-num js-line-number" data-line-number="9140"></td>
        <td id="LC9140" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> target <span class="pl-k">=</span> <span class="pl-v">this</span>, eventTarget <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(d3.<span class="pl-c1">event</span>.<span class="pl-c1">target</span>), event_ <span class="pl-k">=</span> <span class="pl-c1">event</span>.of(target, arguments), g <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(target), resizing <span class="pl-k">=</span> eventTarget.datum(), resizingX <span class="pl-k">=</span> <span class="pl-k">!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(n<span class="pl-k">|</span>s)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(resizing) <span class="pl-k">&amp;&amp;</span> x, resizingY <span class="pl-k">=</span> <span class="pl-k">!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(e<span class="pl-k">|</span>w)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(resizing) <span class="pl-k">&amp;&amp;</span> y, dragging <span class="pl-k">=</span> eventTarget.classed(<span class="pl-s"><span class="pl-pds">&quot;</span>extent<span class="pl-pds">&quot;</span></span>), dragRestore <span class="pl-k">=</span> d3_event_dragSuppress(target), center, origin <span class="pl-k">=</span> d3.mouse(target), offset;</td>
      </tr>
      <tr>
        <td id="L9141" class="blob-num js-line-number" data-line-number="9141"></td>
        <td id="LC9141" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> w <span class="pl-k">=</span> d3.<span class="pl-c1">select</span>(d3_window(target)).on(<span class="pl-s"><span class="pl-pds">&quot;</span>keydown.brush<span class="pl-pds">&quot;</span></span>, keydown).on(<span class="pl-s"><span class="pl-pds">&quot;</span>keyup.brush<span class="pl-pds">&quot;</span></span>, keyup);</td>
      </tr>
      <tr>
        <td id="L9142" class="blob-num js-line-number" data-line-number="9142"></td>
        <td id="LC9142" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (d3.<span class="pl-c1">event</span>.changedTouches) {</td>
      </tr>
      <tr>
        <td id="L9143" class="blob-num js-line-number" data-line-number="9143"></td>
        <td id="LC9143" class="blob-code blob-code-inner js-file-line">        w.on(<span class="pl-s"><span class="pl-pds">&quot;</span>touchmove.brush<span class="pl-pds">&quot;</span></span>, brushmove).on(<span class="pl-s"><span class="pl-pds">&quot;</span>touchend.brush<span class="pl-pds">&quot;</span></span>, brushend);</td>
      </tr>
      <tr>
        <td id="L9144" class="blob-num js-line-number" data-line-number="9144"></td>
        <td id="LC9144" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9145" class="blob-num js-line-number" data-line-number="9145"></td>
        <td id="LC9145" class="blob-code blob-code-inner js-file-line">        w.on(<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove.brush<span class="pl-pds">&quot;</span></span>, brushmove).on(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup.brush<span class="pl-pds">&quot;</span></span>, brushend);</td>
      </tr>
      <tr>
        <td id="L9146" class="blob-num js-line-number" data-line-number="9146"></td>
        <td id="LC9146" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9147" class="blob-num js-line-number" data-line-number="9147"></td>
        <td id="LC9147" class="blob-code blob-code-inner js-file-line">      g.interrupt().selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span>).interrupt();</td>
      </tr>
      <tr>
        <td id="L9148" class="blob-num js-line-number" data-line-number="9148"></td>
        <td id="LC9148" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dragging) {</td>
      </tr>
      <tr>
        <td id="L9149" class="blob-num js-line-number" data-line-number="9149"></td>
        <td id="LC9149" class="blob-code blob-code-inner js-file-line">        origin[<span class="pl-c1">0</span>] <span class="pl-k">=</span> xExtent[<span class="pl-c1">0</span>] <span class="pl-k">-</span> origin[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L9150" class="blob-num js-line-number" data-line-number="9150"></td>
        <td id="LC9150" class="blob-code blob-code-inner js-file-line">        origin[<span class="pl-c1">1</span>] <span class="pl-k">=</span> yExtent[<span class="pl-c1">0</span>] <span class="pl-k">-</span> origin[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9151" class="blob-num js-line-number" data-line-number="9151"></td>
        <td id="LC9151" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (resizing) {</td>
      </tr>
      <tr>
        <td id="L9152" class="blob-num js-line-number" data-line-number="9152"></td>
        <td id="LC9152" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ex <span class="pl-k">=</span> <span class="pl-k">+</span><span class="pl-sr"><span class="pl-pds">/</span>w<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(resizing), ey <span class="pl-k">=</span> <span class="pl-k">+</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>n<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(resizing);</td>
      </tr>
      <tr>
        <td id="L9153" class="blob-num js-line-number" data-line-number="9153"></td>
        <td id="LC9153" class="blob-code blob-code-inner js-file-line">        offset <span class="pl-k">=</span> [ xExtent[<span class="pl-c1">1</span> <span class="pl-k">-</span> ex] <span class="pl-k">-</span> origin[<span class="pl-c1">0</span>], yExtent[<span class="pl-c1">1</span> <span class="pl-k">-</span> ey] <span class="pl-k">-</span> origin[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L9154" class="blob-num js-line-number" data-line-number="9154"></td>
        <td id="LC9154" class="blob-code blob-code-inner js-file-line">        origin[<span class="pl-c1">0</span>] <span class="pl-k">=</span> xExtent[ex];</td>
      </tr>
      <tr>
        <td id="L9155" class="blob-num js-line-number" data-line-number="9155"></td>
        <td id="LC9155" class="blob-code blob-code-inner js-file-line">        origin[<span class="pl-c1">1</span>] <span class="pl-k">=</span> yExtent[ey];</td>
      </tr>
      <tr>
        <td id="L9156" class="blob-num js-line-number" data-line-number="9156"></td>
        <td id="LC9156" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (d3.<span class="pl-c1">event</span>.altKey) center <span class="pl-k">=</span> origin.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L9157" class="blob-num js-line-number" data-line-number="9157"></td>
        <td id="LC9157" class="blob-code blob-code-inner js-file-line">      g.<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pointer-events<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>).selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.resize<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L9158" class="blob-num js-line-number" data-line-number="9158"></td>
        <td id="LC9158" class="blob-code blob-code-inner js-file-line">      d3.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>, eventTarget.<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L9159" class="blob-num js-line-number" data-line-number="9159"></td>
        <td id="LC9159" class="blob-code blob-code-inner js-file-line">      event_({</td>
      </tr>
      <tr>
        <td id="L9160" class="blob-num js-line-number" data-line-number="9160"></td>
        <td id="LC9160" class="blob-code blob-code-inner js-file-line">        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brushstart<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9161" class="blob-num js-line-number" data-line-number="9161"></td>
        <td id="LC9161" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L9162" class="blob-num js-line-number" data-line-number="9162"></td>
        <td id="LC9162" class="blob-code blob-code-inner js-file-line">      brushmove();</td>
      </tr>
      <tr>
        <td id="L9163" class="blob-num js-line-number" data-line-number="9163"></td>
        <td id="LC9163" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">keydown</span>() {</td>
      </tr>
      <tr>
        <td id="L9164" class="blob-num js-line-number" data-line-number="9164"></td>
        <td id="LC9164" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3.<span class="pl-c1">event</span>.keyCode <span class="pl-k">==</span> <span class="pl-c1">32</span>) {</td>
      </tr>
      <tr>
        <td id="L9165" class="blob-num js-line-number" data-line-number="9165"></td>
        <td id="LC9165" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>dragging) {</td>
      </tr>
      <tr>
        <td id="L9166" class="blob-num js-line-number" data-line-number="9166"></td>
        <td id="LC9166" class="blob-code blob-code-inner js-file-line">            center <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9167" class="blob-num js-line-number" data-line-number="9167"></td>
        <td id="LC9167" class="blob-code blob-code-inner js-file-line">            origin[<span class="pl-c1">0</span>] <span class="pl-k">-=</span> xExtent[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9168" class="blob-num js-line-number" data-line-number="9168"></td>
        <td id="LC9168" class="blob-code blob-code-inner js-file-line">            origin[<span class="pl-c1">1</span>] <span class="pl-k">-=</span> yExtent[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9169" class="blob-num js-line-number" data-line-number="9169"></td>
        <td id="LC9169" class="blob-code blob-code-inner js-file-line">            dragging <span class="pl-k">=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L9170" class="blob-num js-line-number" data-line-number="9170"></td>
        <td id="LC9170" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L9171" class="blob-num js-line-number" data-line-number="9171"></td>
        <td id="LC9171" class="blob-code blob-code-inner js-file-line">          d3_eventPreventDefault();</td>
      </tr>
      <tr>
        <td id="L9172" class="blob-num js-line-number" data-line-number="9172"></td>
        <td id="LC9172" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9173" class="blob-num js-line-number" data-line-number="9173"></td>
        <td id="LC9173" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9174" class="blob-num js-line-number" data-line-number="9174"></td>
        <td id="LC9174" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">keyup</span>() {</td>
      </tr>
      <tr>
        <td id="L9175" class="blob-num js-line-number" data-line-number="9175"></td>
        <td id="LC9175" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (d3.<span class="pl-c1">event</span>.keyCode <span class="pl-k">==</span> <span class="pl-c1">32</span> <span class="pl-k">&amp;&amp;</span> dragging <span class="pl-k">==</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L9176" class="blob-num js-line-number" data-line-number="9176"></td>
        <td id="LC9176" class="blob-code blob-code-inner js-file-line">          origin[<span class="pl-c1">0</span>] <span class="pl-k">+=</span> xExtent[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9177" class="blob-num js-line-number" data-line-number="9177"></td>
        <td id="LC9177" class="blob-code blob-code-inner js-file-line">          origin[<span class="pl-c1">1</span>] <span class="pl-k">+=</span> yExtent[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9178" class="blob-num js-line-number" data-line-number="9178"></td>
        <td id="LC9178" class="blob-code blob-code-inner js-file-line">          dragging <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L9179" class="blob-num js-line-number" data-line-number="9179"></td>
        <td id="LC9179" class="blob-code blob-code-inner js-file-line">          d3_eventPreventDefault();</td>
      </tr>
      <tr>
        <td id="L9180" class="blob-num js-line-number" data-line-number="9180"></td>
        <td id="LC9180" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9181" class="blob-num js-line-number" data-line-number="9181"></td>
        <td id="LC9181" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9182" class="blob-num js-line-number" data-line-number="9182"></td>
        <td id="LC9182" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">brushmove</span>() {</td>
      </tr>
      <tr>
        <td id="L9183" class="blob-num js-line-number" data-line-number="9183"></td>
        <td id="LC9183" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> point <span class="pl-k">=</span> d3.mouse(target), moved <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L9184" class="blob-num js-line-number" data-line-number="9184"></td>
        <td id="LC9184" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (offset) {</td>
      </tr>
      <tr>
        <td id="L9185" class="blob-num js-line-number" data-line-number="9185"></td>
        <td id="LC9185" class="blob-code blob-code-inner js-file-line">          point[<span class="pl-c1">0</span>] <span class="pl-k">+=</span> offset[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L9186" class="blob-num js-line-number" data-line-number="9186"></td>
        <td id="LC9186" class="blob-code blob-code-inner js-file-line">          point[<span class="pl-c1">1</span>] <span class="pl-k">+=</span> offset[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9187" class="blob-num js-line-number" data-line-number="9187"></td>
        <td id="LC9187" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9188" class="blob-num js-line-number" data-line-number="9188"></td>
        <td id="LC9188" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>dragging) {</td>
      </tr>
      <tr>
        <td id="L9189" class="blob-num js-line-number" data-line-number="9189"></td>
        <td id="LC9189" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (d3.<span class="pl-c1">event</span>.altKey) {</td>
      </tr>
      <tr>
        <td id="L9190" class="blob-num js-line-number" data-line-number="9190"></td>
        <td id="LC9190" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>center) center <span class="pl-k">=</span> [ (xExtent[<span class="pl-c1">0</span>] <span class="pl-k">+</span> xExtent[<span class="pl-c1">1</span>]) / <span class="pl-c1">2</span>, (yExtent[<span class="pl-c1">0</span>] <span class="pl-k">+</span> yExtent[<span class="pl-c1">1</span>]) / <span class="pl-c1">2</span> ];</td>
      </tr>
      <tr>
        <td id="L9191" class="blob-num js-line-number" data-line-number="9191"></td>
        <td id="LC9191" class="blob-code blob-code-inner js-file-line">            origin[<span class="pl-c1">0</span>] <span class="pl-k">=</span> xExtent[<span class="pl-k">+</span>(point[<span class="pl-c1">0</span>] <span class="pl-k">&lt;</span> center[<span class="pl-c1">0</span>])];</td>
      </tr>
      <tr>
        <td id="L9192" class="blob-num js-line-number" data-line-number="9192"></td>
        <td id="LC9192" class="blob-code blob-code-inner js-file-line">            origin[<span class="pl-c1">1</span>] <span class="pl-k">=</span> yExtent[<span class="pl-k">+</span>(point[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> center[<span class="pl-c1">1</span>])];</td>
      </tr>
      <tr>
        <td id="L9193" class="blob-num js-line-number" data-line-number="9193"></td>
        <td id="LC9193" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> center <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9194" class="blob-num js-line-number" data-line-number="9194"></td>
        <td id="LC9194" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9195" class="blob-num js-line-number" data-line-number="9195"></td>
        <td id="LC9195" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (resizingX <span class="pl-k">&amp;&amp;</span> move1(point, x, <span class="pl-c1">0</span>)) {</td>
      </tr>
      <tr>
        <td id="L9196" class="blob-num js-line-number" data-line-number="9196"></td>
        <td id="LC9196" class="blob-code blob-code-inner js-file-line">          redrawX(g);</td>
      </tr>
      <tr>
        <td id="L9197" class="blob-num js-line-number" data-line-number="9197"></td>
        <td id="LC9197" class="blob-code blob-code-inner js-file-line">          moved <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L9198" class="blob-num js-line-number" data-line-number="9198"></td>
        <td id="LC9198" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9199" class="blob-num js-line-number" data-line-number="9199"></td>
        <td id="LC9199" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (resizingY <span class="pl-k">&amp;&amp;</span> move1(point, y, <span class="pl-c1">1</span>)) {</td>
      </tr>
      <tr>
        <td id="L9200" class="blob-num js-line-number" data-line-number="9200"></td>
        <td id="LC9200" class="blob-code blob-code-inner js-file-line">          redrawY(g);</td>
      </tr>
      <tr>
        <td id="L9201" class="blob-num js-line-number" data-line-number="9201"></td>
        <td id="LC9201" class="blob-code blob-code-inner js-file-line">          moved <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L9202" class="blob-num js-line-number" data-line-number="9202"></td>
        <td id="LC9202" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9203" class="blob-num js-line-number" data-line-number="9203"></td>
        <td id="LC9203" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (moved) {</td>
      </tr>
      <tr>
        <td id="L9204" class="blob-num js-line-number" data-line-number="9204"></td>
        <td id="LC9204" class="blob-code blob-code-inner js-file-line">          redraw(g);</td>
      </tr>
      <tr>
        <td id="L9205" class="blob-num js-line-number" data-line-number="9205"></td>
        <td id="LC9205" class="blob-code blob-code-inner js-file-line">          event_({</td>
      </tr>
      <tr>
        <td id="L9206" class="blob-num js-line-number" data-line-number="9206"></td>
        <td id="LC9206" class="blob-code blob-code-inner js-file-line">            type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brush<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9207" class="blob-num js-line-number" data-line-number="9207"></td>
        <td id="LC9207" class="blob-code blob-code-inner js-file-line">            mode<span class="pl-k">:</span> dragging <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>move<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9208" class="blob-num js-line-number" data-line-number="9208"></td>
        <td id="LC9208" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L9209" class="blob-num js-line-number" data-line-number="9209"></td>
        <td id="LC9209" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9210" class="blob-num js-line-number" data-line-number="9210"></td>
        <td id="LC9210" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9211" class="blob-num js-line-number" data-line-number="9211"></td>
        <td id="LC9211" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">move1</span>(<span class="pl-smi">point</span>, <span class="pl-smi">scale</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L9212" class="blob-num js-line-number" data-line-number="9212"></td>
        <td id="LC9212" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> range <span class="pl-k">=</span> d3_scaleRange(scale), r0 <span class="pl-k">=</span> range[<span class="pl-c1">0</span>], r1 <span class="pl-k">=</span> range[<span class="pl-c1">1</span>], position <span class="pl-k">=</span> origin[i], extent <span class="pl-k">=</span> i <span class="pl-k">?</span> yExtent <span class="pl-k">:</span> xExtent, size <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>] <span class="pl-k">-</span> extent[<span class="pl-c1">0</span>], min, max;</td>
      </tr>
      <tr>
        <td id="L9213" class="blob-num js-line-number" data-line-number="9213"></td>
        <td id="LC9213" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (dragging) {</td>
      </tr>
      <tr>
        <td id="L9214" class="blob-num js-line-number" data-line-number="9214"></td>
        <td id="LC9214" class="blob-code blob-code-inner js-file-line">          r0 <span class="pl-k">-=</span> position;</td>
      </tr>
      <tr>
        <td id="L9215" class="blob-num js-line-number" data-line-number="9215"></td>
        <td id="LC9215" class="blob-code blob-code-inner js-file-line">          r1 <span class="pl-k">-=</span> size <span class="pl-k">+</span> position;</td>
      </tr>
      <tr>
        <td id="L9216" class="blob-num js-line-number" data-line-number="9216"></td>
        <td id="LC9216" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9217" class="blob-num js-line-number" data-line-number="9217"></td>
        <td id="LC9217" class="blob-code blob-code-inner js-file-line">        min <span class="pl-k">=</span> (i <span class="pl-k">?</span> yClamp <span class="pl-k">:</span> xClamp) <span class="pl-k">?</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(r0, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(r1, point[i])) <span class="pl-k">:</span> point[i];</td>
      </tr>
      <tr>
        <td id="L9218" class="blob-num js-line-number" data-line-number="9218"></td>
        <td id="LC9218" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (dragging) {</td>
      </tr>
      <tr>
        <td id="L9219" class="blob-num js-line-number" data-line-number="9219"></td>
        <td id="LC9219" class="blob-code blob-code-inner js-file-line">          max <span class="pl-k">=</span> (min <span class="pl-k">+=</span> position) <span class="pl-k">+</span> size;</td>
      </tr>
      <tr>
        <td id="L9220" class="blob-num js-line-number" data-line-number="9220"></td>
        <td id="LC9220" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9221" class="blob-num js-line-number" data-line-number="9221"></td>
        <td id="LC9221" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (center) position <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(r0, <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(r1, <span class="pl-c1">2</span> <span class="pl-k">*</span> center[i] <span class="pl-k">-</span> min));</td>
      </tr>
      <tr>
        <td id="L9222" class="blob-num js-line-number" data-line-number="9222"></td>
        <td id="LC9222" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (position <span class="pl-k">&lt;</span> min) {</td>
      </tr>
      <tr>
        <td id="L9223" class="blob-num js-line-number" data-line-number="9223"></td>
        <td id="LC9223" class="blob-code blob-code-inner js-file-line">            max <span class="pl-k">=</span> min;</td>
      </tr>
      <tr>
        <td id="L9224" class="blob-num js-line-number" data-line-number="9224"></td>
        <td id="LC9224" class="blob-code blob-code-inner js-file-line">            min <span class="pl-k">=</span> position;</td>
      </tr>
      <tr>
        <td id="L9225" class="blob-num js-line-number" data-line-number="9225"></td>
        <td id="LC9225" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9226" class="blob-num js-line-number" data-line-number="9226"></td>
        <td id="LC9226" class="blob-code blob-code-inner js-file-line">            max <span class="pl-k">=</span> position;</td>
      </tr>
      <tr>
        <td id="L9227" class="blob-num js-line-number" data-line-number="9227"></td>
        <td id="LC9227" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L9228" class="blob-num js-line-number" data-line-number="9228"></td>
        <td id="LC9228" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9229" class="blob-num js-line-number" data-line-number="9229"></td>
        <td id="LC9229" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (extent[<span class="pl-c1">0</span>] <span class="pl-k">!=</span> min <span class="pl-k">||</span> extent[<span class="pl-c1">1</span>] <span class="pl-k">!=</span> max) {</td>
      </tr>
      <tr>
        <td id="L9230" class="blob-num js-line-number" data-line-number="9230"></td>
        <td id="LC9230" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (i) yExtentDomain <span class="pl-k">=</span> <span class="pl-c1">null</span>; <span class="pl-k">else</span> xExtentDomain <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9231" class="blob-num js-line-number" data-line-number="9231"></td>
        <td id="LC9231" class="blob-code blob-code-inner js-file-line">          extent[<span class="pl-c1">0</span>] <span class="pl-k">=</span> min;</td>
      </tr>
      <tr>
        <td id="L9232" class="blob-num js-line-number" data-line-number="9232"></td>
        <td id="LC9232" class="blob-code blob-code-inner js-file-line">          extent[<span class="pl-c1">1</span>] <span class="pl-k">=</span> max;</td>
      </tr>
      <tr>
        <td id="L9233" class="blob-num js-line-number" data-line-number="9233"></td>
        <td id="LC9233" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L9234" class="blob-num js-line-number" data-line-number="9234"></td>
        <td id="LC9234" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9235" class="blob-num js-line-number" data-line-number="9235"></td>
        <td id="LC9235" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9236" class="blob-num js-line-number" data-line-number="9236"></td>
        <td id="LC9236" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">brushend</span>() {</td>
      </tr>
      <tr>
        <td id="L9237" class="blob-num js-line-number" data-line-number="9237"></td>
        <td id="LC9237" class="blob-code blob-code-inner js-file-line">        brushmove();</td>
      </tr>
      <tr>
        <td id="L9238" class="blob-num js-line-number" data-line-number="9238"></td>
        <td id="LC9238" class="blob-code blob-code-inner js-file-line">        g.<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pointer-events<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span>).selectAll(<span class="pl-s"><span class="pl-pds">&quot;</span>.resize<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>, brush.empty() <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L9239" class="blob-num js-line-number" data-line-number="9239"></td>
        <td id="LC9239" class="blob-code blob-code-inner js-file-line">        d3.<span class="pl-c1">select</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">style</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L9240" class="blob-num js-line-number" data-line-number="9240"></td>
        <td id="LC9240" class="blob-code blob-code-inner js-file-line">        w.on(<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove.brush<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>).on(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup.brush<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>).on(<span class="pl-s"><span class="pl-pds">&quot;</span>touchmove.brush<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>).on(<span class="pl-s"><span class="pl-pds">&quot;</span>touchend.brush<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>).on(<span class="pl-s"><span class="pl-pds">&quot;</span>keydown.brush<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>).on(<span class="pl-s"><span class="pl-pds">&quot;</span>keyup.brush<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L9241" class="blob-num js-line-number" data-line-number="9241"></td>
        <td id="LC9241" class="blob-code blob-code-inner js-file-line">        dragRestore();</td>
      </tr>
      <tr>
        <td id="L9242" class="blob-num js-line-number" data-line-number="9242"></td>
        <td id="LC9242" class="blob-code blob-code-inner js-file-line">        event_({</td>
      </tr>
      <tr>
        <td id="L9243" class="blob-num js-line-number" data-line-number="9243"></td>
        <td id="LC9243" class="blob-code blob-code-inner js-file-line">          type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>brushend<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9244" class="blob-num js-line-number" data-line-number="9244"></td>
        <td id="LC9244" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L9245" class="blob-num js-line-number" data-line-number="9245"></td>
        <td id="LC9245" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9246" class="blob-num js-line-number" data-line-number="9246"></td>
        <td id="LC9246" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9247" class="blob-num js-line-number" data-line-number="9247"></td>
        <td id="LC9247" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">brush</span>.<span class="pl-en">x</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L9248" class="blob-num js-line-number" data-line-number="9248"></td>
        <td id="LC9248" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x;</td>
      </tr>
      <tr>
        <td id="L9249" class="blob-num js-line-number" data-line-number="9249"></td>
        <td id="LC9249" class="blob-code blob-code-inner js-file-line">      x <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L9250" class="blob-num js-line-number" data-line-number="9250"></td>
        <td id="LC9250" class="blob-code blob-code-inner js-file-line">      resizes <span class="pl-k">=</span> d3_svg_brushResizes[<span class="pl-k">!</span>x <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">1</span> | <span class="pl-k">!</span>y];</td>
      </tr>
      <tr>
        <td id="L9251" class="blob-num js-line-number" data-line-number="9251"></td>
        <td id="LC9251" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L9252" class="blob-num js-line-number" data-line-number="9252"></td>
        <td id="LC9252" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9253" class="blob-num js-line-number" data-line-number="9253"></td>
        <td id="LC9253" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">brush</span>.<span class="pl-en">y</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L9254" class="blob-num js-line-number" data-line-number="9254"></td>
        <td id="LC9254" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> y;</td>
      </tr>
      <tr>
        <td id="L9255" class="blob-num js-line-number" data-line-number="9255"></td>
        <td id="LC9255" class="blob-code blob-code-inner js-file-line">      y <span class="pl-k">=</span> z;</td>
      </tr>
      <tr>
        <td id="L9256" class="blob-num js-line-number" data-line-number="9256"></td>
        <td id="LC9256" class="blob-code blob-code-inner js-file-line">      resizes <span class="pl-k">=</span> d3_svg_brushResizes[<span class="pl-k">!</span>x <span class="pl-k">&lt;&lt;</span> <span class="pl-c1">1</span> | <span class="pl-k">!</span>y];</td>
      </tr>
      <tr>
        <td id="L9257" class="blob-num js-line-number" data-line-number="9257"></td>
        <td id="LC9257" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L9258" class="blob-num js-line-number" data-line-number="9258"></td>
        <td id="LC9258" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9259" class="blob-num js-line-number" data-line-number="9259"></td>
        <td id="LC9259" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">brush</span>.<span class="pl-en">clamp</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L9260" class="blob-num js-line-number" data-line-number="9260"></td>
        <td id="LC9260" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> x <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">?</span> [ xClamp, yClamp ] <span class="pl-k">:</span> x <span class="pl-k">?</span> xClamp <span class="pl-k">:</span> y <span class="pl-k">?</span> yClamp <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9261" class="blob-num js-line-number" data-line-number="9261"></td>
        <td id="LC9261" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x <span class="pl-k">&amp;&amp;</span> y) xClamp <span class="pl-k">=</span> <span class="pl-k">!!</span>z[<span class="pl-c1">0</span>], yClamp <span class="pl-k">=</span> <span class="pl-k">!!</span>z[<span class="pl-c1">1</span>]; <span class="pl-k">else</span> <span class="pl-k">if</span> (x) xClamp <span class="pl-k">=</span> <span class="pl-k">!!</span>z; <span class="pl-k">else</span> <span class="pl-k">if</span> (y) yClamp <span class="pl-k">=</span> <span class="pl-k">!!</span>z;</td>
      </tr>
      <tr>
        <td id="L9262" class="blob-num js-line-number" data-line-number="9262"></td>
        <td id="LC9262" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L9263" class="blob-num js-line-number" data-line-number="9263"></td>
        <td id="LC9263" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9264" class="blob-num js-line-number" data-line-number="9264"></td>
        <td id="LC9264" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">brush</span>.<span class="pl-en">extent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">z</span>) {</td>
      </tr>
      <tr>
        <td id="L9265" class="blob-num js-line-number" data-line-number="9265"></td>
        <td id="LC9265" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> x0, x1, y0, y1, t;</td>
      </tr>
      <tr>
        <td id="L9266" class="blob-num js-line-number" data-line-number="9266"></td>
        <td id="LC9266" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L9267" class="blob-num js-line-number" data-line-number="9267"></td>
        <td id="LC9267" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x) {</td>
      </tr>
      <tr>
        <td id="L9268" class="blob-num js-line-number" data-line-number="9268"></td>
        <td id="LC9268" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (xExtentDomain) {</td>
      </tr>
      <tr>
        <td id="L9269" class="blob-num js-line-number" data-line-number="9269"></td>
        <td id="LC9269" class="blob-code blob-code-inner js-file-line">            x0 <span class="pl-k">=</span> xExtentDomain[<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> xExtentDomain[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9270" class="blob-num js-line-number" data-line-number="9270"></td>
        <td id="LC9270" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9271" class="blob-num js-line-number" data-line-number="9271"></td>
        <td id="LC9271" class="blob-code blob-code-inner js-file-line">            x0 <span class="pl-k">=</span> xExtent[<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> xExtent[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9272" class="blob-num js-line-number" data-line-number="9272"></td>
        <td id="LC9272" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (x.invert) x0 <span class="pl-k">=</span> x.invert(x0), x1 <span class="pl-k">=</span> x.invert(x1);</td>
      </tr>
      <tr>
        <td id="L9273" class="blob-num js-line-number" data-line-number="9273"></td>
        <td id="LC9273" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (x1 <span class="pl-k">&lt;</span> x0) t <span class="pl-k">=</span> x0, x0 <span class="pl-k">=</span> x1, x1 <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L9274" class="blob-num js-line-number" data-line-number="9274"></td>
        <td id="LC9274" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L9275" class="blob-num js-line-number" data-line-number="9275"></td>
        <td id="LC9275" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9276" class="blob-num js-line-number" data-line-number="9276"></td>
        <td id="LC9276" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (y) {</td>
      </tr>
      <tr>
        <td id="L9277" class="blob-num js-line-number" data-line-number="9277"></td>
        <td id="LC9277" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (yExtentDomain) {</td>
      </tr>
      <tr>
        <td id="L9278" class="blob-num js-line-number" data-line-number="9278"></td>
        <td id="LC9278" class="blob-code blob-code-inner js-file-line">            y0 <span class="pl-k">=</span> yExtentDomain[<span class="pl-c1">0</span>], y1 <span class="pl-k">=</span> yExtentDomain[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9279" class="blob-num js-line-number" data-line-number="9279"></td>
        <td id="LC9279" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9280" class="blob-num js-line-number" data-line-number="9280"></td>
        <td id="LC9280" class="blob-code blob-code-inner js-file-line">            y0 <span class="pl-k">=</span> yExtent[<span class="pl-c1">0</span>], y1 <span class="pl-k">=</span> yExtent[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9281" class="blob-num js-line-number" data-line-number="9281"></td>
        <td id="LC9281" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (y.invert) y0 <span class="pl-k">=</span> y.invert(y0), y1 <span class="pl-k">=</span> y.invert(y1);</td>
      </tr>
      <tr>
        <td id="L9282" class="blob-num js-line-number" data-line-number="9282"></td>
        <td id="LC9282" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (y1 <span class="pl-k">&lt;</span> y0) t <span class="pl-k">=</span> y0, y0 <span class="pl-k">=</span> y1, y1 <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L9283" class="blob-num js-line-number" data-line-number="9283"></td>
        <td id="LC9283" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L9284" class="blob-num js-line-number" data-line-number="9284"></td>
        <td id="LC9284" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9285" class="blob-num js-line-number" data-line-number="9285"></td>
        <td id="LC9285" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> x <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">?</span> [ [ x0, y0 ], [ x1, y1 ] ] <span class="pl-k">:</span> x <span class="pl-k">?</span> [ x0, x1 ] <span class="pl-k">:</span> y <span class="pl-k">&amp;&amp;</span> [ y0, y1 ];</td>
      </tr>
      <tr>
        <td id="L9286" class="blob-num js-line-number" data-line-number="9286"></td>
        <td id="LC9286" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9287" class="blob-num js-line-number" data-line-number="9287"></td>
        <td id="LC9287" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x) {</td>
      </tr>
      <tr>
        <td id="L9288" class="blob-num js-line-number" data-line-number="9288"></td>
        <td id="LC9288" class="blob-code blob-code-inner js-file-line">        x0 <span class="pl-k">=</span> z[<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> z[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9289" class="blob-num js-line-number" data-line-number="9289"></td>
        <td id="LC9289" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (y) x0 <span class="pl-k">=</span> x0[<span class="pl-c1">0</span>], x1 <span class="pl-k">=</span> x1[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L9290" class="blob-num js-line-number" data-line-number="9290"></td>
        <td id="LC9290" class="blob-code blob-code-inner js-file-line">        xExtentDomain <span class="pl-k">=</span> [ x0, x1 ];</td>
      </tr>
      <tr>
        <td id="L9291" class="blob-num js-line-number" data-line-number="9291"></td>
        <td id="LC9291" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x.invert) x0 <span class="pl-k">=</span> x(x0), x1 <span class="pl-k">=</span> x(x1);</td>
      </tr>
      <tr>
        <td id="L9292" class="blob-num js-line-number" data-line-number="9292"></td>
        <td id="LC9292" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x1 <span class="pl-k">&lt;</span> x0) t <span class="pl-k">=</span> x0, x0 <span class="pl-k">=</span> x1, x1 <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L9293" class="blob-num js-line-number" data-line-number="9293"></td>
        <td id="LC9293" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x0 <span class="pl-k">!=</span> xExtent[<span class="pl-c1">0</span>] <span class="pl-k">||</span> x1 <span class="pl-k">!=</span> xExtent[<span class="pl-c1">1</span>]) xExtent <span class="pl-k">=</span> [ x0, x1 ];</td>
      </tr>
      <tr>
        <td id="L9294" class="blob-num js-line-number" data-line-number="9294"></td>
        <td id="LC9294" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9295" class="blob-num js-line-number" data-line-number="9295"></td>
        <td id="LC9295" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (y) {</td>
      </tr>
      <tr>
        <td id="L9296" class="blob-num js-line-number" data-line-number="9296"></td>
        <td id="LC9296" class="blob-code blob-code-inner js-file-line">        y0 <span class="pl-k">=</span> z[<span class="pl-c1">0</span>], y1 <span class="pl-k">=</span> z[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9297" class="blob-num js-line-number" data-line-number="9297"></td>
        <td id="LC9297" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (x) y0 <span class="pl-k">=</span> y0[<span class="pl-c1">1</span>], y1 <span class="pl-k">=</span> y1[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9298" class="blob-num js-line-number" data-line-number="9298"></td>
        <td id="LC9298" class="blob-code blob-code-inner js-file-line">        yExtentDomain <span class="pl-k">=</span> [ y0, y1 ];</td>
      </tr>
      <tr>
        <td id="L9299" class="blob-num js-line-number" data-line-number="9299"></td>
        <td id="LC9299" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (y.invert) y0 <span class="pl-k">=</span> y(y0), y1 <span class="pl-k">=</span> y(y1);</td>
      </tr>
      <tr>
        <td id="L9300" class="blob-num js-line-number" data-line-number="9300"></td>
        <td id="LC9300" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (y1 <span class="pl-k">&lt;</span> y0) t <span class="pl-k">=</span> y0, y0 <span class="pl-k">=</span> y1, y1 <span class="pl-k">=</span> t;</td>
      </tr>
      <tr>
        <td id="L9301" class="blob-num js-line-number" data-line-number="9301"></td>
        <td id="LC9301" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (y0 <span class="pl-k">!=</span> yExtent[<span class="pl-c1">0</span>] <span class="pl-k">||</span> y1 <span class="pl-k">!=</span> yExtent[<span class="pl-c1">1</span>]) yExtent <span class="pl-k">=</span> [ y0, y1 ];</td>
      </tr>
      <tr>
        <td id="L9302" class="blob-num js-line-number" data-line-number="9302"></td>
        <td id="LC9302" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9303" class="blob-num js-line-number" data-line-number="9303"></td>
        <td id="LC9303" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L9304" class="blob-num js-line-number" data-line-number="9304"></td>
        <td id="LC9304" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9305" class="blob-num js-line-number" data-line-number="9305"></td>
        <td id="LC9305" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">brush</span>.<span class="pl-en">clear</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9306" class="blob-num js-line-number" data-line-number="9306"></td>
        <td id="LC9306" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>brush.empty()) {</td>
      </tr>
      <tr>
        <td id="L9307" class="blob-num js-line-number" data-line-number="9307"></td>
        <td id="LC9307" class="blob-code blob-code-inner js-file-line">        xExtent <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ], yExtent <span class="pl-k">=</span> [ <span class="pl-c1">0</span>, <span class="pl-c1">0</span> ];</td>
      </tr>
      <tr>
        <td id="L9308" class="blob-num js-line-number" data-line-number="9308"></td>
        <td id="LC9308" class="blob-code blob-code-inner js-file-line">        xExtentDomain <span class="pl-k">=</span> yExtentDomain <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9309" class="blob-num js-line-number" data-line-number="9309"></td>
        <td id="LC9309" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9310" class="blob-num js-line-number" data-line-number="9310"></td>
        <td id="LC9310" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> brush;</td>
      </tr>
      <tr>
        <td id="L9311" class="blob-num js-line-number" data-line-number="9311"></td>
        <td id="LC9311" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9312" class="blob-num js-line-number" data-line-number="9312"></td>
        <td id="LC9312" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">brush</span>.<span class="pl-en">empty</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9313" class="blob-num js-line-number" data-line-number="9313"></td>
        <td id="LC9313" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">!!</span>x <span class="pl-k">&amp;&amp;</span> xExtent[<span class="pl-c1">0</span>] <span class="pl-k">==</span> xExtent[<span class="pl-c1">1</span>] <span class="pl-k">||</span> <span class="pl-k">!!</span>y <span class="pl-k">&amp;&amp;</span> yExtent[<span class="pl-c1">0</span>] <span class="pl-k">==</span> yExtent[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9314" class="blob-num js-line-number" data-line-number="9314"></td>
        <td id="LC9314" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9315" class="blob-num js-line-number" data-line-number="9315"></td>
        <td id="LC9315" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3.rebind(brush, <span class="pl-c1">event</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L9316" class="blob-num js-line-number" data-line-number="9316"></td>
        <td id="LC9316" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9317" class="blob-num js-line-number" data-line-number="9317"></td>
        <td id="LC9317" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_svg_brushCursor <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L9318" class="blob-num js-line-number" data-line-number="9318"></td>
        <td id="LC9318" class="blob-code blob-code-inner js-file-line">    n<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ns-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9319" class="blob-num js-line-number" data-line-number="9319"></td>
        <td id="LC9319" class="blob-code blob-code-inner js-file-line">    e<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ew-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9320" class="blob-num js-line-number" data-line-number="9320"></td>
        <td id="LC9320" class="blob-code blob-code-inner js-file-line">    s<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ns-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9321" class="blob-num js-line-number" data-line-number="9321"></td>
        <td id="LC9321" class="blob-code blob-code-inner js-file-line">    w<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ew-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9322" class="blob-num js-line-number" data-line-number="9322"></td>
        <td id="LC9322" class="blob-code blob-code-inner js-file-line">    nw<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>nwse-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9323" class="blob-num js-line-number" data-line-number="9323"></td>
        <td id="LC9323" class="blob-code blob-code-inner js-file-line">    ne<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>nesw-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9324" class="blob-num js-line-number" data-line-number="9324"></td>
        <td id="LC9324" class="blob-code blob-code-inner js-file-line">    se<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>nwse-resize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9325" class="blob-num js-line-number" data-line-number="9325"></td>
        <td id="LC9325" class="blob-code blob-code-inner js-file-line">    sw<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>nesw-resize<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9326" class="blob-num js-line-number" data-line-number="9326"></td>
        <td id="LC9326" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9327" class="blob-num js-line-number" data-line-number="9327"></td>
        <td id="LC9327" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_svg_brushResizes <span class="pl-k">=</span> [ [ <span class="pl-s"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>nw<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>ne<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>se<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>sw<span class="pl-pds">&quot;</span></span> ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span> ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span> ], [] ];</td>
      </tr>
      <tr>
        <td id="L9328" class="blob-num js-line-number" data-line-number="9328"></td>
        <td id="LC9328" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_format <span class="pl-k">=</span> d3_time.format <span class="pl-k">=</span> d3_locale_enUS.timeFormat;</td>
      </tr>
      <tr>
        <td id="L9329" class="blob-num js-line-number" data-line-number="9329"></td>
        <td id="LC9329" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_formatUtc <span class="pl-k">=</span> d3_time_format.utc;</td>
      </tr>
      <tr>
        <td id="L9330" class="blob-num js-line-number" data-line-number="9330"></td>
        <td id="LC9330" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_formatIso <span class="pl-k">=</span> d3_time_formatUtc(<span class="pl-s"><span class="pl-pds">&quot;</span>%Y-%m-%dT%H:%M:%S.%LZ<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L9331" class="blob-num js-line-number" data-line-number="9331"></td>
        <td id="LC9331" class="blob-code blob-code-inner js-file-line">  d3_time_format.iso <span class="pl-k">=</span> <span class="pl-c1">Date</span>.<span class="pl-c1">prototype</span>.toISOString <span class="pl-k">&amp;&amp;</span> <span class="pl-k">+</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2000-01-01T00:00:00.000Z<span class="pl-pds">&quot;</span></span>) <span class="pl-k">?</span> d3_time_formatIsoNative <span class="pl-k">:</span> d3_time_formatIso;</td>
      </tr>
      <tr>
        <td id="L9332" class="blob-num js-line-number" data-line-number="9332"></td>
        <td id="LC9332" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_formatIsoNative</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9333" class="blob-num js-line-number" data-line-number="9333"></td>
        <td id="LC9333" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date.toISOString();</td>
      </tr>
      <tr>
        <td id="L9334" class="blob-num js-line-number" data-line-number="9334"></td>
        <td id="LC9334" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9335" class="blob-num js-line-number" data-line-number="9335"></td>
        <td id="LC9335" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_time_formatIsoNative</span>.<span class="pl-en">parse</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">string</span>) {</td>
      </tr>
      <tr>
        <td id="L9336" class="blob-num js-line-number" data-line-number="9336"></td>
        <td id="LC9336" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> date <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>(string);</td>
      </tr>
      <tr>
        <td id="L9337" class="blob-num js-line-number" data-line-number="9337"></td>
        <td id="LC9337" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">isNaN</span>(date) <span class="pl-k">?</span> null <span class="pl-k">:</span> date;</td>
      </tr>
      <tr>
        <td id="L9338" class="blob-num js-line-number" data-line-number="9338"></td>
        <td id="LC9338" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9339" class="blob-num js-line-number" data-line-number="9339"></td>
        <td id="LC9339" class="blob-code blob-code-inner js-file-line">  d3_time_formatIsoNative.toString <span class="pl-k">=</span> d3_time_formatIso.toString;</td>
      </tr>
      <tr>
        <td id="L9340" class="blob-num js-line-number" data-line-number="9340"></td>
        <td id="LC9340" class="blob-code blob-code-inner js-file-line">  d3_time.second <span class="pl-k">=</span> d3_time_interval(<span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9341" class="blob-num js-line-number" data-line-number="9341"></td>
        <td id="LC9341" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_date</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(date / <span class="pl-c1">1e3</span>) <span class="pl-k">*</span> <span class="pl-c1">1e3</span>);</td>
      </tr>
      <tr>
        <td id="L9342" class="blob-num js-line-number" data-line-number="9342"></td>
        <td id="LC9342" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L9343" class="blob-num js-line-number" data-line-number="9343"></td>
        <td id="LC9343" class="blob-code blob-code-inner js-file-line">    date.<span class="pl-c1">setTime</span>(date.<span class="pl-c1">getTime</span>() <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(offset) <span class="pl-k">*</span> <span class="pl-c1">1e3</span>);</td>
      </tr>
      <tr>
        <td id="L9344" class="blob-num js-line-number" data-line-number="9344"></td>
        <td id="LC9344" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9345" class="blob-num js-line-number" data-line-number="9345"></td>
        <td id="LC9345" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date.<span class="pl-c1">getSeconds</span>();</td>
      </tr>
      <tr>
        <td id="L9346" class="blob-num js-line-number" data-line-number="9346"></td>
        <td id="LC9346" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L9347" class="blob-num js-line-number" data-line-number="9347"></td>
        <td id="LC9347" class="blob-code blob-code-inner js-file-line">  d3_time.seconds <span class="pl-k">=</span> d3_time.second.range;</td>
      </tr>
      <tr>
        <td id="L9348" class="blob-num js-line-number" data-line-number="9348"></td>
        <td id="LC9348" class="blob-code blob-code-inner js-file-line">  d3_time.seconds.utc <span class="pl-k">=</span> d3_time.second.utc.range;</td>
      </tr>
      <tr>
        <td id="L9349" class="blob-num js-line-number" data-line-number="9349"></td>
        <td id="LC9349" class="blob-code blob-code-inner js-file-line">  d3_time.minute <span class="pl-k">=</span> d3_time_interval(<span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9350" class="blob-num js-line-number" data-line-number="9350"></td>
        <td id="LC9350" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_date</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(date / <span class="pl-c1">6e4</span>) <span class="pl-k">*</span> <span class="pl-c1">6e4</span>);</td>
      </tr>
      <tr>
        <td id="L9351" class="blob-num js-line-number" data-line-number="9351"></td>
        <td id="LC9351" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L9352" class="blob-num js-line-number" data-line-number="9352"></td>
        <td id="LC9352" class="blob-code blob-code-inner js-file-line">    date.<span class="pl-c1">setTime</span>(date.<span class="pl-c1">getTime</span>() <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(offset) <span class="pl-k">*</span> <span class="pl-c1">6e4</span>);</td>
      </tr>
      <tr>
        <td id="L9353" class="blob-num js-line-number" data-line-number="9353"></td>
        <td id="LC9353" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9354" class="blob-num js-line-number" data-line-number="9354"></td>
        <td id="LC9354" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date.<span class="pl-c1">getMinutes</span>();</td>
      </tr>
      <tr>
        <td id="L9355" class="blob-num js-line-number" data-line-number="9355"></td>
        <td id="LC9355" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L9356" class="blob-num js-line-number" data-line-number="9356"></td>
        <td id="LC9356" class="blob-code blob-code-inner js-file-line">  d3_time.minutes <span class="pl-k">=</span> d3_time.minute.range;</td>
      </tr>
      <tr>
        <td id="L9357" class="blob-num js-line-number" data-line-number="9357"></td>
        <td id="LC9357" class="blob-code blob-code-inner js-file-line">  d3_time.minutes.utc <span class="pl-k">=</span> d3_time.minute.utc.range;</td>
      </tr>
      <tr>
        <td id="L9358" class="blob-num js-line-number" data-line-number="9358"></td>
        <td id="LC9358" class="blob-code blob-code-inner js-file-line">  d3_time.hour <span class="pl-k">=</span> d3_time_interval(<span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9359" class="blob-num js-line-number" data-line-number="9359"></td>
        <td id="LC9359" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> timezone <span class="pl-k">=</span> date.<span class="pl-c1">getTimezoneOffset</span>() / <span class="pl-c1">60</span>;</td>
      </tr>
      <tr>
        <td id="L9360" class="blob-num js-line-number" data-line-number="9360"></td>
        <td id="LC9360" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">d3_date</span>((<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(date / <span class="pl-c1">36e5</span> <span class="pl-k">-</span> timezone) <span class="pl-k">+</span> timezone) <span class="pl-k">*</span> <span class="pl-c1">36e5</span>);</td>
      </tr>
      <tr>
        <td id="L9361" class="blob-num js-line-number" data-line-number="9361"></td>
        <td id="LC9361" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L9362" class="blob-num js-line-number" data-line-number="9362"></td>
        <td id="LC9362" class="blob-code blob-code-inner js-file-line">    date.<span class="pl-c1">setTime</span>(date.<span class="pl-c1">getTime</span>() <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(offset) <span class="pl-k">*</span> <span class="pl-c1">36e5</span>);</td>
      </tr>
      <tr>
        <td id="L9363" class="blob-num js-line-number" data-line-number="9363"></td>
        <td id="LC9363" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9364" class="blob-num js-line-number" data-line-number="9364"></td>
        <td id="LC9364" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date.<span class="pl-c1">getHours</span>();</td>
      </tr>
      <tr>
        <td id="L9365" class="blob-num js-line-number" data-line-number="9365"></td>
        <td id="LC9365" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L9366" class="blob-num js-line-number" data-line-number="9366"></td>
        <td id="LC9366" class="blob-code blob-code-inner js-file-line">  d3_time.hours <span class="pl-k">=</span> d3_time.hour.range;</td>
      </tr>
      <tr>
        <td id="L9367" class="blob-num js-line-number" data-line-number="9367"></td>
        <td id="LC9367" class="blob-code blob-code-inner js-file-line">  d3_time.hours.utc <span class="pl-k">=</span> d3_time.hour.utc.range;</td>
      </tr>
      <tr>
        <td id="L9368" class="blob-num js-line-number" data-line-number="9368"></td>
        <td id="LC9368" class="blob-code blob-code-inner js-file-line">  d3_time.month <span class="pl-k">=</span> d3_time_interval(<span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9369" class="blob-num js-line-number" data-line-number="9369"></td>
        <td id="LC9369" class="blob-code blob-code-inner js-file-line">    date <span class="pl-k">=</span> d3_time.day(date);</td>
      </tr>
      <tr>
        <td id="L9370" class="blob-num js-line-number" data-line-number="9370"></td>
        <td id="LC9370" class="blob-code blob-code-inner js-file-line">    date.<span class="pl-c1">setDate</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L9371" class="blob-num js-line-number" data-line-number="9371"></td>
        <td id="LC9371" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L9372" class="blob-num js-line-number" data-line-number="9372"></td>
        <td id="LC9372" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L9373" class="blob-num js-line-number" data-line-number="9373"></td>
        <td id="LC9373" class="blob-code blob-code-inner js-file-line">    date.<span class="pl-c1">setMonth</span>(date.<span class="pl-c1">getMonth</span>() <span class="pl-k">+</span> offset);</td>
      </tr>
      <tr>
        <td id="L9374" class="blob-num js-line-number" data-line-number="9374"></td>
        <td id="LC9374" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9375" class="blob-num js-line-number" data-line-number="9375"></td>
        <td id="LC9375" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> date.<span class="pl-c1">getMonth</span>();</td>
      </tr>
      <tr>
        <td id="L9376" class="blob-num js-line-number" data-line-number="9376"></td>
        <td id="LC9376" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L9377" class="blob-num js-line-number" data-line-number="9377"></td>
        <td id="LC9377" class="blob-code blob-code-inner js-file-line">  d3_time.months <span class="pl-k">=</span> d3_time.month.range;</td>
      </tr>
      <tr>
        <td id="L9378" class="blob-num js-line-number" data-line-number="9378"></td>
        <td id="LC9378" class="blob-code blob-code-inner js-file-line">  d3_time.months.utc <span class="pl-k">=</span> d3_time.month.utc.range;</td>
      </tr>
      <tr>
        <td id="L9379" class="blob-num js-line-number" data-line-number="9379"></td>
        <td id="LC9379" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_scale</span>(<span class="pl-smi">linear</span>, <span class="pl-smi">methods</span>, <span class="pl-smi">format</span>) {</td>
      </tr>
      <tr>
        <td id="L9380" class="blob-num js-line-number" data-line-number="9380"></td>
        <td id="LC9380" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scale</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L9381" class="blob-num js-line-number" data-line-number="9381"></td>
        <td id="LC9381" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> linear(x);</td>
      </tr>
      <tr>
        <td id="L9382" class="blob-num js-line-number" data-line-number="9382"></td>
        <td id="LC9382" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9383" class="blob-num js-line-number" data-line-number="9383"></td>
        <td id="LC9383" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">invert</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L9384" class="blob-num js-line-number" data-line-number="9384"></td>
        <td id="LC9384" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_time_scaleDate(linear.invert(x));</td>
      </tr>
      <tr>
        <td id="L9385" class="blob-num js-line-number" data-line-number="9385"></td>
        <td id="LC9385" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9386" class="blob-num js-line-number" data-line-number="9386"></td>
        <td id="LC9386" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">domain</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>) {</td>
      </tr>
      <tr>
        <td id="L9387" class="blob-num js-line-number" data-line-number="9387"></td>
        <td id="LC9387" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>arguments.<span class="pl-c1">length</span>) <span class="pl-k">return</span> linear.<span class="pl-c1">domain</span>().map(d3_time_scaleDate);</td>
      </tr>
      <tr>
        <td id="L9388" class="blob-num js-line-number" data-line-number="9388"></td>
        <td id="LC9388" class="blob-code blob-code-inner js-file-line">      linear.<span class="pl-c1">domain</span>(x);</td>
      </tr>
      <tr>
        <td id="L9389" class="blob-num js-line-number" data-line-number="9389"></td>
        <td id="LC9389" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale;</td>
      </tr>
      <tr>
        <td id="L9390" class="blob-num js-line-number" data-line-number="9390"></td>
        <td id="LC9390" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9391" class="blob-num js-line-number" data-line-number="9391"></td>
        <td id="LC9391" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">tickMethod</span>(<span class="pl-smi">extent</span>, <span class="pl-smi">count</span>) {</td>
      </tr>
      <tr>
        <td id="L9392" class="blob-num js-line-number" data-line-number="9392"></td>
        <td id="LC9392" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> span <span class="pl-k">=</span> extent[<span class="pl-c1">1</span>] <span class="pl-k">-</span> extent[<span class="pl-c1">0</span>], target <span class="pl-k">=</span> span / count, i <span class="pl-k">=</span> d3.bisect(d3_time_scaleSteps, target);</td>
      </tr>
      <tr>
        <td id="L9393" class="blob-num js-line-number" data-line-number="9393"></td>
        <td id="LC9393" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> i <span class="pl-k">==</span> d3_time_scaleSteps.<span class="pl-c1">length</span> <span class="pl-k">?</span> [ methods.year, d3_scale_linearTickRange(extent.map(<span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9394" class="blob-num js-line-number" data-line-number="9394"></td>
        <td id="LC9394" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> d / <span class="pl-c1">31536e6</span>;</td>
      </tr>
      <tr>
        <td id="L9395" class="blob-num js-line-number" data-line-number="9395"></td>
        <td id="LC9395" class="blob-code blob-code-inner js-file-line">      }), count)[<span class="pl-c1">2</span>] ] <span class="pl-k">:</span> <span class="pl-k">!</span>i <span class="pl-k">?</span> [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[<span class="pl-c1">2</span>] ] <span class="pl-k">:</span> methods[target / d3_time_scaleSteps[i <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> d3_time_scaleSteps[i] / target <span class="pl-k">?</span> i <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> i];</td>
      </tr>
      <tr>
        <td id="L9396" class="blob-num js-line-number" data-line-number="9396"></td>
        <td id="LC9396" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9397" class="blob-num js-line-number" data-line-number="9397"></td>
        <td id="LC9397" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">nice</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">interval</span>, <span class="pl-smi">skip</span>) {</td>
      </tr>
      <tr>
        <td id="L9398" class="blob-num js-line-number" data-line-number="9398"></td>
        <td id="LC9398" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> domain <span class="pl-k">=</span> scale.<span class="pl-c1">domain</span>(), extent <span class="pl-k">=</span> d3_scaleExtent(domain), method <span class="pl-k">=</span> interval <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> tickMethod(extent, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-k">typeof</span> interval <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> tickMethod(extent, interval);</td>
      </tr>
      <tr>
        <td id="L9399" class="blob-num js-line-number" data-line-number="9399"></td>
        <td id="LC9399" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (method) interval <span class="pl-k">=</span> method[<span class="pl-c1">0</span>], skip <span class="pl-k">=</span> method[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9400" class="blob-num js-line-number" data-line-number="9400"></td>
        <td id="LC9400" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">skipped</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9401" class="blob-num js-line-number" data-line-number="9401"></td>
        <td id="LC9401" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-c1">isNaN</span>(date) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>interval.range(date, d3_time_scaleDate(<span class="pl-k">+</span>date <span class="pl-k">+</span> <span class="pl-c1">1</span>), skip).<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L9402" class="blob-num js-line-number" data-line-number="9402"></td>
        <td id="LC9402" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9403" class="blob-num js-line-number" data-line-number="9403"></td>
        <td id="LC9403" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> scale.<span class="pl-c1">domain</span>(d3_scale_nice(domain, skip <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> {</td>
      </tr>
      <tr>
        <td id="L9404" class="blob-num js-line-number" data-line-number="9404"></td>
        <td id="LC9404" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">floor</span>: <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9405" class="blob-num js-line-number" data-line-number="9405"></td>
        <td id="LC9405" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span> (skipped(date <span class="pl-k">=</span> interval.<span class="pl-c1">floor</span>(date))) date <span class="pl-k">=</span> d3_time_scaleDate(date <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L9406" class="blob-num js-line-number" data-line-number="9406"></td>
        <td id="LC9406" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L9407" class="blob-num js-line-number" data-line-number="9407"></td>
        <td id="LC9407" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L9408" class="blob-num js-line-number" data-line-number="9408"></td>
        <td id="LC9408" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">ceil</span>: <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9409" class="blob-num js-line-number" data-line-number="9409"></td>
        <td id="LC9409" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span> (skipped(date <span class="pl-k">=</span> interval.<span class="pl-c1">ceil</span>(date))) date <span class="pl-k">=</span> d3_time_scaleDate(<span class="pl-k">+</span>date <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L9410" class="blob-num js-line-number" data-line-number="9410"></td>
        <td id="LC9410" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L9411" class="blob-num js-line-number" data-line-number="9411"></td>
        <td id="LC9411" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9412" class="blob-num js-line-number" data-line-number="9412"></td>
        <td id="LC9412" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">:</span> interval));</td>
      </tr>
      <tr>
        <td id="L9413" class="blob-num js-line-number" data-line-number="9413"></td>
        <td id="LC9413" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9414" class="blob-num js-line-number" data-line-number="9414"></td>
        <td id="LC9414" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">ticks</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">interval</span>, <span class="pl-smi">skip</span>) {</td>
      </tr>
      <tr>
        <td id="L9415" class="blob-num js-line-number" data-line-number="9415"></td>
        <td id="LC9415" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> extent <span class="pl-k">=</span> d3_scaleExtent(scale.<span class="pl-c1">domain</span>()), method <span class="pl-k">=</span> interval <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> tickMethod(extent, <span class="pl-c1">10</span>) <span class="pl-k">:</span> <span class="pl-k">typeof</span> interval <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span> <span class="pl-k">?</span> tickMethod(extent, interval) <span class="pl-k">:</span> <span class="pl-k">!</span>interval.range <span class="pl-k">&amp;&amp;</span> [ {</td>
      </tr>
      <tr>
        <td id="L9416" class="blob-num js-line-number" data-line-number="9416"></td>
        <td id="LC9416" class="blob-code blob-code-inner js-file-line">        range<span class="pl-k">:</span> interval</td>
      </tr>
      <tr>
        <td id="L9417" class="blob-num js-line-number" data-line-number="9417"></td>
        <td id="LC9417" class="blob-code blob-code-inner js-file-line">      }, skip ];</td>
      </tr>
      <tr>
        <td id="L9418" class="blob-num js-line-number" data-line-number="9418"></td>
        <td id="LC9418" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (method) interval <span class="pl-k">=</span> method[<span class="pl-c1">0</span>], skip <span class="pl-k">=</span> method[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9419" class="blob-num js-line-number" data-line-number="9419"></td>
        <td id="LC9419" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> interval.range(extent[<span class="pl-c1">0</span>], d3_time_scaleDate(<span class="pl-k">+</span>extent[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">1</span>), skip <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> skip);</td>
      </tr>
      <tr>
        <td id="L9420" class="blob-num js-line-number" data-line-number="9420"></td>
        <td id="LC9420" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9421" class="blob-num js-line-number" data-line-number="9421"></td>
        <td id="LC9421" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">tickFormat</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9422" class="blob-num js-line-number" data-line-number="9422"></td>
        <td id="LC9422" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> format;</td>
      </tr>
      <tr>
        <td id="L9423" class="blob-num js-line-number" data-line-number="9423"></td>
        <td id="LC9423" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9424" class="blob-num js-line-number" data-line-number="9424"></td>
        <td id="LC9424" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">scale</span>.<span class="pl-en">copy</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9425" class="blob-num js-line-number" data-line-number="9425"></td>
        <td id="LC9425" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3_time_scale(linear.copy(), methods, format);</td>
      </tr>
      <tr>
        <td id="L9426" class="blob-num js-line-number" data-line-number="9426"></td>
        <td id="LC9426" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9427" class="blob-num js-line-number" data-line-number="9427"></td>
        <td id="LC9427" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_scale_linearRebind(scale, linear);</td>
      </tr>
      <tr>
        <td id="L9428" class="blob-num js-line-number" data-line-number="9428"></td>
        <td id="LC9428" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9429" class="blob-num js-line-number" data-line-number="9429"></td>
        <td id="LC9429" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_time_scaleDate</span>(<span class="pl-smi">t</span>) {</td>
      </tr>
      <tr>
        <td id="L9430" class="blob-num js-line-number" data-line-number="9430"></td>
        <td id="LC9430" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>(t);</td>
      </tr>
      <tr>
        <td id="L9431" class="blob-num js-line-number" data-line-number="9431"></td>
        <td id="LC9431" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9432" class="blob-num js-line-number" data-line-number="9432"></td>
        <td id="LC9432" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_scaleSteps <span class="pl-k">=</span> [ <span class="pl-c1">1e3</span>, <span class="pl-c1">5e3</span>, <span class="pl-c1">15e3</span>, <span class="pl-c1">3e4</span>, <span class="pl-c1">6e4</span>, <span class="pl-c1">3e5</span>, <span class="pl-c1">9e5</span>, <span class="pl-c1">18e5</span>, <span class="pl-c1">36e5</span>, <span class="pl-c1">108e5</span>, <span class="pl-c1">216e5</span>, <span class="pl-c1">432e5</span>, <span class="pl-c1">864e5</span>, <span class="pl-c1">1728e5</span>, <span class="pl-c1">6048e5</span>, <span class="pl-c1">2592e6</span>, <span class="pl-c1">7776e6</span>, <span class="pl-c1">31536e6</span> ];</td>
      </tr>
      <tr>
        <td id="L9433" class="blob-num js-line-number" data-line-number="9433"></td>
        <td id="LC9433" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_scaleLocalMethods <span class="pl-k">=</span> [ [ d3_time.second, <span class="pl-c1">1</span> ], [ d3_time.second, <span class="pl-c1">5</span> ], [ d3_time.second, <span class="pl-c1">15</span> ], [ d3_time.second, <span class="pl-c1">30</span> ], [ d3_time.minute, <span class="pl-c1">1</span> ], [ d3_time.minute, <span class="pl-c1">5</span> ], [ d3_time.minute, <span class="pl-c1">15</span> ], [ d3_time.minute, <span class="pl-c1">30</span> ], [ d3_time.hour, <span class="pl-c1">1</span> ], [ d3_time.hour, <span class="pl-c1">3</span> ], [ d3_time.hour, <span class="pl-c1">6</span> ], [ d3_time.hour, <span class="pl-c1">12</span> ], [ d3_time.day, <span class="pl-c1">1</span> ], [ d3_time.day, <span class="pl-c1">2</span> ], [ d3_time.week, <span class="pl-c1">1</span> ], [ d3_time.month, <span class="pl-c1">1</span> ], [ d3_time.month, <span class="pl-c1">3</span> ], [ d3_time.year, <span class="pl-c1">1</span> ] ];</td>
      </tr>
      <tr>
        <td id="L9434" class="blob-num js-line-number" data-line-number="9434"></td>
        <td id="LC9434" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_scaleLocalFormat <span class="pl-k">=</span> d3_time_format.multi([ [ <span class="pl-s"><span class="pl-pds">&quot;</span>.%L<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9435" class="blob-num js-line-number" data-line-number="9435"></td>
        <td id="LC9435" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getMilliseconds</span>();</td>
      </tr>
      <tr>
        <td id="L9436" class="blob-num js-line-number" data-line-number="9436"></td>
        <td id="LC9436" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>:%S<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9437" class="blob-num js-line-number" data-line-number="9437"></td>
        <td id="LC9437" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getSeconds</span>();</td>
      </tr>
      <tr>
        <td id="L9438" class="blob-num js-line-number" data-line-number="9438"></td>
        <td id="LC9438" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%I:%M<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9439" class="blob-num js-line-number" data-line-number="9439"></td>
        <td id="LC9439" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getMinutes</span>();</td>
      </tr>
      <tr>
        <td id="L9440" class="blob-num js-line-number" data-line-number="9440"></td>
        <td id="LC9440" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%I %p<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9441" class="blob-num js-line-number" data-line-number="9441"></td>
        <td id="LC9441" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getHours</span>();</td>
      </tr>
      <tr>
        <td id="L9442" class="blob-num js-line-number" data-line-number="9442"></td>
        <td id="LC9442" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%a %d<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9443" class="blob-num js-line-number" data-line-number="9443"></td>
        <td id="LC9443" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getDay</span>() <span class="pl-k">&amp;&amp;</span> d.<span class="pl-c1">getDate</span>() <span class="pl-k">!=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L9444" class="blob-num js-line-number" data-line-number="9444"></td>
        <td id="LC9444" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%b %d<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9445" class="blob-num js-line-number" data-line-number="9445"></td>
        <td id="LC9445" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getDate</span>() <span class="pl-k">!=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L9446" class="blob-num js-line-number" data-line-number="9446"></td>
        <td id="LC9446" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%B<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9447" class="blob-num js-line-number" data-line-number="9447"></td>
        <td id="LC9447" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getMonth</span>();</td>
      </tr>
      <tr>
        <td id="L9448" class="blob-num js-line-number" data-line-number="9448"></td>
        <td id="LC9448" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>, d3_true ] ]);</td>
      </tr>
      <tr>
        <td id="L9449" class="blob-num js-line-number" data-line-number="9449"></td>
        <td id="LC9449" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_scaleMilliseconds <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L9450" class="blob-num js-line-number" data-line-number="9450"></td>
        <td id="LC9450" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">range</span>: <span class="pl-k">function</span>(<span class="pl-smi">start</span>, <span class="pl-smi">stop</span>, <span class="pl-smi">step</span>) {</td>
      </tr>
      <tr>
        <td id="L9451" class="blob-num js-line-number" data-line-number="9451"></td>
        <td id="LC9451" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> d3.range(<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(start / step) <span class="pl-k">*</span> step, <span class="pl-k">+</span>stop, step).map(d3_time_scaleDate);</td>
      </tr>
      <tr>
        <td id="L9452" class="blob-num js-line-number" data-line-number="9452"></td>
        <td id="LC9452" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L9453" class="blob-num js-line-number" data-line-number="9453"></td>
        <td id="LC9453" class="blob-code blob-code-inner js-file-line">    floor<span class="pl-k">:</span> d3_identity,</td>
      </tr>
      <tr>
        <td id="L9454" class="blob-num js-line-number" data-line-number="9454"></td>
        <td id="LC9454" class="blob-code blob-code-inner js-file-line">    ceil<span class="pl-k">:</span> d3_identity</td>
      </tr>
      <tr>
        <td id="L9455" class="blob-num js-line-number" data-line-number="9455"></td>
        <td id="LC9455" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9456" class="blob-num js-line-number" data-line-number="9456"></td>
        <td id="LC9456" class="blob-code blob-code-inner js-file-line">  d3_time_scaleLocalMethods.year <span class="pl-k">=</span> d3_time.year;</td>
      </tr>
      <tr>
        <td id="L9457" class="blob-num js-line-number" data-line-number="9457"></td>
        <td id="LC9457" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_time</span>.<span class="pl-en">scale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9458" class="blob-num js-line-number" data-line-number="9458"></td>
        <td id="LC9458" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);</td>
      </tr>
      <tr>
        <td id="L9459" class="blob-num js-line-number" data-line-number="9459"></td>
        <td id="LC9459" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9460" class="blob-num js-line-number" data-line-number="9460"></td>
        <td id="LC9460" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_scaleUtcMethods <span class="pl-k">=</span> d3_time_scaleLocalMethods.map(<span class="pl-k">function</span>(<span class="pl-smi">m</span>) {</td>
      </tr>
      <tr>
        <td id="L9461" class="blob-num js-line-number" data-line-number="9461"></td>
        <td id="LC9461" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> [ m[<span class="pl-c1">0</span>].utc, m[<span class="pl-c1">1</span>] ];</td>
      </tr>
      <tr>
        <td id="L9462" class="blob-num js-line-number" data-line-number="9462"></td>
        <td id="LC9462" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L9463" class="blob-num js-line-number" data-line-number="9463"></td>
        <td id="LC9463" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> d3_time_scaleUtcFormat <span class="pl-k">=</span> d3_time_formatUtc.multi([ [ <span class="pl-s"><span class="pl-pds">&quot;</span>.%L<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9464" class="blob-num js-line-number" data-line-number="9464"></td>
        <td id="LC9464" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getUTCMilliseconds</span>();</td>
      </tr>
      <tr>
        <td id="L9465" class="blob-num js-line-number" data-line-number="9465"></td>
        <td id="LC9465" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>:%S<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9466" class="blob-num js-line-number" data-line-number="9466"></td>
        <td id="LC9466" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getUTCSeconds</span>();</td>
      </tr>
      <tr>
        <td id="L9467" class="blob-num js-line-number" data-line-number="9467"></td>
        <td id="LC9467" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%I:%M<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9468" class="blob-num js-line-number" data-line-number="9468"></td>
        <td id="LC9468" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getUTCMinutes</span>();</td>
      </tr>
      <tr>
        <td id="L9469" class="blob-num js-line-number" data-line-number="9469"></td>
        <td id="LC9469" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%I %p<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9470" class="blob-num js-line-number" data-line-number="9470"></td>
        <td id="LC9470" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getUTCHours</span>();</td>
      </tr>
      <tr>
        <td id="L9471" class="blob-num js-line-number" data-line-number="9471"></td>
        <td id="LC9471" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%a %d<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9472" class="blob-num js-line-number" data-line-number="9472"></td>
        <td id="LC9472" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getUTCDay</span>() <span class="pl-k">&amp;&amp;</span> d.<span class="pl-c1">getUTCDate</span>() <span class="pl-k">!=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L9473" class="blob-num js-line-number" data-line-number="9473"></td>
        <td id="LC9473" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%b %d<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9474" class="blob-num js-line-number" data-line-number="9474"></td>
        <td id="LC9474" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getUTCDate</span>() <span class="pl-k">!=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L9475" class="blob-num js-line-number" data-line-number="9475"></td>
        <td id="LC9475" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%B<span class="pl-pds">&quot;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L9476" class="blob-num js-line-number" data-line-number="9476"></td>
        <td id="LC9476" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d.<span class="pl-c1">getUTCMonth</span>();</td>
      </tr>
      <tr>
        <td id="L9477" class="blob-num js-line-number" data-line-number="9477"></td>
        <td id="LC9477" class="blob-code blob-code-inner js-file-line">  } ], [ <span class="pl-s"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>, d3_true ] ]);</td>
      </tr>
      <tr>
        <td id="L9478" class="blob-num js-line-number" data-line-number="9478"></td>
        <td id="LC9478" class="blob-code blob-code-inner js-file-line">  d3_time_scaleUtcMethods.year <span class="pl-k">=</span> d3_time.year.utc;</td>
      </tr>
      <tr>
        <td id="L9479" class="blob-num js-line-number" data-line-number="9479"></td>
        <td id="LC9479" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3_time.scale</span>.<span class="pl-en">utc</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9480" class="blob-num js-line-number" data-line-number="9480"></td>
        <td id="LC9480" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);</td>
      </tr>
      <tr>
        <td id="L9481" class="blob-num js-line-number" data-line-number="9481"></td>
        <td id="LC9481" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9482" class="blob-num js-line-number" data-line-number="9482"></td>
        <td id="LC9482" class="blob-code blob-code-inner js-file-line">  d3.<span class="pl-c1">text</span> <span class="pl-k">=</span> d3_xhrType(<span class="pl-k">function</span>(<span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L9483" class="blob-num js-line-number" data-line-number="9483"></td>
        <td id="LC9483" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> request.<span class="pl-c1">responseText</span>;</td>
      </tr>
      <tr>
        <td id="L9484" class="blob-num js-line-number" data-line-number="9484"></td>
        <td id="LC9484" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L9485" class="blob-num js-line-number" data-line-number="9485"></td>
        <td id="LC9485" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">json</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L9486" class="blob-num js-line-number" data-line-number="9486"></td>
        <td id="LC9486" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_xhr(url, <span class="pl-s"><span class="pl-pds">&quot;</span>application/json<span class="pl-pds">&quot;</span></span>, d3_json, callback);</td>
      </tr>
      <tr>
        <td id="L9487" class="blob-num js-line-number" data-line-number="9487"></td>
        <td id="LC9487" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9488" class="blob-num js-line-number" data-line-number="9488"></td>
        <td id="LC9488" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_json</span>(<span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L9489" class="blob-num js-line-number" data-line-number="9489"></td>
        <td id="LC9489" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(request.<span class="pl-c1">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L9490" class="blob-num js-line-number" data-line-number="9490"></td>
        <td id="LC9490" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9491" class="blob-num js-line-number" data-line-number="9491"></td>
        <td id="LC9491" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">d3</span>.<span class="pl-en">html</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>, <span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L9492" class="blob-num js-line-number" data-line-number="9492"></td>
        <td id="LC9492" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> d3_xhr(url, <span class="pl-s"><span class="pl-pds">&quot;</span>text/html<span class="pl-pds">&quot;</span></span>, d3_html, callback);</td>
      </tr>
      <tr>
        <td id="L9493" class="blob-num js-line-number" data-line-number="9493"></td>
        <td id="LC9493" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9494" class="blob-num js-line-number" data-line-number="9494"></td>
        <td id="LC9494" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">d3_html</span>(<span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L9495" class="blob-num js-line-number" data-line-number="9495"></td>
        <td id="LC9495" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> range <span class="pl-k">=</span> d3_document.createRange();</td>
      </tr>
      <tr>
        <td id="L9496" class="blob-num js-line-number" data-line-number="9496"></td>
        <td id="LC9496" class="blob-code blob-code-inner js-file-line">    range.selectNode(d3_document.<span class="pl-c1">body</span>);</td>
      </tr>
      <tr>
        <td id="L9497" class="blob-num js-line-number" data-line-number="9497"></td>
        <td id="LC9497" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> range.createContextualFragment(request.<span class="pl-c1">responseText</span>);</td>
      </tr>
      <tr>
        <td id="L9498" class="blob-num js-line-number" data-line-number="9498"></td>
        <td id="LC9498" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9499" class="blob-num js-line-number" data-line-number="9499"></td>
        <td id="LC9499" class="blob-code blob-code-inner js-file-line">  d3.xml <span class="pl-k">=</span> d3_xhrType(<span class="pl-k">function</span>(<span class="pl-smi">request</span>) {</td>
      </tr>
      <tr>
        <td id="L9500" class="blob-num js-line-number" data-line-number="9500"></td>
        <td id="LC9500" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> request.<span class="pl-c1">responseXML</span>;</td>
      </tr>
      <tr>
        <td id="L9501" class="blob-num js-line-number" data-line-number="9501"></td>
        <td id="LC9501" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L9502" class="blob-num js-line-number" data-line-number="9502"></td>
        <td id="LC9502" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">typeof</span> define <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> define.amd) define(d3); <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">module</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">module</span>.exports) <span class="pl-c1">module</span>.exports <span class="pl-k">=</span> d3;</td>
      </tr>
      <tr>
        <td id="L9503" class="blob-num js-line-number" data-line-number="9503"></td>
        <td id="LC9503" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.d3 <span class="pl-k">=</span> d3;</td>
      </tr>
      <tr>
        <td id="L9504" class="blob-num js-line-number" data-line-number="9504"></td>
        <td id="LC9504" class="blob-code blob-code-inner js-file-line">}();</td>
      </tr>
</table>

  </div>

</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2015 <span title="0.20005s from github-fe130-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
    </ul>
  </div>
</div>


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder=""></textarea>
      <div class="suggester-container">
        <div class="suggester fullscreen-suggester js-suggester js-navigation-container"></div>
      </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    

    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-447ce66a36506ebddc8e84b4e32a77f6062f3d3482e77dd21a77a01f0643ad98.js"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github/index-83be60956d0d00076a726f0864b49916aae8e7bc6ee140798791be0b6644d661.js"></script>
      
      
  </body>
</html>

